

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 07 13:40:26 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87  0000                     
    88                           ; Version 2.20
    89                           ; Generated 05/05/2020 GMT
    90                           ; 
    91                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18LF67K40 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123 ;; Function _EUSART5_DefaultFramingErrorHandler is unused but had its address taken
   124  0000                     
   125 ;; Function _EUSART5_DefaultOverrunErrorHandler is unused but had its address taken
   126  0000                     
   127 ;; Function _EUSART5_DefaultErrorHandler is unused but had its address taken
   128  0000                     
   129                           	psect	idataBANK0
   130  004ACE                     __pidataBANK0:
   131                           	callstack 0
   132                           
   133                           ;initializer for _msgOK
   134  004ACE  30                 	db	48
   135  004ACF  0A                 	db	10
   136  004AD0  00                 	db	0
   137                           
   138                           	psect	idataBANK1
   139  0049A0                     __pidataBANK1:
   140                           	callstack 0
   141                           
   142                           ;initializer for _command19
   143  0049A0  31                 	db	49
   144  0049A1  39                 	db	57
   145  0049A2  0A                 	db	10
   146                           
   147                           ;initializer for _command18
   148  0049A3  31                 	db	49
   149  0049A4  38                 	db	56
   150  0049A5  0A                 	db	10
   151                           
   152                           ;initializer for _command14
   153  0049A6  31                 	db	49
   154  0049A7  34                 	db	52
   155  0049A8  2C                 	db	44
   156  0049A9  32                 	db	50
   157  0049AA  2E                 	db	46
   158  0049AB  30                 	db	48
   159  0049AC  0A                 	db	10
   160                           
   161                           ;initializer for _command20
   162  0049AD  00                 	db	0
   163  0049AE  31                 	db	49
   164  0049AF  31                 	db	49
   165  0049B0  0A                 	db	10
   166                           
   167                           ;initializer for _command11
   168  0049B1  00                 	db	0
   169  0049B2  31                 	db	49
   170  0049B3  31                 	db	49
   171  0049B4  0A                 	db	10
   172                           
   173                           ;initializer for _command17
   174  0049B5  31                 	db	49
   175  0049B6  37                 	db	55
   176  0049B7  0A                 	db	10
   177                           
   178                           ;initializer for _command16
   179  0049B8  31                 	db	49
   180  0049B9  36                 	db	54
   181  0049BA  0A                 	db	10
   182                           
   183                           ;initializer for _command13
   184  0049BB  31                 	db	49
   185  0049BC  33                 	db	51
   186  0049BD  0A                 	db	10
   187                           
   188                           ;initializer for _command12
   189  0049BE  31                 	db	49
   190  0049BF  32                 	db	50
   191  0049C0  0A                 	db	10
   192                           
   193                           	psect	nvBANK0
   194  0000FE                     __pnvBANK0:
   195                           	callstack 0
   196  0000FE                     _capSeries_count:
   197                           	callstack 0
   198  0000FE                     	ds	1
   199  0000FF                     _capParalle_count:
   200                           	callstack 0
   201  0000FF                     	ds	1
   202                           
   203                           	psect	nvBANK1
   204  00017C                     __pnvBANK1:
   205                           	callstack 0
   206  00017C                     _EUSART5_ErrorHandler:
   207                           	callstack 0
   208  00017C                     	ds	3
   209  00017F                     _EUSART5_OverrunErrorHandler:
   210                           	callstack 0
   211  00017F                     	ds	3
   212  000182                     _EUSART5_FramingErrorHandler:
   213                           	callstack 0
   214  000182                     	ds	3
   215  0000                     _PIR5bits	set	3640
   216  0000                     _PIE5bits	set	3630
   217  0000                     _TX5REG	set	3805
   218  0000                     _RC5REG	set	3804
   219  0000                     _RC5STAbits	set	3808
   220  0000                     _TX5STAbits	set	3809
   221  0000                     _PIR4bits	set	3639
   222  0000                     _SP5BRGH	set	3807
   223  0000                     _SP5BRGL	set	3806
   224  0000                     _TX5STA	set	3809
   225  0000                     _RC5STA	set	3808
   226  0000                     _BAUD5CON	set	3810
   227  0000                     _RX5PPS	set	3607
   228  0000                     _RE2PPS	set	3700
   229  0000                     _INLVLH	set	3773
   230  0000                     _INLVLG	set	3768
   231  0000                     _INLVLF	set	3760
   232  0000                     _INLVLE	set	3755
   233  0000                     _INLVLD	set	3747
   234  0000                     _INLVLC	set	3742
   235  0000                     _INLVLB	set	3734
   236  0000                     _INLVLA	set	3726
   237  0000                     _SLRCONH	set	3774
   238  0000                     _SLRCONG	set	3769
   239  0000                     _SLRCONF	set	3761
   240  0000                     _SLRCONE	set	3756
   241  0000                     _SLRCOND	set	3748
   242  0000                     _SLRCONC	set	3743
   243  0000                     _SLRCONB	set	3735
   244  0000                     _SLRCONA	set	3727
   245  0000                     _ODCOND	set	3749
   246  0000                     _ODCONC	set	3744
   247  0000                     _ODCONH	set	3775
   248  0000                     _ODCONB	set	3736
   249  0000                     _ODCONG	set	3770
   250  0000                     _ODCONA	set	3728
   251  0000                     _ODCONF	set	3762
   252  0000                     _ODCONE	set	3757
   253  0000                     _WPUH	set	3776
   254  0000                     _WPUC	set	3745
   255  0000                     _WPUA	set	3729
   256  0000                     _WPUG	set	3771
   257  0000                     _WPUB	set	3737
   258  0000                     _WPUE	set	3758
   259  0000                     _WPUF	set	3763
   260  0000                     _WPUD	set	3750
   261  0000                     _ANSELA	set	3730
   262  0000                     _ANSELF	set	3764
   263  0000                     _ANSELG	set	3772
   264  0000                     _ANSELE	set	3759
   265  0000                     _ANSELB	set	3738
   266  0000                     _ANSELD	set	3751
   267  0000                     _PMD5	set	3665
   268  0000                     _PMD4	set	3664
   269  0000                     _PMD3	set	3663
   270  0000                     _PMD2	set	3662
   271  0000                     _PMD1	set	3661
   272  0000                     _PMD0	set	3660
   273  0000                     _OSCTUNE	set	3656
   274  0000                     _OSCFRQ	set	3657
   275  0000                     _OSCEN	set	3655
   276  0000                     _OSCCON3	set	3653
   277  0000                     _OSCCON1	set	3651
   278  0000                     _ADCON1bits	set	3929
   279  0000                     _ADCON2bits	set	3930
   280  0000                     _ADCON3bits	set	3931
   281  0000                     _ADACQ	set	3932
   282  0000                     _ADCLK	set	3927
   283  0000                     _ADACT	set	3926
   284  0000                     _ADREF	set	3928
   285  0000                     _ADCON3	set	3931
   286  0000                     _ADCON2	set	3930
   287  0000                     _ADCON1	set	3929
   288  0000                     _ADPRE	set	3934
   289  0000                     _ADCAP	set	3933
   290  0000                     _ADPCH	set	3935
   291  0000                     _LATAbits	set	3961
   292  0000                     _LATFbits	set	3966
   293  0000                     _LATGbits	set	3967
   294  0000                     _LATEbits	set	3965
   295  0000                     _LATHbits	set	3968
   296  0000                     _LATDbits	set	3964
   297  0000                     _LATBbits	set	3962
   298  0000                     _PR6	set	4016
   299  0000                     _TMR6	set	4015
   300  0000                     _T6CONbits	set	4017
   301  0000                     _T6RSTbits	set	4020
   302  0000                     _T6HLTbits	set	4018
   303  0000                     _T6CON	set	4017
   304  0000                     _T6TMR	set	4015
   305  0000                     _T6PR	set	4016
   306  0000                     _T6RST	set	4020
   307  0000                     _T6HLT	set	4018
   308  0000                     _T6CLKCON	set	4019
   309  0000                     _INTCONbits	set	4082
   310  0000                     _ADERRL	set	3950
   311  0000                     _ADERRH	set	3951
   312  0000                     _ADPREVL	set	3937
   313  0000                     _ADPREVH	set	3938
   314  0000                     _ADFLTRL	set	3954
   315  0000                     _ADFLTRH	set	3955
   316  0000                     _ADSTATbits	set	3941
   317  0000                     _ADACCL	set	3952
   318  0000                     _ADACCH	set	3953
   319  0000                     _ADCNT	set	3943
   320  0000                     _ADRESL	set	3939
   321  0000                     _ADRESH	set	3940
   322  0000                     _ADCON0bits	set	3936
   323  0000                     _ADCON0	set	3936
   324  0000                     _ADSTAT	set	3941
   325  0000                     _ADRPT	set	3942
   326  0000                     _ADSTPTH	set	3945
   327  0000                     _ADSTPTL	set	3944
   328  0000                     _ADUTHH	set	3949
   329  0000                     _ADUTHL	set	3948
   330  0000                     _ADLTHH	set	3947
   331  0000                     _ADLTHL	set	3946
   332  0000                     _TRISD	set	3972
   333  0000                     _TRISC	set	3971
   334  0000                     _TRISH	set	3976
   335  0000                     _TRISB	set	3970
   336  0000                     _TRISG	set	3975
   337  0000                     _TRISA	set	3969
   338  0000                     _TRISF	set	3974
   339  0000                     _TRISE	set	3973
   340  0000                     _LATH	set	3968
   341  0000                     _LATC	set	3963
   342  0000                     _LATG	set	3967
   343  0000                     _LATB	set	3962
   344  0000                     _LATF	set	3966
   345  0000                     _LATA	set	3961
   346  0000                     _LATD	set	3964
   347  0000                     _LATE	set	3965
   348                           
   349                           	psect	smallconst
   350  000E00                     __psmallconst:
   351                           	callstack 0
   352  000E00  00                 	db	0
   353  000E01                     STR_1:
   354                           
   355                           ; BSR set to: 0
   356  000E01  25                 	db	37
   357  000E02  2E                 	db	46
   358  000E03  32                 	db	50	;'2'
   359  000E04  66                 	db	102	;'f'
   360  000E05  00                 	db	0
   361  000E06                     STR_2:
   362                           
   363                           ; BSR set to: 0
   364  000E06  49                 	db	73	;'I'
   365  000E07  4E                 	db	78	;'N'
   366  000E08  46                 	db	70	;'F'
   367  000E09  00                 	db	0
   368  000E0A                     STR_6:
   369                           
   370                           ; BSR set to: 0
   371  000E0A  4E                 	db	78	;'N'
   372  000E0B  41                 	db	65	;'A'
   373  000E0C  4E                 	db	78	;'N'
   374  000E0D  00                 	db	0
   375  000E0E                     STR_3:
   376                           
   377                           ; BSR set to: 0
   378  000E0E  69                 	db	105	;'i'
   379  000E0F  6E                 	db	110	;'n'
   380  000E10  66                 	db	102	;'f'
   381  000E11  00                 	db	0
   382  000E12                     STR_7:
   383                           
   384                           ; BSR set to: 0
   385  000E12  6E                 	db	110	;'n'
   386  000E13  61                 	db	97	;'a'
   387  000E14  6E                 	db	110	;'n'
   388  000E15  00                 	db	0
   389  000E16                     STR_10:
   390                           
   391                           ; BSR set to: 0
   392  000E16  6C                 	db	108	;'l'
   393  000E17  66                 	db	102	;'f'
   394  000E18  00                 	db	0
   395  000E19  00                 	db	0	; dummy byte at the end
   396  0000                     
   397                           ; #config settings
   398                           
   399                           	psect	cinit
   400  00440A                     __pcinit:
   401                           	callstack 0
   402  00440A                     start_initialization:
   403                           	callstack 0
   404  00440A                     __initialization:
   405                           	callstack 0
   406                           
   407                           ; Initialize objects allocated to BANK1 (33 bytes)
   408                           ; load TBLPTR registers with __pidataBANK1
   409  00440A  0EA0               	movlw	low __pidataBANK1
   410  00440C  6EF6               	movwf	tblptrl,c
   411  00440E  0E49               	movlw	high __pidataBANK1
   412  004410  6EF7               	movwf	tblptrh,c
   413  004412  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   414  004414  6EF8               	movwf	tblptru,c
   415  004416  EE01  F05B         	lfsr	0,__pdataBANK1
   416  00441A  EE10 F021          	lfsr	1,33
   417  00441E                     copy_data0:
   418  00441E  0009               	tblrd		*+
   419  004420  CFF5 FFEE          	movff	tablat,postinc0
   420  004424  50E5               	movf	postdec1,w,c
   421  004426  50E1               	movf	fsr1l,w,c
   422  004428  E1FA               	bnz	copy_data0
   423                           
   424                           ; Initialize objects allocated to BANK0 (3 bytes)
   425                           ; load TBLPTR registers with __pidataBANK0
   426  00442A  0ECE               	movlw	low __pidataBANK0
   427  00442C  6EF6               	movwf	tblptrl,c
   428  00442E  0E4A               	movlw	high __pidataBANK0
   429  004430  6EF7               	movwf	tblptrh,c
   430  004432  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   431  004434  6EF8               	movwf	tblptru,c
   432  004436  0009               	tblrd		*+	;fetch initializer
   433  004438  CFF5 F0FB          	movff	tablat,__pdataBANK0
   434  00443C  0009               	tblrd		*+	;fetch initializer
   435  00443E  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   436  004442  0009               	tblrd		*+	;fetch initializer
   437  004444  CFF5 F0FD          	movff	tablat,__pdataBANK0+2
   438                           
   439                           ; Clear objects allocated to BANK1 (91 bytes)
   440  004448  EE01  F000         	lfsr	0,__pbssBANK1
   441  00444C  0E5B               	movlw	91
   442  00444E                     clear_0:
   443  00444E  6AEE               	clrf	postinc0,c
   444  004450  06E8               	decf	wreg,f,c
   445  004452  E1FD               	bnz	clear_0
   446                           
   447                           ; Clear objects allocated to BANK0 (30 bytes)
   448  004454  EE00  F0DD         	lfsr	0,__pbssBANK0
   449  004458  0E1E               	movlw	30
   450  00445A                     clear_1:
   451  00445A  6AEE               	clrf	postinc0,c
   452  00445C  06E8               	decf	wreg,f,c
   453  00445E  E1FD               	bnz	clear_1
   454                           
   455                           ; Clear objects allocated to COMRAM (1 bytes)
   456  004460  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   457  004462                     end_of_initialization:
   458                           	callstack 0
   459  004462                     __end_of__initialization:
   460                           	callstack 0
   461  004462  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   462  004464  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   463  004466  0100               	movlb	0
   464  004468  EF09  F01C         	goto	_main	;jump to C main() function
   465                           
   466                           	psect	bssCOMRAM
   467  00005E                     __pbssCOMRAM:
   468                           	callstack 0
   469  00005E                     _capTaskSeries_count:
   470                           	callstack 0
   471  00005E                     	ds	1
   472                           
   473                           	psect	bssBANK0
   474  0000DD                     __pbssBANK0:
   475                           	callstack 0
   476  0000DD                     _vcap_current:
   477                           	callstack 0
   478  0000DD                     	ds	4
   479  0000E1                     _vcap_prev:
   480                           	callstack 0
   481  0000E1                     	ds	4
   482  0000E5                     _voc_current:
   483                           	callstack 0
   484  0000E5                     	ds	4
   485  0000E9                     _voc_prev:
   486                           	callstack 0
   487  0000E9                     	ds	4
   488  0000ED                     _nout:
   489                           	callstack 0
   490  0000ED                     	ds	2
   491  0000EF                     _width:
   492                           	callstack 0
   493  0000EF                     	ds	2
   494  0000F1                     _prec:
   495                           	callstack 0
   496  0000F1                     	ds	2
   497  0000F3                     _flags:
   498                           	callstack 0
   499  0000F3                     	ds	2
   500  0000F5                     _capTaskParalle_count:
   501                           	callstack 0
   502  0000F5                     	ds	1
   503  0000F6                     	ds	1
   504  0000F7                     _DectecLowVFlag:
   505                           	callstack 0
   506  0000F7                     	ds	1
   507  0000F8                     _isolatedflag:
   508                           	callstack 0
   509  0000F8                     	ds	1
   510  0000F9                     _eusart5RxLastError:
   511                           	callstack 0
   512  0000F9                     	ds	1
   513  0000FA                     _Flag5sfastcharing:
   514                           	callstack 0
   515  0000FA                     	ds	1
   516                           
   517                           	psect	dataBANK0
   518  0000FB                     __pdataBANK0:
   519                           	callstack 0
   520  0000FB                     _msgOK:
   521                           	callstack 0
   522  0000FB                     	ds	3
   523                           
   524                           	psect	bssBANK1
   525  000100                     __pbssBANK1:
   526                           	callstack 0
   527  000100                     floorf@F527:
   528                           	callstack 0
   529  000100                     	ds	4
   530  000104                     ___fpclassifyf@F465:
   531                           	callstack 0
   532  000104                     	ds	4
   533  000108                     _TMR6_InterruptHandler:
   534                           	callstack 0
   535  000108                     	ds	3
   536  00010B                     _dbuf:
   537                           	callstack 0
   538  00010B                     	ds	80
   539                           
   540                           	psect	dataBANK1
   541  00015B                     __pdataBANK1:
   542                           	callstack 0
   543  00015B                     _command19:
   544                           	callstack 0
   545  00015B                     	ds	3
   546  00015E                     _command18:
   547                           	callstack 0
   548  00015E                     	ds	3
   549  000161                     _command14:
   550                           	callstack 0
   551  000161                     	ds	7
   552  000168                     _command20:
   553                           	callstack 0
   554  000168                     	ds	4
   555  00016C                     _command11:
   556                           	callstack 0
   557  00016C                     	ds	4
   558  000170                     _command17:
   559                           	callstack 0
   560  000170                     	ds	3
   561  000173                     _command16:
   562                           	callstack 0
   563  000173                     	ds	3
   564  000176                     _command13:
   565                           	callstack 0
   566  000176                     	ds	3
   567  000179                     _command12:
   568                           	callstack 0
   569  000179                     	ds	3
   570                           
   571                           	psect	cstackBANK0
   572  000060                     __pcstackBANK0:
   573                           	callstack 0
   574  000060                     _efgtoa$2029:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x0
   578  000060                     	ds	2
   579  000062                     _efgtoa$2030:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x2
   583  000062                     	ds	2
   584  000064                     _efgtoa$2035:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x4
   588  000064                     	ds	2
   589  000066                     _efgtoa$2039:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x6
   593  000066                     	ds	2
   594  000068                     _efgtoa$2040:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x8
   598  000068                     	ds	2
   599  00006A                     _efgtoa$2041:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0xA
   603  00006A                     	ds	2
   604  00006C                     efgtoa@t:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0xC
   608  00006C                     	ds	2
   609  00006E                     efgtoa@pp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0xE
   613  00006E                     	ds	2
   614  000070                     efgtoa@ne:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x10
   618  000070                     	ds	2
   619  000072                     efgtoa@m:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x12
   623  000072                     	ds	2
   624  000074                     efgtoa@ou:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x14
   628  000074                     	ds	4
   629  000078                     efgtoa@d:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x18
   633  000078                     	ds	2
   634  00007A                     efgtoa@sign:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x1A
   638  00007A                     	ds	2
   639  00007C                     efgtoa@p:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x1C
   643  00007C                     	ds	2
   644  00007E                     efgtoa@w:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x1E
   648  00007E                     	ds	2
   649  000080                     efgtoa@nmode:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x20
   653  000080                     	ds	1
   654  000081                     efgtoa@mode:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x21
   658  000081                     	ds	1
   659  000082                     efgtoa@h:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x22
   663  000082                     	ds	4
   664  000086                     efgtoa@l:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x26
   668  000086                     	ds	4
   669  00008A                     efgtoa@i:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x2A
   673  00008A                     	ds	2
   674  00008C                     efgtoa@g:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x2C
   678  00008C                     	ds	4
   679  000090                     efgtoa@e:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x30
   683  000090                     	ds	2
   684  000092                     efgtoa@n:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x32
   688  000092                     	ds	2
   689  000094                     efgtoa@u:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x34
   693  000094                     	ds	4
   694  000098                     ?_sprintf:
   695                           	callstack 0
   696  000098                     sprintf@s:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x38
   700  000098                     	ds	2
   701  00009A                     sprintf@fmt:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x3A
   705  00009A                     	ds	6
   706  0000A0                     sprintf@ap:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x40
   710  0000A0                     	ds	2
   711  0000A2                     sprintf@f:
   712                           	callstack 0
   713                           
   714                           ; 6 bytes @ 0x42
   715  0000A2                     	ds	6
   716  0000A8                     ?_ConvertADCtoSend:
   717                           	callstack 0
   718  0000A8                     ConvertADCtoSend@convertedValue01:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x48
   722  0000A8                     	ds	4
   723  0000AC                     ConvertADCtoSend@msgValue:
   724                           	callstack 0
   725                           
   726                           ; 8 bytes @ 0x4C
   727  0000AC                     	ds	8
   728  0000B4                     executeCommand@command:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x54
   732  0000B4                     	ds	2
   733  0000B6                     ??_executeCommand:
   734                           
   735                           ; 1 bytes @ 0x56
   736  0000B6                     	ds	2
   737  0000B8                     executeCommand@ADCValue_float:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x58
   741  0000B8                     	ds	4
   742  0000BC                     executeCommand@i:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x5C
   746  0000BC                     	ds	1
   747  0000BD                     executeCommand@i_1116:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x5D
   751  0000BD                     	ds	1
   752  0000BE                     executeCommand@i_1118:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x5E
   756  0000BE                     	ds	1
   757  0000BF                     executeCommand@i_1119:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x5F
   761  0000BF                     	ds	1
   762  0000C0                     executeCommand@i_1120:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x60
   766  0000C0                     	ds	1
   767  0000C1                     executeCommand@i_1121:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x61
   771  0000C1                     	ds	1
   772  0000C2                     executeCommand@i_1122:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x62
   776  0000C2                     	ds	1
   777  0000C3                     executeCommand@msgValue:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x63
   781  0000C3                     	ds	2
   782  0000C5                     ??_main:
   783                           
   784                           ; 1 bytes @ 0x65
   785  0000C5                     	ds	2
   786  0000C7                     main@command:
   787                           	callstack 0
   788                           
   789                           ; 20 bytes @ 0x67
   790  0000C7                     	ds	20
   791  0000DB                     main@index:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x7B
   795  0000DB                     	ds	1
   796  0000DC                     main@c:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x7C
   800  0000DC                     	ds	1
   801                           
   802                           	psect	cstackCOMRAM
   803  000001                     __pcstackCOMRAM:
   804                           	callstack 0
   805  000001                     ??_addCapToParallel:
   806  000001                     ??_isolateCapsToSeries:
   807  000001                     ?_strcmp:
   808                           	callstack 0
   809  000001                     ?_strlen:
   810                           	callstack 0
   811  000001                     ?_memcmp:
   812                           	callstack 0
   813  000001                     ?___fpclassifyf:
   814                           	callstack 0
   815  000001                     ?_isupper:
   816                           	callstack 0
   817  000001                     ?_isdigit:
   818                           	callstack 0
   819  000001                     ?_strncmp:
   820                           	callstack 0
   821  000001                     ?_isspace:
   822                           	callstack 0
   823  000001                     ?_ADCC_GetSingleConversion:
   824                           	callstack 0
   825  000001                     ?___wmul:
   826                           	callstack 0
   827  000001                     ?___awdiv:
   828                           	callstack 0
   829  000001                     ?___awmod:
   830                           	callstack 0
   831  000001                     ?___fladd:
   832                           	callstack 0
   833  000001                     ?___fldiv:
   834                           	callstack 0
   835  000001                     ?___flneg:
   836                           	callstack 0
   837  000001                     ?___fltol:
   838                           	callstack 0
   839  000001                     ?___xxtofl:
   840                           	callstack 0
   841  000001                     EUSART5_Write@txData:
   842                           	callstack 0
   843  000001                     decoupleCapArray@state:
   844                           	callstack 0
   845  000001                     ___wmul@multiplier:
   846                           	callstack 0
   847  000001                     ___awdiv@dividend:
   848                           	callstack 0
   849  000001                     ___awmod@dividend:
   850                           	callstack 0
   851  000001                     memcmp@vl:
   852                           	callstack 0
   853  000001                     isdigit@c:
   854                           	callstack 0
   855  000001                     isspace@c:
   856                           	callstack 0
   857  000001                     isupper@c:
   858                           	callstack 0
   859  000001                     strcmp@l:
   860                           	callstack 0
   861  000001                     strcpy@dest:
   862                           	callstack 0
   863  000001                     strlen@s:
   864                           	callstack 0
   865  000001                     strncmp@_l:
   866                           	callstack 0
   867  000001                     EUSART5_SetFramingErrorHandler@interruptHandler:
   868                           	callstack 0
   869  000001                     EUSART5_SetOverrunErrorHandler@interruptHandler:
   870                           	callstack 0
   871  000001                     EUSART5_SetErrorHandler@interruptHandler:
   872                           	callstack 0
   873  000001                     ___fleq@ff1:
   874                           	callstack 0
   875  000001                     ___flneg@f1:
   876                           	callstack 0
   877  000001                     ___fltol@f1:
   878                           	callstack 0
   879  000001                     ___fladd@b:
   880                           	callstack 0
   881  000001                     ___fldiv@b:
   882                           	callstack 0
   883  000001                     ___xxtofl@val:
   884                           	callstack 0
   885  000001                     ___fpclassifyf@x:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x0
   889  000001                     	ds	1
   890  000002                     putch@txData:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x1
   894  000002                     	ds	1
   895  000003                     ??_isupper:
   896  000003                     ??_isdigit:
   897  000003                     ??_isspace:
   898  000003                     ??_ADCC_GetSingleConversion:
   899  000003                     ___wmul@multiplicand:
   900                           	callstack 0
   901  000003                     ___awdiv@divisor:
   902                           	callstack 0
   903  000003                     ___awmod@divisor:
   904                           	callstack 0
   905  000003                     memcmp@vr:
   906                           	callstack 0
   907  000003                     fputc@c:
   908                           	callstack 0
   909  000003                     strcmp@r:
   910                           	callstack 0
   911  000003                     strcpy@src:
   912                           	callstack 0
   913  000003                     strlen@a:
   914                           	callstack 0
   915  000003                     strncmp@_r:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x2
   919  000003                     	ds	1
   920  000004                     
   921                           ; 1 bytes @ 0x3
   922  000004                     	ds	1
   923  000005                     ??_strcmp:
   924  000005                     ??___fpclassifyf:
   925  000005                     ??_strcpy:
   926  000005                     ??___fltol:
   927  000005                     ??___xxtofl:
   928  000005                     ADCC_GetSingleConversion@channel:
   929                           	callstack 0
   930  000005                     ___awdiv@counter:
   931                           	callstack 0
   932  000005                     ___awmod@counter:
   933                           	callstack 0
   934  000005                     ___wmul@product:
   935                           	callstack 0
   936  000005                     memcmp@n:
   937                           	callstack 0
   938  000005                     fputc@fp:
   939                           	callstack 0
   940  000005                     strncmp@n:
   941                           	callstack 0
   942  000005                     ___fleq@ff2:
   943                           	callstack 0
   944  000005                     ___fladd@a:
   945                           	callstack 0
   946  000005                     ___fldiv@a:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x4
   950  000005                     	ds	1
   951  000006                     ___awdiv@sign:
   952                           	callstack 0
   953  000006                     ___awmod@sign:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x5
   957  000006                     	ds	1
   958  000007                     ??_memcmp:
   959  000007                     ??_fputc:
   960  000007                     ??_strncmp:
   961  000007                     ?_tolower:
   962                           	callstack 0
   963  000007                     _isspace$2124:
   964                           	callstack 0
   965  000007                     ___awdiv@quotient:
   966                           	callstack 0
   967  000007                     strcpy@s:
   968                           	callstack 0
   969  000007                     tolower@c:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x6
   973  000007                     	ds	1
   974  000008                     ?_atoi:
   975                           	callstack 0
   976  000008                     atoi@s:
   977                           	callstack 0
   978  000008                     strncmp@l:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x7
   982  000008                     	ds	1
   983  000009                     ??___fladd:
   984  000009                     ??___fldiv:
   985  000009                     ??_tolower:
   986  000009                     ??___fleq:
   987  000009                     ___fltol@sign1:
   988                           	callstack 0
   989  000009                     ___xxtofl@sign:
   990                           	callstack 0
   991  000009                     memcmp@l:
   992                           	callstack 0
   993  000009                     ___fpclassifyf@e:
   994                           	callstack 0
   995  000009                     strcpy@d:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x8
   999  000009                     	ds	1
  1000  00000A                     ??_atoi:
  1001  00000A                     ___fltol@exp1:
  1002                           	callstack 0
  1003  00000A                     ___xxtofl@exp:
  1004                           	callstack 0
  1005  00000A                     strncmp@r:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x9
  1009  00000A                     	ds	1
  1010  00000B                     memcmp@r:
  1011                           	callstack 0
  1012  00000B                     ___xxtofl@arg:
  1013                           	callstack 0
  1014  00000B                     ___fpclassifyf@u:
  1015                           	callstack 0
  1016                           
  1017                           ; 4 bytes @ 0xA
  1018  00000B                     	ds	1
  1019  00000C                     fputs@s:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0xB
  1023  00000C                     	ds	1
  1024  00000D                     ___fladd@signs:
  1025                           	callstack 0
  1026  00000D                     _tolower$2186:
  1027                           	callstack 0
  1028  00000D                     ___fldiv@rem:
  1029                           	callstack 0
  1030                           
  1031                           ; 4 bytes @ 0xC
  1032  00000D                     	ds	1
  1033  00000E                     ___fladd@aexp:
  1034                           	callstack 0
  1035  00000E                     atoi@neg:
  1036                           	callstack 0
  1037  00000E                     fputs@fp:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0xD
  1041  00000E                     	ds	1
  1042  00000F                     ?___flmul:
  1043                           	callstack 0
  1044  00000F                     ___fladd@bexp:
  1045                           	callstack 0
  1046  00000F                     ___flmul@b:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0xE
  1050  00000F                     	ds	1
  1051  000010                     ___fladd@grs:
  1052                           	callstack 0
  1053  000010                     fputs@c:
  1054                           	callstack 0
  1055  000010                     _atoi$2093:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0xF
  1059  000010                     	ds	1
  1060  000011                     ___fldiv@sign:
  1061                           	callstack 0
  1062  000011                     fputs@i:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x10
  1066  000011                     	ds	1
  1067  000012                     ___fldiv@new_exp:
  1068                           	callstack 0
  1069  000012                     _atoi$2095:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x11
  1073  000012                     	ds	1
  1074  000013                     ?_pad:
  1075                           	callstack 0
  1076  000013                     pad@fp:
  1077                           	callstack 0
  1078  000013                     ___flmul@a:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x12
  1082  000013                     	ds	1
  1083  000014                     _atoi$2094:
  1084                           	callstack 0
  1085  000014                     ___fldiv@grs:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x13
  1089  000014                     	ds	1
  1090  000015                     pad@buf:
  1091                           	callstack 0
  1092  000015                     atoi@n:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x14
  1096  000015                     	ds	2
  1097  000017                     ??___flmul:
  1098  000017                     pad@p:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x16
  1102  000017                     	ds	1
  1103  000018                     ___fldiv@bexp:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x17
  1107  000018                     	ds	1
  1108  000019                     ??_pad:
  1109  000019                     ___fldiv@aexp:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x18
  1113  000019                     	ds	1
  1114  00001A                     ?_floorf:
  1115                           	callstack 0
  1116  00001A                     pad@i:
  1117                           	callstack 0
  1118  00001A                     floorf@x:
  1119                           	callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x19
  1122  00001A                     	ds	1
  1123  00001B                     ___flmul@sign:
  1124                           	callstack 0
  1125                           
  1126                           ; 1 bytes @ 0x1A
  1127  00001B                     	ds	1
  1128  00001C                     pad@w:
  1129                           	callstack 0
  1130  00001C                     ___flmul@grs:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x1B
  1134  00001C                     	ds	2
  1135  00001E                     ??_floorf:
  1136                           
  1137                           ; 1 bytes @ 0x1D
  1138  00001E                     	ds	2
  1139  000020                     ___flmul@aexp:
  1140                           	callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x1F
  1143  000020                     	ds	1
  1144  000021                     ___flmul@bexp:
  1145                           	callstack 0
  1146                           
  1147                           ; 1 bytes @ 0x20
  1148  000021                     	ds	1
  1149  000022                     ___flmul@prod:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x21
  1153  000022                     	ds	2
  1154  000024                     floorf@m:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x23
  1158  000024                     	ds	2
  1159  000026                     ___flmul@temp:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x25
  1163  000026                     	ds	2
  1164  000028                     ?___flsub:
  1165                           	callstack 0
  1166  000028                     ?_getADCValue:
  1167                           	callstack 0
  1168  000028                     floorf@e:
  1169                           	callstack 0
  1170  000028                     ___flge@ff1:
  1171                           	callstack 0
  1172  000028                     ___flsub@b:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x27
  1176  000028                     	ds	2
  1177  00002A                     floorf@u:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x29
  1181  00002A                     	ds	2
  1182  00002C                     getADCValue@ADC_float:
  1183                           	callstack 0
  1184  00002C                     ___flge@ff2:
  1185                           	callstack 0
  1186  00002C                     ___flsub@a:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x2B
  1190  00002C                     	ds	4
  1191  000030                     ??___flge:
  1192  000030                     getADCValue@getADCValue:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x2F
  1196  000030                     	ds	2
  1197  000032                     ?_sampleEHvoc:
  1198                           	callstack 0
  1199  000032                     ?_sampleChargingCapArray:
  1200                           	callstack 0
  1201  000032                     ?_sampleTaskCapArray:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x31
  1205  000032                     	ds	2
  1206  000034                     ?_efgtoa:
  1207                           	callstack 0
  1208  000034                     efgtoa@fp:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x33
  1212  000034                     	ds	2
  1213  000036                     sampleEHvoc@voc:
  1214                           	callstack 0
  1215  000036                     sampleChargingCapArray@vcap:
  1216                           	callstack 0
  1217  000036                     sampleTaskCapArray@vcap:
  1218                           	callstack 0
  1219  000036                     efgtoa@f:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x35
  1223  000036                     	ds	4
  1224  00003A                     efgtoa@c:
  1225                           	callstack 0
  1226  00003A                     delayedBrownOut@vcap:
  1227                           	callstack 0
  1228  00003A                     fastChargingcaps@vcap:
  1229                           	callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x39
  1232  00003A                     	ds	1
  1233  00003B                     ??_efgtoa:
  1234                           
  1235                           ; 1 bytes @ 0x3A
  1236  00003B                     	ds	5
  1237  000040                     ?_vfpfcnvrt:
  1238                           	callstack 0
  1239  000040                     vfpfcnvrt@fp:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x3F
  1243  000040                     	ds	2
  1244  000042                     vfpfcnvrt@fmt:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x41
  1248  000042                     	ds	2
  1249  000044                     vfpfcnvrt@ap:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x43
  1253  000044                     	ds	2
  1254  000046                     ??_vfpfcnvrt:
  1255                           
  1256                           ; 1 bytes @ 0x45
  1257  000046                     	ds	4
  1258  00004A                     _vfpfcnvrt$2055:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x49
  1262  00004A                     	ds	2
  1263  00004C                     _vfpfcnvrt$2059:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x4B
  1267  00004C                     	ds	2
  1268  00004E                     vfpfcnvrt@f:
  1269                           	callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x4D
  1272  00004E                     	ds	4
  1273  000052                     vfpfcnvrt@ct:
  1274                           	callstack 0
  1275                           
  1276                           ; 3 bytes @ 0x51
  1277  000052                     	ds	3
  1278  000055                     vfpfcnvrt@c:
  1279                           	callstack 0
  1280                           
  1281                           ; 1 bytes @ 0x54
  1282  000055                     	ds	1
  1283  000056                     ?_vfprintf:
  1284                           	callstack 0
  1285  000056                     vfprintf@fp:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x55
  1289  000056                     	ds	2
  1290  000058                     vfprintf@fmt:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x57
  1294  000058                     	ds	2
  1295  00005A                     vfprintf@ap:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x59
  1299  00005A                     	ds	2
  1300  00005C                     vfprintf@cfmt:
  1301                           	callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x5B
  1304  00005C                     	ds	2
  1305  00005E                     
  1306                           ; 1 bytes @ 0x5D
  1307 ;;
  1308 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1309 ;;
  1310 ;; *************** function _main *****************
  1311 ;; Defined at:
  1312 ;;		line 180 in file "main.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  command        20  103[BANK0 ] unsigned char [20]
  1317 ;;  c               1  124[BANK0 ] unsigned char 
  1318 ;;  index           1  123[BANK0 ] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1329 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1330 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1331 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1332 ;;Total ram usage:       24 bytes
  1333 ;; Hardware stack levels required when called: 13
  1334 ;; This function calls:
  1335 ;;		_Caps8seriesConnection
  1336 ;;		_DectecLowVolatge
  1337 ;;		_EUSART5_Read
  1338 ;;		_SYSTEM_Initialize
  1339 ;;		_delayedBrownOut
  1340 ;;		_executeCommand
  1341 ;;		_fastChargingcaps
  1342 ;;		_isolatedOneTaskCap
  1343 ;; This function is called by:
  1344 ;;		Startup code after reset
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text0
  1349  003812                     __ptext0:
  1350                           	callstack 0
  1351  003812                     _main:
  1352                           	callstack 18
  1353  003812                     
  1354                           ;main.c: 182:     char c;;main.c: 183:     char command[20];;main.c: 184:     uint8_t in
      +                          dex = 0;
  1355  003812  0E00               	movlw	0
  1356  003814  0100               	movlb	0	; () banked
  1357  003816  6FDB               	movwf	main@index& (0+255),b
  1358  003818                     
  1359                           ; BSR set to: 0
  1360                           ;main.c: 187:     SYSTEM_Initialize();
  1361  003818  EC00  F025         	call	_SYSTEM_Initialize	;wreg free
  1362  00381C                     
  1363                           ;main.c: 193:     (INTCONbits.GIE = 1);
  1364  00381C  8EF2               	bsf	242,7,c	;volatile
  1365  00381E                     
  1366                           ;main.c: 199:     (INTCONbits.PEIE = 1);
  1367  00381E  8CF2               	bsf	242,6,c	;volatile
  1368  003820                     
  1369                           ;main.c: 203:     isolatedflag=0;
  1370  003820  0E00               	movlw	0
  1371  003822  0100               	movlb	0	; () banked
  1372  003824  6FF8               	movwf	_isolatedflag& (0+255),b	;volatile
  1373  003826                     
  1374                           ; BSR set to: 0
  1375                           ;main.c: 204:     Flag5sfastcharing=0;
  1376  003826  0E00               	movlw	0
  1377  003828  6FFA               	movwf	_Flag5sfastcharing& (0+255),b	;volatile
  1378  00382A                     
  1379                           ; BSR set to: 0
  1380                           ;main.c: 205:     Caps8seriesConnection();
  1381  00382A  EC36  F024         	call	_Caps8seriesConnection	;wreg free
  1382  00382E                     l620:
  1383                           
  1384                           ;main.c: 208:     {;main.c: 209:        if((Flag5sfastcharing==1) &&(isolatedflag ==0) )
  1385  00382E  0100               	movlb	0	; () banked
  1386  003830  05FA               	decf	_Flag5sfastcharing& (0+255),w,b	;volatile
  1387  003832  A4D8               	btfss	status,2,c
  1388  003834  EF1E  F01C         	goto	u5541
  1389  003838  EF20  F01C         	goto	u5540
  1390  00383C                     u5541:
  1391  00383C  EF2F  F01C         	goto	l5815
  1392  003840                     u5540:
  1393  003840                     
  1394                           ; BSR set to: 0
  1395  003840  51F8               	movf	_isolatedflag& (0+255),w,b	;volatile
  1396  003842  A4D8               	btfss	status,2,c
  1397  003844  EF26  F01C         	goto	u5551
  1398  003848  EF28  F01C         	goto	u5550
  1399  00384C                     u5551:
  1400  00384C  EF2F  F01C         	goto	l5815
  1401  003850                     u5550:
  1402  003850                     
  1403                           ; BSR set to: 0
  1404                           ;main.c: 210:        {;main.c: 211:            fastChargingcaps();
  1405  003850  ECD8  F01A         	call	_fastChargingcaps	;wreg free
  1406  003854                     
  1407                           ;main.c: 212:             Flag5sfastcharing =0;
  1408  003854  0E00               	movlw	0
  1409  003856  0100               	movlb	0	; () banked
  1410  003858  6FFA               	movwf	_Flag5sfastcharing& (0+255),b	;volatile
  1411                           
  1412                           ;main.c: 213:        }
  1413  00385A  EF17  F01C         	goto	l620
  1414  00385E                     l5815:
  1415                           
  1416                           ; BSR set to: 0
  1417  00385E  05F8               	decf	_isolatedflag& (0+255),w,b	;volatile
  1418  003860  A4D8               	btfss	status,2,c
  1419  003862  EF35  F01C         	goto	u5561
  1420  003866  EF37  F01C         	goto	u5560
  1421  00386A                     u5561:
  1422  00386A  EF17  F01C         	goto	l620
  1423  00386E                     u5560:
  1424  00386E                     
  1425                           ; BSR set to: 0
  1426                           ;main.c: 215:        {;main.c: 216:             isolatedOneTaskCap();
  1427  00386E  EC35  F025         	call	_isolatedOneTaskCap	;wreg free
  1428  003872  9E7A               	bcf	122,7,c	;volatile
  1429  003874                     l626:
  1430                           
  1431                           ;main.c: 219:              {;main.c: 220:                    c= EUSART5_Read();
  1432  003874  EC80  F024         	call	_EUSART5_Read	;wreg free
  1433  003878  0100               	movlb	0	; () banked
  1434  00387A  6FDC               	movwf	main@c& (0+255),b
  1435  00387C                     
  1436                           ; BSR set to: 0
  1437                           ;main.c: 221:                     if(c != 0x0A)
  1438  00387C  0E0A               	movlw	10
  1439  00387E  19DC               	xorwf	main@c& (0+255),w,b
  1440  003880  B4D8               	btfsc	status,2,c
  1441  003882  EF45  F01C         	goto	u5571
  1442  003886  EF47  F01C         	goto	u5570
  1443  00388A                     u5571:
  1444  00388A  EF52  F01C         	goto	l5827
  1445  00388E                     u5570:
  1446  00388E                     
  1447                           ; BSR set to: 0
  1448                           ;main.c: 222:                     {;main.c: 223:                         command[index++
      +                          ] =c;
  1449  00388E  0EC7               	movlw	low main@command
  1450  003890  25DB               	addwf	main@index& (0+255),w,b
  1451  003892  6ED9               	movwf	fsr2l,c
  1452  003894  6ADA               	clrf	fsr2h,c
  1453  003896  0E00               	movlw	high main@command
  1454  003898  22DA               	addwfc	fsr2h,f,c
  1455  00389A  C0DC  FFDF         	movff	main@c,indf2
  1456  00389E                     
  1457                           ; BSR set to: 0
  1458  00389E  2BDB               	incf	main@index& (0+255),f,b
  1459                           
  1460                           ;main.c: 224:                     }
  1461  0038A0  EF7A  F01C         	goto	l5835
  1462  0038A4                     l5827:
  1463                           
  1464                           ; BSR set to: 0
  1465  0038A4  0E0A               	movlw	10
  1466  0038A6  19DC               	xorwf	main@c& (0+255),w,b
  1467  0038A8  A4D8               	btfss	status,2,c
  1468  0038AA  EF59  F01C         	goto	u5581
  1469  0038AE  EF5B  F01C         	goto	u5580
  1470  0038B2                     u5581:
  1471  0038B2  EF7A  F01C         	goto	l5835
  1472  0038B6                     u5580:
  1473  0038B6                     
  1474                           ; BSR set to: 0
  1475                           ;main.c: 226:                     {;main.c: 228:                         command[index] 
      +                          = c;
  1476  0038B6  0EC7               	movlw	low main@command
  1477  0038B8  25DB               	addwf	main@index& (0+255),w,b
  1478  0038BA  6ED9               	movwf	fsr2l,c
  1479  0038BC  6ADA               	clrf	fsr2h,c
  1480  0038BE  0E00               	movlw	high main@command
  1481  0038C0  22DA               	addwfc	fsr2h,f,c
  1482  0038C2  C0DC  FFDF         	movff	main@c,indf2
  1483                           
  1484                           ;main.c: 229:                         command[index+1] = '\0';
  1485  0038C6  51DB               	movf	main@index& (0+255),w,b
  1486  0038C8  6FC5               	movwf	??_main& (0+255),b
  1487  0038CA  6BC6               	clrf	(??_main+1)& (0+255),b
  1488  0038CC  0E01               	movlw	1
  1489  0038CE  27C5               	addwf	??_main& (0+255),f,b
  1490  0038D0  0E00               	movlw	0
  1491  0038D2  23C6               	addwfc	(??_main+1)& (0+255),f,b
  1492  0038D4  0EC7               	movlw	low main@command
  1493  0038D6  25C5               	addwf	??_main& (0+255),w,b
  1494  0038D8  6ED9               	movwf	fsr2l,c
  1495  0038DA  0E00               	movlw	high main@command
  1496  0038DC  21C6               	addwfc	(??_main+1)& (0+255),w,b
  1497  0038DE  6EDA               	movwf	fsr2h,c
  1498  0038E0  0E00               	movlw	0
  1499  0038E2  6EDF               	movwf	indf2,c
  1500  0038E4                     
  1501                           ; BSR set to: 0
  1502                           ;main.c: 230:                         index =0;
  1503  0038E4  0E00               	movlw	0
  1504  0038E6  6FDB               	movwf	main@index& (0+255),b
  1505  0038E8                     
  1506                           ; BSR set to: 0
  1507                           ;main.c: 231:                         executeCommand(command);
  1508  0038E8  0EC7               	movlw	low main@command
  1509  0038EA  6FB4               	movwf	executeCommand@command& (0+255),b
  1510  0038EC  0E00               	movlw	high main@command
  1511  0038EE  6FB5               	movwf	(executeCommand@command+1)& (0+255),b
  1512  0038F0  ECC3  F015         	call	_executeCommand	;wreg free
  1513  0038F4                     l5835:
  1514                           
  1515                           ;main.c: 233:                    if(DectecLowVFlag ==1)
  1516  0038F4  0100               	movlb	0	; () banked
  1517  0038F6  05F7               	decf	_DectecLowVFlag& (0+255),w,b	;volatile
  1518  0038F8  A4D8               	btfss	status,2,c
  1519  0038FA  EF81  F01C         	goto	u5591
  1520  0038FE  EF83  F01C         	goto	u5590
  1521  003902                     u5591:
  1522  003902  EF3A  F01C         	goto	l626
  1523  003906                     u5590:
  1524  003906                     
  1525                           ; BSR set to: 0
  1526                           ;main.c: 234:                    {;main.c: 235:                        delayedBrownOut()
      +                          ;
  1527  003906  EC18  F021         	call	_delayedBrownOut	;wreg free
  1528  00390A                     
  1529                           ;main.c: 236:                        if(isolatedflag ==0)
  1530  00390A  0100               	movlb	0	; () banked
  1531  00390C  51F8               	movf	_isolatedflag& (0+255),w,b	;volatile
  1532  00390E  A4D8               	btfss	status,2,c
  1533  003910  EF8C  F01C         	goto	u5601
  1534  003914  EF8E  F01C         	goto	u5600
  1535  003918                     u5601:
  1536  003918  EF3A  F01C         	goto	l626
  1537  00391C                     u5600:
  1538  00391C                     
  1539                           ; BSR set to: 0
  1540                           ;main.c: 237:                        {;main.c: 238:                            DectecLow
      +                          Volatge();
  1541  00391C  EC53  F025         	call	_DectecLowVolatge	;wreg free
  1542  003920                     
  1543                           ;main.c: 239:                            _delay((unsigned long)((100)*(1000000/4000.0)))
      +                          ;
  1544  003920  0E21               	movlw	33
  1545  003922  0100               	movlb	0	; () banked
  1546  003924  6FC5               	movwf	??_main& (0+255),b
  1547  003926  0E76               	movlw	118
  1548  003928                     u5617:
  1549  003928  2EE8               	decfsz	wreg,f,c
  1550  00392A  D7FE               	bra	u5617
  1551  00392C  2FC5               	decfsz	??_main& (0+255),f,b
  1552  00392E  D7FC               	bra	u5617
  1553  003930  F000               	nop	
  1554  003932  927C               	bcf	124,1,c	;volatile
  1555  003934  EF17  F01C         	goto	l620
  1556  003938  EF1F  F000         	goto	start
  1557  00393C                     __end_of_main:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _isolatedOneTaskCap *****************
  1561 ;; Defined at:
  1562 ;;		line 438 in file "ConfigureCaps.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1580 ;;Total ram usage:        0 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 2
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text1
  1591  004A6A                     __ptext1:
  1592                           	callstack 0
  1593  004A6A                     _isolatedOneTaskCap:
  1594                           	callstack 28
  1595  004A6A  947C               	bcf	124,2,c	;volatile
  1596  004A6C  9480               	bcf	128,2,c	;volatile
  1597  004A6E  827C               	bsf	124,1,c	;volatile
  1598  004A70                     
  1599                           ;ConfigureCaps.c: 444:     capTaskParalle_count =7;
  1600  004A70  0E07               	movlw	7
  1601  004A72  0100               	movlb	0	; () banked
  1602  004A74  6FF5               	movwf	_capTaskParalle_count& (0+255),b
  1603                           
  1604                           ;ConfigureCaps.c: 445:     capTaskSeries_count =1;
  1605  004A76  0E01               	movlw	1
  1606  004A78  6E5E               	movwf	_capTaskSeries_count^0,c
  1607  004A7A                     
  1608                           ; BSR set to: 0
  1609  004A7A  0012               	return		;funcret
  1610  004A7C                     __end_of_isolatedOneTaskCap:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _fastChargingcaps *****************
  1614 ;; Defined at:
  1615 ;;		line 449 in file "ConfigureCaps.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  vcap            4   57[COMRAM] float 
  1620 ;;  voc             4    0        float 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1634 ;;Total ram usage:        4 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 5
  1637 ;; This function calls:
  1638 ;;		___flge
  1639 ;;		___flmul
  1640 ;;		_addCapToParallel
  1641 ;;		_decoupleCapArray
  1642 ;;		_sampleChargingCapArray
  1643 ;;		_sampleEHvoc
  1644 ;; This function is called by:
  1645 ;;		_main
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text2
  1650  0035B0                     __ptext2:
  1651                           	callstack 0
  1652  0035B0                     _fastChargingcaps:
  1653                           	callstack 25
  1654  0035B0                     
  1655                           ;ConfigureCaps.c: 452:     float vcap = 0;
  1656  0035B0  0E00               	movlw	0
  1657  0035B2  6E3A               	movwf	fastChargingcaps@vcap^0,c
  1658  0035B4  0E00               	movlw	0
  1659  0035B6  6E3B               	movwf	(fastChargingcaps@vcap+1)^0,c
  1660  0035B8  0E00               	movlw	0
  1661  0035BA  6E3C               	movwf	(fastChargingcaps@vcap+2)^0,c
  1662  0035BC  0E00               	movlw	0
  1663  0035BE  6E3D               	movwf	(fastChargingcaps@vcap+3)^0,c
  1664  0035C0                     
  1665                           ;ConfigureCaps.c: 454:    decoupleCapArray(1);
  1666  0035C0  0E01               	movlw	1
  1667  0035C2  ECF1  F024         	call	_decoupleCapArray
  1668  0035C6  EC36  F023         	call	_sampleEHvoc	;wreg free
  1669  0035CA                     
  1670                           ;ConfigureCaps.c: 460:    vcap = sampleChargingCapArray();
  1671  0035CA  EC5C  F023         	call	_sampleChargingCapArray	;wreg free
  1672  0035CE  C032  F03A         	movff	?_sampleChargingCapArray,fastChargingcaps@vcap
  1673  0035D2  C033  F03B         	movff	?_sampleChargingCapArray+1,fastChargingcaps@vcap+1
  1674  0035D6  C034  F03C         	movff	?_sampleChargingCapArray+2,fastChargingcaps@vcap+2
  1675  0035DA  C035  F03D         	movff	?_sampleChargingCapArray+3,fastChargingcaps@vcap+3
  1676  0035DE                     
  1677                           ;ConfigureCaps.c: 464:    if (vcap >(0.9 * voc_current))
  1678  0035DE  0E66               	movlw	102
  1679  0035E0  6E13               	movwf	___flmul@a^0,c
  1680  0035E2  0E66               	movlw	102
  1681  0035E4  6E14               	movwf	(___flmul@a+1)^0,c
  1682  0035E6  0E66               	movlw	102
  1683  0035E8  6E15               	movwf	(___flmul@a+2)^0,c
  1684  0035EA  0E3F               	movlw	63
  1685  0035EC  6E16               	movwf	(___flmul@a+3)^0,c
  1686  0035EE  C0E5  F00F         	movff	_voc_current,___flmul@b
  1687  0035F2  C0E6  F010         	movff	_voc_current+1,___flmul@b+1
  1688  0035F6  C0E7  F011         	movff	_voc_current+2,___flmul@b+2
  1689  0035FA  C0E8  F012         	movff	_voc_current+3,___flmul@b+3
  1690  0035FE  ECE1  F011         	call	___flmul	;wreg free
  1691  003602  C00F  F028         	movff	?___flmul,___flge@ff1
  1692  003606  C010  F029         	movff	?___flmul+1,___flge@ff1+1
  1693  00360A  C011  F02A         	movff	?___flmul+2,___flge@ff1+2
  1694  00360E  C012  F02B         	movff	?___flmul+3,___flge@ff1+3
  1695  003612  C03A  F02C         	movff	fastChargingcaps@vcap,___flge@ff2
  1696  003616  C03B  F02D         	movff	fastChargingcaps@vcap+1,___flge@ff2+1
  1697  00361A  C03C  F02E         	movff	fastChargingcaps@vcap+2,___flge@ff2+2
  1698  00361E  C03D  F02F         	movff	fastChargingcaps@vcap+3,___flge@ff2+3
  1699  003622  EC21  F01D         	call	___flge	;wreg free
  1700  003626  B0D8               	btfsc	status,0,c
  1701  003628  EF18  F01B         	goto	u5441
  1702  00362C  EF1A  F01B         	goto	u5440
  1703  003630                     u5441:
  1704  003630  EF1E  F01B         	goto	l5753
  1705  003634                     u5440:
  1706  003634                     
  1707                           ;ConfigureCaps.c: 465:     {;ConfigureCaps.c: 466:         addCapToParallel();
  1708  003634  EC73  F01B         	call	_addCapToParallel	;wreg free
  1709                           
  1710                           ;ConfigureCaps.c: 467:      }
  1711  003638  EF49  F01B         	goto	l5757
  1712  00363C                     l5753:
  1713  00363C  C0E5  F028         	movff	_voc_current,___flge@ff1
  1714  003640  C0E6  F029         	movff	_voc_current+1,___flge@ff1+1
  1715  003644  C0E7  F02A         	movff	_voc_current+2,___flge@ff1+2
  1716  003648  C0E8  F02B         	movff	_voc_current+3,___flge@ff1+3
  1717  00364C  C0E9  F02C         	movff	_voc_prev,___flge@ff2
  1718  003650  C0EA  F02D         	movff	_voc_prev+1,___flge@ff2+1
  1719  003654  C0EB  F02E         	movff	_voc_prev+2,___flge@ff2+2
  1720  003658  C0EC  F02F         	movff	_voc_prev+3,___flge@ff2+3
  1721  00365C  EC21  F01D         	call	___flge	;wreg free
  1722  003660  B0D8               	btfsc	status,0,c
  1723  003662  EF35  F01B         	goto	u5451
  1724  003666  EF37  F01B         	goto	u5450
  1725  00366A                     u5451:
  1726  00366A  EF49  F01B         	goto	l5757
  1727  00366E                     u5450:
  1728  00366E  C0E1  F028         	movff	_vcap_prev,___flge@ff1
  1729  003672  C0E2  F029         	movff	_vcap_prev+1,___flge@ff1+1
  1730  003676  C0E3  F02A         	movff	_vcap_prev+2,___flge@ff1+2
  1731  00367A  C0E4  F02B         	movff	_vcap_prev+3,___flge@ff1+3
  1732  00367E  C0DD  F02C         	movff	_vcap_current,___flge@ff2
  1733  003682  C0DE  F02D         	movff	_vcap_current+1,___flge@ff2+1
  1734  003686  C0DF  F02E         	movff	_vcap_current+2,___flge@ff2+2
  1735  00368A  C0E0  F02F         	movff	_vcap_current+3,___flge@ff2+3
  1736  00368E  EC21  F01D         	call	___flge	;wreg free
  1737  003692                     l5757:
  1738                           
  1739                           ;ConfigureCaps.c: 485:    if(capParalle_count ==8 )
  1740  003692  0E08               	movlw	8
  1741  003694  0100               	movlb	0	; () banked
  1742  003696  19FF               	xorwf	_capParalle_count& (0+255),w,b
  1743  003698  A4D8               	btfss	status,2,c
  1744  00369A  EF51  F01B         	goto	u5461
  1745  00369E  EF53  F01B         	goto	u5460
  1746  0036A2                     u5461:
  1747  0036A2  EF6F  F01B         	goto	l5763
  1748  0036A6                     u5460:
  1749  0036A6                     
  1750                           ; BSR set to: 0
  1751                           ;ConfigureCaps.c: 486:         {;ConfigureCaps.c: 487:              if(vcap > 3.29)
  1752  0036A6  0E5C               	movlw	92
  1753  0036A8  6E28               	movwf	___flge@ff1^0,c
  1754  0036AA  0E8F               	movlw	143
  1755  0036AC  6E29               	movwf	(___flge@ff1+1)^0,c
  1756  0036AE  0E52               	movlw	82
  1757  0036B0  6E2A               	movwf	(___flge@ff1+2)^0,c
  1758  0036B2  0E40               	movlw	64
  1759  0036B4  6E2B               	movwf	(___flge@ff1+3)^0,c
  1760  0036B6  C03A  F02C         	movff	fastChargingcaps@vcap,___flge@ff2
  1761  0036BA  C03B  F02D         	movff	fastChargingcaps@vcap+1,___flge@ff2+1
  1762  0036BE  C03C  F02E         	movff	fastChargingcaps@vcap+2,___flge@ff2+2
  1763  0036C2  C03D  F02F         	movff	fastChargingcaps@vcap+3,___flge@ff2+3
  1764  0036C6  EC21  F01D         	call	___flge	;wreg free
  1765  0036CA  B0D8               	btfsc	status,0,c
  1766  0036CC  EF6A  F01B         	goto	u5471
  1767  0036D0  EF6C  F01B         	goto	u5470
  1768  0036D4                     u5471:
  1769  0036D4  EF6F  F01B         	goto	l5763
  1770  0036D8                     u5470:
  1771  0036D8                     
  1772                           ;ConfigureCaps.c: 488:              {;ConfigureCaps.c: 490:                     isolated
      +                          flag=1;
  1773  0036D8  0E01               	movlw	1
  1774  0036DA  0100               	movlb	0	; () banked
  1775  0036DC  6FF8               	movwf	_isolatedflag& (0+255),b	;volatile
  1776  0036DE                     l5763:
  1777                           
  1778                           ;ConfigureCaps.c: 495:      decoupleCapArray(0);
  1779  0036DE  0E00               	movlw	0
  1780  0036E0  ECF1  F024         	call	_decoupleCapArray
  1781  0036E4  0012               	return		;funcret
  1782  0036E6                     __end_of_fastChargingcaps:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function _sampleEHvoc *****************
  1786 ;; Defined at:
  1787 ;;		line 94 in file "ConfigureCaps.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  voc             4   53[COMRAM] float 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  4   49[COMRAM] float 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1802 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1804 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1805 ;;Total ram usage:        8 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 4
  1808 ;; This function calls:
  1809 ;;		_getADCValue
  1810 ;; This function is called by:
  1811 ;;		_fastChargingcaps
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text3
  1816  00466C                     __ptext3:
  1817                           	callstack 0
  1818  00466C                     _sampleEHvoc:
  1819                           	callstack 25
  1820  00466C  847C               	bsf	124,2,c	;volatile
  1821  00466E  927C               	bcf	124,1,c	;volatile
  1822  004670  9480               	bcf	128,2,c	;volatile
  1823  004672                     
  1824                           ;ConfigureCaps.c: 102:     voc=getADCValue();
  1825  004672  EC65  F021         	call	_getADCValue	;wreg free
  1826  004676  C028  F036         	movff	?_getADCValue,sampleEHvoc@voc
  1827  00467A  C029  F037         	movff	?_getADCValue+1,sampleEHvoc@voc+1
  1828  00467E  C02A  F038         	movff	?_getADCValue+2,sampleEHvoc@voc+2
  1829  004682  C02B  F039         	movff	?_getADCValue+3,sampleEHvoc@voc+3
  1830  004686                     
  1831                           ;ConfigureCaps.c: 104:     voc_prev = voc_current;
  1832  004686  C0E5  F0E9         	movff	_voc_current,_voc_prev
  1833  00468A  C0E6  F0EA         	movff	_voc_current+1,_voc_prev+1
  1834  00468E  C0E7  F0EB         	movff	_voc_current+2,_voc_prev+2
  1835  004692  C0E8  F0EC         	movff	_voc_current+3,_voc_prev+3
  1836  004696                     
  1837                           ;ConfigureCaps.c: 105:     voc_current = voc;
  1838  004696  C036  F0E5         	movff	sampleEHvoc@voc,_voc_current
  1839  00469A  C037  F0E6         	movff	sampleEHvoc@voc+1,_voc_current+1
  1840  00469E  C038  F0E7         	movff	sampleEHvoc@voc+2,_voc_current+2
  1841  0046A2  C039  F0E8         	movff	sampleEHvoc@voc+3,_voc_current+3
  1842  0046A6                     
  1843                           ;ConfigureCaps.c: 106:     return voc;
  1844  0046A6  C036  F032         	movff	sampleEHvoc@voc,?_sampleEHvoc
  1845  0046AA  C037  F033         	movff	sampleEHvoc@voc+1,?_sampleEHvoc+1
  1846  0046AE  C038  F034         	movff	sampleEHvoc@voc+2,?_sampleEHvoc+2
  1847  0046B2  C039  F035         	movff	sampleEHvoc@voc+3,?_sampleEHvoc+3
  1848  0046B6  0012               	return		;funcret
  1849  0046B8                     __end_of_sampleEHvoc:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function _sampleChargingCapArray *****************
  1853 ;; Defined at:
  1854 ;;		line 109 in file "ConfigureCaps.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  vcap            4   53[COMRAM] float 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  4   49[COMRAM] float 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1871 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1872 ;;Total ram usage:        8 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 4
  1875 ;; This function calls:
  1876 ;;		_getADCValue
  1877 ;; This function is called by:
  1878 ;;		_fastChargingcaps
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text4
  1883  0046B8                     __ptext4:
  1884                           	callstack 0
  1885  0046B8                     _sampleChargingCapArray:
  1886                           	callstack 25
  1887  0046B8  947C               	bcf	124,2,c	;volatile
  1888  0046BA  927C               	bcf	124,1,c	;volatile
  1889  0046BC  8480               	bsf	128,2,c	;volatile
  1890  0046BE                     
  1891                           ;ConfigureCaps.c: 117:     vcap=getADCValue();
  1892  0046BE  EC65  F021         	call	_getADCValue	;wreg free
  1893  0046C2  C028  F036         	movff	?_getADCValue,sampleChargingCapArray@vcap
  1894  0046C6  C029  F037         	movff	?_getADCValue+1,sampleChargingCapArray@vcap+1
  1895  0046CA  C02A  F038         	movff	?_getADCValue+2,sampleChargingCapArray@vcap+2
  1896  0046CE  C02B  F039         	movff	?_getADCValue+3,sampleChargingCapArray@vcap+3
  1897  0046D2                     
  1898                           ;ConfigureCaps.c: 119:     vcap_prev = vcap_current;
  1899  0046D2  C0DD  F0E1         	movff	_vcap_current,_vcap_prev
  1900  0046D6  C0DE  F0E2         	movff	_vcap_current+1,_vcap_prev+1
  1901  0046DA  C0DF  F0E3         	movff	_vcap_current+2,_vcap_prev+2
  1902  0046DE  C0E0  F0E4         	movff	_vcap_current+3,_vcap_prev+3
  1903  0046E2                     
  1904                           ;ConfigureCaps.c: 120:     vcap_current = vcap;
  1905  0046E2  C036  F0DD         	movff	sampleChargingCapArray@vcap,_vcap_current
  1906  0046E6  C037  F0DE         	movff	sampleChargingCapArray@vcap+1,_vcap_current+1
  1907  0046EA  C038  F0DF         	movff	sampleChargingCapArray@vcap+2,_vcap_current+2
  1908  0046EE  C039  F0E0         	movff	sampleChargingCapArray@vcap+3,_vcap_current+3
  1909  0046F2                     
  1910                           ;ConfigureCaps.c: 122:     return vcap;
  1911  0046F2  C036  F032         	movff	sampleChargingCapArray@vcap,?_sampleChargingCapArray
  1912  0046F6  C037  F033         	movff	sampleChargingCapArray@vcap+1,?_sampleChargingCapArray+1
  1913  0046FA  C038  F034         	movff	sampleChargingCapArray@vcap+2,?_sampleChargingCapArray+2
  1914  0046FE  C039  F035         	movff	sampleChargingCapArray@vcap+3,?_sampleChargingCapArray+3
  1915  004702  0012               	return		;funcret
  1916  004704                     __end_of_sampleChargingCapArray:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function _decoupleCapArray *****************
  1920 ;; Defined at:
  1921 ;;		line 125 in file "ConfigureCaps.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  state           1    wreg     _Bool 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  state           1    0[COMRAM] _Bool 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;Total ram usage:        1 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; Hardware stack levels required when called: 2
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_fastChargingcaps
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text5
  1950  0049E2                     __ptext5:
  1951                           	callstack 0
  1952  0049E2                     _decoupleCapArray:
  1953                           	callstack 27
  1954                           
  1955                           ;incstack = 0
  1956                           ;decoupleCapArray@state stored from wreg
  1957  0049E2  6E01               	movwf	decoupleCapArray@state^0,c
  1958  0049E4                     
  1959                           ;ConfigureCaps.c: 125: void decoupleCapArray(_Bool state);ConfigureCaps.c: 126: {;Config
      +                          ureCaps.c: 128:     if (state == 1) {
  1960  0049E4  0401               	decf	decoupleCapArray@state^0,w,c
  1961  0049E6  A4D8               	btfss	status,2,c
  1962  0049E8  EFF8  F024         	goto	u5271
  1963  0049EC  EFFA  F024         	goto	u5270
  1964  0049F0                     u5271:
  1965  0049F0  EFFD  F024         	goto	l775
  1966  0049F4                     u5270:
  1967  0049F4  9480               	bcf	128,2,c	;volatile
  1968  0049F6  EFFF  F024         	goto	l779
  1969  0049FA                     l775:
  1970  0049FA  847C               	bsf	124,2,c	;volatile
  1971  0049FC  8480               	bsf	128,2,c	;volatile
  1972  0049FE                     l779:
  1973  0049FE  0012               	return		;funcret
  1974  004A00                     __end_of_decoupleCapArray:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _addCapToParallel *****************
  1978 ;; Defined at:
  1979 ;;		line 138 in file "ConfigureCaps.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;Total ram usage:        2 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 2
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		_fastChargingcaps
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text6
  2008  0036E6                     __ptext6:
  2009                           	callstack 0
  2010  0036E6                     _addCapToParallel:
  2011                           	callstack 27
  2012  0036E6                     
  2013                           ;ConfigureCaps.c: 141:     switch(capParalle_count)
  2014  0036E6  EFDE  F01B         	goto	l5567
  2015  0036EA                     l784:
  2016                           
  2017                           ; BSR set to: 0
  2018  0036EA  887E               	bsf	126,4,c	;volatile
  2019  0036EC                     
  2020                           ; BSR set to: 0
  2021  0036EC  947E               	bcf	126,2,c	;volatile
  2022  0036EE                     
  2023                           ; BSR set to: 0
  2024  0036EE  9E7E               	bcf	126,7,c	;volatile
  2025  0036F0                     
  2026                           ; BSR set to: 0
  2027                           ;ConfigureCaps.c: 150:                 capParalle_count =2;
  2028  0036F0  0E02               	movlw	2
  2029  0036F2  6FFF               	movwf	_capParalle_count& (0+255),b
  2030                           
  2031                           ;ConfigureCaps.c: 151:                 capSeries_count=6;
  2032  0036F4  0E06               	movlw	6
  2033  0036F6  6FFE               	movwf	_capSeries_count& (0+255),b
  2034                           
  2035                           ;ConfigureCaps.c: 152:                 break;
  2036  0036F8  EF08  F01C         	goto	l918
  2037  0036FC                     l792:
  2038                           
  2039                           ; BSR set to: 0
  2040  0036FC  947E               	bcf	126,2,c	;volatile
  2041  0036FE                     
  2042                           ; BSR set to: 0
  2043  0036FE  887E               	bsf	126,4,c	;volatile
  2044  003700                     
  2045                           ; BSR set to: 0
  2046  003700  8C7E               	bsf	126,6,c	;volatile
  2047  003702                     
  2048                           ; BSR set to: 0
  2049  003702  9E7E               	bcf	126,7,c	;volatile
  2050  003704                     
  2051                           ; BSR set to: 0
  2052  003704  947F               	bcf	127,2,c	;volatile
  2053  003706                     
  2054                           ; BSR set to: 0
  2055                           ;ConfigureCaps.c: 163:                 capParalle_count =3;
  2056  003706  0E03               	movlw	3
  2057  003708  6FFF               	movwf	_capParalle_count& (0+255),b
  2058                           
  2059                           ;ConfigureCaps.c: 164:                 capSeries_count=5;
  2060  00370A  0E05               	movlw	5
  2061  00370C  6FFE               	movwf	_capSeries_count& (0+255),b
  2062                           
  2063                           ;ConfigureCaps.c: 165:                 break;
  2064  00370E  EF08  F01C         	goto	l918
  2065  003712                     l803:
  2066                           
  2067                           ; BSR set to: 0
  2068  003712  947E               	bcf	126,2,c	;volatile
  2069  003714                     
  2070                           ; BSR set to: 0
  2071  003714  887E               	bsf	126,4,c	;volatile
  2072  003716                     
  2073                           ; BSR set to: 0
  2074  003716  8C7E               	bsf	126,6,c	;volatile
  2075  003718                     
  2076                           ; BSR set to: 0
  2077  003718  867F               	bsf	127,3,c	;volatile
  2078  00371A                     
  2079                           ; BSR set to: 0
  2080  00371A  9E7E               	bcf	126,7,c	;volatile
  2081  00371C                     
  2082                           ; BSR set to: 0
  2083  00371C  947F               	bcf	127,2,c	;volatile
  2084  00371E                     
  2085                           ; BSR set to: 0
  2086  00371E  907F               	bcf	127,0,c	;volatile
  2087  003720                     
  2088                           ; BSR set to: 0
  2089                           ;ConfigureCaps.c: 178:                 capParalle_count =4;
  2090  003720  0E04               	movlw	4
  2091  003722  6FFF               	movwf	_capParalle_count& (0+255),b
  2092                           
  2093                           ;ConfigureCaps.c: 179:                 capSeries_count=4;
  2094  003724  0E04               	movlw	4
  2095  003726  6FFE               	movwf	_capSeries_count& (0+255),b
  2096                           
  2097                           ;ConfigureCaps.c: 180:                  break;
  2098  003728  EF08  F01C         	goto	l918
  2099  00372C                     l818:
  2100                           
  2101                           ; BSR set to: 0
  2102  00372C  947E               	bcf	126,2,c	;volatile
  2103  00372E                     
  2104                           ; BSR set to: 0
  2105  00372E  887E               	bsf	126,4,c	;volatile
  2106  003730                     
  2107                           ; BSR set to: 0
  2108  003730  8C7E               	bsf	126,6,c	;volatile
  2109  003732                     
  2110                           ; BSR set to: 0
  2111  003732  867F               	bsf	127,3,c	;volatile
  2112  003734                     
  2113                           ; BSR set to: 0
  2114  003734  827F               	bsf	127,1,c	;volatile
  2115  003736                     
  2116                           ; BSR set to: 0
  2117  003736  9E7E               	bcf	126,7,c	;volatile
  2118  003738                     
  2119                           ; BSR set to: 0
  2120  003738  947F               	bcf	127,2,c	;volatile
  2121  00373A                     
  2122                           ; BSR set to: 0
  2123  00373A  907F               	bcf	127,0,c	;volatile
  2124  00373C                     
  2125                           ; BSR set to: 0
  2126  00373C  927D               	bcf	125,1,c	;volatile
  2127  00373E                     
  2128                           ; BSR set to: 0
  2129                           ;ConfigureCaps.c: 196:                 capParalle_count =5;
  2130  00373E  0E05               	movlw	5
  2131  003740  6FFF               	movwf	_capParalle_count& (0+255),b
  2132                           
  2133                           ;ConfigureCaps.c: 197:                 capSeries_count=3;
  2134  003742  0E03               	movlw	3
  2135  003744  6FFE               	movwf	_capSeries_count& (0+255),b
  2136                           
  2137                           ;ConfigureCaps.c: 198:                  break;
  2138  003746  EF08  F01C         	goto	l918
  2139  00374A                     l837:
  2140                           
  2141                           ; BSR set to: 0
  2142  00374A  947E               	bcf	126,2,c	;volatile
  2143  00374C                     
  2144                           ; BSR set to: 0
  2145  00374C  887E               	bsf	126,4,c	;volatile
  2146  00374E                     
  2147                           ; BSR set to: 0
  2148  00374E  8C7E               	bsf	126,6,c	;volatile
  2149  003750                     
  2150                           ; BSR set to: 0
  2151  003750  867F               	bsf	127,3,c	;volatile
  2152  003752                     
  2153                           ; BSR set to: 0
  2154  003752  827F               	bsf	127,1,c	;volatile
  2155  003754                     
  2156                           ; BSR set to: 0
  2157  003754  807D               	bsf	125,0,c	;volatile
  2158  003756                     
  2159                           ; BSR set to: 0
  2160  003756  9E7E               	bcf	126,7,c	;volatile
  2161  003758                     
  2162                           ; BSR set to: 0
  2163  003758  947F               	bcf	127,2,c	;volatile
  2164  00375A                     
  2165                           ; BSR set to: 0
  2166  00375A  907F               	bcf	127,0,c	;volatile
  2167  00375C                     
  2168                           ; BSR set to: 0
  2169  00375C  927D               	bcf	125,1,c	;volatile
  2170  00375E                     
  2171                           ; BSR set to: 0
  2172  00375E  9A7D               	bcf	125,5,c	;volatile
  2173  003760                     
  2174                           ; BSR set to: 0
  2175                           ;ConfigureCaps.c: 215:                 capParalle_count =6;
  2176  003760  0E06               	movlw	6
  2177  003762  6FFF               	movwf	_capParalle_count& (0+255),b
  2178                           
  2179                           ;ConfigureCaps.c: 216:                 capSeries_count=2;
  2180  003764  0E02               	movlw	2
  2181  003766  6FFE               	movwf	_capSeries_count& (0+255),b
  2182                           
  2183                           ;ConfigureCaps.c: 217:                  break;
  2184  003768  EF08  F01C         	goto	l918
  2185  00376C                     l860:
  2186                           
  2187                           ; BSR set to: 0
  2188  00376C  947E               	bcf	126,2,c	;volatile
  2189  00376E                     
  2190                           ; BSR set to: 0
  2191  00376E  887E               	bsf	126,4,c	;volatile
  2192  003770                     
  2193                           ; BSR set to: 0
  2194  003770  8C7E               	bsf	126,6,c	;volatile
  2195  003772                     
  2196                           ; BSR set to: 0
  2197  003772  867F               	bsf	127,3,c	;volatile
  2198  003774                     
  2199                           ; BSR set to: 0
  2200  003774  827F               	bsf	127,1,c	;volatile
  2201  003776                     
  2202                           ; BSR set to: 0
  2203  003776  807D               	bsf	125,0,c	;volatile
  2204  003778                     
  2205                           ; BSR set to: 0
  2206  003778  887D               	bsf	125,4,c	;volatile
  2207  00377A                     
  2208                           ; BSR set to: 0
  2209  00377A  9E7E               	bcf	126,7,c	;volatile
  2210  00377C                     
  2211                           ; BSR set to: 0
  2212  00377C  947F               	bcf	127,2,c	;volatile
  2213  00377E                     
  2214                           ; BSR set to: 0
  2215  00377E  907F               	bcf	127,0,c	;volatile
  2216  003780                     
  2217                           ; BSR set to: 0
  2218  003780  927D               	bcf	125,1,c	;volatile
  2219  003782                     
  2220                           ; BSR set to: 0
  2221  003782  9A7D               	bcf	125,5,c	;volatile
  2222  003784                     
  2223                           ; BSR set to: 0
  2224  003784  9E7D               	bcf	125,7,c	;volatile
  2225  003786                     
  2226                           ; BSR set to: 0
  2227                           ;ConfigureCaps.c: 235:                 capParalle_count =7;
  2228  003786  0E07               	movlw	7
  2229  003788  6FFF               	movwf	_capParalle_count& (0+255),b
  2230                           
  2231                           ;ConfigureCaps.c: 236:                 capSeries_count=1;
  2232  00378A  0E01               	movlw	1
  2233  00378C  6FFE               	movwf	_capSeries_count& (0+255),b
  2234                           
  2235                           ;ConfigureCaps.c: 237:             break;
  2236  00378E  EF08  F01C         	goto	l918
  2237  003792                     l887:
  2238                           
  2239                           ; BSR set to: 0
  2240  003792  947E               	bcf	126,2,c	;volatile
  2241  003794                     
  2242                           ; BSR set to: 0
  2243  003794  887E               	bsf	126,4,c	;volatile
  2244  003796                     
  2245                           ; BSR set to: 0
  2246  003796  8C7E               	bsf	126,6,c	;volatile
  2247  003798                     
  2248                           ; BSR set to: 0
  2249  003798  867F               	bsf	127,3,c	;volatile
  2250  00379A                     
  2251                           ; BSR set to: 0
  2252  00379A  827F               	bsf	127,1,c	;volatile
  2253  00379C                     
  2254                           ; BSR set to: 0
  2255  00379C  807D               	bsf	125,0,c	;volatile
  2256  00379E                     
  2257                           ; BSR set to: 0
  2258  00379E  887D               	bsf	125,4,c	;volatile
  2259  0037A0                     
  2260                           ; BSR set to: 0
  2261  0037A0  8C7D               	bsf	125,6,c	;volatile
  2262  0037A2                     
  2263                           ; BSR set to: 0
  2264  0037A2  9E7E               	bcf	126,7,c	;volatile
  2265  0037A4                     
  2266                           ; BSR set to: 0
  2267  0037A4  947F               	bcf	127,2,c	;volatile
  2268  0037A6                     
  2269                           ; BSR set to: 0
  2270  0037A6  907F               	bcf	127,0,c	;volatile
  2271  0037A8                     
  2272                           ; BSR set to: 0
  2273  0037A8  927D               	bcf	125,1,c	;volatile
  2274  0037AA                     
  2275                           ; BSR set to: 0
  2276  0037AA  9A7D               	bcf	125,5,c	;volatile
  2277  0037AC                     
  2278                           ; BSR set to: 0
  2279  0037AC  9E7D               	bcf	125,7,c	;volatile
  2280  0037AE                     
  2281                           ; BSR set to: 0
  2282  0037AE  9680               	bcf	128,3,c	;volatile
  2283  0037B0                     
  2284                           ; BSR set to: 0
  2285                           ;ConfigureCaps.c: 258:                 capParalle_count =8;
  2286  0037B0  0E08               	movlw	8
  2287  0037B2  6FFF               	movwf	_capParalle_count& (0+255),b
  2288                           
  2289                           ;ConfigureCaps.c: 259:                 capSeries_count=0;
  2290  0037B4  0E00               	movlw	0
  2291  0037B6  6FFE               	movwf	_capSeries_count& (0+255),b
  2292                           
  2293                           ;ConfigureCaps.c: 260:             break;
  2294  0037B8  EF08  F01C         	goto	l918
  2295  0037BC                     l5567:
  2296  0037BC  0100               	movlb	0	; () banked
  2297  0037BE  51FF               	movf	_capParalle_count& (0+255),w,b
  2298  0037C0  6E01               	movwf	??_addCapToParallel^0,c
  2299  0037C2  6A02               	clrf	(??_addCapToParallel+1)^0,c
  2300                           
  2301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2302                           ; Switch size 1, requested type "simple"
  2303                           ; Number of cases is 1, Range of values is 0 to 0
  2304                           ; switch strategies available:
  2305                           ; Name         Instructions Cycles
  2306                           ; simple_byte            4     3 (average)
  2307                           ;	Chosen strategy is simple_byte
  2308  0037C4  5002               	movf	(??_addCapToParallel+1)^0,w,c
  2309  0037C6  0A00               	xorlw	0	; case 0
  2310  0037C8  B4D8               	btfsc	status,2,c
  2311  0037CA  EFE9  F01B         	goto	l5917
  2312  0037CE  EF08  F01C         	goto	l918
  2313  0037D2                     l5917:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ; Switch size 1, requested type "simple"
  2317                           ; Number of cases is 7, Range of values is 0 to 7
  2318                           ; switch strategies available:
  2319                           ; Name         Instructions Cycles
  2320                           ; simple_byte           22    12 (average)
  2321                           ;	Chosen strategy is simple_byte
  2322  0037D2  5001               	movf	??_addCapToParallel^0,w,c
  2323  0037D4  0A00               	xorlw	0	; case 0
  2324  0037D6  B4D8               	btfsc	status,2,c
  2325  0037D8  EF75  F01B         	goto	l784
  2326  0037DC  0A02               	xorlw	2	; case 2
  2327  0037DE  B4D8               	btfsc	status,2,c
  2328  0037E0  EF7E  F01B         	goto	l792
  2329  0037E4  0A01               	xorlw	1	; case 3
  2330  0037E6  B4D8               	btfsc	status,2,c
  2331  0037E8  EF89  F01B         	goto	l803
  2332  0037EC  0A07               	xorlw	7	; case 4
  2333  0037EE  B4D8               	btfsc	status,2,c
  2334  0037F0  EF96  F01B         	goto	l818
  2335  0037F4  0A01               	xorlw	1	; case 5
  2336  0037F6  B4D8               	btfsc	status,2,c
  2337  0037F8  EFA5  F01B         	goto	l837
  2338  0037FC  0A03               	xorlw	3	; case 6
  2339  0037FE  B4D8               	btfsc	status,2,c
  2340  003800  EFB6  F01B         	goto	l860
  2341  003804  0A01               	xorlw	1	; case 7
  2342  003806  B4D8               	btfsc	status,2,c
  2343  003808  EFC9  F01B         	goto	l887
  2344  00380C  EF08  F01C         	goto	l918
  2345  003810                     l918:
  2346                           
  2347                           ; BSR set to: 0
  2348  003810  0012               	return		;funcret
  2349  003812                     __end_of_addCapToParallel:
  2350                           	callstack 0
  2351                           
  2352 ;; *************** function _executeCommand *****************
  2353 ;; Defined at:
  2354 ;;		line 109 in file "main.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  command         2   84[BANK0 ] PTR unsigned char 
  2357 ;;		 -> main@command(20), 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  i               1   98[BANK0 ] unsigned char 
  2360 ;;  i               1   97[BANK0 ] unsigned char 
  2361 ;;  i               1   96[BANK0 ] unsigned char 
  2362 ;;  i               1   95[BANK0 ] unsigned char 
  2363 ;;  i               1   94[BANK0 ] unsigned char 
  2364 ;;  i               1   93[BANK0 ] unsigned char 
  2365 ;;  i               1   92[BANK0 ] unsigned char 
  2366 ;;  ADCValue_flo    4   88[BANK0 ] float 
  2367 ;;  msgValue        2   99[BANK0 ] PTR unsigned char 
  2368 ;;		 -> ConvertADCtoSend@msgValue(8), 
  2369 ;;  getADCValue1    2    0        unsigned short 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2379 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;Total ram usage:       17 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 12
  2386 ;; This function calls:
  2387 ;;		_ConvertADCtoSend
  2388 ;;		_EUSART5_Write
  2389 ;;		_getADCValue
  2390 ;;		_memcmp
  2391 ;;		_strcmp
  2392 ;;		_strlen
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text7
  2399  002B86                     __ptext7:
  2400                           	callstack 0
  2401  002B86                     _executeCommand:
  2402                           	callstack 18
  2403  002B86                     
  2404                           ;main.c: 109: void executeCommand(char *command);main.c: 110: {;main.c: 111:     float A
      +                          DCValue_float;;main.c: 112:     adc_result_t getADCValue1;;main.c: 113:     uint8_t* msg
      +                          Value;;main.c: 115:     if(strcmp(command, command11) == 0)
  2405  002B86  C0B4  F001         	movff	executeCommand@command,strcmp@l
  2406  002B8A  C0B5  F002         	movff	executeCommand@command+1,strcmp@l+1
  2407  002B8E  0E6C               	movlw	low _command11
  2408  002B90  6E03               	movwf	strcmp@r^0,c
  2409  002B92  0E01               	movlw	high _command11
  2410  002B94  6E04               	movwf	(strcmp@r+1)^0,c
  2411  002B96  EC9C  F021         	call	_strcmp	;wreg free
  2412  002B9A  5001               	movf	?_strcmp^0,w,c
  2413  002B9C  1002               	iorwf	(?_strcmp+1)^0,w,c
  2414  002B9E  A4D8               	btfss	status,2,c
  2415  002BA0  EFD4  F015         	goto	u5301
  2416  002BA4  EFD6  F015         	goto	u5300
  2417  002BA8                     u5301:
  2418  002BA8  EFFB  F015         	goto	l5653
  2419  002BAC                     u5300:
  2420  002BAC                     
  2421                           ;main.c: 116:     {;main.c: 117:         for(uint8_t i = 0; i < strlen(msgOK); i++)
  2422  002BAC  0E00               	movlw	0
  2423  002BAE  0100               	movlb	0	; () banked
  2424  002BB0  6FBC               	movwf	executeCommand@i& (0+255),b
  2425  002BB2  EFE6  F015         	goto	l5651
  2426  002BB6                     l5647:
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;main.c: 118:         {;main.c: 119:             EUSART5_Write(msgOK[i]);
  2430  002BB6  0EFB               	movlw	low _msgOK
  2431  002BB8  25BC               	addwf	executeCommand@i& (0+255),w,b
  2432  002BBA  6ED9               	movwf	fsr2l,c
  2433  002BBC  6ADA               	clrf	fsr2h,c
  2434  002BBE  0E00               	movlw	high _msgOK
  2435  002BC0  22DA               	addwfc	fsr2h,f,c
  2436  002BC2  50DF               	movf	indf2,w,c
  2437  002BC4  EC1D  F025         	call	_EUSART5_Write
  2438  002BC8                     
  2439                           ;main.c: 120:         }
  2440  002BC8  0100               	movlb	0	; () banked
  2441  002BCA  2BBC               	incf	executeCommand@i& (0+255),f,b
  2442  002BCC                     l5651:
  2443                           
  2444                           ; BSR set to: 0
  2445  002BCC  0EFB               	movlw	low _msgOK
  2446  002BCE  6E01               	movwf	strlen@s^0,c
  2447  002BD0  0E00               	movlw	high _msgOK
  2448  002BD2  6E02               	movwf	(strlen@s+1)^0,c
  2449  002BD4  EC1B  F024         	call	_strlen	;wreg free
  2450  002BD8  0100               	movlb	0	; () banked
  2451  002BDA  51BC               	movf	executeCommand@i& (0+255),w,b
  2452  002BDC  6FB6               	movwf	??_executeCommand& (0+255),b
  2453  002BDE  6BB7               	clrf	(??_executeCommand+1)& (0+255),b
  2454  002BE0  5001               	movf	?_strlen^0,w,c
  2455  002BE2  5DB6               	subwf	??_executeCommand& (0+255),w,b
  2456  002BE4  5002               	movf	(?_strlen+1)^0,w,c
  2457  002BE6  59B7               	subwfb	(??_executeCommand+1)& (0+255),w,b
  2458  002BE8  A0D8               	btfss	status,0,c
  2459  002BEA  EFF9  F015         	goto	u5311
  2460  002BEE  EFFB  F015         	goto	u5310
  2461  002BF2                     u5311:
  2462  002BF2  EFDB  F015         	goto	l5647
  2463  002BF6                     u5310:
  2464  002BF6                     l5653:
  2465                           
  2466                           ;main.c: 123:     if (strcmp(command, command12) == 0)
  2467  002BF6  C0B4  F001         	movff	executeCommand@command,strcmp@l
  2468  002BFA  C0B5  F002         	movff	executeCommand@command+1,strcmp@l+1
  2469  002BFE  0E79               	movlw	low _command12
  2470  002C00  6E03               	movwf	strcmp@r^0,c
  2471  002C02  0E01               	movlw	high _command12
  2472  002C04  6E04               	movwf	(strcmp@r+1)^0,c
  2473  002C06  EC9C  F021         	call	_strcmp	;wreg free
  2474  002C0A  5001               	movf	?_strcmp^0,w,c
  2475  002C0C  1002               	iorwf	(?_strcmp+1)^0,w,c
  2476  002C0E  A4D8               	btfss	status,2,c
  2477  002C10  EF0C  F016         	goto	u5321
  2478  002C14  EF0E  F016         	goto	u5320
  2479  002C18                     u5321:
  2480  002C18  EF33  F016         	goto	l5663
  2481  002C1C                     u5320:
  2482  002C1C                     
  2483                           ;main.c: 124:     {;main.c: 125:         for(uint8_t i = 0; i < strlen(msgOK); i++)
  2484  002C1C  0E00               	movlw	0
  2485  002C1E  0100               	movlb	0	; () banked
  2486  002C20  6FBD               	movwf	executeCommand@i_1116& (0+255),b
  2487  002C22  EF1E  F016         	goto	l5661
  2488  002C26                     l5657:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;main.c: 126:         {;main.c: 127:             EUSART5_Write(msgOK[i]);
  2492  002C26  0EFB               	movlw	low _msgOK
  2493  002C28  25BD               	addwf	executeCommand@i_1116& (0+255),w,b
  2494  002C2A  6ED9               	movwf	fsr2l,c
  2495  002C2C  6ADA               	clrf	fsr2h,c
  2496  002C2E  0E00               	movlw	high _msgOK
  2497  002C30  22DA               	addwfc	fsr2h,f,c
  2498  002C32  50DF               	movf	indf2,w,c
  2499  002C34  EC1D  F025         	call	_EUSART5_Write
  2500  002C38                     
  2501                           ;main.c: 128:         }
  2502  002C38  0100               	movlb	0	; () banked
  2503  002C3A  2BBD               	incf	executeCommand@i_1116& (0+255),f,b
  2504  002C3C                     l5661:
  2505                           
  2506                           ; BSR set to: 0
  2507  002C3C  0EFB               	movlw	low _msgOK
  2508  002C3E  6E01               	movwf	strlen@s^0,c
  2509  002C40  0E00               	movlw	high _msgOK
  2510  002C42  6E02               	movwf	(strlen@s+1)^0,c
  2511  002C44  EC1B  F024         	call	_strlen	;wreg free
  2512  002C48  0100               	movlb	0	; () banked
  2513  002C4A  51BD               	movf	executeCommand@i_1116& (0+255),w,b
  2514  002C4C  6FB6               	movwf	??_executeCommand& (0+255),b
  2515  002C4E  6BB7               	clrf	(??_executeCommand+1)& (0+255),b
  2516  002C50  5001               	movf	?_strlen^0,w,c
  2517  002C52  5DB6               	subwf	??_executeCommand& (0+255),w,b
  2518  002C54  5002               	movf	(?_strlen+1)^0,w,c
  2519  002C56  59B7               	subwfb	(??_executeCommand+1)& (0+255),w,b
  2520  002C58  A0D8               	btfss	status,0,c
  2521  002C5A  EF31  F016         	goto	u5331
  2522  002C5E  EF33  F016         	goto	u5330
  2523  002C62                     u5331:
  2524  002C62  EF13  F016         	goto	l5657
  2525  002C66                     u5330:
  2526  002C66                     l5663:
  2527                           
  2528                           ;main.c: 131:     if (strcmp(command, command13) == 0)
  2529  002C66  C0B4  F001         	movff	executeCommand@command,strcmp@l
  2530  002C6A  C0B5  F002         	movff	executeCommand@command+1,strcmp@l+1
  2531  002C6E  0E76               	movlw	low _command13
  2532  002C70  6E03               	movwf	strcmp@r^0,c
  2533  002C72  0E01               	movlw	high _command13
  2534  002C74  6E04               	movwf	(strcmp@r+1)^0,c
  2535  002C76  EC9C  F021         	call	_strcmp	;wreg free
  2536  002C7A  5001               	movf	?_strcmp^0,w,c
  2537  002C7C  1002               	iorwf	(?_strcmp+1)^0,w,c
  2538  002C7E  A4D8               	btfss	status,2,c
  2539  002C80  EF44  F016         	goto	u5341
  2540  002C84  EF46  F016         	goto	u5340
  2541  002C88                     u5341:
  2542  002C88  EF99  F016         	goto	l5679
  2543  002C8C                     u5340:
  2544  002C8C                     
  2545                           ;main.c: 132:     {;main.c: 133:         ADCValue_float=getADCValue();
  2546  002C8C  EC65  F021         	call	_getADCValue	;wreg free
  2547  002C90  C028  F0B8         	movff	?_getADCValue,executeCommand@ADCValue_float
  2548  002C94  C029  F0B9         	movff	?_getADCValue+1,executeCommand@ADCValue_float+1
  2549  002C98  C02A  F0BA         	movff	?_getADCValue+2,executeCommand@ADCValue_float+2
  2550  002C9C  C02B  F0BB         	movff	?_getADCValue+3,executeCommand@ADCValue_float+3
  2551  002CA0                     
  2552                           ;main.c: 134:         msgValue= ConvertADCtoSend(ADCValue_float);
  2553  002CA0  C0B8  F0A8         	movff	executeCommand@ADCValue_float,ConvertADCtoSend@convertedValue01
  2554  002CA4  C0B9  F0A9         	movff	executeCommand@ADCValue_float+1,ConvertADCtoSend@convertedValue01+1
  2555  002CA8  C0BA  F0AA         	movff	executeCommand@ADCValue_float+2,ConvertADCtoSend@convertedValue01+2
  2556  002CAC  C0BB  F0AB         	movff	executeCommand@ADCValue_float+3,ConvertADCtoSend@convertedValue01+3
  2557  002CB0  EC50  F024         	call	_ConvertADCtoSend	;wreg free
  2558  002CB4  C0A8  F0C3         	movff	?_ConvertADCtoSend,executeCommand@msgValue
  2559  002CB8  C0A9  F0C4         	movff	?_ConvertADCtoSend+1,executeCommand@msgValue+1
  2560  002CBC                     
  2561                           ;main.c: 136:         msgValue[strlen(msgValue)-1] = 0x0A;
  2562  002CBC  C0C3  F001         	movff	executeCommand@msgValue,strlen@s
  2563  002CC0  C0C4  F002         	movff	executeCommand@msgValue+1,strlen@s+1
  2564  002CC4  EC1B  F024         	call	_strlen	;wreg free
  2565  002CC8  C0C3  F0B6         	movff	executeCommand@msgValue,??_executeCommand
  2566  002CCC  C0C4  F0B7         	movff	executeCommand@msgValue+1,??_executeCommand+1
  2567  002CD0  5001               	movf	?_strlen^0,w,c
  2568  002CD2  0100               	movlb	0	; () banked
  2569  002CD4  27B6               	addwf	??_executeCommand& (0+255),f,b
  2570  002CD6  5002               	movf	(?_strlen+1)^0,w,c
  2571  002CD8  23B7               	addwfc	(??_executeCommand+1)& (0+255),f,b
  2572  002CDA  0EFF               	movlw	255
  2573  002CDC  25B6               	addwf	??_executeCommand& (0+255),w,b
  2574  002CDE  6ED9               	movwf	fsr2l,c
  2575  002CE0  0EFF               	movlw	255
  2576  002CE2  21B7               	addwfc	(??_executeCommand+1)& (0+255),w,b
  2577  002CE4  6EDA               	movwf	fsr2h,c
  2578  002CE6  0E0A               	movlw	10
  2579  002CE8  6EDF               	movwf	indf2,c
  2580  002CEA                     
  2581                           ; BSR set to: 0
  2582                           ;main.c: 137:         for(uint8_t i = 0; i < strlen(msgValue); i++)
  2583  002CEA  0E00               	movlw	0
  2584  002CEC  6FBE               	movwf	executeCommand@i_1118& (0+255),b
  2585  002CEE  EF84  F016         	goto	l5677
  2586  002CF2                     l5673:
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;main.c: 138:         {;main.c: 139:           EUSART5_Write(msgValue[i]);
  2590  002CF2  51BE               	movf	executeCommand@i_1118& (0+255),w,b
  2591  002CF4  25C3               	addwf	executeCommand@msgValue& (0+255),w,b
  2592  002CF6  6ED9               	movwf	fsr2l,c
  2593  002CF8  0E00               	movlw	0
  2594  002CFA  21C4               	addwfc	(executeCommand@msgValue+1)& (0+255),w,b
  2595  002CFC  6EDA               	movwf	fsr2h,c
  2596  002CFE  50DF               	movf	indf2,w,c
  2597  002D00  EC1D  F025         	call	_EUSART5_Write
  2598  002D04                     
  2599                           ;main.c: 140:         }
  2600  002D04  0100               	movlb	0	; () banked
  2601  002D06  2BBE               	incf	executeCommand@i_1118& (0+255),f,b
  2602  002D08                     l5677:
  2603                           
  2604                           ; BSR set to: 0
  2605  002D08  C0C3  F001         	movff	executeCommand@msgValue,strlen@s
  2606  002D0C  C0C4  F002         	movff	executeCommand@msgValue+1,strlen@s+1
  2607  002D10  EC1B  F024         	call	_strlen	;wreg free
  2608  002D14  0100               	movlb	0	; () banked
  2609  002D16  51BE               	movf	executeCommand@i_1118& (0+255),w,b
  2610  002D18  6FB6               	movwf	??_executeCommand& (0+255),b
  2611  002D1A  6BB7               	clrf	(??_executeCommand+1)& (0+255),b
  2612  002D1C  5001               	movf	?_strlen^0,w,c
  2613  002D1E  5DB6               	subwf	??_executeCommand& (0+255),w,b
  2614  002D20  5002               	movf	(?_strlen+1)^0,w,c
  2615  002D22  59B7               	subwfb	(??_executeCommand+1)& (0+255),w,b
  2616  002D24  A0D8               	btfss	status,0,c
  2617  002D26  EF97  F016         	goto	u5351
  2618  002D2A  EF99  F016         	goto	u5350
  2619  002D2E                     u5351:
  2620  002D2E  EF79  F016         	goto	l5673
  2621  002D32                     u5350:
  2622  002D32                     l5679:
  2623                           
  2624                           ;main.c: 143:     if (memcmp(command, command14,4)== 0)
  2625  002D32  C0B4  F001         	movff	executeCommand@command,memcmp@vl
  2626  002D36  C0B5  F002         	movff	executeCommand@command+1,memcmp@vl+1
  2627  002D3A  0E61               	movlw	low _command14
  2628  002D3C  6E03               	movwf	memcmp@vr^0,c
  2629  002D3E  0E01               	movlw	high _command14
  2630  002D40  6E04               	movwf	(memcmp@vr+1)^0,c
  2631  002D42  0E00               	movlw	0
  2632  002D44  6E06               	movwf	(memcmp@n+1)^0,c
  2633  002D46  0E04               	movlw	4
  2634  002D48  6E05               	movwf	memcmp@n^0,c
  2635  002D4A  ECCB  F020         	call	_memcmp	;wreg free
  2636  002D4E  5001               	movf	?_memcmp^0,w,c
  2637  002D50  1002               	iorwf	(?_memcmp+1)^0,w,c
  2638  002D52  A4D8               	btfss	status,2,c
  2639  002D54  EFAE  F016         	goto	u5361
  2640  002D58  EFB0  F016         	goto	u5360
  2641  002D5C                     u5361:
  2642  002D5C  EFD7  F016         	goto	l5691
  2643  002D60                     u5360:
  2644  002D60                     
  2645                           ;main.c: 144:     {;main.c: 145:         for(uint8_t i = 0; i < strlen(msgOK); i++)
  2646  002D60  0E00               	movlw	0
  2647  002D62  0100               	movlb	0	; () banked
  2648  002D64  6FBF               	movwf	executeCommand@i_1119& (0+255),b
  2649  002D66  EFC0  F016         	goto	l5687
  2650  002D6A                     l5683:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;main.c: 146:         {;main.c: 147:             EUSART5_Write(msgOK[i]);
  2654  002D6A  0EFB               	movlw	low _msgOK
  2655  002D6C  25BF               	addwf	executeCommand@i_1119& (0+255),w,b
  2656  002D6E  6ED9               	movwf	fsr2l,c
  2657  002D70  6ADA               	clrf	fsr2h,c
  2658  002D72  0E00               	movlw	high _msgOK
  2659  002D74  22DA               	addwfc	fsr2h,f,c
  2660  002D76  50DF               	movf	indf2,w,c
  2661  002D78  EC1D  F025         	call	_EUSART5_Write
  2662  002D7C                     
  2663                           ;main.c: 148:         }
  2664  002D7C  0100               	movlb	0	; () banked
  2665  002D7E  2BBF               	incf	executeCommand@i_1119& (0+255),f,b
  2666  002D80                     l5687:
  2667                           
  2668                           ; BSR set to: 0
  2669  002D80  0EFB               	movlw	low _msgOK
  2670  002D82  6E01               	movwf	strlen@s^0,c
  2671  002D84  0E00               	movlw	high _msgOK
  2672  002D86  6E02               	movwf	(strlen@s+1)^0,c
  2673  002D88  EC1B  F024         	call	_strlen	;wreg free
  2674  002D8C  0100               	movlb	0	; () banked
  2675  002D8E  51BF               	movf	executeCommand@i_1119& (0+255),w,b
  2676  002D90  6FB6               	movwf	??_executeCommand& (0+255),b
  2677  002D92  6BB7               	clrf	(??_executeCommand+1)& (0+255),b
  2678  002D94  5001               	movf	?_strlen^0,w,c
  2679  002D96  5DB6               	subwf	??_executeCommand& (0+255),w,b
  2680  002D98  5002               	movf	(?_strlen+1)^0,w,c
  2681  002D9A  59B7               	subwfb	(??_executeCommand+1)& (0+255),w,b
  2682  002D9C  A0D8               	btfss	status,0,c
  2683  002D9E  EFD3  F016         	goto	u5371
  2684  002DA2  EFD5  F016         	goto	u5370
  2685  002DA6                     u5371:
  2686  002DA6  EFB5  F016         	goto	l5683
  2687  002DAA                     u5370:
  2688  002DAA                     
  2689                           ; BSR set to: 0
  2690                           ;main.c: 149:         DectecLowVFlag =1;
  2691  002DAA  0E01               	movlw	1
  2692  002DAC  6FF7               	movwf	_DectecLowVFlag& (0+255),b	;volatile
  2693  002DAE                     l5691:
  2694                           
  2695                           ;main.c: 152:     if (strcmp(command, command16) == 0)
  2696  002DAE  C0B4  F001         	movff	executeCommand@command,strcmp@l
  2697  002DB2  C0B5  F002         	movff	executeCommand@command+1,strcmp@l+1
  2698  002DB6  0E73               	movlw	low _command16
  2699  002DB8  6E03               	movwf	strcmp@r^0,c
  2700  002DBA  0E01               	movlw	high _command16
  2701  002DBC  6E04               	movwf	(strcmp@r+1)^0,c
  2702  002DBE  EC9C  F021         	call	_strcmp	;wreg free
  2703  002DC2  5001               	movf	?_strcmp^0,w,c
  2704  002DC4  1002               	iorwf	(?_strcmp+1)^0,w,c
  2705  002DC6  A4D8               	btfss	status,2,c
  2706  002DC8  EFE8  F016         	goto	u5381
  2707  002DCC  EFEA  F016         	goto	u5380
  2708  002DD0                     u5381:
  2709  002DD0  EF0F  F017         	goto	l5701
  2710  002DD4                     u5380:
  2711  002DD4                     
  2712                           ;main.c: 153:     {;main.c: 154:         for(uint8_t i = 0; i < strlen(msgOK); i++)
  2713  002DD4  0E00               	movlw	0
  2714  002DD6  0100               	movlb	0	; () banked
  2715  002DD8  6FC0               	movwf	executeCommand@i_1120& (0+255),b
  2716  002DDA  EFFA  F016         	goto	l5699
  2717  002DDE                     l5695:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;main.c: 155:         {;main.c: 156:             EUSART5_Write(msgOK[i]);
  2721  002DDE  0EFB               	movlw	low _msgOK
  2722  002DE0  25C0               	addwf	executeCommand@i_1120& (0+255),w,b
  2723  002DE2  6ED9               	movwf	fsr2l,c
  2724  002DE4  6ADA               	clrf	fsr2h,c
  2725  002DE6  0E00               	movlw	high _msgOK
  2726  002DE8  22DA               	addwfc	fsr2h,f,c
  2727  002DEA  50DF               	movf	indf2,w,c
  2728  002DEC  EC1D  F025         	call	_EUSART5_Write
  2729  002DF0                     
  2730                           ;main.c: 157:         }
  2731  002DF0  0100               	movlb	0	; () banked
  2732  002DF2  2BC0               	incf	executeCommand@i_1120& (0+255),f,b
  2733  002DF4                     l5699:
  2734                           
  2735                           ; BSR set to: 0
  2736  002DF4  0EFB               	movlw	low _msgOK
  2737  002DF6  6E01               	movwf	strlen@s^0,c
  2738  002DF8  0E00               	movlw	high _msgOK
  2739  002DFA  6E02               	movwf	(strlen@s+1)^0,c
  2740  002DFC  EC1B  F024         	call	_strlen	;wreg free
  2741  002E00  0100               	movlb	0	; () banked
  2742  002E02  51C0               	movf	executeCommand@i_1120& (0+255),w,b
  2743  002E04  6FB6               	movwf	??_executeCommand& (0+255),b
  2744  002E06  6BB7               	clrf	(??_executeCommand+1)& (0+255),b
  2745  002E08  5001               	movf	?_strlen^0,w,c
  2746  002E0A  5DB6               	subwf	??_executeCommand& (0+255),w,b
  2747  002E0C  5002               	movf	(?_strlen+1)^0,w,c
  2748  002E0E  59B7               	subwfb	(??_executeCommand+1)& (0+255),w,b
  2749  002E10  A0D8               	btfss	status,0,c
  2750  002E12  EF0D  F017         	goto	u5391
  2751  002E16  EF0F  F017         	goto	u5390
  2752  002E1A                     u5391:
  2753  002E1A  EFEF  F016         	goto	l5695
  2754  002E1E                     u5390:
  2755  002E1E                     l5701:
  2756                           
  2757                           ;main.c: 160:     if (strcmp(command, command17) == 0)
  2758  002E1E  C0B4  F001         	movff	executeCommand@command,strcmp@l
  2759  002E22  C0B5  F002         	movff	executeCommand@command+1,strcmp@l+1
  2760  002E26  0E70               	movlw	low _command17
  2761  002E28  6E03               	movwf	strcmp@r^0,c
  2762  002E2A  0E01               	movlw	high _command17
  2763  002E2C  6E04               	movwf	(strcmp@r+1)^0,c
  2764  002E2E  EC9C  F021         	call	_strcmp	;wreg free
  2765  002E32  5001               	movf	?_strcmp^0,w,c
  2766  002E34  1002               	iorwf	(?_strcmp+1)^0,w,c
  2767  002E36  A4D8               	btfss	status,2,c
  2768  002E38  EF20  F017         	goto	u5401
  2769  002E3C  EF22  F017         	goto	u5400
  2770  002E40                     u5401:
  2771  002E40  EF47  F017         	goto	l5711
  2772  002E44                     u5400:
  2773  002E44                     
  2774                           ;main.c: 161:     {;main.c: 162:         for(uint8_t i = 0; i < strlen(msgOK); i++)
  2775  002E44  0E00               	movlw	0
  2776  002E46  0100               	movlb	0	; () banked
  2777  002E48  6FC1               	movwf	executeCommand@i_1121& (0+255),b
  2778  002E4A  EF32  F017         	goto	l5709
  2779  002E4E                     l5705:
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;main.c: 163:         {;main.c: 164:             EUSART5_Write(msgOK[i]);
  2783  002E4E  0EFB               	movlw	low _msgOK
  2784  002E50  25C1               	addwf	executeCommand@i_1121& (0+255),w,b
  2785  002E52  6ED9               	movwf	fsr2l,c
  2786  002E54  6ADA               	clrf	fsr2h,c
  2787  002E56  0E00               	movlw	high _msgOK
  2788  002E58  22DA               	addwfc	fsr2h,f,c
  2789  002E5A  50DF               	movf	indf2,w,c
  2790  002E5C  EC1D  F025         	call	_EUSART5_Write
  2791  002E60                     
  2792                           ;main.c: 165:         }
  2793  002E60  0100               	movlb	0	; () banked
  2794  002E62  2BC1               	incf	executeCommand@i_1121& (0+255),f,b
  2795  002E64                     l5709:
  2796                           
  2797                           ; BSR set to: 0
  2798  002E64  0EFB               	movlw	low _msgOK
  2799  002E66  6E01               	movwf	strlen@s^0,c
  2800  002E68  0E00               	movlw	high _msgOK
  2801  002E6A  6E02               	movwf	(strlen@s+1)^0,c
  2802  002E6C  EC1B  F024         	call	_strlen	;wreg free
  2803  002E70  0100               	movlb	0	; () banked
  2804  002E72  51C1               	movf	executeCommand@i_1121& (0+255),w,b
  2805  002E74  6FB6               	movwf	??_executeCommand& (0+255),b
  2806  002E76  6BB7               	clrf	(??_executeCommand+1)& (0+255),b
  2807  002E78  5001               	movf	?_strlen^0,w,c
  2808  002E7A  5DB6               	subwf	??_executeCommand& (0+255),w,b
  2809  002E7C  5002               	movf	(?_strlen+1)^0,w,c
  2810  002E7E  59B7               	subwfb	(??_executeCommand+1)& (0+255),w,b
  2811  002E80  A0D8               	btfss	status,0,c
  2812  002E82  EF45  F017         	goto	u5411
  2813  002E86  EF47  F017         	goto	u5410
  2814  002E8A                     u5411:
  2815  002E8A  EF27  F017         	goto	l5705
  2816  002E8E                     u5410:
  2817  002E8E                     l5711:
  2818                           
  2819                           ;main.c: 168:     if (memcmp(command, command20,3) == 0)
  2820  002E8E  C0B4  F001         	movff	executeCommand@command,memcmp@vl
  2821  002E92  C0B5  F002         	movff	executeCommand@command+1,memcmp@vl+1
  2822  002E96  0E68               	movlw	low _command20
  2823  002E98  6E03               	movwf	memcmp@vr^0,c
  2824  002E9A  0E01               	movlw	high _command20
  2825  002E9C  6E04               	movwf	(memcmp@vr+1)^0,c
  2826  002E9E  0E00               	movlw	0
  2827  002EA0  6E06               	movwf	(memcmp@n+1)^0,c
  2828  002EA2  0E03               	movlw	3
  2829  002EA4  6E05               	movwf	memcmp@n^0,c
  2830  002EA6  ECCB  F020         	call	_memcmp	;wreg free
  2831  002EAA  5001               	movf	?_memcmp^0,w,c
  2832  002EAC  1002               	iorwf	(?_memcmp+1)^0,w,c
  2833  002EAE  A4D8               	btfss	status,2,c
  2834  002EB0  EF5C  F017         	goto	u5421
  2835  002EB4  EF5E  F017         	goto	u5420
  2836  002EB8                     u5421:
  2837  002EB8  EF83  F017         	goto	l615
  2838  002EBC                     u5420:
  2839  002EBC                     
  2840                           ;main.c: 169:     {;main.c: 170:         for(uint8_t i = 0; i < strlen(msgOK); i++)
  2841  002EBC  0E00               	movlw	0
  2842  002EBE  0100               	movlb	0	; () banked
  2843  002EC0  6FC2               	movwf	executeCommand@i_1122& (0+255),b
  2844  002EC2  EF6E  F017         	goto	l5719
  2845  002EC6                     l5715:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;main.c: 171:         {;main.c: 172:             EUSART5_Write(msgOK[i]);
  2849  002EC6  0EFB               	movlw	low _msgOK
  2850  002EC8  25C2               	addwf	executeCommand@i_1122& (0+255),w,b
  2851  002ECA  6ED9               	movwf	fsr2l,c
  2852  002ECC  6ADA               	clrf	fsr2h,c
  2853  002ECE  0E00               	movlw	high _msgOK
  2854  002ED0  22DA               	addwfc	fsr2h,f,c
  2855  002ED2  50DF               	movf	indf2,w,c
  2856  002ED4  EC1D  F025         	call	_EUSART5_Write
  2857  002ED8                     
  2858                           ;main.c: 173:         }
  2859  002ED8  0100               	movlb	0	; () banked
  2860  002EDA  2BC2               	incf	executeCommand@i_1122& (0+255),f,b
  2861  002EDC                     l5719:
  2862                           
  2863                           ; BSR set to: 0
  2864  002EDC  0EFB               	movlw	low _msgOK
  2865  002EDE  6E01               	movwf	strlen@s^0,c
  2866  002EE0  0E00               	movlw	high _msgOK
  2867  002EE2  6E02               	movwf	(strlen@s+1)^0,c
  2868  002EE4  EC1B  F024         	call	_strlen	;wreg free
  2869  002EE8  0100               	movlb	0	; () banked
  2870  002EEA  51C2               	movf	executeCommand@i_1122& (0+255),w,b
  2871  002EEC  6FB6               	movwf	??_executeCommand& (0+255),b
  2872  002EEE  6BB7               	clrf	(??_executeCommand+1)& (0+255),b
  2873  002EF0  5001               	movf	?_strlen^0,w,c
  2874  002EF2  5DB6               	subwf	??_executeCommand& (0+255),w,b
  2875  002EF4  5002               	movf	(?_strlen+1)^0,w,c
  2876  002EF6  59B7               	subwfb	(??_executeCommand+1)& (0+255),w,b
  2877  002EF8  A0D8               	btfss	status,0,c
  2878  002EFA  EF81  F017         	goto	u5431
  2879  002EFE  EF83  F017         	goto	u5430
  2880  002F02                     u5431:
  2881  002F02  EF63  F017         	goto	l5715
  2882  002F06                     u5430:
  2883  002F06                     l615:
  2884  002F06  0012               	return		;funcret
  2885  002F08                     __end_of_executeCommand:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _strcmp *****************
  2889 ;; Defined at:
  2890 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcmp.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  l               2    0[COMRAM] PTR const unsigned char 
  2893 ;;		 -> main@command(20), 
  2894 ;;  r               2    2[COMRAM] PTR const unsigned char 
  2895 ;;		 -> command17(3), command16(3), command13(3), command12(3), 
  2896 ;;		 -> command11(4), 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  2    0[COMRAM] int 
  2901 ;; Registers used:
  2902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;Total ram usage:        6 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 2
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_executeCommand
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text8
  2923  004338                     __ptext8:
  2924                           	callstack 0
  2925  004338                     _strcmp:
  2926                           	callstack 27
  2927  004338  EFA2  F021         	goto	l5487
  2928  00433C                     l5485:
  2929  00433C  4A01               	infsnz	strcmp@l^0,f,c
  2930  00433E  2A02               	incf	(strcmp@l+1)^0,f,c
  2931  004340  4A03               	infsnz	strcmp@r^0,f,c
  2932  004342  2A04               	incf	(strcmp@r+1)^0,f,c
  2933  004344                     l5487:
  2934  004344  C003  FFD9         	movff	strcmp@r,fsr2l
  2935  004348  C004  FFDA         	movff	strcmp@r+1,fsr2h
  2936  00434C  C001  FFE1         	movff	strcmp@l,fsr1l
  2937  004350  C002  FFE2         	movff	strcmp@l+1,fsr1h
  2938  004354  50DE               	movf	postinc2,w,c
  2939  004356  18E6               	xorwf	postinc1,w,c
  2940  004358  A4D8               	btfss	status,2,c
  2941  00435A  EFB1  F021         	goto	u5221
  2942  00435E  EFB3  F021         	goto	u5220
  2943  004362                     u5221:
  2944  004362  EFBF  F021         	goto	l5491
  2945  004366                     u5220:
  2946  004366  C001  FFD9         	movff	strcmp@l,fsr2l
  2947  00436A  C002  FFDA         	movff	strcmp@l+1,fsr2h
  2948  00436E  50DF               	movf	indf2,w,c
  2949  004370  A4D8               	btfss	status,2,c
  2950  004372  EFBD  F021         	goto	u5231
  2951  004376  EFBF  F021         	goto	u5230
  2952  00437A                     u5231:
  2953  00437A  EF9E  F021         	goto	l5485
  2954  00437E                     u5230:
  2955  00437E                     l5491:
  2956  00437E  C001  FFD9         	movff	strcmp@l,fsr2l
  2957  004382  C002  FFDA         	movff	strcmp@l+1,fsr2h
  2958  004386  50DF               	movf	indf2,w,c
  2959  004388  6E05               	movwf	??_strcmp^0,c
  2960  00438A  C003  FFD9         	movff	strcmp@r,fsr2l
  2961  00438E  C004  FFDA         	movff	strcmp@r+1,fsr2h
  2962  004392  50DF               	movf	indf2,w,c
  2963  004394  6E06               	movwf	(??_strcmp+1)^0,c
  2964  004396  5006               	movf	(??_strcmp+1)^0,w,c
  2965  004398  5C05               	subwf	??_strcmp^0,w,c
  2966  00439A  6E01               	movwf	?_strcmp^0,c
  2967  00439C  6A02               	clrf	(?_strcmp+1)^0,c
  2968  00439E  A0D8               	btfss	status,0,c
  2969  0043A0  0602               	decf	(?_strcmp+1)^0,f,c
  2970  0043A2  0012               	return		;funcret
  2971  0043A4                     __end_of_strcmp:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _memcmp *****************
  2975 ;; Defined at:
  2976 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memcmp.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  vl              2    0[COMRAM] PTR const void 
  2979 ;;		 -> main@command(20), 
  2980 ;;  vr              2    2[COMRAM] PTR const void 
  2981 ;;		 -> command20(4), command14(7), 
  2982 ;;  n               2    4[COMRAM] unsigned int 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  r               2   10[COMRAM] PTR const unsigned char 
  2985 ;;		 -> command20(4), command14(7), 
  2986 ;;  l               2    8[COMRAM] PTR const unsigned char 
  2987 ;;		 -> main@command(20), 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  2    0[COMRAM] int 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2997 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2998 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3000 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;Total ram usage:       12 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 2
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_executeCommand
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text9
  3012  004196                     __ptext9:
  3013                           	callstack 0
  3014  004196                     _memcmp:
  3015                           	callstack 27
  3016  004196  C001  F009         	movff	memcmp@vl,memcmp@l
  3017  00419A  C002  F00A         	movff	memcmp@vl+1,memcmp@l+1
  3018  00419E  C003  F00B         	movff	memcmp@vr,memcmp@r
  3019  0041A2  C004  F00C         	movff	memcmp@vr+1,memcmp@r+1
  3020  0041A6  EFDC  F020         	goto	l5499
  3021  0041AA                     l5497:
  3022  0041AA  0605               	decf	memcmp@n^0,f,c
  3023  0041AC  A0D8               	btfss	status,0,c
  3024  0041AE  0606               	decf	(memcmp@n+1)^0,f,c
  3025  0041B0  4A09               	infsnz	memcmp@l^0,f,c
  3026  0041B2  2A0A               	incf	(memcmp@l+1)^0,f,c
  3027  0041B4  4A0B               	infsnz	memcmp@r^0,f,c
  3028  0041B6  2A0C               	incf	(memcmp@r+1)^0,f,c
  3029  0041B8                     l5499:
  3030  0041B8  5005               	movf	memcmp@n^0,w,c
  3031  0041BA  1006               	iorwf	(memcmp@n+1)^0,w,c
  3032  0041BC  B4D8               	btfsc	status,2,c
  3033  0041BE  EFE3  F020         	goto	u5241
  3034  0041C2  EFE5  F020         	goto	u5240
  3035  0041C6                     u5241:
  3036  0041C6  EFF6  F020         	goto	l5503
  3037  0041CA                     u5240:
  3038  0041CA  C00B  FFD9         	movff	memcmp@r,fsr2l
  3039  0041CE  C00C  FFDA         	movff	memcmp@r+1,fsr2h
  3040  0041D2  C009  FFE1         	movff	memcmp@l,fsr1l
  3041  0041D6  C00A  FFE2         	movff	memcmp@l+1,fsr1h
  3042  0041DA  50DE               	movf	postinc2,w,c
  3043  0041DC  18E6               	xorwf	postinc1,w,c
  3044  0041DE  B4D8               	btfsc	status,2,c
  3045  0041E0  EFF4  F020         	goto	u5251
  3046  0041E4  EFF6  F020         	goto	u5250
  3047  0041E8                     u5251:
  3048  0041E8  EFD5  F020         	goto	l5497
  3049  0041EC                     u5250:
  3050  0041EC                     l5503:
  3051  0041EC  5005               	movf	memcmp@n^0,w,c
  3052  0041EE  1006               	iorwf	(memcmp@n+1)^0,w,c
  3053  0041F0  A4D8               	btfss	status,2,c
  3054  0041F2  EFFD  F020         	goto	u5261
  3055  0041F6  EFFF  F020         	goto	u5260
  3056  0041FA                     u5261:
  3057  0041FA  EF05  F021         	goto	l5507
  3058  0041FE                     u5260:
  3059  0041FE  0E00               	movlw	0
  3060  004200  6E02               	movwf	(?_memcmp+1)^0,c
  3061  004202  0E00               	movlw	0
  3062  004204  6E01               	movwf	?_memcmp^0,c
  3063  004206  EF17  F021         	goto	l1781
  3064  00420A                     l5507:
  3065  00420A  C009  FFD9         	movff	memcmp@l,fsr2l
  3066  00420E  C00A  FFDA         	movff	memcmp@l+1,fsr2h
  3067  004212  50DF               	movf	indf2,w,c
  3068  004214  6E07               	movwf	??_memcmp^0,c
  3069  004216  C00B  FFD9         	movff	memcmp@r,fsr2l
  3070  00421A  C00C  FFDA         	movff	memcmp@r+1,fsr2h
  3071  00421E  50DF               	movf	indf2,w,c
  3072  004220  6E08               	movwf	(??_memcmp+1)^0,c
  3073  004222  5008               	movf	(??_memcmp+1)^0,w,c
  3074  004224  5C07               	subwf	??_memcmp^0,w,c
  3075  004226  6E01               	movwf	?_memcmp^0,c
  3076  004228  6A02               	clrf	(?_memcmp+1)^0,c
  3077  00422A  A0D8               	btfss	status,0,c
  3078  00422C  0602               	decf	(?_memcmp+1)^0,f,c
  3079  00422E                     l1781:
  3080  00422E  0012               	return		;funcret
  3081  004230                     __end_of_memcmp:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function _ConvertADCtoSend *****************
  3085 ;; Defined at:
  3086 ;;		line 69 in file "main.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  convertedVal    4   72[BANK0 ] float 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  msgValue        8   76[BANK0 ] unsigned char [8]
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  2   72[BANK0 ] PTR unsigned char 
  3093 ;; Registers used:
  3094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3100 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3101 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;Total ram usage:       12 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; Hardware stack levels required when called: 11
  3107 ;; This function calls:
  3108 ;;		_sprintf
  3109 ;; This function is called by:
  3110 ;;		_executeCommand
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text10
  3115  0048A0                     __ptext10:
  3116                           	callstack 0
  3117  0048A0                     _ConvertADCtoSend:
  3118                           	callstack 18
  3119  0048A0                     
  3120                           ;main.c: 69: uint8_t* ConvertADCtoSend(float convertedValue01);main.c: 70: {;main.c: 71:
      +                               char msgValue[8] ;;main.c: 72:     sprintf(msgValue,"%.2f" ,convertedValue01);
  3121  0048A0  0EAC               	movlw	low ConvertADCtoSend@msgValue
  3122  0048A2  0100               	movlb	0	; () banked
  3123  0048A4  6F98               	movwf	sprintf@s& (0+255),b
  3124  0048A6  0E00               	movlw	high ConvertADCtoSend@msgValue
  3125  0048A8  6F99               	movwf	(sprintf@s+1)& (0+255),b
  3126  0048AA  0E01               	movlw	low STR_1
  3127  0048AC  6F9A               	movwf	sprintf@fmt& (0+255),b
  3128  0048AE  0E0E               	movlw	high STR_1
  3129  0048B0  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  3130  0048B2  C0A8  F09C         	movff	ConvertADCtoSend@convertedValue01,?_sprintf+4
  3131  0048B6  C0A9  F09D         	movff	ConvertADCtoSend@convertedValue01+1,?_sprintf+5
  3132  0048BA  C0AA  F09E         	movff	ConvertADCtoSend@convertedValue01+2,?_sprintf+6
  3133  0048BE  C0AB  F09F         	movff	ConvertADCtoSend@convertedValue01+3,?_sprintf+7
  3134  0048C2  EC95  F022         	call	_sprintf	;wreg free
  3135  0048C6                     
  3136                           ;main.c: 73:     return msgValue;
  3137  0048C6  0EAC               	movlw	low ConvertADCtoSend@msgValue
  3138  0048C8  0100               	movlb	0	; () banked
  3139  0048CA  6FA8               	movwf	?_ConvertADCtoSend& (0+255),b
  3140  0048CC  0E00               	movlw	high ConvertADCtoSend@msgValue
  3141  0048CE  6FA9               	movwf	(?_ConvertADCtoSend+1)& (0+255),b
  3142  0048D0                     
  3143                           ; BSR set to: 0
  3144  0048D0  0012               	return		;funcret
  3145  0048D2                     __end_of_ConvertADCtoSend:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _sprintf *****************
  3149 ;; Defined at:
  3150 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  s               2   56[BANK0 ] PTR unsigned char 
  3153 ;;		 -> ConvertADCtoSend@msgValue(8), 
  3154 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  3155 ;;		 -> STR_1(5), 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  f               6   66[BANK0 ] struct _IO_FILE
  3158 ;;  ap              2   64[BANK0 ] PTR void [1]
  3159 ;;		 -> ?_sprintf(2), 
  3160 ;;  ret             2    0        int 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  2   56[BANK0 ] int 
  3163 ;; Registers used:
  3164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3170 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3171 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3174 ;;Total ram usage:       16 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; Hardware stack levels required when called: 10
  3177 ;; This function calls:
  3178 ;;		_vfprintf
  3179 ;; This function is called by:
  3180 ;;		_ConvertADCtoSend
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text11
  3185  00452A                     __ptext11:
  3186                           	callstack 0
  3187  00452A                     _sprintf:
  3188                           	callstack 18
  3189  00452A  0E9C               	movlw	low (?_sprintf+4)
  3190  00452C  0100               	movlb	0	; () banked
  3191  00452E  6FA0               	movwf	sprintf@ap& (0+255),b
  3192  004530  0E00               	movlw	high (?_sprintf+4)
  3193  004532  6FA1               	movwf	(sprintf@ap+1)& (0+255),b
  3194  004534  C098  F0A2         	movff	sprintf@s,sprintf@f
  3195  004538  C099  F0A3         	movff	sprintf@s+1,sprintf@f+1
  3196  00453C                     
  3197                           ; BSR set to: 0
  3198  00453C  0E00               	movlw	0
  3199  00453E  6FA5               	movwf	(sprintf@f+3)& (0+255),b
  3200  004540  0E00               	movlw	0
  3201  004542  6FA4               	movwf	(sprintf@f+2)& (0+255),b
  3202  004544                     
  3203                           ; BSR set to: 0
  3204  004544  0E00               	movlw	0
  3205  004546  6FA7               	movwf	(sprintf@f+5)& (0+255),b
  3206  004548  0E00               	movlw	0
  3207  00454A  6FA6               	movwf	(sprintf@f+4)& (0+255),b
  3208  00454C                     
  3209                           ; BSR set to: 0
  3210  00454C  0EA2               	movlw	low sprintf@f
  3211  00454E  6E56               	movwf	vfprintf@fp^0,c
  3212  004550  0E00               	movlw	high sprintf@f
  3213  004552  6E57               	movwf	(vfprintf@fp+1)^0,c
  3214  004554  C09A  F058         	movff	sprintf@fmt,vfprintf@fmt
  3215  004558  C09B  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3216  00455C  0EA0               	movlw	low sprintf@ap
  3217  00455E  6E5A               	movwf	vfprintf@ap^0,c
  3218  004560  0E00               	movlw	high sprintf@ap
  3219  004562  6E5B               	movwf	(vfprintf@ap+1)^0,c
  3220  004564  ECD2  F021         	call	_vfprintf	;wreg free
  3221  004568  0100               	movlb	0	; () banked
  3222  00456A  51A4               	movf	(sprintf@f+2)& (0+255),w,b
  3223  00456C  2598               	addwf	sprintf@s& (0+255),w,b
  3224  00456E  6ED9               	movwf	fsr2l,c
  3225  004570  51A5               	movf	(sprintf@f+3)& (0+255),w,b
  3226  004572  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
  3227  004574  6EDA               	movwf	fsr2h,c
  3228  004576  0E00               	movlw	0
  3229  004578  6EDF               	movwf	indf2,c
  3230  00457A                     
  3231                           ; BSR set to: 0
  3232  00457A  0012               	return		;funcret
  3233  00457C                     __end_of_sprintf:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function _vfprintf *****************
  3237 ;; Defined at:
  3238 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  3241 ;;		 -> sprintf@f(6), 
  3242 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  3243 ;;		 -> STR_1(5), 
  3244 ;;  ap              2   89[COMRAM] PTR PTR void 
  3245 ;;		 -> sprintf@ap(2), 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  3248 ;;		 -> STR_1(5), 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  2   85[COMRAM] int 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3258 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3261 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3262 ;;Total ram usage:        8 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; Hardware stack levels required when called: 9
  3265 ;; This function calls:
  3266 ;;		_vfpfcnvrt
  3267 ;; This function is called by:
  3268 ;;		_sprintf
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text12
  3273  0043A4                     __ptext12:
  3274                           	callstack 0
  3275  0043A4                     _vfprintf:
  3276                           	callstack 18
  3277  0043A4                     
  3278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3279  0043A4  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  3280  0043A8  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3281  0043AC                     
  3282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3283  0043AC  0E00               	movlw	0
  3284  0043AE  0100               	movlb	0	; () banked
  3285  0043B0  6FEE               	movwf	(_nout+1)& (0+255),b
  3286  0043B2  0E00               	movlw	0
  3287  0043B4  6FED               	movwf	_nout& (0+255),b
  3288                           
  3289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3290  0043B6  EFF0  F021         	goto	l5387
  3291  0043BA                     l5385:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3295  0043BA  C056  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3296  0043BE  C057  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3297  0043C2  0E5C               	movlw	low vfprintf@cfmt
  3298  0043C4  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3299  0043C6  0E00               	movlw	high vfprintf@cfmt
  3300  0043C8  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3301  0043CA  C05A  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3302  0043CE  C05B  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3303  0043D2  EC99  F00F         	call	_vfpfcnvrt	;wreg free
  3304  0043D6  5040               	movf	?_vfpfcnvrt^0,w,c
  3305  0043D8  0100               	movlb	0	; () banked
  3306  0043DA  27ED               	addwf	_nout& (0+255),f,b
  3307  0043DC  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3308  0043DE  23EE               	addwfc	(_nout+1)& (0+255),f,b
  3309  0043E0                     l5387:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3313  0043E0  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3314  0043E4  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3315  0043E8                     	if	0	;tblptru may be non-zero
  3316  0043E8                     	endif
  3317  0043E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3318  0043E8  0E00               	movlw	low (__mediumconst shr (0+16))
  3319  0043EA  6EF8               	movwf	tblptru,c
  3320  0043EC                     	endif
  3321  0043EC  0008               	tblrd		*
  3322  0043EE  50F5               	movf	tablat,w,c
  3323  0043F0  0900               	iorlw	0
  3324  0043F2  A4D8               	btfss	status,2,c
  3325  0043F4  EFFE  F021         	goto	u5211
  3326  0043F8  EF00  F022         	goto	u5210
  3327  0043FC                     u5211:
  3328  0043FC  EFDD  F021         	goto	l5385
  3329  004400                     u5210:
  3330  004400                     
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3333  004400  C0ED  F056         	movff	_nout,?_vfprintf
  3334  004404  C0EE  F057         	movff	_nout+1,?_vfprintf+1
  3335  004408                     
  3336                           ; BSR set to: 0
  3337  004408  0012               	return		;funcret
  3338  00440A                     __end_of_vfprintf:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function _vfpfcnvrt *****************
  3342 ;; Defined at:
  3343 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3346 ;;		 -> sprintf@f(6), 
  3347 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3348 ;;		 -> vfprintf@cfmt(2), 
  3349 ;;  ap              2   67[COMRAM] PTR PTR void 
  3350 ;;		 -> sprintf@ap(2), 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  llu             8    0        unsigned long long 
  3353 ;;  ll              8    0        long long 
  3354 ;;  f               4   77[COMRAM] long long 
  3355 ;;  ct              3   81[COMRAM] unsigned char [3]
  3356 ;;  vp              3    0        PTR void 
  3357 ;;  cp              3    0        PTR unsigned char 
  3358 ;;  i               2    0        int 
  3359 ;;  done            2    0        int 
  3360 ;;  c               1   84[COMRAM] unsigned char 
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  2   63[COMRAM] int 
  3363 ;; Registers used:
  3364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3370 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;Total ram usage:       22 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 8
  3377 ;; This function calls:
  3378 ;;		_atoi
  3379 ;;		_efgtoa
  3380 ;;		_fputc
  3381 ;;		_isdigit
  3382 ;;		_isupper
  3383 ;;		_strncmp
  3384 ;;		_tolower
  3385 ;; This function is called by:
  3386 ;;		_vfprintf
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text13
  3391  001F32                     __ptext13:
  3392                           	callstack 0
  3393  001F32                     _vfpfcnvrt:
  3394                           	callstack 18
  3395  001F32                     
  3396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3397  001F32  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3398  001F36  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3399  001F3A  CFDE FFF6          	movff	postinc2,tblptrl
  3400  001F3E  CFDD FFF7          	movff	postdec2,tblptrh
  3401  001F42                     	if	0	;tblptru may be non-zero
  3402  001F42                     	endif
  3403  001F42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3404  001F42  0E00               	movlw	low (__mediumconst shr (0+16))
  3405  001F44  6EF8               	movwf	tblptru,c
  3406  001F46                     	endif
  3407  001F46  0008               	tblrd		*
  3408  001F48  50F5               	movf	tablat,w,c
  3409  001F4A  0A25               	xorlw	37
  3410  001F4C  A4D8               	btfss	status,2,c
  3411  001F4E  EFAB  F00F         	goto	u4961
  3412  001F52  EFAD  F00F         	goto	u4960
  3413  001F56                     u4961:
  3414  001F56  EFC3  F011         	goto	l5315
  3415  001F5A                     u4960:
  3416  001F5A                     
  3417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3418  001F5A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3419  001F5E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3420  001F62  2ADE               	incf	postinc2,f,c
  3421  001F64  0E00               	movlw	0
  3422  001F66  22DD               	addwfc	postdec2,f,c
  3423  001F68                     
  3424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3425  001F68  0E00               	movlw	0
  3426  001F6A  0100               	movlb	0	; () banked
  3427  001F6C  6FF0               	movwf	(_width+1)& (0+255),b
  3428  001F6E  0E00               	movlw	0
  3429  001F70  6FEF               	movwf	_width& (0+255),b
  3430  001F72  C0EF  F0F3         	movff	_width,_flags
  3431  001F76  C0F0  F0F4         	movff	_width+1,_flags+1
  3432  001F7A                     
  3433                           ; BSR set to: 0
  3434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3435  001F7A  69F1               	setf	_prec& (0+255),b
  3436  001F7C  69F2               	setf	(_prec+1)& (0+255),b
  3437  001F7E                     
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3440  001F7E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3441  001F82  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3442  001F86  CFDE FFF6          	movff	postinc2,tblptrl
  3443  001F8A  CFDD FFF7          	movff	postdec2,tblptrh
  3444  001F8E                     	if	0	;tblptru may be non-zero
  3445  001F8E                     	endif
  3446  001F8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3447  001F8E  0E00               	movlw	low (__mediumconst shr (0+16))
  3448  001F90  6EF8               	movwf	tblptru,c
  3449  001F92                     	endif
  3450  001F92  0008               	tblrd		*
  3451  001F94  50F5               	movf	tablat,w,c
  3452  001F96  0A2E               	xorlw	46
  3453  001F98  A4D8               	btfss	status,2,c
  3454  001F9A  EFD1  F00F         	goto	u4971
  3455  001F9E  EFD3  F00F         	goto	u4970
  3456  001FA2                     u4971:
  3457  001FA2  EF54  F010         	goto	l5261
  3458  001FA6                     u4970:
  3459  001FA6                     
  3460                           ; BSR set to: 0
  3461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3462  001FA6  0E00               	movlw	0
  3463  001FA8  6FF2               	movwf	(_prec+1)& (0+255),b
  3464  001FAA  0E00               	movlw	0
  3465  001FAC  6FF1               	movwf	_prec& (0+255),b
  3466  001FAE                     
  3467                           ; BSR set to: 0
  3468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3469  001FAE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3470  001FB2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3471  001FB6  2ADE               	incf	postinc2,f,c
  3472  001FB8  0E00               	movlw	0
  3473  001FBA  22DD               	addwfc	postdec2,f,c
  3474  001FBC                     
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3477  001FBC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3478  001FC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3479  001FC4  CFDE FFF6          	movff	postinc2,tblptrl
  3480  001FC8  CFDD FFF7          	movff	postdec2,tblptrh
  3481  001FCC                     	if	0	;tblptru may be non-zero
  3482  001FCC                     	endif
  3483  001FCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3484  001FCC  0E00               	movlw	low (__mediumconst shr (0+16))
  3485  001FCE  6EF8               	movwf	tblptru,c
  3486  001FD0                     	endif
  3487  001FD0  0008               	tblrd		*
  3488  001FD2  50F5               	movf	tablat,w,c
  3489  001FD4  0A2A               	xorlw	42
  3490  001FD6  A4D8               	btfss	status,2,c
  3491  001FD8  EFF0  F00F         	goto	u4981
  3492  001FDC  EFF2  F00F         	goto	u4980
  3493  001FE0                     u4981:
  3494  001FE0  EF0F  F010         	goto	l5251
  3495  001FE4                     u4980:
  3496  001FE4                     
  3497                           ; BSR set to: 0
  3498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3499  001FE4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3500  001FE8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3501  001FEC  2ADE               	incf	postinc2,f,c
  3502  001FEE  0E00               	movlw	0
  3503  001FF0  22DD               	addwfc	postdec2,f,c
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3506  001FF2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3507  001FF6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3508  001FFA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3509  001FFE  0E02               	movlw	2
  3510  002000  26DE               	addwf	postinc2,f,c
  3511  002002  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3512  002006  0E00               	movlw	0
  3513  002008  22DD               	addwfc	postdec2,f,c
  3514  00200A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3515  00200E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3516  002012  CFDE F0F1          	movff	postinc2,_prec
  3517  002016  CFDD F0F2          	movff	postdec2,_prec+1
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3520  00201A  EF54  F010         	goto	l5261
  3521  00201E                     l5251:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3525  00201E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3526  002022  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3527  002026  CFDE F008          	movff	postinc2,atoi@s
  3528  00202A  CFDD F009          	movff	postdec2,atoi@s+1
  3529  00202E  EC67  F019         	call	_atoi	;wreg free
  3530  002032  C008  F0F1         	movff	?_atoi,_prec
  3531  002036  C009  F0F2         	movff	?_atoi+1,_prec+1
  3532                           
  3533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3534  00203A  EF26  F010         	goto	l5255
  3535  00203E                     l5253:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3538  00203E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3539  002042  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3540  002046  2ADE               	incf	postinc2,f,c
  3541  002048  0E00               	movlw	0
  3542  00204A  22DD               	addwfc	postdec2,f,c
  3543  00204C                     l5255:
  3544  00204C  0ED0               	movlw	208
  3545  00204E  6E46               	movwf	??_vfpfcnvrt^0,c
  3546  002050  0EFF               	movlw	255
  3547  002052  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  3548  002054  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3549  002058  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3550  00205C  CFDE FFF6          	movff	postinc2,tblptrl
  3551  002060  CFDD FFF7          	movff	postdec2,tblptrh
  3552  002064                     	if	0	;tblptru may be non-zero
  3553  002064                     	endif
  3554  002064                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3555  002064  0E00               	movlw	low (__mediumconst shr (0+16))
  3556  002066  6EF8               	movwf	tblptru,c
  3557  002068                     	endif
  3558  002068  0008               	tblrd		*
  3559  00206A  50F5               	movf	tablat,w,c
  3560  00206C  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  3561  00206E  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  3562  002070  5046               	movf	??_vfpfcnvrt^0,w,c
  3563  002072  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3564  002074  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  3565  002076  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3566  002078  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  3567  00207A  E10A               	bnz	u4990
  3568  00207C  0E0A               	movlw	10
  3569  00207E  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3570  002080  A0D8               	btfss	status,0,c
  3571  002082  EF45  F010         	goto	u4991
  3572  002086  EF48  F010         	goto	u4990
  3573  00208A                     u4991:
  3574  00208A  0E01               	movlw	1
  3575  00208C  EF49  F010         	goto	u5000
  3576  002090                     u4990:
  3577  002090  0E00               	movlw	0
  3578  002092                     u5000:
  3579  002092  6E4A               	movwf	_vfpfcnvrt$2055^0,c
  3580  002094  6A4B               	clrf	(_vfpfcnvrt$2055+1)^0,c
  3581  002096  504A               	movf	_vfpfcnvrt$2055^0,w,c
  3582  002098  104B               	iorwf	(_vfpfcnvrt$2055+1)^0,w,c
  3583  00209A  A4D8               	btfss	status,2,c
  3584  00209C  EF52  F010         	goto	u5011
  3585  0020A0  EF54  F010         	goto	u5010
  3586  0020A4                     u5011:
  3587  0020A4  EF1F  F010         	goto	l5253
  3588  0020A8                     u5010:
  3589  0020A8                     l5261:
  3590                           
  3591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3592  0020A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3593  0020AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3594  0020B0  CFDE FFF6          	movff	postinc2,tblptrl
  3595  0020B4  CFDD FFF7          	movff	postdec2,tblptrh
  3596  0020B8                     	if	0	;tblptru may be non-zero
  3597  0020B8                     	endif
  3598  0020B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3599  0020B8  0E00               	movlw	low (__mediumconst shr (0+16))
  3600  0020BA  6EF8               	movwf	tblptru,c
  3601  0020BC                     	endif
  3602  0020BC  0008               	tblrd		*
  3603  0020BE  50F5               	movf	tablat,w,c
  3604  0020C0  6E07               	movwf	tolower@c^0,c
  3605  0020C2  6A08               	clrf	(tolower@c+1)^0,c
  3606  0020C4  EC36  F022         	call	_tolower	;wreg free
  3607  0020C8  5007               	movf	?_tolower^0,w,c
  3608  0020CA  6E52               	movwf	vfpfcnvrt@ct^0,c
  3609  0020CC                     
  3610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3611  0020CC  5052               	movf	vfpfcnvrt@ct^0,w,c
  3612  0020CE  B4D8               	btfsc	status,2,c
  3613  0020D0  EF6C  F010         	goto	u5021
  3614  0020D4  EF6E  F010         	goto	u5020
  3615  0020D8                     u5021:
  3616  0020D8  EFAA  F010         	goto	l5271
  3617  0020DC                     u5020:
  3618  0020DC                     
  3619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3620  0020DC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3621  0020E0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3622  0020E4  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3623  0020E8  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3624  0020EC  0E01               	movlw	1
  3625  0020EE  2646               	addwf	??_vfpfcnvrt^0,f,c
  3626  0020F0  0E00               	movlw	0
  3627  0020F2  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3628  0020F4  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3629  0020F8  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3630  0020FC                     	if	0	;tblptru may be non-zero
  3631  0020FC                     	endif
  3632  0020FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3633  0020FC  0E00               	movlw	low (__mediumconst shr (0+16))
  3634  0020FE  6EF8               	movwf	tblptru,c
  3635  002100                     	endif
  3636  002100  0008               	tblrd		*
  3637  002102  50F5               	movf	tablat,w,c
  3638  002104  6E07               	movwf	tolower@c^0,c
  3639  002106  6A08               	clrf	(tolower@c+1)^0,c
  3640  002108  EC36  F022         	call	_tolower	;wreg free
  3641  00210C  5007               	movf	?_tolower^0,w,c
  3642  00210E  6E53               	movwf	(vfpfcnvrt@ct+1)^0,c
  3643  002110                     
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3645  002110  5053               	movf	(vfpfcnvrt@ct+1)^0,w,c
  3646  002112  B4D8               	btfsc	status,2,c
  3647  002114  EF8E  F010         	goto	u5031
  3648  002118  EF90  F010         	goto	u5030
  3649  00211C                     u5031:
  3650  00211C  EFAA  F010         	goto	l5271
  3651  002120                     u5030:
  3652  002120                     
  3653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3654  002120  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3655  002124  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3656  002128  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3657  00212C  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3658  002130  0E02               	movlw	2
  3659  002132  2646               	addwf	??_vfpfcnvrt^0,f,c
  3660  002134  0E00               	movlw	0
  3661  002136  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3662  002138  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3663  00213C  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3664  002140                     	if	0	;tblptru may be non-zero
  3665  002140                     	endif
  3666  002140                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3667  002140  0E00               	movlw	low (__mediumconst shr (0+16))
  3668  002142  6EF8               	movwf	tblptru,c
  3669  002144                     	endif
  3670  002144  0008               	tblrd		*
  3671  002146  50F5               	movf	tablat,w,c
  3672  002148  6E07               	movwf	tolower@c^0,c
  3673  00214A  6A08               	clrf	(tolower@c+1)^0,c
  3674  00214C  EC36  F022         	call	_tolower	;wreg free
  3675  002150  5007               	movf	?_tolower^0,w,c
  3676  002152  6E54               	movwf	(vfpfcnvrt@ct+2)^0,c
  3677  002154                     l5271:
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3680  002154  0E66               	movlw	102
  3681  002156  1852               	xorwf	vfpfcnvrt@ct^0,w,c
  3682  002158  A4D8               	btfss	status,2,c
  3683  00215A  EFB1  F010         	goto	u5041
  3684  00215E  EFB3  F010         	goto	u5040
  3685  002162                     u5041:
  3686  002162  EFF5  F010         	goto	l5283
  3687  002166                     u5040:
  3688  002166                     
  3689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3690  002166  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3691  00216A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3692  00216E  CFDE FFF6          	movff	postinc2,tblptrl
  3693  002172  CFDD FFF7          	movff	postdec2,tblptrh
  3694  002176                     	if	0	;tblptru may be non-zero
  3695  002176                     	endif
  3696  002176                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3697  002176  0E00               	movlw	low (__mediumconst shr (0+16))
  3698  002178  6EF8               	movwf	tblptru,c
  3699  00217A                     	endif
  3700  00217A  0008               	tblrd		*
  3701  00217C  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  3702  002180                     
  3703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3704  002180  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3705  002184  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3706  002188  2ADE               	incf	postinc2,f,c
  3707  00218A  0E00               	movlw	0
  3708  00218C  22DD               	addwfc	postdec2,f,c
  3709  00218E                     
  3710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3711  00218E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3712  002192  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3713  002196  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3714  00219A  0E04               	movlw	4
  3715  00219C  26DE               	addwf	postinc2,f,c
  3716  00219E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3717  0021A2  0E00               	movlw	0
  3718  0021A4  22DD               	addwfc	postdec2,f,c
  3719  0021A6  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3720  0021AA  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3721  0021AE  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  3722  0021B2  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  3723  0021B6  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  3724  0021BA  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  3725  0021BE                     l5279:
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3728  0021BE  C040  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  3729  0021C2  C041  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3730  0021C6  C04E  F036         	movff	vfpfcnvrt@f,efgtoa@f
  3731  0021CA  C04F  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3732  0021CE  C050  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3733  0021D2  C051  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3734  0021D6  C055  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  3735  0021DA  EC0D  F007         	call	_efgtoa	;wreg free
  3736  0021DE  C034  F040         	movff	?_efgtoa,?_vfpfcnvrt
  3737  0021E2  C035  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3738  0021E6  EFE0  F011         	goto	l1944
  3739  0021EA                     l5283:
  3740                           
  3741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3742  0021EA  0E52               	movlw	low vfpfcnvrt@ct
  3743  0021EC  6E01               	movwf	strncmp@_l^0,c
  3744  0021EE  0E00               	movlw	high vfpfcnvrt@ct
  3745  0021F0  6E02               	movwf	(strncmp@_l+1)^0,c
  3746  0021F2  0E16               	movlw	low STR_10
  3747  0021F4  6E03               	movwf	strncmp@_r^0,c
  3748  0021F6  0E0E               	movlw	high STR_10
  3749  0021F8  6E04               	movwf	(strncmp@_r+1)^0,c
  3750  0021FA  0E00               	movlw	0
  3751  0021FC  6E06               	movwf	(strncmp@n+1)^0,c
  3752  0021FE  0E02               	movlw	2
  3753  002200  6E05               	movwf	strncmp@n^0,c
  3754  002202  EC22  F01E         	call	_strncmp	;wreg free
  3755  002206  5001               	movf	?_strncmp^0,w,c
  3756  002208  1002               	iorwf	(?_strncmp+1)^0,w,c
  3757  00220A  A4D8               	btfss	status,2,c
  3758  00220C  EF0A  F011         	goto	u5051
  3759  002210  EF0C  F011         	goto	u5050
  3760  002214                     u5051:
  3761  002214  EF8B  F011         	goto	l5299
  3762  002218                     u5050:
  3763  002218                     
  3764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3765  002218  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3766  00221C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3767  002220  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3768  002224  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3769  002228  0E01               	movlw	1
  3770  00222A  2646               	addwf	??_vfpfcnvrt^0,f,c
  3771  00222C  0E00               	movlw	0
  3772  00222E  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3773  002230  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3774  002234  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3775  002238                     	if	0	;tblptru may be non-zero
  3776  002238                     	endif
  3777  002238                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3778  002238  0E00               	movlw	low (__mediumconst shr (0+16))
  3779  00223A  6EF8               	movwf	tblptru,c
  3780  00223C                     	endif
  3781  00223C  0008               	tblrd		*
  3782  00223E  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  3783  002242  0EBF               	movlw	191
  3784  002244  6E46               	movwf	??_vfpfcnvrt^0,c
  3785  002246  0EFF               	movlw	255
  3786  002248  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  3787  00224A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3788  00224E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3789  002252  CFDE FFF6          	movff	postinc2,tblptrl
  3790  002256  CFDD FFF7          	movff	postdec2,tblptrh
  3791  00225A                     	if	0	;tblptru may be non-zero
  3792  00225A                     	endif
  3793  00225A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3794  00225A  0E00               	movlw	low (__mediumconst shr (0+16))
  3795  00225C  6EF8               	movwf	tblptru,c
  3796  00225E                     	endif
  3797  00225E  0008               	tblrd		*
  3798  002260  50F5               	movf	tablat,w,c
  3799  002262  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  3800  002264  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  3801  002266  5046               	movf	??_vfpfcnvrt^0,w,c
  3802  002268  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3803  00226A  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  3804  00226C  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3805  00226E  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  3806  002270  E10A               	bnz	u5060
  3807  002272  0E1A               	movlw	26
  3808  002274  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3809  002276  A0D8               	btfss	status,0,c
  3810  002278  EF40  F011         	goto	u5061
  3811  00227C  EF43  F011         	goto	u5060
  3812  002280                     u5061:
  3813  002280  0E01               	movlw	1
  3814  002282  EF44  F011         	goto	u5070
  3815  002286                     u5060:
  3816  002286  0E00               	movlw	0
  3817  002288                     u5070:
  3818  002288  6E4C               	movwf	_vfpfcnvrt$2059^0,c
  3819  00228A  6A4D               	clrf	(_vfpfcnvrt$2059+1)^0,c
  3820  00228C  504C               	movf	_vfpfcnvrt$2059^0,w,c
  3821  00228E  104D               	iorwf	(_vfpfcnvrt$2059+1)^0,w,c
  3822  002290  B4D8               	btfsc	status,2,c
  3823  002292  EF4D  F011         	goto	u5081
  3824  002296  EF4F  F011         	goto	u5080
  3825  00229A                     u5081:
  3826  00229A  EF69  F011         	goto	l5293
  3827  00229E                     u5080:
  3828  00229E                     
  3829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3830  00229E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3831  0022A2  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3832  0022A6  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3833  0022AA  0E04               	movlw	4
  3834  0022AC  26DE               	addwf	postinc2,f,c
  3835  0022AE  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3836  0022B2  0E00               	movlw	0
  3837  0022B4  22DD               	addwfc	postdec2,f,c
  3838  0022B6  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3839  0022BA  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3840  0022BE  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  3841  0022C2  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  3842  0022C6  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  3843  0022CA  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3846  0022CE  EF81  F011         	goto	l1951
  3847  0022D2                     l5293:
  3848                           
  3849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3850  0022D2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3851  0022D6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3852  0022DA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3853  0022DE  0E04               	movlw	4
  3854  0022E0  26DE               	addwf	postinc2,f,c
  3855  0022E2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3856  0022E6  0E00               	movlw	0
  3857  0022E8  22DD               	addwfc	postdec2,f,c
  3858  0022EA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3859  0022EE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3860  0022F2  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  3861  0022F6  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  3862  0022FA  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  3863  0022FE  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  3864  002302                     l1951:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3867  002302  0E02               	movlw	2
  3868  002304  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3869  002308  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3870  00230C  26DE               	addwf	postinc2,f,c
  3871  00230E  0E00               	movlw	0
  3872  002310  22DD               	addwfc	postdec2,f,c
  3873  002312  EFDF  F010         	goto	l5279
  3874  002316                     l5299:
  3875                           
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3877  002316  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3878  00231A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3879  00231E  CFDE FFF6          	movff	postinc2,tblptrl
  3880  002322  CFDD FFF7          	movff	postdec2,tblptrh
  3881  002326                     	if	0	;tblptru may be non-zero
  3882  002326                     	endif
  3883  002326                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3884  002326  0E00               	movlw	low (__mediumconst shr (0+16))
  3885  002328  6EF8               	movwf	tblptru,c
  3886  00232A                     	endif
  3887  00232A  0008               	tblrd		*
  3888  00232C  50F5               	movf	tablat,w,c
  3889  00232E  0A25               	xorlw	37
  3890  002330  A4D8               	btfss	status,2,c
  3891  002332  EF9D  F011         	goto	u5091
  3892  002336  EF9F  F011         	goto	u5090
  3893  00233A                     u5091:
  3894  00233A  EFB6  F011         	goto	l5309
  3895  00233E                     u5090:
  3896  00233E                     
  3897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3898  00233E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3899  002342  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3900  002346  2ADE               	incf	postinc2,f,c
  3901  002348  0E00               	movlw	0
  3902  00234A  22DD               	addwfc	postdec2,f,c
  3903  00234C                     
  3904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3905  00234C  0E00               	movlw	0
  3906  00234E  6E04               	movwf	(fputc@c+1)^0,c
  3907  002350  0E25               	movlw	37
  3908  002352  6E03               	movwf	fputc@c^0,c
  3909  002354  C040  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3910  002358  C041  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3911  00235C  EC93  F01E         	call	_fputc	;wreg free
  3912  002360                     l5305:
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3915  002360  0E00               	movlw	0
  3916  002362  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3917  002364  0E01               	movlw	1
  3918  002366  6E40               	movwf	?_vfpfcnvrt^0,c
  3919  002368  EFE0  F011         	goto	l1944
  3920  00236C                     l5309:
  3921                           
  3922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3923  00236C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3924  002370  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3925  002374  2ADE               	incf	postinc2,f,c
  3926  002376  0E00               	movlw	0
  3927  002378  22DD               	addwfc	postdec2,f,c
  3928  00237A                     
  3929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3930  00237A  0E00               	movlw	0
  3931  00237C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3932  00237E  0E00               	movlw	0
  3933  002380  6E40               	movwf	?_vfpfcnvrt^0,c
  3934  002382  EFE0  F011         	goto	l1944
  3935  002386                     l5315:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3938  002386  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3939  00238A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3940  00238E  CFDE FFF6          	movff	postinc2,tblptrl
  3941  002392  CFDD FFF7          	movff	postdec2,tblptrh
  3942  002396                     	if	0	;tblptru may be non-zero
  3943  002396                     	endif
  3944  002396                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3945  002396  0E00               	movlw	low (__mediumconst shr (0+16))
  3946  002398  6EF8               	movwf	tblptru,c
  3947  00239A                     	endif
  3948  00239A  0008               	tblrd		*
  3949  00239C  50F5               	movf	tablat,w,c
  3950  00239E  6E03               	movwf	fputc@c^0,c
  3951  0023A0  6A04               	clrf	(fputc@c+1)^0,c
  3952  0023A2  C040  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3953  0023A6  C041  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3954  0023AA  EC93  F01E         	call	_fputc	;wreg free
  3955  0023AE                     
  3956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3957  0023AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3958  0023B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3959  0023B6  2ADE               	incf	postinc2,f,c
  3960  0023B8  0E00               	movlw	0
  3961  0023BA  22DD               	addwfc	postdec2,f,c
  3962  0023BC  EFB0  F011         	goto	l5305
  3963  0023C0                     l1944:
  3964  0023C0  0012               	return		;funcret
  3965  0023C2                     __end_of_vfpfcnvrt:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _strncmp *****************
  3969 ;; Defined at:
  3970 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3973 ;;		 -> vfpfcnvrt@ct(3), 
  3974 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3975 ;;		 -> STR_12(3), 
  3976 ;;  n               2    4[COMRAM] unsigned int 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3979 ;;		 -> STR_12(3), 
  3980 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3981 ;;		 -> vfpfcnvrt@ct(3), 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  2    0[COMRAM] int 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3991 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3992 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3994 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3995 ;;Total ram usage:       11 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; Hardware stack levels required when called: 2
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_vfpfcnvrt
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text14
  4006  003C44                     __ptext14:
  4007                           	callstack 0
  4008  003C44                     _strncmp:
  4009                           	callstack 23
  4010  003C44  C001  F008         	movff	strncmp@_l,strncmp@l
  4011  003C48  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4012  003C4C  C003  F00A         	movff	strncmp@_r,strncmp@r
  4013  003C50  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4014  003C54  0605               	decf	strncmp@n^0,f,c
  4015  003C56  A0D8               	btfss	status,0,c
  4016  003C58  0606               	decf	(strncmp@n+1)^0,f,c
  4017  003C5A  2805               	incf	strncmp@n^0,w,c
  4018  003C5C  E106               	bnz	u4911
  4019  003C5E  2806               	incf	(strncmp@n+1)^0,w,c
  4020  003C60  A4D8               	btfss	status,2,c
  4021  003C62  EF35  F01E         	goto	u4911
  4022  003C66  EF37  F01E         	goto	u4910
  4023  003C6A                     u4911:
  4024  003C6A  EF44  F01E         	goto	l5221
  4025  003C6E                     u4910:
  4026  003C6E  0E00               	movlw	0
  4027  003C70  6E02               	movwf	(?_strncmp+1)^0,c
  4028  003C72  0E00               	movlw	0
  4029  003C74  6E01               	movwf	?_strncmp^0,c
  4030  003C76  EF92  F01E         	goto	l2077
  4031  003C7A                     l5219:
  4032  003C7A  4A08               	infsnz	strncmp@l^0,f,c
  4033  003C7C  2A09               	incf	(strncmp@l+1)^0,f,c
  4034  003C7E  4A0A               	infsnz	strncmp@r^0,f,c
  4035  003C80  2A0B               	incf	(strncmp@r+1)^0,f,c
  4036  003C82  0605               	decf	strncmp@n^0,f,c
  4037  003C84  A0D8               	btfss	status,0,c
  4038  003C86  0606               	decf	(strncmp@n+1)^0,f,c
  4039  003C88                     l5221:
  4040  003C88  C008  FFD9         	movff	strncmp@l,fsr2l
  4041  003C8C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4042  003C90  50DF               	movf	indf2,w,c
  4043  003C92  B4D8               	btfsc	status,2,c
  4044  003C94  EF4E  F01E         	goto	u4921
  4045  003C98  EF50  F01E         	goto	u4920
  4046  003C9C                     u4921:
  4047  003C9C  EF7F  F01E         	goto	l5229
  4048  003CA0                     u4920:
  4049  003CA0  C00A  FFF6         	movff	strncmp@r,tblptrl
  4050  003CA4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4051  003CA8                     	if	0	;tblptru may be non-zero
  4052  003CA8                     	endif
  4053  003CA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4054  003CA8  0E00               	movlw	low (__mediumconst shr (0+16))
  4055  003CAA  6EF8               	movwf	tblptru,c
  4056  003CAC                     	endif
  4057  003CAC  0008               	tblrd		*
  4058  003CAE  50F5               	movf	tablat,w,c
  4059  003CB0  0900               	iorlw	0
  4060  003CB2  B4D8               	btfsc	status,2,c
  4061  003CB4  EF5E  F01E         	goto	u4931
  4062  003CB8  EF60  F01E         	goto	u4930
  4063  003CBC                     u4931:
  4064  003CBC  EF7F  F01E         	goto	l5229
  4065  003CC0                     u4930:
  4066  003CC0  5005               	movf	strncmp@n^0,w,c
  4067  003CC2  1006               	iorwf	(strncmp@n+1)^0,w,c
  4068  003CC4  B4D8               	btfsc	status,2,c
  4069  003CC6  EF67  F01E         	goto	u4941
  4070  003CCA  EF69  F01E         	goto	u4940
  4071  003CCE                     u4941:
  4072  003CCE  EF7F  F01E         	goto	l5229
  4073  003CD2                     u4940:
  4074  003CD2  C008  FFD9         	movff	strncmp@l,fsr2l
  4075  003CD6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4076  003CDA  50DF               	movf	indf2,w,c
  4077  003CDC  6E07               	movwf	??_strncmp^0,c
  4078  003CDE  C00A  FFF6         	movff	strncmp@r,tblptrl
  4079  003CE2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4080  003CE6                     	if	0	;tblptru may be non-zero
  4081  003CE6                     	endif
  4082  003CE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4083  003CE6  0E00               	movlw	low (__mediumconst shr (0+16))
  4084  003CE8  6EF8               	movwf	tblptru,c
  4085  003CEA                     	endif
  4086  003CEA  0008               	tblrd		*
  4087  003CEC  50F5               	movf	tablat,w,c
  4088  003CEE  1807               	xorwf	??_strncmp^0,w,c
  4089  003CF0  B4D8               	btfsc	status,2,c
  4090  003CF2  EF7D  F01E         	goto	u4951
  4091  003CF6  EF7F  F01E         	goto	u4950
  4092  003CFA                     u4951:
  4093  003CFA  EF3D  F01E         	goto	l5219
  4094  003CFE                     u4950:
  4095  003CFE                     l5229:
  4096  003CFE  C008  FFD9         	movff	strncmp@l,fsr2l
  4097  003D02  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4098  003D06  50DF               	movf	indf2,w,c
  4099  003D08  6E07               	movwf	??_strncmp^0,c
  4100  003D0A  C00A  FFF6         	movff	strncmp@r,tblptrl
  4101  003D0E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4102  003D12                     	if	0	;tblptru may be non-zero
  4103  003D12                     	endif
  4104  003D12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4105  003D12  0E00               	movlw	low (__mediumconst shr (0+16))
  4106  003D14  6EF8               	movwf	tblptru,c
  4107  003D16                     	endif
  4108  003D16  0008               	tblrd		*
  4109  003D18  50F5               	movf	tablat,w,c
  4110  003D1A  5C07               	subwf	??_strncmp^0,w,c
  4111  003D1C  6E01               	movwf	?_strncmp^0,c
  4112  003D1E  6A02               	clrf	(?_strncmp+1)^0,c
  4113  003D20  A0D8               	btfss	status,0,c
  4114  003D22  0602               	decf	(?_strncmp+1)^0,f,c
  4115  003D24                     l2077:
  4116  003D24  0012               	return		;funcret
  4117  003D26                     __end_of_strncmp:
  4118                           	callstack 0
  4119                           
  4120 ;; *************** function _efgtoa *****************
  4121 ;; Defined at:
  4122 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  4125 ;;		 -> sprintf@f(6), 
  4126 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  4127 ;;  c               1   57[COMRAM] unsigned char 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  u               4   52[BANK0 ] unsigned char 
  4130 ;;  g               4   44[BANK0 ] unsigned char 
  4131 ;;  l               4   38[BANK0 ] unsigned char 
  4132 ;;  h               4   34[BANK0 ] unsigned char 
  4133 ;;  ou              4   20[BANK0 ] unsigned char 
  4134 ;;  n               2   50[BANK0 ] int 
  4135 ;;  e               2   48[BANK0 ] int 
  4136 ;;  i               2   42[BANK0 ] int 
  4137 ;;  w               2   30[BANK0 ] int 
  4138 ;;  p               2   28[BANK0 ] int 
  4139 ;;  sign            2   26[BANK0 ] int 
  4140 ;;  d               2   24[BANK0 ] int 
  4141 ;;  m               2   18[BANK0 ] int 
  4142 ;;  ne              2   16[BANK0 ] int 
  4143 ;;  pp              2   14[BANK0 ] int 
  4144 ;;  t               2   12[BANK0 ] int 
  4145 ;;  mode            1   33[BANK0 ] unsigned char 
  4146 ;;  nmode           1   32[BANK0 ] unsigned char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  2   51[COMRAM] int 
  4149 ;; Registers used:
  4150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4156 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4157 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4160 ;;Total ram usage:       68 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 7
  4163 ;; This function calls:
  4164 ;;		___awdiv
  4165 ;;		___awmod
  4166 ;;		___fladd
  4167 ;;		___fldiv
  4168 ;;		___fleq
  4169 ;;		___flge
  4170 ;;		___flmul
  4171 ;;		___flneg
  4172 ;;		___flsub
  4173 ;;		___fltol
  4174 ;;		___fpclassifyf
  4175 ;;		_floorf
  4176 ;;		_isupper
  4177 ;;		_pad
  4178 ;;		_strcpy
  4179 ;;		_tolower
  4180 ;; This function is called by:
  4181 ;;		_vfpfcnvrt
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text15
  4186  000E1A                     __ptext15:
  4187                           	callstack 0
  4188  000E1A                     _efgtoa:
  4189                           	callstack 18
  4190  000E1A                     
  4191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4192  000E1A  0E00               	movlw	0
  4193  000E1C  0100               	movlb	0	; () banked
  4194  000E1E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4195  000E20  0E00               	movlw	0
  4196  000E22  6F7A               	movwf	efgtoa@sign& (0+255),b
  4197  000E24                     
  4198                           ; BSR set to: 0
  4199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4200  000E24  C036  F08C         	movff	efgtoa@f,efgtoa@g
  4201  000E28  C037  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4202  000E2C  C038  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4203  000E30  C039  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4204  000E34                     
  4205                           ; BSR set to: 0
  4206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4207  000E34  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4208  000E36  EF21  F007         	goto	u4300
  4209  000E3A  EF1F  F007         	goto	u4301
  4210  000E3E                     u4301:
  4211  000E3E  EF37  F007         	goto	l4873
  4212  000E42                     u4300:
  4213  000E42                     
  4214                           ; BSR set to: 0
  4215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4216  000E42  0E00               	movlw	0
  4217  000E44  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4218  000E46  0E01               	movlw	1
  4219  000E48  6F7A               	movwf	efgtoa@sign& (0+255),b
  4220  000E4A                     
  4221                           ; BSR set to: 0
  4222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4223  000E4A  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4224  000E4E  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4225  000E52  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4226  000E56  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4227  000E5A  ECE3  F023         	call	___flneg	;wreg free
  4228  000E5E  C001  F08C         	movff	?___flneg,efgtoa@g
  4229  000E62  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4230  000E66  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4231  000E6A  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4232  000E6E                     l4873:
  4233                           
  4234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4235  000E6E  0E00               	movlw	0
  4236  000E70  0100               	movlb	0	; () banked
  4237  000E72  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4238  000E74  0E00               	movlw	0
  4239  000E76  6F92               	movwf	efgtoa@n& (0+255),b
  4240  000E78                     
  4241                           ; BSR set to: 0
  4242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4243  000E78  C0EF  F07E         	movff	_width,efgtoa@w
  4244  000E7C  C0F0  F07F         	movff	_width+1,efgtoa@w+1
  4245  000E80                     
  4246                           ; BSR set to: 0
  4247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4248  000E80  517A               	movf	efgtoa@sign& (0+255),w,b
  4249  000E82  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4250  000E84  A4D8               	btfss	status,2,c
  4251  000E86  EF47  F007         	goto	u4311
  4252  000E8A  EF49  F007         	goto	u4310
  4253  000E8E                     u4311:
  4254  000E8E  EF50  F007         	goto	l4881
  4255  000E92                     u4310:
  4256  000E92                     
  4257                           ; BSR set to: 0
  4258  000E92  A5F3               	btfss	_flags& (0+255),2,b
  4259  000E94  EF4E  F007         	goto	u4321
  4260  000E98  EF50  F007         	goto	u4320
  4261  000E9C                     u4321:
  4262  000E9C  EF6A  F007         	goto	l4893
  4263  000EA0                     u4320:
  4264  000EA0                     l4881:
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4268  000EA0  517A               	movf	efgtoa@sign& (0+255),w,b
  4269  000EA2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4270  000EA4  A4D8               	btfss	status,2,c
  4271  000EA6  EF57  F007         	goto	u4331
  4272  000EAA  EF59  F007         	goto	u4330
  4273  000EAE                     u4331:
  4274  000EAE  EF5F  F007         	goto	l4885
  4275  000EB2                     u4330:
  4276  000EB2                     
  4277                           ; BSR set to: 0
  4278  000EB2  0E00               	movlw	0
  4279  000EB4  6F61               	movwf	(_efgtoa$2029+1)& (0+255),b
  4280  000EB6  0E2B               	movlw	43
  4281  000EB8  6F60               	movwf	_efgtoa$2029& (0+255),b
  4282  000EBA  EF63  F007         	goto	l4887
  4283  000EBE                     l4885:
  4284                           
  4285                           ; BSR set to: 0
  4286  000EBE  0E00               	movlw	0
  4287  000EC0  6F61               	movwf	(_efgtoa$2029+1)& (0+255),b
  4288  000EC2  0E2D               	movlw	45
  4289  000EC4  6F60               	movwf	_efgtoa$2029& (0+255),b
  4290  000EC6                     l4887:
  4291                           
  4292                           ; BSR set to: 0
  4293  000EC6  C060  F10B         	movff	_efgtoa$2029,_dbuf
  4294  000ECA                     
  4295                           ; BSR set to: 0
  4296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4297  000ECA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4298  000ECC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4299  000ECE                     
  4300                           ; BSR set to: 0
  4301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4302  000ECE  077E               	decf	efgtoa@w& (0+255),f,b
  4303  000ED0  A0D8               	btfss	status,0,c
  4304  000ED2  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4305  000ED4                     l4893:
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4309  000ED4  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4310  000ED8  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4311  000EDC  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4312  000EE0  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4313  000EE4  ECA3  F01D         	call	___fpclassifyf	;wreg free
  4314  000EE8  0401               	decf	?___fpclassifyf^0,w,c
  4315  000EEA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4316  000EEC  A4D8               	btfss	status,2,c
  4317  000EEE  EF7B  F007         	goto	u4341
  4318  000EF2  EF7D  F007         	goto	u4340
  4319  000EF6                     u4341:
  4320  000EF6  EFD4  F007         	goto	l4911
  4321  000EFA                     u4340:
  4322  000EFA  0EBF               	movlw	191
  4323  000EFC  6E3B               	movwf	??_efgtoa^0,c
  4324  000EFE  0EFF               	movlw	255
  4325  000F00  6E3C               	movwf	(??_efgtoa+1)^0,c
  4326  000F02  503A               	movf	efgtoa@c^0,w,c
  4327  000F04  6E3D               	movwf	(??_efgtoa+2)^0,c
  4328  000F06  6A3E               	clrf	(??_efgtoa+3)^0,c
  4329  000F08  503B               	movf	??_efgtoa^0,w,c
  4330  000F0A  263D               	addwf	(??_efgtoa+2)^0,f,c
  4331  000F0C  503C               	movf	(??_efgtoa+1)^0,w,c
  4332  000F0E  223E               	addwfc	(??_efgtoa+3)^0,f,c
  4333  000F10  503E               	movf	(??_efgtoa+3)^0,w,c
  4334  000F12  E10A               	bnz	u4350
  4335  000F14  0E1A               	movlw	26
  4336  000F16  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  4337  000F18  A0D8               	btfss	status,0,c
  4338  000F1A  EF91  F007         	goto	u4351
  4339  000F1E  EF94  F007         	goto	u4350
  4340  000F22                     u4351:
  4341  000F22  0E01               	movlw	1
  4342  000F24  EF95  F007         	goto	u4360
  4343  000F28                     u4350:
  4344  000F28  0E00               	movlw	0
  4345  000F2A                     u4360:
  4346  000F2A  0100               	movlb	0	; () banked
  4347  000F2C  6F62               	movwf	_efgtoa$2030& (0+255),b
  4348  000F2E  6B63               	clrf	(_efgtoa$2030+1)& (0+255),b
  4349  000F30                     
  4350                           ; BSR set to: 0
  4351  000F30  5162               	movf	_efgtoa$2030& (0+255),w,b
  4352  000F32  1163               	iorwf	(_efgtoa$2030+1)& (0+255),w,b
  4353  000F34  B4D8               	btfsc	status,2,c
  4354  000F36  EF9F  F007         	goto	u4371
  4355  000F3A  EFA1  F007         	goto	u4370
  4356  000F3E                     u4371:
  4357  000F3E  EFAF  F007         	goto	l4903
  4358  000F42                     u4370:
  4359  000F42                     
  4360                           ; BSR set to: 0
  4361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4362  000F42  0E0B               	movlw	low _dbuf
  4363  000F44  2592               	addwf	efgtoa@n& (0+255),w,b
  4364  000F46  6E01               	movwf	strcpy@dest^0,c
  4365  000F48  0E01               	movlw	high _dbuf
  4366  000F4A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4367  000F4C  6E02               	movwf	(strcpy@dest+1)^0,c
  4368  000F4E  0E06               	movlw	low STR_2
  4369  000F50  6E03               	movwf	strcpy@src^0,c
  4370  000F52  0E0E               	movlw	high STR_2
  4371  000F54  6E04               	movwf	(strcpy@src+1)^0,c
  4372  000F56  EC66  F022         	call	_strcpy	;wreg free
  4373                           
  4374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4375  000F5A  EFBB  F007         	goto	l4905
  4376  000F5E                     l4903:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4380  000F5E  0E0B               	movlw	low _dbuf
  4381  000F60  2592               	addwf	efgtoa@n& (0+255),w,b
  4382  000F62  6E01               	movwf	strcpy@dest^0,c
  4383  000F64  0E01               	movlw	high _dbuf
  4384  000F66  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4385  000F68  6E02               	movwf	(strcpy@dest+1)^0,c
  4386  000F6A  0E0E               	movlw	low STR_3
  4387  000F6C  6E03               	movwf	strcpy@src^0,c
  4388  000F6E  0E0E               	movlw	high STR_3
  4389  000F70  6E04               	movwf	(strcpy@src+1)^0,c
  4390  000F72  EC66  F022         	call	_strcpy	;wreg free
  4391  000F76                     l4905:
  4392                           
  4393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4394  000F76  0100               	movlb	0	; () banked
  4395  000F78  0EFD               	movlw	253
  4396  000F7A  277E               	addwf	efgtoa@w& (0+255),f,b
  4397  000F7C  0EFF               	movlw	255
  4398  000F7E  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4399  000F80                     l4907:
  4400                           
  4401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4402  000F80  C034  F013         	movff	efgtoa@fp,pad@fp
  4403  000F84  C035  F014         	movff	efgtoa@fp+1,pad@fp+1
  4404  000F88  0E0B               	movlw	low _dbuf
  4405  000F8A  6E15               	movwf	pad@buf^0,c
  4406  000F8C  0E01               	movlw	high _dbuf
  4407  000F8E  6E16               	movwf	(pad@buf+1)^0,c
  4408  000F90  C07E  F017         	movff	efgtoa@w,pad@p
  4409  000F94  C07F  F018         	movff	efgtoa@w+1,pad@p+1
  4410  000F98  ECF8  F01E         	call	_pad	;wreg free
  4411  000F9C  C013  F034         	movff	?_pad,?_efgtoa
  4412  000FA0  C014  F035         	movff	?_pad+1,?_efgtoa+1
  4413  000FA4  EF38  F00D         	goto	l1852
  4414  000FA8                     l4911:
  4415                           
  4416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4417  000FA8  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4418  000FAC  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4419  000FB0  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4420  000FB4  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4421  000FB8  ECA3  F01D         	call	___fpclassifyf	;wreg free
  4422  000FBC  5001               	movf	?___fpclassifyf^0,w,c
  4423  000FBE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4424  000FC0  A4D8               	btfss	status,2,c
  4425  000FC2  EFE5  F007         	goto	u4381
  4426  000FC6  EFE7  F007         	goto	u4380
  4427  000FCA                     u4381:
  4428  000FCA  EF27  F008         	goto	l4929
  4429  000FCE                     u4380:
  4430  000FCE  0EBF               	movlw	191
  4431  000FD0  6E3B               	movwf	??_efgtoa^0,c
  4432  000FD2  0EFF               	movlw	255
  4433  000FD4  6E3C               	movwf	(??_efgtoa+1)^0,c
  4434  000FD6  503A               	movf	efgtoa@c^0,w,c
  4435  000FD8  6E3D               	movwf	(??_efgtoa+2)^0,c
  4436  000FDA  6A3E               	clrf	(??_efgtoa+3)^0,c
  4437  000FDC  503B               	movf	??_efgtoa^0,w,c
  4438  000FDE  263D               	addwf	(??_efgtoa+2)^0,f,c
  4439  000FE0  503C               	movf	(??_efgtoa+1)^0,w,c
  4440  000FE2  223E               	addwfc	(??_efgtoa+3)^0,f,c
  4441  000FE4  503E               	movf	(??_efgtoa+3)^0,w,c
  4442  000FE6  E10A               	bnz	u4390
  4443  000FE8  0E1A               	movlw	26
  4444  000FEA  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  4445  000FEC  A0D8               	btfss	status,0,c
  4446  000FEE  EFFB  F007         	goto	u4391
  4447  000FF2  EFFE  F007         	goto	u4390
  4448  000FF6                     u4391:
  4449  000FF6  0E01               	movlw	1
  4450  000FF8  EFFF  F007         	goto	u4400
  4451  000FFC                     u4390:
  4452  000FFC  0E00               	movlw	0
  4453  000FFE                     u4400:
  4454  000FFE  0100               	movlb	0	; () banked
  4455  001000  6F64               	movwf	_efgtoa$2035& (0+255),b
  4456  001002  6B65               	clrf	(_efgtoa$2035+1)& (0+255),b
  4457  001004                     
  4458                           ; BSR set to: 0
  4459  001004  5164               	movf	_efgtoa$2035& (0+255),w,b
  4460  001006  1165               	iorwf	(_efgtoa$2035+1)& (0+255),w,b
  4461  001008  B4D8               	btfsc	status,2,c
  4462  00100A  EF09  F008         	goto	u4411
  4463  00100E  EF0B  F008         	goto	u4410
  4464  001012                     u4411:
  4465  001012  EF19  F008         	goto	l4921
  4466  001016                     u4410:
  4467  001016                     
  4468                           ; BSR set to: 0
  4469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4470  001016  0E0B               	movlw	low _dbuf
  4471  001018  2592               	addwf	efgtoa@n& (0+255),w,b
  4472  00101A  6E01               	movwf	strcpy@dest^0,c
  4473  00101C  0E01               	movlw	high _dbuf
  4474  00101E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4475  001020  6E02               	movwf	(strcpy@dest+1)^0,c
  4476  001022  0E0A               	movlw	low STR_6
  4477  001024  6E03               	movwf	strcpy@src^0,c
  4478  001026  0E0E               	movlw	high STR_6
  4479  001028  6E04               	movwf	(strcpy@src+1)^0,c
  4480  00102A  EC66  F022         	call	_strcpy	;wreg free
  4481                           
  4482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4483  00102E  EFBB  F007         	goto	l4905
  4484  001032                     l4921:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4488  001032  0E0B               	movlw	low _dbuf
  4489  001034  2592               	addwf	efgtoa@n& (0+255),w,b
  4490  001036  6E01               	movwf	strcpy@dest^0,c
  4491  001038  0E01               	movlw	high _dbuf
  4492  00103A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4493  00103C  6E02               	movwf	(strcpy@dest+1)^0,c
  4494  00103E  0E12               	movlw	low STR_7
  4495  001040  6E03               	movwf	strcpy@src^0,c
  4496  001042  0E0E               	movlw	high STR_7
  4497  001044  6E04               	movwf	(strcpy@src+1)^0,c
  4498  001046  EC66  F022         	call	_strcpy	;wreg free
  4499  00104A  EFBB  F007         	goto	l4905
  4500  00104E                     l4929:
  4501                           
  4502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4503  00104E  0E00               	movlw	0
  4504  001050  0100               	movlb	0	; () banked
  4505  001052  6F94               	movwf	efgtoa@u& (0+255),b
  4506  001054  0E00               	movlw	0
  4507  001056  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4508  001058  0E80               	movlw	128
  4509  00105A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4510  00105C  0E3F               	movlw	63
  4511  00105E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4512                           
  4513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4514  001060  0E00               	movlw	0
  4515  001062  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4516  001064  0E00               	movlw	0
  4517  001066  6F90               	movwf	efgtoa@e& (0+255),b
  4518  001068                     
  4519                           ; BSR set to: 0
  4520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4521  001068  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  4522  00106C  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4523  001070  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4524  001074  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4525  001078  0E00               	movlw	0
  4526  00107A  6E05               	movwf	___fleq@ff2^0,c
  4527  00107C  0E00               	movlw	0
  4528  00107E  6E06               	movwf	(___fleq@ff2+1)^0,c
  4529  001080  0E00               	movlw	0
  4530  001082  6E07               	movwf	(___fleq@ff2+2)^0,c
  4531  001084  0E00               	movlw	0
  4532  001086  6E08               	movwf	(___fleq@ff2+3)^0,c
  4533  001088  EC76  F020         	call	___fleq	;wreg free
  4534  00108C  B0D8               	btfsc	status,0,c
  4535  00108E  EF4B  F008         	goto	u4421
  4536  001092  EF4D  F008         	goto	u4420
  4537  001096                     u4421:
  4538  001096  EFD0  F008         	goto	l4947
  4539  00109A                     u4420:
  4540  00109A  EF6C  F008         	goto	l4939
  4541  00109E                     l4935:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4544  00109E  C094  F00F         	movff	efgtoa@u,___flmul@b
  4545  0010A2  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  4546  0010A6  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  4547  0010AA  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  4548  0010AE  0E00               	movlw	0
  4549  0010B0  6E13               	movwf	___flmul@a^0,c
  4550  0010B2  0E00               	movlw	0
  4551  0010B4  6E14               	movwf	(___flmul@a+1)^0,c
  4552  0010B6  0E20               	movlw	32
  4553  0010B8  6E15               	movwf	(___flmul@a+2)^0,c
  4554  0010BA  0E41               	movlw	65
  4555  0010BC  6E16               	movwf	(___flmul@a+3)^0,c
  4556  0010BE  ECE1  F011         	call	___flmul	;wreg free
  4557  0010C2  C00F  F094         	movff	?___flmul,efgtoa@u
  4558  0010C6  C010  F095         	movff	?___flmul+1,efgtoa@u+1
  4559  0010CA  C011  F096         	movff	?___flmul+2,efgtoa@u+2
  4560  0010CE  C012  F097         	movff	?___flmul+3,efgtoa@u+3
  4561  0010D2                     
  4562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4563  0010D2  0100               	movlb	0	; () banked
  4564  0010D4  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4565  0010D6  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4566  0010D8                     l4939:
  4567                           
  4568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4569  0010D8  C08C  F028         	movff	efgtoa@g,___flge@ff1
  4570  0010DC  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  4571  0010E0  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  4572  0010E4  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  4573  0010E8  0E00               	movlw	0
  4574  0010EA  6E13               	movwf	___flmul@a^0,c
  4575  0010EC  0E00               	movlw	0
  4576  0010EE  6E14               	movwf	(___flmul@a+1)^0,c
  4577  0010F0  0E20               	movlw	32
  4578  0010F2  6E15               	movwf	(___flmul@a+2)^0,c
  4579  0010F4  0E41               	movlw	65
  4580  0010F6  6E16               	movwf	(___flmul@a+3)^0,c
  4581  0010F8  C094  F00F         	movff	efgtoa@u,___flmul@b
  4582  0010FC  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  4583  001100  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  4584  001104  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  4585  001108  ECE1  F011         	call	___flmul	;wreg free
  4586  00110C  C00F  F02C         	movff	?___flmul,___flge@ff2
  4587  001110  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4588  001114  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4589  001118  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4590  00111C  EC21  F01D         	call	___flge	;wreg free
  4591  001120  B0D8               	btfsc	status,0,c
  4592  001122  EF95  F008         	goto	u4431
  4593  001126  EF97  F008         	goto	u4430
  4594  00112A                     u4431:
  4595  00112A  EF4F  F008         	goto	l4935
  4596  00112E                     u4430:
  4597  00112E  EFB7  F008         	goto	l4945
  4598  001132                     l4941:
  4599                           
  4600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4601  001132  C094  F001         	movff	efgtoa@u,___fldiv@b
  4602  001136  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4603  00113A  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4604  00113E  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4605  001142  0E00               	movlw	0
  4606  001144  6E05               	movwf	___fldiv@a^0,c
  4607  001146  0E00               	movlw	0
  4608  001148  6E06               	movwf	(___fldiv@a+1)^0,c
  4609  00114A  0E20               	movlw	32
  4610  00114C  6E07               	movwf	(___fldiv@a+2)^0,c
  4611  00114E  0E41               	movlw	65
  4612  001150  6E08               	movwf	(___fldiv@a+3)^0,c
  4613  001152  ECF6  F013         	call	___fldiv	;wreg free
  4614  001156  C001  F094         	movff	?___fldiv,efgtoa@u
  4615  00115A  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4616  00115E  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4617  001162  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4618  001166                     
  4619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4620  001166  0100               	movlb	0	; () banked
  4621  001168  0790               	decf	efgtoa@e& (0+255),f,b
  4622  00116A  A0D8               	btfss	status,0,c
  4623  00116C  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  4624  00116E                     l4945:
  4625                           
  4626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4627  00116E  C08C  F028         	movff	efgtoa@g,___flge@ff1
  4628  001172  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  4629  001176  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  4630  00117A  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  4631  00117E  C094  F02C         	movff	efgtoa@u,___flge@ff2
  4632  001182  C095  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  4633  001186  C096  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  4634  00118A  C097  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  4635  00118E  EC21  F01D         	call	___flge	;wreg free
  4636  001192  A0D8               	btfss	status,0,c
  4637  001194  EFCE  F008         	goto	u4441
  4638  001198  EFD0  F008         	goto	u4440
  4639  00119C                     u4441:
  4640  00119C  EF99  F008         	goto	l4941
  4641  0011A0                     u4440:
  4642  0011A0                     l4947:
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4645  0011A0  C03A  F007         	movff	efgtoa@c,tolower@c
  4646  0011A4  6A08               	clrf	(tolower@c+1)^0,c
  4647  0011A6  EC36  F022         	call	_tolower	;wreg free
  4648  0011AA  5007               	movf	?_tolower^0,w,c
  4649  0011AC  0100               	movlb	0	; () banked
  4650  0011AE  6F81               	movwf	efgtoa@mode& (0+255),b
  4651  0011B0                     
  4652                           ; BSR set to: 0
  4653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4654  0011B0  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  4655  0011B4                     
  4656                           ; BSR set to: 0
  4657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4658  0011B4  0E67               	movlw	103
  4659  0011B6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4660  0011B8  A4D8               	btfss	status,2,c
  4661  0011BA  EFE1  F008         	goto	u4451
  4662  0011BE  EFE3  F008         	goto	u4450
  4663  0011C2                     u4451:
  4664  0011C2  EF09  F009         	goto	l4961
  4665  0011C6                     u4450:
  4666  0011C6                     
  4667                           ; BSR set to: 0
  4668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4669  0011C6  51F1               	movf	_prec& (0+255),w,b
  4670  0011C8  11F2               	iorwf	(_prec+1)& (0+255),w,b
  4671  0011CA  A4D8               	btfss	status,2,c
  4672  0011CC  EFEA  F008         	goto	u4461
  4673  0011D0  EFEC  F008         	goto	u4460
  4674  0011D4                     u4461:
  4675  0011D4  EFF0  F008         	goto	l4957
  4676  0011D8                     u4460:
  4677  0011D8                     
  4678                           ; BSR set to: 0
  4679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4680  0011D8  0E00               	movlw	0
  4681  0011DA  6FF2               	movwf	(_prec+1)& (0+255),b
  4682  0011DC  0E01               	movlw	1
  4683  0011DE  6FF1               	movwf	_prec& (0+255),b
  4684  0011E0                     l4957:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4688  0011E0  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  4689  0011E2  EFFD  F008         	goto	u4470
  4690  0011E6  51F2               	movf	(_prec+1)& (0+255),w,b
  4691  0011E8  E106               	bnz	u4471
  4692  0011EA  05F1               	decf	_prec& (0+255),w,b
  4693  0011EC  B0D8               	btfsc	status,0,c
  4694  0011EE  EFFB  F008         	goto	u4471
  4695  0011F2  EFFD  F008         	goto	u4470
  4696  0011F6                     u4471:
  4697  0011F6  EF03  F009         	goto	l1870
  4698  0011FA                     u4470:
  4699  0011FA                     l4959:
  4700                           
  4701                           ; BSR set to: 0
  4702  0011FA  0E00               	movlw	0
  4703  0011FC  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4704  0011FE  0E06               	movlw	6
  4705  001200  6F7C               	movwf	efgtoa@p& (0+255),b
  4706  001202  EF12  F009         	goto	l4967
  4707  001206                     l1870:
  4708                           
  4709                           ; BSR set to: 0
  4710  001206  C0F1  F07C         	movff	_prec,efgtoa@p
  4711  00120A  C0F2  F07D         	movff	_prec+1,efgtoa@p+1
  4712  00120E  EF12  F009         	goto	l4967
  4713  001212                     l4961:
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4717  001212  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  4718  001214  EF0E  F009         	goto	u4481
  4719  001218  EF10  F009         	goto	u4480
  4720  00121C                     u4481:
  4721  00121C  EFFD  F008         	goto	l4959
  4722  001220                     u4480:
  4723  001220  EF03  F009         	goto	l1870
  4724  001224                     l4967:
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4728  001224  0E67               	movlw	103
  4729  001226  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4730  001228  A4D8               	btfss	status,2,c
  4731  00122A  EF19  F009         	goto	u4491
  4732  00122E  EF1B  F009         	goto	u4490
  4733  001232                     u4491:
  4734  001232  EF4A  F009         	goto	l4977
  4735  001236                     u4490:
  4736  001236                     
  4737                           ; BSR set to: 0
  4738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4739  001236  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4740  001238  EF29  F009         	goto	u4500
  4741  00123C  0EFC               	movlw	252
  4742  00123E  5D90               	subwf	efgtoa@e& (0+255),w,b
  4743  001240  0EFF               	movlw	255
  4744  001242  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4745  001244  A0D8               	btfss	status,0,c
  4746  001246  EF27  F009         	goto	u4501
  4747  00124A  EF29  F009         	goto	u4500
  4748  00124E                     u4501:
  4749  00124E  EF48  F009         	goto	l4975
  4750  001252                     u4500:
  4751  001252                     
  4752                           ; BSR set to: 0
  4753  001252  0EFF               	movlw	255
  4754  001254  6E3B               	movwf	??_efgtoa^0,c
  4755  001256  0EFF               	movlw	255
  4756  001258  6E3C               	movwf	(??_efgtoa+1)^0,c
  4757  00125A  C07C  F03D         	movff	efgtoa@p,??_efgtoa+2
  4758  00125E  C07D  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  4759  001262  503B               	movf	??_efgtoa^0,w,c
  4760  001264  263D               	addwf	(??_efgtoa+2)^0,f,c
  4761  001266  503C               	movf	(??_efgtoa+1)^0,w,c
  4762  001268  223E               	addwfc	(??_efgtoa+3)^0,f,c
  4763  00126A  5190               	movf	efgtoa@e& (0+255),w,b
  4764  00126C  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  4765  00126E  503E               	movf	(??_efgtoa+3)^0,w,c
  4766  001270  0A80               	xorlw	128
  4767  001272  6E3F               	movwf	(??_efgtoa+4)^0,c
  4768  001274  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4769  001276  0A80               	xorlw	128
  4770  001278  583F               	subwfb	(??_efgtoa+4)^0,w,c
  4771  00127A  A0D8               	btfss	status,0,c
  4772  00127C  EF42  F009         	goto	u4511
  4773  001280  EF44  F009         	goto	u4510
  4774  001284                     u4511:
  4775  001284  EF48  F009         	goto	l4975
  4776  001288                     u4510:
  4777  001288                     
  4778                           ; BSR set to: 0
  4779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4780  001288  0E66               	movlw	102
  4781  00128A  6F80               	movwf	efgtoa@nmode& (0+255),b
  4782                           
  4783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4784  00128C  EF4A  F009         	goto	l4977
  4785  001290                     l4975:
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4789  001290  0E65               	movlw	101
  4790  001292  6F80               	movwf	efgtoa@nmode& (0+255),b
  4791  001294                     l4977:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4795  001294  C07C  F072         	movff	efgtoa@p,efgtoa@m
  4796  001298  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  4797  00129C                     
  4798                           ; BSR set to: 0
  4799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4800  00129C  0E67               	movlw	103
  4801  00129E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4802  0012A0  A4D8               	btfss	status,2,c
  4803  0012A2  EF55  F009         	goto	u4521
  4804  0012A6  EF57  F009         	goto	u4520
  4805  0012AA                     u4521:
  4806  0012AA  EF67  F009         	goto	l4985
  4807  0012AE                     u4520:
  4808  0012AE                     
  4809                           ; BSR set to: 0
  4810  0012AE  0E66               	movlw	102
  4811  0012B0  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4812  0012B2  A4D8               	btfss	status,2,c
  4813  0012B4  EF5E  F009         	goto	u4531
  4814  0012B8  EF60  F009         	goto	u4530
  4815  0012BC                     u4531:
  4816  0012BC  EF69  F009         	goto	l4987
  4817  0012C0                     u4530:
  4818  0012C0                     
  4819                           ; BSR set to: 0
  4820  0012C0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4821  0012C2  EF67  F009         	goto	u4540
  4822  0012C6  EF65  F009         	goto	u4541
  4823  0012CA                     u4541:
  4824  0012CA  EF69  F009         	goto	l4987
  4825  0012CE                     u4540:
  4826  0012CE                     l4985:
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4830  0012CE  4B72               	infsnz	efgtoa@m& (0+255),f,b
  4831  0012D0  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  4832  0012D2                     l4987:
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4836  0012D2  0E66               	movlw	102
  4837  0012D4  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4838  0012D6  A4D8               	btfss	status,2,c
  4839  0012D8  EF70  F009         	goto	u4551
  4840  0012DC  EF72  F009         	goto	u4550
  4841  0012E0                     u4551:
  4842  0012E0  EF92  F009         	goto	l4997
  4843  0012E4                     u4550:
  4844  0012E4                     
  4845                           ; BSR set to: 0
  4846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4847  0012E4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4848  0012E6  EF79  F009         	goto	u4560
  4849  0012EA  EF77  F009         	goto	u4561
  4850  0012EE                     u4561:
  4851  0012EE  EF85  F009         	goto	l4993
  4852  0012F2                     u4560:
  4853  0012F2                     
  4854                           ; BSR set to: 0
  4855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4856  0012F2  0E00               	movlw	0
  4857  0012F4  6F94               	movwf	efgtoa@u& (0+255),b
  4858  0012F6  0E00               	movlw	0
  4859  0012F8  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4860  0012FA  0E80               	movlw	128
  4861  0012FC  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4862  0012FE  0E3F               	movlw	63
  4863  001300  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4864                           
  4865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4866  001302  0E00               	movlw	0
  4867  001304  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4868  001306  0E00               	movlw	0
  4869  001308  6F90               	movwf	efgtoa@e& (0+255),b
  4870  00130A                     l4993:
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4874  00130A  0E67               	movlw	103
  4875  00130C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4876  00130E  B4D8               	btfsc	status,2,c
  4877  001310  EF8C  F009         	goto	u4571
  4878  001314  EF8E  F009         	goto	u4570
  4879  001318                     u4571:
  4880  001318  EF92  F009         	goto	l4997
  4881  00131C                     u4570:
  4882  00131C                     
  4883                           ; BSR set to: 0
  4884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4885  00131C  5190               	movf	efgtoa@e& (0+255),w,b
  4886  00131E  2772               	addwf	efgtoa@m& (0+255),f,b
  4887  001320  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4888  001322  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4889  001324                     l4997:
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4893  001324  0E00               	movlw	0
  4894  001326  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4895  001328  0E00               	movlw	0
  4896  00132A  6F8A               	movwf	efgtoa@i& (0+255),b
  4897  00132C                     
  4898                           ; BSR set to: 0
  4899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4900  00132C  C08C  F082         	movff	efgtoa@g,efgtoa@h
  4901  001330  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4902  001334  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4903  001338  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4904  00133C                     
  4905                           ; BSR set to: 0
  4906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4907  00133C  C094  F074         	movff	efgtoa@u,efgtoa@ou
  4908  001340  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  4909  001344  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  4910  001348  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  4911                           
  4912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4913  00134C  EF23  F00A         	goto	l5011
  4914  001350                     l5003:
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4918  001350  C082  F001         	movff	efgtoa@h,___fldiv@b
  4919  001354  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4920  001358  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4921  00135C  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4922  001360  C094  F005         	movff	efgtoa@u,___fldiv@a
  4923  001364  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4924  001368  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4925  00136C  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4926  001370  ECF6  F013         	call	___fldiv	;wreg free
  4927  001374  C001  F01A         	movff	?___fldiv,floorf@x
  4928  001378  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4929  00137C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4930  001380  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4931  001384  EC84  F017         	call	_floorf	;wreg free
  4932  001388  C01A  F086         	movff	?_floorf,efgtoa@l
  4933  00138C  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  4934  001390  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  4935  001394  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  4936                           
  4937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4938  001398  C086  F001         	movff	efgtoa@l,___fltol@f1
  4939  00139C  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4940  0013A0  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4941  0013A4  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4942  0013A8  EC9E  F01C         	call	___fltol	;wreg free
  4943  0013AC  C001  F078         	movff	?___fltol,efgtoa@d
  4944  0013B0  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4945  0013B4                     
  4946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4947  0013B4  C082  F028         	movff	efgtoa@h,___flsub@b
  4948  0013B8  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  4949  0013BC  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4950  0013C0  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4951  0013C4  C094  F013         	movff	efgtoa@u,___flmul@a
  4952  0013C8  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  4953  0013CC  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  4954  0013D0  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  4955  0013D4  C086  F00F         	movff	efgtoa@l,___flmul@b
  4956  0013D8  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  4957  0013DC  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  4958  0013E0  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  4959  0013E4  ECE1  F011         	call	___flmul	;wreg free
  4960  0013E8  C00F  F02C         	movff	?___flmul,___flsub@a
  4961  0013EC  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4962  0013F0  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4963  0013F4  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4964  0013F8  EC82  F023         	call	___flsub	;wreg free
  4965  0013FC  C028  F082         	movff	?___flsub,efgtoa@h
  4966  001400  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  4967  001404  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  4968  001408  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  4969  00140C                     
  4970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4971  00140C  C094  F001         	movff	efgtoa@u,___fldiv@b
  4972  001410  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4973  001414  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4974  001418  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4975  00141C  0E00               	movlw	0
  4976  00141E  6E05               	movwf	___fldiv@a^0,c
  4977  001420  0E00               	movlw	0
  4978  001422  6E06               	movwf	(___fldiv@a+1)^0,c
  4979  001424  0E20               	movlw	32
  4980  001426  6E07               	movwf	(___fldiv@a+2)^0,c
  4981  001428  0E41               	movlw	65
  4982  00142A  6E08               	movwf	(___fldiv@a+3)^0,c
  4983  00142C  ECF6  F013         	call	___fldiv	;wreg free
  4984  001430  C001  F094         	movff	?___fldiv,efgtoa@u
  4985  001434  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4986  001438  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4987  00143C  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4988  001440                     
  4989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4990  001440  0100               	movlb	0	; () banked
  4991  001442  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4992  001444  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4993  001446                     l5011:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4997  001446  5172               	movf	efgtoa@m& (0+255),w,b
  4998  001448  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4999  00144A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5000  00144C  0A80               	xorlw	128
  5001  00144E  6E3B               	movwf	??_efgtoa^0,c
  5002  001450  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5003  001452  0A80               	xorlw	128
  5004  001454  583B               	subwfb	??_efgtoa^0,w,c
  5005  001456  A0D8               	btfss	status,0,c
  5006  001458  EF30  F00A         	goto	u4581
  5007  00145C  EF32  F00A         	goto	u4580
  5008  001460                     u4581:
  5009  001460  EFA8  F009         	goto	l5003
  5010  001464                     u4580:
  5011  001464                     
  5012                           ; BSR set to: 0
  5013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5014  001464  C094  F00F         	movff	efgtoa@u,___flmul@b
  5015  001468  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  5016  00146C  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  5017  001470  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  5018  001474  0E00               	movlw	0
  5019  001476  6E13               	movwf	___flmul@a^0,c
  5020  001478  0E00               	movlw	0
  5021  00147A  6E14               	movwf	(___flmul@a+1)^0,c
  5022  00147C  0EA0               	movlw	160
  5023  00147E  6E15               	movwf	(___flmul@a+2)^0,c
  5024  001480  0E40               	movlw	64
  5025  001482  6E16               	movwf	(___flmul@a+3)^0,c
  5026  001484  ECE1  F011         	call	___flmul	;wreg free
  5027  001488  C00F  F086         	movff	?___flmul,efgtoa@l
  5028  00148C  C010  F087         	movff	?___flmul+1,efgtoa@l+1
  5029  001490  C011  F088         	movff	?___flmul+2,efgtoa@l+2
  5030  001494  C012  F089         	movff	?___flmul+3,efgtoa@l+3
  5031  001498                     
  5032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5033  001498  C082  F028         	movff	efgtoa@h,___flge@ff1
  5034  00149C  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  5035  0014A0  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  5036  0014A4  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  5037  0014A8  C086  F02C         	movff	efgtoa@l,___flge@ff2
  5038  0014AC  C087  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  5039  0014B0  C088  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  5040  0014B4  C089  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  5041  0014B8  EC21  F01D         	call	___flge	;wreg free
  5042  0014BC  B0D8               	btfsc	status,0,c
  5043  0014BE  EF63  F00A         	goto	u4591
  5044  0014C2  EF65  F00A         	goto	u4590
  5045  0014C6                     u4591:
  5046  0014C6  EF70  F00A         	goto	l5019
  5047  0014CA                     u4590:
  5048  0014CA                     
  5049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5050  0014CA  0E00               	movlw	0
  5051  0014CC  0100               	movlb	0	; () banked
  5052  0014CE  6F86               	movwf	efgtoa@l& (0+255),b
  5053  0014D0  0E00               	movlw	0
  5054  0014D2  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5055  0014D4  0E00               	movlw	0
  5056  0014D6  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5057  0014D8  0E00               	movlw	0
  5058  0014DA  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5059                           
  5060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5061  0014DC  EF99  F00A         	goto	l5025
  5062  0014E0                     l5019:
  5063                           
  5064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5065  0014E0  C082  F001         	movff	efgtoa@h,___fleq@ff1
  5066  0014E4  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5067  0014E8  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5068  0014EC  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5069  0014F0  C086  F005         	movff	efgtoa@l,___fleq@ff2
  5070  0014F4  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5071  0014F8  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5072  0014FC  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5073  001500  EC76  F020         	call	___fleq	;wreg free
  5074  001504  A0D8               	btfss	status,0,c
  5075  001506  EF87  F00A         	goto	u4601
  5076  00150A  EF89  F00A         	goto	u4600
  5077  00150E                     u4601:
  5078  00150E  EF99  F00A         	goto	l5025
  5079  001512                     u4600:
  5080  001512  0100               	movlb	0	; () banked
  5081  001514  B178               	btfsc	efgtoa@d& (0+255),0,b
  5082  001516  EF8F  F00A         	goto	u4611
  5083  00151A  EF91  F00A         	goto	u4610
  5084  00151E                     u4611:
  5085  00151E  EF99  F00A         	goto	l5025
  5086  001522                     u4610:
  5087  001522                     
  5088                           ; BSR set to: 0
  5089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5090  001522  0E00               	movlw	0
  5091  001524  6F86               	movwf	efgtoa@l& (0+255),b
  5092  001526  0E00               	movlw	0
  5093  001528  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5094  00152A  0E00               	movlw	0
  5095  00152C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5096  00152E  0E00               	movlw	0
  5097  001530  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5098  001532                     l5025:
  5099                           
  5100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5101  001532  C08C  F001         	movff	efgtoa@g,___fladd@b
  5102  001536  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  5103  00153A  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  5104  00153E  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  5105  001542  C086  F005         	movff	efgtoa@l,___fladd@a
  5106  001546  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  5107  00154A  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  5108  00154E  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  5109  001552  EC39  F00D         	call	___fladd	;wreg free
  5110  001556  C001  F082         	movff	?___fladd,efgtoa@h
  5111  00155A  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  5112  00155E  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  5113  001562  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  5114  001566                     
  5115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5116  001566  C082  F028         	movff	efgtoa@h,___flge@ff1
  5117  00156A  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  5118  00156E  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  5119  001572  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  5120  001576  0E00               	movlw	0
  5121  001578  6E13               	movwf	___flmul@a^0,c
  5122  00157A  0E00               	movlw	0
  5123  00157C  6E14               	movwf	(___flmul@a+1)^0,c
  5124  00157E  0E20               	movlw	32
  5125  001580  6E15               	movwf	(___flmul@a+2)^0,c
  5126  001582  0E41               	movlw	65
  5127  001584  6E16               	movwf	(___flmul@a+3)^0,c
  5128  001586  C074  F00F         	movff	efgtoa@ou,___flmul@b
  5129  00158A  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  5130  00158E  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  5131  001592  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  5132  001596  ECE1  F011         	call	___flmul	;wreg free
  5133  00159A  C00F  F02C         	movff	?___flmul,___flge@ff2
  5134  00159E  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  5135  0015A2  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  5136  0015A6  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  5137  0015AA  EC21  F01D         	call	___flge	;wreg free
  5138  0015AE  A0D8               	btfss	status,0,c
  5139  0015B0  EFDC  F00A         	goto	u4621
  5140  0015B4  EFDE  F00A         	goto	u4620
  5141  0015B8                     u4621:
  5142  0015B8  EF07  F00B         	goto	l5037
  5143  0015BC                     u4620:
  5144  0015BC                     
  5145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5146  0015BC  0100               	movlb	0	; () banked
  5147  0015BE  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5148  0015C0  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5149  0015C2                     
  5150                           ; BSR set to: 0
  5151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5152  0015C2  C074  F00F         	movff	efgtoa@ou,___flmul@b
  5153  0015C6  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  5154  0015CA  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  5155  0015CE  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  5156  0015D2  0E00               	movlw	0
  5157  0015D4  6E13               	movwf	___flmul@a^0,c
  5158  0015D6  0E00               	movlw	0
  5159  0015D8  6E14               	movwf	(___flmul@a+1)^0,c
  5160  0015DA  0E20               	movlw	32
  5161  0015DC  6E15               	movwf	(___flmul@a+2)^0,c
  5162  0015DE  0E41               	movlw	65
  5163  0015E0  6E16               	movwf	(___flmul@a+3)^0,c
  5164  0015E2  ECE1  F011         	call	___flmul	;wreg free
  5165  0015E6  C00F  F074         	movff	?___flmul,efgtoa@ou
  5166  0015EA  C010  F075         	movff	?___flmul+1,efgtoa@ou+1
  5167  0015EE  C011  F076         	movff	?___flmul+2,efgtoa@ou+2
  5168  0015F2  C012  F077         	movff	?___flmul+3,efgtoa@ou+3
  5169  0015F6                     
  5170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5171  0015F6  0E66               	movlw	102
  5172  0015F8  0100               	movlb	0	; () banked
  5173  0015FA  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5174  0015FC  A4D8               	btfss	status,2,c
  5175  0015FE  EF03  F00B         	goto	u4631
  5176  001602  EF05  F00B         	goto	u4630
  5177  001606                     u4631:
  5178  001606  EF07  F00B         	goto	l5037
  5179  00160A                     u4630:
  5180  00160A                     
  5181                           ; BSR set to: 0
  5182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5183  00160A  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5184  00160C  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5185  00160E                     l5037:
  5186                           
  5187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5188  00160E  C074  F094         	movff	efgtoa@ou,efgtoa@u
  5189  001612  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5190  001616  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5191  00161A  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5192  00161E                     
  5193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5194  00161E  0E65               	movlw	101
  5195  001620  0100               	movlb	0	; () banked
  5196  001622  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5197  001624  B4D8               	btfsc	status,2,c
  5198  001626  EF17  F00B         	goto	u4641
  5199  00162A  EF19  F00B         	goto	u4640
  5200  00162E                     u4641:
  5201  00162E  EF1F  F00B         	goto	l5043
  5202  001632                     u4640:
  5203  001632                     
  5204                           ; BSR set to: 0
  5205  001632  C090  F070         	movff	efgtoa@e,efgtoa@ne
  5206  001636  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  5207  00163A  EF23  F00B         	goto	l1898
  5208  00163E                     l5043:
  5209                           
  5210                           ; BSR set to: 0
  5211  00163E  0E00               	movlw	0
  5212  001640  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  5213  001642  0E00               	movlw	0
  5214  001644  6F70               	movwf	efgtoa@ne& (0+255),b
  5215  001646                     l1898:
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5219  001646  0E00               	movlw	0
  5220  001648  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5221  00164A  0E00               	movlw	0
  5222  00164C  6F6E               	movwf	efgtoa@pp& (0+255),b
  5223                           
  5224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5225  00164E  0E00               	movlw	0
  5226  001650  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  5227  001652  0E00               	movlw	0
  5228  001654  6F6C               	movwf	efgtoa@t& (0+255),b
  5229                           
  5230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5231  001656  0E00               	movlw	0
  5232  001658  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5233  00165A  0E00               	movlw	0
  5234  00165C  6F8A               	movwf	efgtoa@i& (0+255),b
  5235                           
  5236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5237  00165E  EF1E  F00C         	goto	l5093
  5238  001662                     l5045:
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5242  001662  C082  F001         	movff	efgtoa@h,___fldiv@b
  5243  001666  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5244  00166A  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5245  00166E  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5246  001672  C094  F005         	movff	efgtoa@u,___fldiv@a
  5247  001676  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5248  00167A  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5249  00167E  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5250  001682  ECF6  F013         	call	___fldiv	;wreg free
  5251  001686  C001  F01A         	movff	?___fldiv,floorf@x
  5252  00168A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5253  00168E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5254  001692  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5255  001696  EC84  F017         	call	_floorf	;wreg free
  5256  00169A  C01A  F086         	movff	?_floorf,efgtoa@l
  5257  00169E  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5258  0016A2  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5259  0016A6  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5260                           
  5261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5262  0016AA  C086  F001         	movff	efgtoa@l,___fltol@f1
  5263  0016AE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5264  0016B2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5265  0016B6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5266  0016BA  EC9E  F01C         	call	___fltol	;wreg free
  5267  0016BE  C001  F078         	movff	?___fltol,efgtoa@d
  5268  0016C2  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5269  0016C6                     
  5270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5271  0016C6  0100               	movlb	0	; () banked
  5272  0016C8  B9F3               	btfsc	_flags& (0+255),4,b
  5273  0016CA  EF69  F00B         	goto	u4651
  5274  0016CE  EF6B  F00B         	goto	u4650
  5275  0016D2                     u4651:
  5276  0016D2  EF88  F00B         	goto	l5057
  5277  0016D6                     u4650:
  5278  0016D6                     
  5279                           ; BSR set to: 0
  5280  0016D6  5178               	movf	efgtoa@d& (0+255),w,b
  5281  0016D8  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5282  0016DA  A4D8               	btfss	status,2,c
  5283  0016DC  EF72  F00B         	goto	u4661
  5284  0016E0  EF74  F00B         	goto	u4660
  5285  0016E4                     u4661:
  5286  0016E4  EF88  F00B         	goto	l5057
  5287  0016E8                     u4660:
  5288  0016E8                     
  5289                           ; BSR set to: 0
  5290  0016E8  0E67               	movlw	103
  5291  0016EA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5292  0016EC  A4D8               	btfss	status,2,c
  5293  0016EE  EF7B  F00B         	goto	u4671
  5294  0016F2  EF7D  F00B         	goto	u4670
  5295  0016F6                     u4671:
  5296  0016F6  EF88  F00B         	goto	l5057
  5297  0016FA                     u4670:
  5298  0016FA                     
  5299                           ; BSR set to: 0
  5300  0016FA  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5301  0016FC  EF84  F00B         	goto	u4680
  5302  001700  EF82  F00B         	goto	u4681
  5303  001704                     u4681:
  5304  001704  EF88  F00B         	goto	l5057
  5305  001708                     u4680:
  5306  001708                     
  5307                           ; BSR set to: 0
  5308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5309  001708  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  5310  00170A  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  5311                           
  5312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5313  00170C  EFD2  F00B         	goto	l5085
  5314  001710                     l5057:
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5318  001710  516E               	movf	efgtoa@pp& (0+255),w,b
  5319  001712  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5320  001714  A4D8               	btfss	status,2,c
  5321  001716  EF8F  F00B         	goto	u4691
  5322  00171A  EF91  F00B         	goto	u4690
  5323  00171E                     u4691:
  5324  00171E  EFBB  F00B         	goto	l5077
  5325  001722                     u4690:
  5326  001722                     
  5327                           ; BSR set to: 0
  5328  001722  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5329  001724  EF98  F00B         	goto	u4700
  5330  001728  EF96  F00B         	goto	u4701
  5331  00172C                     u4701:
  5332  00172C  EFBB  F00B         	goto	l5077
  5333  001730                     u4700:
  5334  001730                     
  5335                           ; BSR set to: 0
  5336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5337  001730  0E0B               	movlw	low _dbuf
  5338  001732  2592               	addwf	efgtoa@n& (0+255),w,b
  5339  001734  6ED9               	movwf	fsr2l,c
  5340  001736  0E01               	movlw	high _dbuf
  5341  001738  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5342  00173A  6EDA               	movwf	fsr2h,c
  5343  00173C  0E2E               	movlw	46
  5344  00173E  6EDF               	movwf	indf2,c
  5345  001740                     
  5346                           ; BSR set to: 0
  5347  001740  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5348  001742  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5349  001744                     
  5350                           ; BSR set to: 0
  5351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5352  001744  077E               	decf	efgtoa@w& (0+255),f,b
  5353  001746  A0D8               	btfss	status,0,c
  5354  001748  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5355  00174A                     
  5356                           ; BSR set to: 0
  5357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5358  00174A  0E00               	movlw	0
  5359  00174C  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5360  00174E  0E01               	movlw	1
  5361  001750  6F6E               	movwf	efgtoa@pp& (0+255),b
  5362  001752  EFBB  F00B         	goto	l5077
  5363  001756                     l5069:
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5367  001756  0E0B               	movlw	low _dbuf
  5368  001758  2592               	addwf	efgtoa@n& (0+255),w,b
  5369  00175A  6ED9               	movwf	fsr2l,c
  5370  00175C  0E01               	movlw	high _dbuf
  5371  00175E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5372  001760  6EDA               	movwf	fsr2h,c
  5373  001762  0E30               	movlw	48
  5374  001764  6EDF               	movwf	indf2,c
  5375  001766                     
  5376                           ; BSR set to: 0
  5377  001766  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5378  001768  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5379  00176A                     
  5380                           ; BSR set to: 0
  5381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5382  00176A  077E               	decf	efgtoa@w& (0+255),f,b
  5383  00176C  A0D8               	btfss	status,0,c
  5384  00176E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5385  001770                     
  5386                           ; BSR set to: 0
  5387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5388  001770  076C               	decf	efgtoa@t& (0+255),f,b
  5389  001772  A0D8               	btfss	status,0,c
  5390  001774  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  5391  001776                     l5077:
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5395  001776  516C               	movf	efgtoa@t& (0+255),w,b
  5396  001778  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5397  00177A  A4D8               	btfss	status,2,c
  5398  00177C  EFC2  F00B         	goto	u4711
  5399  001780  EFC4  F00B         	goto	u4710
  5400  001784                     u4711:
  5401  001784  EFAB  F00B         	goto	l5069
  5402  001788                     u4710:
  5403  001788                     
  5404                           ; BSR set to: 0
  5405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5406  001788  0E0B               	movlw	low _dbuf
  5407  00178A  2592               	addwf	efgtoa@n& (0+255),w,b
  5408  00178C  6ED9               	movwf	fsr2l,c
  5409  00178E  0E01               	movlw	high _dbuf
  5410  001790  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5411  001792  6EDA               	movwf	fsr2h,c
  5412  001794  5178               	movf	efgtoa@d& (0+255),w,b
  5413  001796  0F30               	addlw	48
  5414  001798  6EDF               	movwf	indf2,c
  5415  00179A                     
  5416                           ; BSR set to: 0
  5417  00179A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5418  00179C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5419  00179E                     
  5420                           ; BSR set to: 0
  5421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5422  00179E  077E               	decf	efgtoa@w& (0+255),f,b
  5423  0017A0  A0D8               	btfss	status,0,c
  5424  0017A2  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5425  0017A4                     l5085:
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5429  0017A4  C082  F028         	movff	efgtoa@h,___flsub@b
  5430  0017A8  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  5431  0017AC  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  5432  0017B0  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  5433  0017B4  C094  F013         	movff	efgtoa@u,___flmul@a
  5434  0017B8  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  5435  0017BC  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  5436  0017C0  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  5437  0017C4  C086  F00F         	movff	efgtoa@l,___flmul@b
  5438  0017C8  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  5439  0017CC  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  5440  0017D0  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  5441  0017D4  ECE1  F011         	call	___flmul	;wreg free
  5442  0017D8  C00F  F02C         	movff	?___flmul,___flsub@a
  5443  0017DC  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  5444  0017E0  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  5445  0017E4  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  5446  0017E8  EC82  F023         	call	___flsub	;wreg free
  5447  0017EC  C028  F082         	movff	?___flsub,efgtoa@h
  5448  0017F0  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  5449  0017F4  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  5450  0017F8  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  5451  0017FC                     
  5452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5453  0017FC  C094  F001         	movff	efgtoa@u,___fldiv@b
  5454  001800  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5455  001804  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5456  001808  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5457  00180C  0E00               	movlw	0
  5458  00180E  6E05               	movwf	___fldiv@a^0,c
  5459  001810  0E00               	movlw	0
  5460  001812  6E06               	movwf	(___fldiv@a+1)^0,c
  5461  001814  0E20               	movlw	32
  5462  001816  6E07               	movwf	(___fldiv@a+2)^0,c
  5463  001818  0E41               	movlw	65
  5464  00181A  6E08               	movwf	(___fldiv@a+3)^0,c
  5465  00181C  ECF6  F013         	call	___fldiv	;wreg free
  5466  001820  C001  F094         	movff	?___fldiv,efgtoa@u
  5467  001824  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5468  001828  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5469  00182C  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5470  001830                     
  5471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5472  001830  0100               	movlb	0	; () banked
  5473  001832  0770               	decf	efgtoa@ne& (0+255),f,b
  5474  001834  A0D8               	btfss	status,0,c
  5475  001836  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  5476  001838                     
  5477                           ; BSR set to: 0
  5478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5479  001838  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5480  00183A  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5481  00183C                     l5093:
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5485  00183C  5172               	movf	efgtoa@m& (0+255),w,b
  5486  00183E  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5487  001840  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5488  001842  0A80               	xorlw	128
  5489  001844  6E3B               	movwf	??_efgtoa^0,c
  5490  001846  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5491  001848  0A80               	xorlw	128
  5492  00184A  583B               	subwfb	??_efgtoa^0,w,c
  5493  00184C  B0D8               	btfsc	status,0,c
  5494  00184E  EF2B  F00C         	goto	u4721
  5495  001852  EF2D  F00C         	goto	u4720
  5496  001856                     u4721:
  5497  001856  EF3B  F00C         	goto	l5097
  5498  00185A                     u4720:
  5499  00185A                     
  5500                           ; BSR set to: 0
  5501  00185A  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5502  00185C  EF39  F00C         	goto	u4731
  5503  001860  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  5504  001862  E109               	bnz	u4730
  5505  001864  0E4B               	movlw	75
  5506  001866  5D92               	subwf	efgtoa@n& (0+255),w,b
  5507  001868  A0D8               	btfss	status,0,c
  5508  00186A  EF39  F00C         	goto	u4731
  5509  00186E  EF3B  F00C         	goto	u4730
  5510  001872                     u4731:
  5511  001872  EF31  F00B         	goto	l5045
  5512  001876                     u4730:
  5513  001876                     l5097:
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5517  001876  516E               	movf	efgtoa@pp& (0+255),w,b
  5518  001878  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5519  00187A  A4D8               	btfss	status,2,c
  5520  00187C  EF42  F00C         	goto	u4741
  5521  001880  EF44  F00C         	goto	u4740
  5522  001884                     u4741:
  5523  001884  EF55  F00C         	goto	l5105
  5524  001888                     u4740:
  5525  001888                     
  5526                           ; BSR set to: 0
  5527  001888  A9F3               	btfss	_flags& (0+255),4,b
  5528  00188A  EF49  F00C         	goto	u4751
  5529  00188E  EF4B  F00C         	goto	u4750
  5530  001892                     u4751:
  5531  001892  EF55  F00C         	goto	l5105
  5532  001896                     u4750:
  5533  001896                     
  5534                           ; BSR set to: 0
  5535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5536  001896  0E0B               	movlw	low _dbuf
  5537  001898  2592               	addwf	efgtoa@n& (0+255),w,b
  5538  00189A  6ED9               	movwf	fsr2l,c
  5539  00189C  0E01               	movlw	high _dbuf
  5540  00189E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5541  0018A0  6EDA               	movwf	fsr2h,c
  5542  0018A2  0E2E               	movlw	46
  5543  0018A4  6EDF               	movwf	indf2,c
  5544  0018A6                     
  5545                           ; BSR set to: 0
  5546  0018A6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5547  0018A8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5548  0018AA                     l5105:
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5552  0018AA  0E0B               	movlw	low _dbuf
  5553  0018AC  2592               	addwf	efgtoa@n& (0+255),w,b
  5554  0018AE  6ED9               	movwf	fsr2l,c
  5555  0018B0  0E01               	movlw	high _dbuf
  5556  0018B2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5557  0018B4  6EDA               	movwf	fsr2h,c
  5558  0018B6  0E00               	movlw	0
  5559  0018B8  6EDF               	movwf	indf2,c
  5560  0018BA                     
  5561                           ; BSR set to: 0
  5562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5563  0018BA  0E65               	movlw	101
  5564  0018BC  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5565  0018BE  A4D8               	btfss	status,2,c
  5566  0018C0  EF64  F00C         	goto	u4761
  5567  0018C4  EF66  F00C         	goto	u4760
  5568  0018C8                     u4761:
  5569  0018C8  EFC0  F007         	goto	l4907
  5570  0018CC                     u4760:
  5571  0018CC                     
  5572                           ; BSR set to: 0
  5573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5574  0018CC  0E00               	movlw	0
  5575  0018CE  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5576  0018D0  0E4F               	movlw	79
  5577  0018D2  6F8A               	movwf	efgtoa@i& (0+255),b
  5578  0018D4                     
  5579                           ; BSR set to: 0
  5580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5581  0018D4  0E0B               	movlw	low _dbuf
  5582  0018D6  258A               	addwf	efgtoa@i& (0+255),w,b
  5583  0018D8  6ED9               	movwf	fsr2l,c
  5584  0018DA  0E01               	movlw	high _dbuf
  5585  0018DC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5586  0018DE  6EDA               	movwf	fsr2h,c
  5587  0018E0  0E00               	movlw	0
  5588  0018E2  6EDF               	movwf	indf2,c
  5589  0018E4                     
  5590                           ; BSR set to: 0
  5591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5592  0018E4  0E00               	movlw	0
  5593  0018E6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5594  0018E8  0E00               	movlw	0
  5595  0018EA  6F7A               	movwf	efgtoa@sign& (0+255),b
  5596  0018EC                     
  5597                           ; BSR set to: 0
  5598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5599  0018EC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5600  0018EE  EF7D  F00C         	goto	u4770
  5601  0018F2  EF7B  F00C         	goto	u4771
  5602  0018F6                     u4771:
  5603  0018F6  EF85  F00C         	goto	l5121
  5604  0018FA                     u4770:
  5605  0018FA                     
  5606                           ; BSR set to: 0
  5607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5608  0018FA  0E00               	movlw	0
  5609  0018FC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5610  0018FE  0E01               	movlw	1
  5611  001900  6F7A               	movwf	efgtoa@sign& (0+255),b
  5612  001902                     
  5613                           ; BSR set to: 0
  5614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5615  001902  6D90               	negf	efgtoa@e& (0+255),b
  5616  001904  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  5617  001906  B0D8               	btfsc	status,0,c
  5618  001908  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5619  00190A                     l5121:
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5623  00190A  0E00               	movlw	0
  5624  00190C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5625  00190E  0E02               	movlw	2
  5626  001910  6F7C               	movwf	efgtoa@p& (0+255),b
  5627                           
  5628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5629  001912  EFB6  F00C         	goto	l5133
  5630  001916                     l5123:
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5634  001916  078A               	decf	efgtoa@i& (0+255),f,b
  5635  001918  A0D8               	btfss	status,0,c
  5636  00191A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5637  00191C                     
  5638                           ; BSR set to: 0
  5639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5640  00191C  0E0B               	movlw	low _dbuf
  5641  00191E  258A               	addwf	efgtoa@i& (0+255),w,b
  5642  001920  6ED9               	movwf	fsr2l,c
  5643  001922  0E01               	movlw	high _dbuf
  5644  001924  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5645  001926  6EDA               	movwf	fsr2h,c
  5646  001928  C090  F001         	movff	efgtoa@e,___awmod@dividend
  5647  00192C  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5648  001930  0E00               	movlw	0
  5649  001932  6E04               	movwf	(___awmod@divisor+1)^0,c
  5650  001934  0E0A               	movlw	10
  5651  001936  6E03               	movwf	___awmod@divisor^0,c
  5652  001938  EC1E  F020         	call	___awmod	;wreg free
  5653  00193C  5001               	movf	?___awmod^0,w,c
  5654  00193E  0F30               	addlw	48
  5655  001940  6EDF               	movwf	indf2,c
  5656  001942                     
  5657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5658  001942  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  5659  001946  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5660  00194A  0E00               	movlw	0
  5661  00194C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5662  00194E  0E0A               	movlw	10
  5663  001950  6E03               	movwf	___awdiv@divisor^0,c
  5664  001952  EC5B  F01F         	call	___awdiv	;wreg free
  5665  001956  C001  F090         	movff	?___awdiv,efgtoa@e
  5666  00195A  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  5667  00195E                     
  5668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5669  00195E  0100               	movlb	0	; () banked
  5670  001960  077C               	decf	efgtoa@p& (0+255),f,b
  5671  001962  A0D8               	btfss	status,0,c
  5672  001964  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  5673  001966                     
  5674                           ; BSR set to: 0
  5675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5676  001966  077E               	decf	efgtoa@w& (0+255),f,b
  5677  001968  A0D8               	btfss	status,0,c
  5678  00196A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5679  00196C                     l5133:
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5683  00196C  5190               	movf	efgtoa@e& (0+255),w,b
  5684  00196E  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5685  001970  A4D8               	btfss	status,2,c
  5686  001972  EFBD  F00C         	goto	u4781
  5687  001976  EFBF  F00C         	goto	u4780
  5688  00197A                     u4781:
  5689  00197A  EF8B  F00C         	goto	l5123
  5690  00197E                     u4780:
  5691  00197E                     
  5692                           ; BSR set to: 0
  5693  00197E  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5694  001980  EFCC  F00C         	goto	u4790
  5695  001984  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  5696  001986  E106               	bnz	u4791
  5697  001988  057C               	decf	efgtoa@p& (0+255),w,b
  5698  00198A  B0D8               	btfsc	status,0,c
  5699  00198C  EFCA  F00C         	goto	u4791
  5700  001990  EFCC  F00C         	goto	u4790
  5701  001994                     u4791:
  5702  001994  EF8B  F00C         	goto	l5123
  5703  001998                     u4790:
  5704  001998                     
  5705                           ; BSR set to: 0
  5706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5707  001998  078A               	decf	efgtoa@i& (0+255),f,b
  5708  00199A  A0D8               	btfss	status,0,c
  5709  00199C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5710  00199E                     
  5711                           ; BSR set to: 0
  5712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5713  00199E  517A               	movf	efgtoa@sign& (0+255),w,b
  5714  0019A0  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5715  0019A2  A4D8               	btfss	status,2,c
  5716  0019A4  EFD6  F00C         	goto	u4801
  5717  0019A8  EFD8  F00C         	goto	u4800
  5718  0019AC                     u4801:
  5719  0019AC  EFDE  F00C         	goto	l5143
  5720  0019B0                     u4800:
  5721  0019B0                     
  5722                           ; BSR set to: 0
  5723  0019B0  0E00               	movlw	0
  5724  0019B2  6F67               	movwf	(_efgtoa$2039+1)& (0+255),b
  5725  0019B4  0E2B               	movlw	43
  5726  0019B6  6F66               	movwf	_efgtoa$2039& (0+255),b
  5727  0019B8  EFE2  F00C         	goto	l5145
  5728  0019BC                     l5143:
  5729                           
  5730                           ; BSR set to: 0
  5731  0019BC  0E00               	movlw	0
  5732  0019BE  6F67               	movwf	(_efgtoa$2039+1)& (0+255),b
  5733  0019C0  0E2D               	movlw	45
  5734  0019C2  6F66               	movwf	_efgtoa$2039& (0+255),b
  5735  0019C4                     l5145:
  5736                           
  5737                           ; BSR set to: 0
  5738  0019C4  0E0B               	movlw	low _dbuf
  5739  0019C6  258A               	addwf	efgtoa@i& (0+255),w,b
  5740  0019C8  6ED9               	movwf	fsr2l,c
  5741  0019CA  0E01               	movlw	high _dbuf
  5742  0019CC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5743  0019CE  6EDA               	movwf	fsr2h,c
  5744  0019D0  C066  FFDF         	movff	_efgtoa$2039,indf2
  5745  0019D4                     
  5746                           ; BSR set to: 0
  5747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5748  0019D4  077E               	decf	efgtoa@w& (0+255),f,b
  5749  0019D6  A0D8               	btfss	status,0,c
  5750  0019D8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5751  0019DA                     
  5752                           ; BSR set to: 0
  5753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5754  0019DA  078A               	decf	efgtoa@i& (0+255),f,b
  5755  0019DC  A0D8               	btfss	status,0,c
  5756  0019DE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5757  0019E0                     
  5758                           ; BSR set to: 0
  5759  0019E0  0EBF               	movlw	191
  5760  0019E2  6E3B               	movwf	??_efgtoa^0,c
  5761  0019E4  0EFF               	movlw	255
  5762  0019E6  6E3C               	movwf	(??_efgtoa+1)^0,c
  5763  0019E8  503A               	movf	efgtoa@c^0,w,c
  5764  0019EA  6E3D               	movwf	(??_efgtoa+2)^0,c
  5765  0019EC  6A3E               	clrf	(??_efgtoa+3)^0,c
  5766  0019EE  503B               	movf	??_efgtoa^0,w,c
  5767  0019F0  263D               	addwf	(??_efgtoa+2)^0,f,c
  5768  0019F2  503C               	movf	(??_efgtoa+1)^0,w,c
  5769  0019F4  223E               	addwfc	(??_efgtoa+3)^0,f,c
  5770  0019F6  503E               	movf	(??_efgtoa+3)^0,w,c
  5771  0019F8  E10A               	bnz	u4810
  5772  0019FA  0E1A               	movlw	26
  5773  0019FC  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  5774  0019FE  A0D8               	btfss	status,0,c
  5775  001A00  EF04  F00D         	goto	u4811
  5776  001A04  EF07  F00D         	goto	u4810
  5777  001A08                     u4811:
  5778  001A08  0E01               	movlw	1
  5779  001A0A  EF08  F00D         	goto	u4820
  5780  001A0E                     u4810:
  5781  001A0E  0E00               	movlw	0
  5782  001A10                     u4820:
  5783  001A10  6F6A               	movwf	_efgtoa$2041& (0+255),b
  5784  001A12  6B6B               	clrf	(_efgtoa$2041+1)& (0+255),b
  5785  001A14                     
  5786                           ; BSR set to: 0
  5787  001A14  516A               	movf	_efgtoa$2041& (0+255),w,b
  5788  001A16  116B               	iorwf	(_efgtoa$2041+1)& (0+255),w,b
  5789  001A18  A4D8               	btfss	status,2,c
  5790  001A1A  EF11  F00D         	goto	u4831
  5791  001A1E  EF13  F00D         	goto	u4830
  5792  001A22                     u4831:
  5793  001A22  EF19  F00D         	goto	l5159
  5794  001A26                     u4830:
  5795  001A26                     
  5796                           ; BSR set to: 0
  5797  001A26  0E00               	movlw	0
  5798  001A28  6F69               	movwf	(_efgtoa$2040+1)& (0+255),b
  5799  001A2A  0E65               	movlw	101
  5800  001A2C  6F68               	movwf	_efgtoa$2040& (0+255),b
  5801  001A2E  EF1D  F00D         	goto	l5161
  5802  001A32                     l5159:
  5803                           
  5804                           ; BSR set to: 0
  5805  001A32  0E00               	movlw	0
  5806  001A34  6F69               	movwf	(_efgtoa$2040+1)& (0+255),b
  5807  001A36  0E45               	movlw	69
  5808  001A38  6F68               	movwf	_efgtoa$2040& (0+255),b
  5809  001A3A                     l5161:
  5810                           
  5811                           ; BSR set to: 0
  5812  001A3A  0E0B               	movlw	low _dbuf
  5813  001A3C  258A               	addwf	efgtoa@i& (0+255),w,b
  5814  001A3E  6ED9               	movwf	fsr2l,c
  5815  001A40  0E01               	movlw	high _dbuf
  5816  001A42  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5817  001A44  6EDA               	movwf	fsr2h,c
  5818  001A46  C068  FFDF         	movff	_efgtoa$2040,indf2
  5819  001A4A                     
  5820                           ; BSR set to: 0
  5821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5822  001A4A  077E               	decf	efgtoa@w& (0+255),f,b
  5823  001A4C  A0D8               	btfss	status,0,c
  5824  001A4E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5825  001A50                     
  5826                           ; BSR set to: 0
  5827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5828  001A50  0E0B               	movlw	low _dbuf
  5829  001A52  2592               	addwf	efgtoa@n& (0+255),w,b
  5830  001A54  6E01               	movwf	strcpy@dest^0,c
  5831  001A56  0E01               	movlw	high _dbuf
  5832  001A58  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5833  001A5A  6E02               	movwf	(strcpy@dest+1)^0,c
  5834  001A5C  0E0B               	movlw	low _dbuf
  5835  001A5E  258A               	addwf	efgtoa@i& (0+255),w,b
  5836  001A60  6E03               	movwf	strcpy@src^0,c
  5837  001A62  0E01               	movlw	high _dbuf
  5838  001A64  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5839  001A66  6E04               	movwf	(strcpy@src+1)^0,c
  5840  001A68  EC66  F022         	call	_strcpy	;wreg free
  5841  001A6C  EFC0  F007         	goto	l4907
  5842  001A70                     l1852:
  5843  001A70  0012               	return		;funcret
  5844  001A72                     __end_of_efgtoa:
  5845                           	callstack 0
  5846                           
  5847 ;; *************** function _tolower *****************
  5848 ;; Defined at:
  5849 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  c               2    6[COMRAM] int 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  2    6[COMRAM] int 
  5856 ;; Registers used:
  5857 ;;		wreg, status,2, status,0
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5867 ;;Total ram usage:        8 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 3
  5870 ;; This function calls:
  5871 ;;		_isupper
  5872 ;; This function is called by:
  5873 ;;		_efgtoa
  5874 ;;		_vfpfcnvrt
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text16
  5879  00446C                     __ptext16:
  5880                           	callstack 0
  5881  00446C                     _tolower:
  5882                           	callstack 22
  5883  00446C  0EBF               	movlw	191
  5884  00446E  6E09               	movwf	??_tolower^0,c
  5885  004470  0EFF               	movlw	255
  5886  004472  6E0A               	movwf	(??_tolower+1)^0,c
  5887  004474  C007  F00B         	movff	tolower@c,??_tolower+2
  5888  004478  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5889  00447C  5009               	movf	??_tolower^0,w,c
  5890  00447E  260B               	addwf	(??_tolower+2)^0,f,c
  5891  004480  500A               	movf	(??_tolower+1)^0,w,c
  5892  004482  220C               	addwfc	(??_tolower+3)^0,f,c
  5893  004484  500C               	movf	(??_tolower+3)^0,w,c
  5894  004486  E10A               	bnz	u4130
  5895  004488  0E1A               	movlw	26
  5896  00448A  5C0B               	subwf	(??_tolower+2)^0,w,c
  5897  00448C  A0D8               	btfss	status,0,c
  5898  00448E  EF4B  F022         	goto	u4131
  5899  004492  EF4E  F022         	goto	u4130
  5900  004496                     u4131:
  5901  004496  0E01               	movlw	1
  5902  004498  EF4F  F022         	goto	u4140
  5903  00449C                     u4130:
  5904  00449C  0E00               	movlw	0
  5905  00449E                     u4140:
  5906  00449E  6E0D               	movwf	_tolower$2186^0,c
  5907  0044A0  6A0E               	clrf	(_tolower$2186+1)^0,c
  5908  0044A2  500D               	movf	_tolower$2186^0,w,c
  5909  0044A4  100E               	iorwf	(_tolower$2186+1)^0,w,c
  5910  0044A6  B4D8               	btfsc	status,2,c
  5911  0044A8  EF58  F022         	goto	u4151
  5912  0044AC  EF5A  F022         	goto	u4150
  5913  0044B0                     u4151:
  5914  0044B0  EF61  F022         	goto	l2087
  5915  0044B4                     u4150:
  5916  0044B4  0E20               	movlw	32
  5917  0044B6  1007               	iorwf	tolower@c^0,w,c
  5918  0044B8  6E07               	movwf	?_tolower^0,c
  5919  0044BA  5008               	movf	(tolower@c+1)^0,w,c
  5920  0044BC  6E08               	movwf	(?_tolower+1)^0,c
  5921  0044BE  EF65  F022         	goto	l2092
  5922  0044C2                     l2087:
  5923  0044C2  C007  F007         	movff	tolower@c,?_tolower
  5924  0044C6  C008  F008         	movff	tolower@c+1,?_tolower+1
  5925  0044CA                     l2092:
  5926  0044CA  0012               	return		;funcret
  5927  0044CC                     __end_of_tolower:
  5928                           	callstack 0
  5929                           
  5930 ;; *************** function _isupper *****************
  5931 ;; Defined at:
  5932 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  c               2    0[COMRAM] int 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  2    0[COMRAM] int 
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, status,0
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5950 ;;Total ram usage:        6 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; Hardware stack levels required when called: 2
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_efgtoa
  5957 ;;		_vfpfcnvrt
  5958 ;;		_tolower
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text17
  5963  00478E                     __ptext17:
  5964                           	callstack 0
  5965  00478E                     _isupper:
  5966                           	callstack 22
  5967  00478E  0EBF               	movlw	191
  5968  004790  6E03               	movwf	??_isupper^0,c
  5969  004792  0EFF               	movlw	255
  5970  004794  6E04               	movwf	(??_isupper+1)^0,c
  5971  004796  C001  F005         	movff	isupper@c,??_isupper+2
  5972  00479A  C002  F006         	movff	isupper@c+1,??_isupper+3
  5973  00479E  5003               	movf	??_isupper^0,w,c
  5974  0047A0  2605               	addwf	(??_isupper+2)^0,f,c
  5975  0047A2  5004               	movf	(??_isupper+1)^0,w,c
  5976  0047A4  2206               	addwfc	(??_isupper+3)^0,f,c
  5977  0047A6  5006               	movf	(??_isupper+3)^0,w,c
  5978  0047A8  E10A               	bnz	u3280
  5979  0047AA  0E1A               	movlw	26
  5980  0047AC  5C05               	subwf	(??_isupper+2)^0,w,c
  5981  0047AE  A0D8               	btfss	status,0,c
  5982  0047B0  EFDC  F023         	goto	u3281
  5983  0047B4  EFDF  F023         	goto	u3280
  5984  0047B8                     u3281:
  5985  0047B8  0E01               	movlw	1
  5986  0047BA  EFE0  F023         	goto	u3290
  5987  0047BE                     u3280:
  5988  0047BE  0E00               	movlw	0
  5989  0047C0                     u3290:
  5990  0047C0  6E01               	movwf	?_isupper^0,c
  5991  0047C2  6A02               	clrf	(?_isupper+1)^0,c
  5992  0047C4  0012               	return		;funcret
  5993  0047C6                     __end_of_isupper:
  5994                           	callstack 0
  5995                           
  5996 ;; *************** function _strcpy *****************
  5997 ;; Defined at:
  5998 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6001 ;;		 -> dbuf(80), 
  6002 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6003 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  6004 ;;		 -> dbuf(80), 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  d               2    8[COMRAM] PTR unsigned char 
  6007 ;;		 -> dbuf(80), 
  6008 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6009 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  6010 ;;		 -> dbuf(80), 
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  2    0[COMRAM] PTR unsigned char 
  6013 ;; Registers used:
  6014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6020 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6023 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6024 ;;Total ram usage:       10 bytes
  6025 ;; Hardware stack levels used: 1
  6026 ;; Hardware stack levels required when called: 2
  6027 ;; This function calls:
  6028 ;;		Nothing
  6029 ;; This function is called by:
  6030 ;;		_efgtoa
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           	psect	text18
  6035  0044CC                     __ptext18:
  6036                           	callstack 0
  6037  0044CC                     _strcpy:
  6038                           	callstack 22
  6039  0044CC  C003  F007         	movff	strcpy@src,strcpy@s
  6040  0044D0  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6041  0044D4  C001  F009         	movff	strcpy@dest,strcpy@d
  6042  0044D8  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6043  0044DC                     l4807:
  6044  0044DC  5007               	movf	strcpy@s^0,w,c
  6045  0044DE  6E05               	movwf	??_strcpy^0,c
  6046  0044E0  5008               	movf	(strcpy@s+1)^0,w,c
  6047  0044E2  6E06               	movwf	(??_strcpy+1)^0,c
  6048  0044E4  4A07               	infsnz	strcpy@s^0,f,c
  6049  0044E6  2A08               	incf	(strcpy@s+1)^0,f,c
  6050  0044E8  C005  FFF6         	movff	??_strcpy,tblptrl
  6051  0044EC  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6052  0044F0  0E00               	movlw	low (__smallconst shr (0+16))
  6053  0044F2  6EF8               	movwf	tblptru,c
  6054  0044F4  C009  FFD9         	movff	strcpy@d,fsr2l
  6055  0044F8  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6056  0044FC  4A09               	infsnz	strcpy@d^0,f,c
  6057  0044FE  2A0A               	incf	(strcpy@d+1)^0,f,c
  6058  004500  0E0D               	movlw	(high __ramtop+-1)
  6059  004502  64F7               	cpfsgt	tblptrh,c
  6060  004504  D003               	bra	u4117
  6061  004506  0008               	tblrd		*
  6062  004508  50F5               	movf	tablat,w,c
  6063  00450A  D005               	bra	u4110
  6064  00450C                     u4117:
  6065  00450C  CFF6 FFE1          	movff	tblptrl,fsr1l
  6066  004510  CFF7 FFE2          	movff	tblptrh,fsr1h
  6067  004514  50E7               	movf	indf1,w,c
  6068  004516                     u4110:
  6069  004516  6EDF               	movwf	indf2,c
  6070  004518  50DF               	movf	indf2,w,c
  6071  00451A  A4D8               	btfss	status,2,c
  6072  00451C  EF92  F022         	goto	u4121
  6073  004520  EF94  F022         	goto	u4120
  6074  004524                     u4121:
  6075  004524  EF6E  F022         	goto	l4807
  6076  004528                     u4120:
  6077  004528  0012               	return		;funcret
  6078  00452A                     __end_of_strcpy:
  6079                           	callstack 0
  6080                           
  6081 ;; *************** function _pad *****************
  6082 ;; Defined at:
  6083 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  6086 ;;		 -> sprintf@f(6), 
  6087 ;;  buf             2   20[COMRAM] PTR unsigned char 
  6088 ;;		 -> dbuf(80), 
  6089 ;;  p               2   22[COMRAM] int 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  w               2   27[COMRAM] int 
  6092 ;;  i               2   25[COMRAM] int 
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  2   18[COMRAM] int 
  6095 ;; Registers used:
  6096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6102 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6103 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6105 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6106 ;;Total ram usage:       11 bytes
  6107 ;; Hardware stack levels used: 1
  6108 ;; Hardware stack levels required when called: 6
  6109 ;; This function calls:
  6110 ;;		_fputc
  6111 ;;		_fputs
  6112 ;;		_strlen
  6113 ;; This function is called by:
  6114 ;;		_efgtoa
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text19
  6119  003DF0                     __ptext19:
  6120                           	callstack 0
  6121  003DF0                     _pad:
  6122                           	callstack 18
  6123  003DF0                     
  6124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6125  003DF0  0100               	movlb	0	; () banked
  6126  003DF2  A1F3               	btfss	_flags& (0+255),0,b
  6127  003DF4  EFFE  F01E         	goto	u4001
  6128  003DF8  EF00  F01F         	goto	u4000
  6129  003DFC                     u4001:
  6130  003DFC  EF0A  F01F         	goto	l4765
  6131  003E00                     u4000:
  6132  003E00                     
  6133                           ; BSR set to: 0
  6134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6135  003E00  C015  F00C         	movff	pad@buf,fputs@s
  6136  003E04  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6137  003E08  C013  F00E         	movff	pad@fp,fputs@fp
  6138  003E0C  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6139  003E10  ECA5  F023         	call	_fputs	;wreg free
  6140  003E14                     l4765:
  6141                           
  6142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6143  003E14  BE18               	btfsc	(pad@p+1)^0,7,c
  6144  003E16  EF0F  F01F         	goto	u4011
  6145  003E1A  EF11  F01F         	goto	u4010
  6146  003E1E                     u4011:
  6147  003E1E  EF17  F01F         	goto	l4769
  6148  003E22                     u4010:
  6149  003E22  C017  F01C         	movff	pad@p,pad@w
  6150  003E26  C018  F01D         	movff	pad@p+1,pad@w+1
  6151  003E2A  EF1B  F01F         	goto	l1829
  6152  003E2E                     l4769:
  6153  003E2E  0E00               	movlw	0
  6154  003E30  6E1D               	movwf	(pad@w+1)^0,c
  6155  003E32  0E00               	movlw	0
  6156  003E34  6E1C               	movwf	pad@w^0,c
  6157  003E36                     l1829:
  6158                           
  6159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6160  003E36  0E00               	movlw	0
  6161  003E38  6E1B               	movwf	(pad@i+1)^0,c
  6162  003E3A  0E00               	movlw	0
  6163  003E3C  6E1A               	movwf	pad@i^0,c
  6164                           
  6165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6166  003E3E  EF2D  F01F         	goto	l4775
  6167  003E42                     l4771:
  6168                           
  6169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6170  003E42  0E00               	movlw	0
  6171  003E44  6E04               	movwf	(fputc@c+1)^0,c
  6172  003E46  0E20               	movlw	32
  6173  003E48  6E03               	movwf	fputc@c^0,c
  6174  003E4A  C013  F005         	movff	pad@fp,fputc@fp
  6175  003E4E  C014  F006         	movff	pad@fp+1,fputc@fp+1
  6176  003E52  EC93  F01E         	call	_fputc	;wreg free
  6177  003E56                     
  6178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6179  003E56  4A1A               	infsnz	pad@i^0,f,c
  6180  003E58  2A1B               	incf	(pad@i+1)^0,f,c
  6181  003E5A                     l4775:
  6182                           
  6183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6184  003E5A  501C               	movf	pad@w^0,w,c
  6185  003E5C  5C1A               	subwf	pad@i^0,w,c
  6186  003E5E  501B               	movf	(pad@i+1)^0,w,c
  6187  003E60  0A80               	xorlw	128
  6188  003E62  6E19               	movwf	??_pad^0,c
  6189  003E64  501D               	movf	(pad@w+1)^0,w,c
  6190  003E66  0A80               	xorlw	128
  6191  003E68  5819               	subwfb	??_pad^0,w,c
  6192  003E6A  A0D8               	btfss	status,0,c
  6193  003E6C  EF3A  F01F         	goto	u4021
  6194  003E70  EF3C  F01F         	goto	u4020
  6195  003E74                     u4021:
  6196  003E74  EF21  F01F         	goto	l4771
  6197  003E78                     u4020:
  6198  003E78                     
  6199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6200  003E78  0100               	movlb	0	; () banked
  6201  003E7A  B1F3               	btfsc	_flags& (0+255),0,b
  6202  003E7C  EF42  F01F         	goto	u4031
  6203  003E80  EF44  F01F         	goto	u4030
  6204  003E84                     u4031:
  6205  003E84  EF4E  F01F         	goto	l4779
  6206  003E88                     u4030:
  6207  003E88                     
  6208                           ; BSR set to: 0
  6209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6210  003E88  C015  F00C         	movff	pad@buf,fputs@s
  6211  003E8C  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6212  003E90  C013  F00E         	movff	pad@fp,fputs@fp
  6213  003E94  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6214  003E98  ECA5  F023         	call	_fputs	;wreg free
  6215  003E9C                     l4779:
  6216                           
  6217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6218  003E9C  C015  F001         	movff	pad@buf,strlen@s
  6219  003EA0  C016  F002         	movff	pad@buf+1,strlen@s+1
  6220  003EA4  EC1B  F024         	call	_strlen	;wreg free
  6221  003EA8  501C               	movf	pad@w^0,w,c
  6222  003EAA  2401               	addwf	?_strlen^0,w,c
  6223  003EAC  6E13               	movwf	?_pad^0,c
  6224  003EAE  501D               	movf	(pad@w+1)^0,w,c
  6225  003EB0  2002               	addwfc	(?_strlen+1)^0,w,c
  6226  003EB2  6E14               	movwf	(?_pad+1)^0,c
  6227  003EB4  0012               	return		;funcret
  6228  003EB6                     __end_of_pad:
  6229                           	callstack 0
  6230                           
  6231 ;; *************** function _strlen *****************
  6232 ;; Defined at:
  6233 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6236 ;;		 -> dbuf(80), msgOK(3), ConvertADCtoSend@msgValue(8), 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6239 ;;		 -> dbuf(80), msgOK(3), ConvertADCtoSend@msgValue(8), 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  2    0[COMRAM] unsigned int 
  6242 ;; Registers used:
  6243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6253 ;;Total ram usage:        4 bytes
  6254 ;; Hardware stack levels used: 1
  6255 ;; Hardware stack levels required when called: 2
  6256 ;; This function calls:
  6257 ;;		Nothing
  6258 ;; This function is called by:
  6259 ;;		_executeCommand
  6260 ;;		_pad
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           	psect	text20
  6265  004836                     __ptext20:
  6266                           	callstack 0
  6267  004836                     _strlen:
  6268                           	callstack 27
  6269  004836  C001  F003         	movff	strlen@s,strlen@a
  6270  00483A  C002  F004         	movff	strlen@s+1,strlen@a+1
  6271  00483E  EF23  F024         	goto	l4091
  6272  004842                     l4089:
  6273  004842  4A01               	infsnz	strlen@s^0,f,c
  6274  004844  2A02               	incf	(strlen@s+1)^0,f,c
  6275  004846                     l4091:
  6276  004846  C001  FFD9         	movff	strlen@s,fsr2l
  6277  00484A  C002  FFDA         	movff	strlen@s+1,fsr2h
  6278  00484E  50DF               	movf	indf2,w,c
  6279  004850  A4D8               	btfss	status,2,c
  6280  004852  EF2D  F024         	goto	u2871
  6281  004856  EF2F  F024         	goto	u2870
  6282  00485A                     u2871:
  6283  00485A  EF21  F024         	goto	l4089
  6284  00485E                     u2870:
  6285  00485E  5003               	movf	strlen@a^0,w,c
  6286  004860  5C01               	subwf	strlen@s^0,w,c
  6287  004862  6E01               	movwf	?_strlen^0,c
  6288  004864  5004               	movf	(strlen@a+1)^0,w,c
  6289  004866  5802               	subwfb	(strlen@s+1)^0,w,c
  6290  004868  6E02               	movwf	(?_strlen+1)^0,c
  6291  00486A  0012               	return		;funcret
  6292  00486C                     __end_of_strlen:
  6293                           	callstack 0
  6294                           
  6295 ;; *************** function _fputs *****************
  6296 ;; Defined at:
  6297 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6300 ;;		 -> dbuf(80), 
  6301 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6302 ;;		 -> sprintf@f(6), 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;  i               2   16[COMRAM] int 
  6305 ;;  c               1   15[COMRAM] unsigned char 
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  2   11[COMRAM] int 
  6308 ;; Registers used:
  6309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6316 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;Total ram usage:        7 bytes
  6320 ;; Hardware stack levels used: 1
  6321 ;; Hardware stack levels required when called: 5
  6322 ;; This function calls:
  6323 ;;		_fputc
  6324 ;; This function is called by:
  6325 ;;		_pad
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text21
  6330  00474A                     __ptext21:
  6331                           	callstack 0
  6332  00474A                     _fputs:
  6333                           	callstack 18
  6334  00474A  0E00               	movlw	0
  6335  00474C  6E12               	movwf	(fputs@i+1)^0,c
  6336  00474E  0E00               	movlw	0
  6337  004750  6E11               	movwf	fputs@i^0,c
  6338  004752  EFB6  F023         	goto	l4305
  6339  004756                     l4301:
  6340  004756  C010  F003         	movff	fputs@c,fputc@c
  6341  00475A  6A04               	clrf	(fputc@c+1)^0,c
  6342  00475C  C00E  F005         	movff	fputs@fp,fputc@fp
  6343  004760  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  6344  004764  EC93  F01E         	call	_fputc	;wreg free
  6345  004768  4A11               	infsnz	fputs@i^0,f,c
  6346  00476A  2A12               	incf	(fputs@i+1)^0,f,c
  6347  00476C                     l4305:
  6348  00476C  5011               	movf	fputs@i^0,w,c
  6349  00476E  240C               	addwf	fputs@s^0,w,c
  6350  004770  6ED9               	movwf	fsr2l,c
  6351  004772  5012               	movf	(fputs@i+1)^0,w,c
  6352  004774  200D               	addwfc	(fputs@s+1)^0,w,c
  6353  004776  6EDA               	movwf	fsr2h,c
  6354  004778  50DF               	movf	indf2,w,c
  6355  00477A  6E10               	movwf	fputs@c^0,c
  6356  00477C  5010               	movf	fputs@c^0,w,c
  6357  00477E  A4D8               	btfss	status,2,c
  6358  004780  EFC4  F023         	goto	u3271
  6359  004784  EFC6  F023         	goto	u3270
  6360  004788                     u3271:
  6361  004788  EFAB  F023         	goto	l4301
  6362  00478C                     u3270:
  6363  00478C  0012               	return		;funcret
  6364  00478E                     __end_of_fputs:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function _fputc *****************
  6368 ;; Defined at:
  6369 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  c               2    2[COMRAM] int 
  6372 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  6373 ;;		 -> sprintf@f(6), 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;		None
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  2    2[COMRAM] int 
  6378 ;; Registers used:
  6379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6387 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6388 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6389 ;;Total ram usage:        9 bytes
  6390 ;; Hardware stack levels used: 1
  6391 ;; Hardware stack levels required when called: 4
  6392 ;; This function calls:
  6393 ;;		_putch
  6394 ;; This function is called by:
  6395 ;;		_pad
  6396 ;;		_vfpfcnvrt
  6397 ;;		_fputs
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text22
  6402  003D26                     __ptext22:
  6403                           	callstack 0
  6404  003D26                     _fputc:
  6405                           	callstack 21
  6406  003D26  5005               	movf	fputc@fp^0,w,c
  6407  003D28  1006               	iorwf	(fputc@fp+1)^0,w,c
  6408  003D2A  B4D8               	btfsc	status,2,c
  6409  003D2C  EF9A  F01E         	goto	u2831
  6410  003D30  EF9C  F01E         	goto	u2830
  6411  003D34                     u2831:
  6412  003D34  EFA5  F01E         	goto	l4077
  6413  003D38                     u2830:
  6414  003D38  5005               	movf	fputc@fp^0,w,c
  6415  003D3A  1006               	iorwf	(fputc@fp+1)^0,w,c
  6416  003D3C  A4D8               	btfss	status,2,c
  6417  003D3E  EFA3  F01E         	goto	u2841
  6418  003D42  EFA5  F01E         	goto	u2840
  6419  003D46                     u2841:
  6420  003D46  EFAA  F01E         	goto	l4079
  6421  003D4A                     u2840:
  6422  003D4A                     l4077:
  6423  003D4A  5003               	movf	fputc@c^0,w,c
  6424  003D4C  EC60  F025         	call	_putch
  6425  003D50  EFF7  F01E         	goto	l2045
  6426  003D54                     l4079:
  6427  003D54  EE20 F004          	lfsr	2,4
  6428  003D58  5005               	movf	fputc@fp^0,w,c
  6429  003D5A  26D9               	addwf	fsr2l,f,c
  6430  003D5C  5006               	movf	(fputc@fp+1)^0,w,c
  6431  003D5E  22DA               	addwfc	fsr2h,f,c
  6432  003D60  50DE               	movf	postinc2,w,c
  6433  003D62  10DE               	iorwf	postinc2,w,c
  6434  003D64  B4D8               	btfsc	status,2,c
  6435  003D66  EFB7  F01E         	goto	u2851
  6436  003D6A  EFB9  F01E         	goto	u2850
  6437  003D6E                     u2851:
  6438  003D6E  EFD4  F01E         	goto	l4083
  6439  003D72                     u2850:
  6440  003D72  EE20 F004          	lfsr	2,4
  6441  003D76  5005               	movf	fputc@fp^0,w,c
  6442  003D78  26D9               	addwf	fsr2l,f,c
  6443  003D7A  5006               	movf	(fputc@fp+1)^0,w,c
  6444  003D7C  22DA               	addwfc	fsr2h,f,c
  6445  003D7E  EE10 F002          	lfsr	1,2
  6446  003D82  5005               	movf	fputc@fp^0,w,c
  6447  003D84  26E1               	addwf	fsr1l,f,c
  6448  003D86  5006               	movf	(fputc@fp+1)^0,w,c
  6449  003D88  22E2               	addwfc	fsr1h,f,c
  6450  003D8A  50DE               	movf	postinc2,w,c
  6451  003D8C  5CE6               	subwf	postinc1,w,c
  6452  003D8E  50E6               	movf	postinc1,w,c
  6453  003D90  0A80               	xorlw	128
  6454  003D92  6E0B               	movwf	(??_fputc+4)^0,c
  6455  003D94  50DE               	movf	postinc2,w,c
  6456  003D96  0A80               	xorlw	128
  6457  003D98  580B               	subwfb	(??_fputc+4)^0,w,c
  6458  003D9A  B0D8               	btfsc	status,0,c
  6459  003D9C  EFD2  F01E         	goto	u2861
  6460  003DA0  EFD4  F01E         	goto	u2860
  6461  003DA4                     u2861:
  6462  003DA4  EFF7  F01E         	goto	l2045
  6463  003DA8                     u2860:
  6464  003DA8                     l4083:
  6465  003DA8  EE20 F002          	lfsr	2,2
  6466  003DAC  5005               	movf	fputc@fp^0,w,c
  6467  003DAE  26D9               	addwf	fsr2l,f,c
  6468  003DB0  5006               	movf	(fputc@fp+1)^0,w,c
  6469  003DB2  22DA               	addwfc	fsr2h,f,c
  6470  003DB4  CFDE F007          	movff	postinc2,??_fputc
  6471  003DB8  CFDD F008          	movff	postdec2,??_fputc+1
  6472  003DBC  C005  FFD9         	movff	fputc@fp,fsr2l
  6473  003DC0  C006  FFDA         	movff	fputc@fp+1,fsr2h
  6474  003DC4  CFDE F009          	movff	postinc2,??_fputc+2
  6475  003DC8  CFDD F00A          	movff	postdec2,??_fputc+3
  6476  003DCC  5007               	movf	??_fputc^0,w,c
  6477  003DCE  2409               	addwf	(??_fputc+2)^0,w,c
  6478  003DD0  6ED9               	movwf	fsr2l,c
  6479  003DD2  5008               	movf	(??_fputc+1)^0,w,c
  6480  003DD4  200A               	addwfc	(??_fputc+3)^0,w,c
  6481  003DD6  6EDA               	movwf	fsr2h,c
  6482  003DD8  C003  FFDF         	movff	fputc@c,indf2
  6483  003DDC  EE20 F002          	lfsr	2,2
  6484  003DE0  5005               	movf	fputc@fp^0,w,c
  6485  003DE2  26D9               	addwf	fsr2l,f,c
  6486  003DE4  5006               	movf	(fputc@fp+1)^0,w,c
  6487  003DE6  22DA               	addwfc	fsr2h,f,c
  6488  003DE8  2ADE               	incf	postinc2,f,c
  6489  003DEA  0E00               	movlw	0
  6490  003DEC  22DD               	addwfc	postdec2,f,c
  6491  003DEE                     l2045:
  6492  003DEE  0012               	return		;funcret
  6493  003DF0                     __end_of_fputc:
  6494                           	callstack 0
  6495                           
  6496 ;; *************** function _putch *****************
  6497 ;; Defined at:
  6498 ;;		line 146 in file "mcc_generated_files/eusart5.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  txData          1    wreg     unsigned char 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  txData          1    1[COMRAM] unsigned char 
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1    wreg      void 
  6505 ;; Registers used:
  6506 ;;		wreg, status,2, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6516 ;;Total ram usage:        1 bytes
  6517 ;; Hardware stack levels used: 1
  6518 ;; Hardware stack levels required when called: 3
  6519 ;; This function calls:
  6520 ;;		_EUSART5_Write
  6521 ;; This function is called by:
  6522 ;;		_fputc
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text23
  6527  004AC0                     __ptext23:
  6528                           	callstack 0
  6529  004AC0                     _putch:
  6530                           	callstack 21
  6531                           
  6532                           ;incstack = 0
  6533                           ;putch@txData stored from wreg
  6534  004AC0  6E02               	movwf	putch@txData^0,c
  6535  004AC2                     
  6536                           ;mcc_generated_files/eusart5.c: 146: void putch(char txData);mcc_generated_files/eusart5
      +                          .c: 147: {;mcc_generated_files/eusart5.c: 148:     EUSART5_Write(txData);
  6537  004AC2  5002               	movf	putch@txData^0,w,c
  6538  004AC4  EC1D  F025         	call	_EUSART5_Write
  6539  004AC8  0012               	return		;funcret
  6540  004ACA                     __end_of_putch:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function _EUSART5_Write *****************
  6544 ;; Defined at:
  6545 ;;		line 132 in file "mcc_generated_files/eusart5.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  txData          1    wreg     unsigned char 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  txData          1    0[COMRAM] unsigned char 
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  1    wreg      void 
  6552 ;; Registers used:
  6553 ;;		wreg
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6563 ;;Total ram usage:        1 bytes
  6564 ;; Hardware stack levels used: 1
  6565 ;; Hardware stack levels required when called: 2
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		_putch
  6570 ;;		_executeCommand
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text24
  6575  004A3A                     __ptext24:
  6576                           	callstack 0
  6577  004A3A                     _EUSART5_Write:
  6578                           	callstack 27
  6579                           
  6580                           ;incstack = 0
  6581                           ;EUSART5_Write@txData stored from wreg
  6582  004A3A  6E01               	movwf	EUSART5_Write@txData^0,c
  6583  004A3C                     l232:
  6584                           
  6585                           ;mcc_generated_files/eusart5.c: 134:     while(0 == PIR4bits.TX5IF)
  6586  004A3C  010E               	movlb	14	; () banked
  6587  004A3E  A937               	btfss	55,4,b	;volatile
  6588  004A40  EF24  F025         	goto	u2821
  6589  004A44  EF26  F025         	goto	u2820
  6590  004A48                     u2821:
  6591  004A48  EF1E  F025         	goto	l232
  6592  004A4C                     u2820:
  6593  004A4C                     
  6594                           ; BSR set to: 14
  6595                           ;mcc_generated_files/eusart5.c: 138:     TX5REG = txData;
  6596  004A4C  C001  FEDD         	movff	EUSART5_Write@txData,3805	;volatile
  6597  004A50                     
  6598                           ; BSR set to: 14
  6599  004A50  0012               	return		;funcret
  6600  004A52                     __end_of_EUSART5_Write:
  6601                           	callstack 0
  6602                           
  6603 ;; *************** function _floorf *****************
  6604 ;; Defined at:
  6605 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;  x               4   25[COMRAM] float 
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;  u               4   41[COMRAM] struct .
  6610 ;;  m               4   35[COMRAM] unsigned long 
  6611 ;;  e               2   39[COMRAM] int 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  4   25[COMRAM] float 
  6614 ;; Registers used:
  6615 ;;		wreg, status,2, status,0
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6622 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6623 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6624 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;Total ram usage:       20 bytes
  6626 ;; Hardware stack levels used: 1
  6627 ;; Hardware stack levels required when called: 2
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_efgtoa
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text25
  6636  002F08                     __ptext25:
  6637                           	callstack 0
  6638  002F08                     _floorf:
  6639                           	callstack 22
  6640  002F08  C100  F02A         	movff	floorf@F527,floorf@u
  6641  002F0C  C101  F02B         	movff	floorf@F527+1,floorf@u+1
  6642  002F10  C102  F02C         	movff	floorf@F527+2,floorf@u+2
  6643  002F14  C103  F02D         	movff	floorf@F527+3,floorf@u+3
  6644  002F18  C01A  F02A         	movff	floorf@x,floorf@u
  6645  002F1C  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6646  002F20  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6647  002F24  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6648  002F28  0E81               	movlw	129
  6649  002F2A  6E1E               	movwf	??_floorf^0,c
  6650  002F2C  0EFF               	movlw	255
  6651  002F2E  6E1F               	movwf	(??_floorf+1)^0,c
  6652  002F30  C02A  F020         	movff	floorf@u,??_floorf+2
  6653  002F34  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6654  002F38  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6655  002F3C  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6656  002F40  0E18               	movlw	24
  6657  002F42  EFA8  F017         	goto	u4160
  6658  002F46                     u4165:
  6659  002F46  90D8               	bcf	status,0,c
  6660  002F48  3223               	rrcf	(??_floorf+5)^0,f,c
  6661  002F4A  3222               	rrcf	(??_floorf+4)^0,f,c
  6662  002F4C  3221               	rrcf	(??_floorf+3)^0,f,c
  6663  002F4E  3220               	rrcf	(??_floorf+2)^0,f,c
  6664  002F50                     u4160:
  6665  002F50  2EE8               	decfsz	wreg,f,c
  6666  002F52  EFA3  F017         	goto	u4165
  6667  002F56  5020               	movf	(??_floorf+2)^0,w,c
  6668  002F58  241E               	addwf	??_floorf^0,w,c
  6669  002F5A  6E28               	movwf	floorf@e^0,c
  6670  002F5C  0E00               	movlw	0
  6671  002F5E  201F               	addwfc	(??_floorf+1)^0,w,c
  6672  002F60  6E29               	movwf	(floorf@e+1)^0,c
  6673  002F62  BE29               	btfsc	(floorf@e+1)^0,7,c
  6674  002F64  EFBD  F017         	goto	u4171
  6675  002F68  5029               	movf	(floorf@e+1)^0,w,c
  6676  002F6A  E109               	bnz	u4170
  6677  002F6C  0E17               	movlw	23
  6678  002F6E  5C28               	subwf	floorf@e^0,w,c
  6679  002F70  A0D8               	btfss	status,0,c
  6680  002F72  EFBD  F017         	goto	u4171
  6681  002F76  EFBF  F017         	goto	u4170
  6682  002F7A                     u4171:
  6683  002F7A  EFC9  F017         	goto	l4825
  6684  002F7E                     u4170:
  6685  002F7E                     l4823:
  6686  002F7E  C01A  F01A         	movff	floorf@x,?_floorf
  6687  002F82  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6688  002F86  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6689  002F8A  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6690  002F8E  EF8C  F018         	goto	l2006
  6691  002F92                     l4825:
  6692  002F92  BE29               	btfsc	(floorf@e+1)^0,7,c
  6693  002F94  EFCE  F017         	goto	u4181
  6694  002F98  EFD0  F017         	goto	u4180
  6695  002F9C                     u4181:
  6696  002F9C  EF40  F018         	goto	l4835
  6697  002FA0                     u4180:
  6698  002FA0  C028  F01E         	movff	floorf@e,??_floorf
  6699  002FA4  0EFF               	movlw	255
  6700  002FA6  6E1F               	movwf	(??_floorf+1)^0,c
  6701  002FA8  0EFF               	movlw	255
  6702  002FAA  6E20               	movwf	(??_floorf+2)^0,c
  6703  002FAC  0E7F               	movlw	127
  6704  002FAE  6E21               	movwf	(??_floorf+3)^0,c
  6705  002FB0  0E00               	movlw	0
  6706  002FB2  6E22               	movwf	(??_floorf+4)^0,c
  6707  002FB4                     u4195:
  6708  002FB4  661E               	tstfsz	??_floorf^0,c
  6709  002FB6  EFDF  F017         	goto	u4196
  6710  002FBA  EFE7  F017         	goto	u4197
  6711  002FBE                     u4196:
  6712  002FBE  3422               	rlcf	(??_floorf+4)^0,w,c
  6713  002FC0  3222               	rrcf	(??_floorf+4)^0,f,c
  6714  002FC2  3221               	rrcf	(??_floorf+3)^0,f,c
  6715  002FC4  3220               	rrcf	(??_floorf+2)^0,f,c
  6716  002FC6  321F               	rrcf	(??_floorf+1)^0,f,c
  6717  002FC8  2E1E               	decfsz	??_floorf^0,f,c
  6718  002FCA  EFDA  F017         	goto	u4195
  6719  002FCE                     u4197:
  6720  002FCE  C01F  F024         	movff	??_floorf+1,floorf@m
  6721  002FD2  C020  F025         	movff	??_floorf+2,floorf@m+1
  6722  002FD6  C021  F026         	movff	??_floorf+3,floorf@m+2
  6723  002FDA  C022  F027         	movff	??_floorf+4,floorf@m+3
  6724  002FDE  5024               	movf	floorf@m^0,w,c
  6725  002FE0  142A               	andwf	floorf@u^0,w,c
  6726  002FE2  6E1E               	movwf	??_floorf^0,c
  6727  002FE4  5025               	movf	(floorf@m+1)^0,w,c
  6728  002FE6  142B               	andwf	(floorf@u+1)^0,w,c
  6729  002FE8  6E1F               	movwf	(??_floorf+1)^0,c
  6730  002FEA  5026               	movf	(floorf@m+2)^0,w,c
  6731  002FEC  142C               	andwf	(floorf@u+2)^0,w,c
  6732  002FEE  6E20               	movwf	(??_floorf+2)^0,c
  6733  002FF0  5027               	movf	(floorf@m+3)^0,w,c
  6734  002FF2  142D               	andwf	(floorf@u+3)^0,w,c
  6735  002FF4  6E21               	movwf	(??_floorf+3)^0,c
  6736  002FF6  501E               	movf	??_floorf^0,w,c
  6737  002FF8  101F               	iorwf	(??_floorf+1)^0,w,c
  6738  002FFA  1020               	iorwf	(??_floorf+2)^0,w,c
  6739  002FFC  1021               	iorwf	(??_floorf+3)^0,w,c
  6740  002FFE  A4D8               	btfss	status,2,c
  6741  003000  EF04  F018         	goto	u4201
  6742  003004  EF06  F018         	goto	u4200
  6743  003008                     u4201:
  6744  003008  EF08  F018         	goto	l4831
  6745  00300C                     u4200:
  6746  00300C  EFBF  F017         	goto	l4823
  6747  003010                     l4831:
  6748  003010  C02A  F01E         	movff	floorf@u,??_floorf
  6749  003014  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6750  003018  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6751  00301C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6752  003020  0E20               	movlw	32
  6753  003022  EF18  F018         	goto	u4210
  6754  003026                     u4215:
  6755  003026  90D8               	bcf	status,0,c
  6756  003028  3221               	rrcf	(??_floorf+3)^0,f,c
  6757  00302A  3220               	rrcf	(??_floorf+2)^0,f,c
  6758  00302C  321F               	rrcf	(??_floorf+1)^0,f,c
  6759  00302E  321E               	rrcf	??_floorf^0,f,c
  6760  003030                     u4210:
  6761  003030  2EE8               	decfsz	wreg,f,c
  6762  003032  EF13  F018         	goto	u4215
  6763  003036  501E               	movf	??_floorf^0,w,c
  6764  003038  101F               	iorwf	(??_floorf+1)^0,w,c
  6765  00303A  1020               	iorwf	(??_floorf+2)^0,w,c
  6766  00303C  1021               	iorwf	(??_floorf+3)^0,w,c
  6767  00303E  B4D8               	btfsc	status,2,c
  6768  003040  EF24  F018         	goto	u4221
  6769  003044  EF26  F018         	goto	u4220
  6770  003048                     u4221:
  6771  003048  EF2E  F018         	goto	l2009
  6772  00304C                     u4220:
  6773  00304C  5024               	movf	floorf@m^0,w,c
  6774  00304E  262A               	addwf	floorf@u^0,f,c
  6775  003050  5025               	movf	(floorf@m+1)^0,w,c
  6776  003052  222B               	addwfc	(floorf@u+1)^0,f,c
  6777  003054  5026               	movf	(floorf@m+2)^0,w,c
  6778  003056  222C               	addwfc	(floorf@u+2)^0,f,c
  6779  003058  5027               	movf	(floorf@m+3)^0,w,c
  6780  00305A  222D               	addwfc	(floorf@u+3)^0,f,c
  6781  00305C                     l2009:
  6782  00305C  1C24               	comf	floorf@m^0,w,c
  6783  00305E  6E1E               	movwf	??_floorf^0,c
  6784  003060  1C25               	comf	(floorf@m+1)^0,w,c
  6785  003062  6E1F               	movwf	(??_floorf+1)^0,c
  6786  003064  1C26               	comf	(floorf@m+2)^0,w,c
  6787  003066  6E20               	movwf	(??_floorf+2)^0,c
  6788  003068  1C27               	comf	(floorf@m+3)^0,w,c
  6789  00306A  6E21               	movwf	(??_floorf+3)^0,c
  6790  00306C  501E               	movf	??_floorf^0,w,c
  6791  00306E  162A               	andwf	floorf@u^0,f,c
  6792  003070  501F               	movf	(??_floorf+1)^0,w,c
  6793  003072  162B               	andwf	(floorf@u+1)^0,f,c
  6794  003074  5020               	movf	(??_floorf+2)^0,w,c
  6795  003076  162C               	andwf	(floorf@u+2)^0,f,c
  6796  003078  5021               	movf	(??_floorf+3)^0,w,c
  6797  00307A  162D               	andwf	(floorf@u+3)^0,f,c
  6798  00307C  EF84  F018         	goto	l4843
  6799  003080                     l4835:
  6800  003080  C02A  F01E         	movff	floorf@u,??_floorf
  6801  003084  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6802  003088  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6803  00308C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6804  003090  0E20               	movlw	32
  6805  003092  EF50  F018         	goto	u4230
  6806  003096                     u4235:
  6807  003096  90D8               	bcf	status,0,c
  6808  003098  3221               	rrcf	(??_floorf+3)^0,f,c
  6809  00309A  3220               	rrcf	(??_floorf+2)^0,f,c
  6810  00309C  321F               	rrcf	(??_floorf+1)^0,f,c
  6811  00309E  321E               	rrcf	??_floorf^0,f,c
  6812  0030A0                     u4230:
  6813  0030A0  2EE8               	decfsz	wreg,f,c
  6814  0030A2  EF4B  F018         	goto	u4235
  6815  0030A6  501E               	movf	??_floorf^0,w,c
  6816  0030A8  101F               	iorwf	(??_floorf+1)^0,w,c
  6817  0030AA  1020               	iorwf	(??_floorf+2)^0,w,c
  6818  0030AC  1021               	iorwf	(??_floorf+3)^0,w,c
  6819  0030AE  A4D8               	btfss	status,2,c
  6820  0030B0  EF5C  F018         	goto	u4241
  6821  0030B4  EF5E  F018         	goto	u4240
  6822  0030B8                     u4241:
  6823  0030B8  EF68  F018         	goto	l4839
  6824  0030BC                     u4240:
  6825  0030BC  0E00               	movlw	0
  6826  0030BE  6E2A               	movwf	floorf@u^0,c
  6827  0030C0  0E00               	movlw	0
  6828  0030C2  6E2B               	movwf	(floorf@u+1)^0,c
  6829  0030C4  0E00               	movlw	0
  6830  0030C6  6E2C               	movwf	(floorf@u+2)^0,c
  6831  0030C8  0E00               	movlw	0
  6832  0030CA  6E2D               	movwf	(floorf@u+3)^0,c
  6833  0030CC  EF84  F018         	goto	l4843
  6834  0030D0                     l4839:
  6835  0030D0  90D8               	bcf	status,0,c
  6836  0030D2  342A               	rlcf	floorf@u^0,w,c
  6837  0030D4  6E1E               	movwf	??_floorf^0,c
  6838  0030D6  342B               	rlcf	(floorf@u+1)^0,w,c
  6839  0030D8  6E1F               	movwf	(??_floorf+1)^0,c
  6840  0030DA  342C               	rlcf	(floorf@u+2)^0,w,c
  6841  0030DC  6E20               	movwf	(??_floorf+2)^0,c
  6842  0030DE  342D               	rlcf	(floorf@u+3)^0,w,c
  6843  0030E0  6E21               	movwf	(??_floorf+3)^0,c
  6844  0030E2  501E               	movf	??_floorf^0,w,c
  6845  0030E4  101F               	iorwf	(??_floorf+1)^0,w,c
  6846  0030E6  1020               	iorwf	(??_floorf+2)^0,w,c
  6847  0030E8  1021               	iorwf	(??_floorf+3)^0,w,c
  6848  0030EA  B4D8               	btfsc	status,2,c
  6849  0030EC  EF7A  F018         	goto	u4251
  6850  0030F0  EF7C  F018         	goto	u4250
  6851  0030F4                     u4251:
  6852  0030F4  EF84  F018         	goto	l4843
  6853  0030F8                     u4250:
  6854  0030F8  0E00               	movlw	0
  6855  0030FA  6E2A               	movwf	floorf@u^0,c
  6856  0030FC  0E00               	movlw	0
  6857  0030FE  6E2B               	movwf	(floorf@u+1)^0,c
  6858  003100  0E80               	movlw	128
  6859  003102  6E2C               	movwf	(floorf@u+2)^0,c
  6860  003104  0EBF               	movlw	191
  6861  003106  6E2D               	movwf	(floorf@u+3)^0,c
  6862  003108                     l4843:
  6863  003108  C02A  F01A         	movff	floorf@u,?_floorf
  6864  00310C  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6865  003110  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6866  003114  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6867  003118                     l2006:
  6868  003118  0012               	return		;funcret
  6869  00311A                     __end_of_floorf:
  6870                           	callstack 0
  6871                           
  6872 ;; *************** function ___fpclassifyf *****************
  6873 ;; Defined at:
  6874 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  x               4    0[COMRAM] float 
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;  u               4   10[COMRAM] struct .
  6879 ;;  e               2    8[COMRAM] int 
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  2    0[COMRAM] int 
  6882 ;; Registers used:
  6883 ;;		wreg, status,2, status,0
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6890 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6891 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6892 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6893 ;;Total ram usage:       14 bytes
  6894 ;; Hardware stack levels used: 1
  6895 ;; Hardware stack levels required when called: 2
  6896 ;; This function calls:
  6897 ;;		Nothing
  6898 ;; This function is called by:
  6899 ;;		_efgtoa
  6900 ;; This function uses a non-reentrant model
  6901 ;;
  6902                           
  6903                           	psect	text26
  6904  003B46                     __ptext26:
  6905                           	callstack 0
  6906  003B46                     ___fpclassifyf:
  6907                           	callstack 22
  6908  003B46  C104  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6909  003B4A  C105  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6910  003B4E  C106  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6911  003B52  C107  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6912  003B56  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6913  003B5A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6914  003B5E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6915  003B62  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6916  003B66  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6917  003B6A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6918  003B6E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6919  003B72  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6920  003B76  0E18               	movlw	24
  6921  003B78  EFC3  F01D         	goto	u4040
  6922  003B7C                     u4045:
  6923  003B7C  90D8               	bcf	status,0,c
  6924  003B7E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6925  003B80  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6926  003B82  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6927  003B84  3205               	rrcf	??___fpclassifyf^0,f,c
  6928  003B86                     u4040:
  6929  003B86  2EE8               	decfsz	wreg,f,c
  6930  003B88  EFBE  F01D         	goto	u4045
  6931  003B8C  5005               	movf	??___fpclassifyf^0,w,c
  6932  003B8E  6E09               	movwf	___fpclassifyf@e^0,c
  6933  003B90  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6934  003B92  5009               	movf	___fpclassifyf@e^0,w,c
  6935  003B94  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6936  003B96  A4D8               	btfss	status,2,c
  6937  003B98  EFD0  F01D         	goto	u4051
  6938  003B9C  EFD2  F01D         	goto	u4050
  6939  003BA0                     u4051:
  6940  003BA0  EFF2  F01D         	goto	l4795
  6941  003BA4                     u4050:
  6942  003BA4  90D8               	bcf	status,0,c
  6943  003BA6  340B               	rlcf	___fpclassifyf@u^0,w,c
  6944  003BA8  6E05               	movwf	??___fpclassifyf^0,c
  6945  003BAA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6946  003BAC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6947  003BAE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6948  003BB0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6949  003BB2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6950  003BB4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6951  003BB6  5005               	movf	??___fpclassifyf^0,w,c
  6952  003BB8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6953  003BBA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6954  003BBC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6955  003BBE  A4D8               	btfss	status,2,c
  6956  003BC0  EFE4  F01D         	goto	u4061
  6957  003BC4  EFE6  F01D         	goto	u4060
  6958  003BC8                     u4061:
  6959  003BC8  EFEC  F01D         	goto	l4791
  6960  003BCC                     u4060:
  6961  003BCC  0E00               	movlw	0
  6962  003BCE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6963  003BD0  0E02               	movlw	2
  6964  003BD2  6E01               	movwf	?___fpclassifyf^0,c
  6965  003BD4  EF21  F01E         	goto	l1968
  6966  003BD8                     l4791:
  6967  003BD8  0E00               	movlw	0
  6968  003BDA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6969  003BDC  0E03               	movlw	3
  6970  003BDE  6E01               	movwf	?___fpclassifyf^0,c
  6971  003BE0  EF21  F01E         	goto	l1968
  6972  003BE4                     l4795:
  6973  003BE4  2809               	incf	___fpclassifyf@e^0,w,c
  6974  003BE6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6975  003BE8  A4D8               	btfss	status,2,c
  6976  003BEA  EFF9  F01D         	goto	u4071
  6977  003BEE  EFFB  F01D         	goto	u4070
  6978  003BF2                     u4071:
  6979  003BF2  EF1D  F01E         	goto	l4801
  6980  003BF6                     u4070:
  6981  003BF6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6982  003BFA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6983  003BFE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6984  003C02  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6985  003C06  0E09               	movlw	9
  6986  003C08                     u4085:
  6987  003C08  90D8               	bcf	status,0,c
  6988  003C0A  3605               	rlcf	??___fpclassifyf^0,f,c
  6989  003C0C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6990  003C0E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6991  003C10  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6992  003C12  2EE8               	decfsz	wreg,f,c
  6993  003C14  EF04  F01E         	goto	u4085
  6994  003C18  5005               	movf	??___fpclassifyf^0,w,c
  6995  003C1A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6996  003C1C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6997  003C1E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6998  003C20  B4D8               	btfsc	status,2,c
  6999  003C22  EF15  F01E         	goto	u4091
  7000  003C26  EF18  F01E         	goto	u4090
  7001  003C2A                     u4091:
  7002  003C2A  0E01               	movlw	1
  7003  003C2C  EF19  F01E         	goto	u4100
  7004  003C30                     u4090:
  7005  003C30  0E00               	movlw	0
  7006  003C32                     u4100:
  7007  003C32  6E01               	movwf	?___fpclassifyf^0,c
  7008  003C34  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7009  003C36  EF21  F01E         	goto	l1968
  7010  003C3A                     l4801:
  7011  003C3A  0E00               	movlw	0
  7012  003C3C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7013  003C3E  0E04               	movlw	4
  7014  003C40  6E01               	movwf	?___fpclassifyf^0,c
  7015  003C42                     l1968:
  7016  003C42  0012               	return		;funcret
  7017  003C44                     __end_of___fpclassifyf:
  7018                           	callstack 0
  7019                           
  7020 ;; *************** function ___fltol *****************
  7021 ;; Defined at:
  7022 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  f1              4    0[COMRAM] int 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  exp1            1    9[COMRAM] unsigned char 
  7027 ;;  sign1           1    8[COMRAM] unsigned char 
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  4    0[COMRAM] long 
  7030 ;; Registers used:
  7031 ;;		wreg, status,2, status,0
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7039 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7040 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7041 ;;Total ram usage:       10 bytes
  7042 ;; Hardware stack levels used: 1
  7043 ;; Hardware stack levels required when called: 2
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_efgtoa
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text27
  7052  00393C                     __ptext27:
  7053                           	callstack 0
  7054  00393C                     ___fltol:
  7055                           	callstack 22
  7056  00393C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7057  00393E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7058  003940  6E0A               	movwf	___fltol@exp1^0,c
  7059  003942  500A               	movf	___fltol@exp1^0,w,c
  7060  003944  A4D8               	btfss	status,2,c
  7061  003946  EFA7  F01C         	goto	u3931
  7062  00394A  EFA9  F01C         	goto	u3930
  7063  00394E                     u3931:
  7064  00394E  EFB3  F01C         	goto	l4723
  7065  003952                     u3930:
  7066  003952                     l4719:
  7067  003952  0E00               	movlw	0
  7068  003954  6E01               	movwf	?___fltol^0,c
  7069  003956  0E00               	movlw	0
  7070  003958  6E02               	movwf	(?___fltol+1)^0,c
  7071  00395A  0E00               	movlw	0
  7072  00395C  6E03               	movwf	(?___fltol+2)^0,c
  7073  00395E  0E00               	movlw	0
  7074  003960  6E04               	movwf	(?___fltol+3)^0,c
  7075  003962  EF20  F01D         	goto	l1395
  7076  003966                     l4723:
  7077  003966  C001  F005         	movff	___fltol@f1,??___fltol
  7078  00396A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7079  00396E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7080  003972  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7081  003976  0E20               	movlw	32
  7082  003978  EFC3  F01C         	goto	u3940
  7083  00397C                     u3945:
  7084  00397C  90D8               	bcf	status,0,c
  7085  00397E  3208               	rrcf	(??___fltol+3)^0,f,c
  7086  003980  3207               	rrcf	(??___fltol+2)^0,f,c
  7087  003982  3206               	rrcf	(??___fltol+1)^0,f,c
  7088  003984  3205               	rrcf	??___fltol^0,f,c
  7089  003986                     u3940:
  7090  003986  2EE8               	decfsz	wreg,f,c
  7091  003988  EFBE  F01C         	goto	u3945
  7092  00398C  5005               	movf	??___fltol^0,w,c
  7093  00398E  6E09               	movwf	___fltol@sign1^0,c
  7094  003990  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7095  003992  0EFF               	movlw	255
  7096  003994  1601               	andwf	___fltol@f1^0,f,c
  7097  003996  0EFF               	movlw	255
  7098  003998  1602               	andwf	(___fltol@f1+1)^0,f,c
  7099  00399A  0EFF               	movlw	255
  7100  00399C  1603               	andwf	(___fltol@f1+2)^0,f,c
  7101  00399E  0E00               	movlw	0
  7102  0039A0  1604               	andwf	(___fltol@f1+3)^0,f,c
  7103  0039A2  0E96               	movlw	150
  7104  0039A4  5E0A               	subwf	___fltol@exp1^0,f,c
  7105  0039A6  BE0A               	btfsc	___fltol@exp1^0,7,c
  7106  0039A8  EFDA  F01C         	goto	u3950
  7107  0039AC  EFD8  F01C         	goto	u3951
  7108  0039B0                     u3951:
  7109  0039B0  EFF0  F01C         	goto	l4743
  7110  0039B4                     u3950:
  7111  0039B4  500A               	movf	___fltol@exp1^0,w,c
  7112  0039B6  0A80               	xorlw	128
  7113  0039B8  0F97               	addlw	151
  7114  0039BA  B0D8               	btfsc	status,0,c
  7115  0039BC  EFE2  F01C         	goto	u3961
  7116  0039C0  EFE4  F01C         	goto	u3960
  7117  0039C4                     u3961:
  7118  0039C4  EFE6  F01C         	goto	l4739
  7119  0039C8                     u3960:
  7120  0039C8  EFA9  F01C         	goto	l4719
  7121  0039CC                     l4739:
  7122  0039CC  90D8               	bcf	status,0,c
  7123  0039CE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7124  0039D0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7125  0039D2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7126  0039D4  3201               	rrcf	___fltol@f1^0,f,c
  7127  0039D6  3E0A               	incfsz	___fltol@exp1^0,f,c
  7128  0039D8  EFE6  F01C         	goto	l4739
  7129  0039DC  EF08  F01D         	goto	l4753
  7130  0039E0                     l4743:
  7131  0039E0  0E1F               	movlw	31
  7132  0039E2  640A               	cpfsgt	___fltol@exp1^0,c
  7133  0039E4  EFF6  F01C         	goto	u3971
  7134  0039E8  EFF8  F01C         	goto	u3970
  7135  0039EC                     u3971:
  7136  0039EC  EF00  F01D         	goto	l4751
  7137  0039F0                     u3970:
  7138  0039F0  EFA9  F01C         	goto	l4719
  7139  0039F4                     l4749:
  7140  0039F4  90D8               	bcf	status,0,c
  7141  0039F6  3601               	rlcf	___fltol@f1^0,f,c
  7142  0039F8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7143  0039FA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7144  0039FC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7145  0039FE  060A               	decf	___fltol@exp1^0,f,c
  7146  003A00                     l4751:
  7147  003A00  500A               	movf	___fltol@exp1^0,w,c
  7148  003A02  A4D8               	btfss	status,2,c
  7149  003A04  EF06  F01D         	goto	u3981
  7150  003A08  EF08  F01D         	goto	u3980
  7151  003A0C                     u3981:
  7152  003A0C  EFFA  F01C         	goto	l4749
  7153  003A10                     u3980:
  7154  003A10                     l4753:
  7155  003A10  5009               	movf	___fltol@sign1^0,w,c
  7156  003A12  B4D8               	btfsc	status,2,c
  7157  003A14  EF0E  F01D         	goto	u3991
  7158  003A18  EF10  F01D         	goto	u3990
  7159  003A1C                     u3991:
  7160  003A1C  EF18  F01D         	goto	l4757
  7161  003A20                     u3990:
  7162  003A20  1E04               	comf	(___fltol@f1+3)^0,f,c
  7163  003A22  1E03               	comf	(___fltol@f1+2)^0,f,c
  7164  003A24  1E02               	comf	(___fltol@f1+1)^0,f,c
  7165  003A26  6C01               	negf	___fltol@f1^0,c
  7166  003A28  0E00               	movlw	0
  7167  003A2A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7168  003A2C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7169  003A2E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7170  003A30                     l4757:
  7171  003A30  C001  F001         	movff	___fltol@f1,?___fltol
  7172  003A34  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7173  003A38  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7174  003A3C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7175  003A40                     l1395:
  7176  003A40  0012               	return		;funcret
  7177  003A42                     __end_of___fltol:
  7178                           	callstack 0
  7179                           
  7180 ;; *************** function ___flsub *****************
  7181 ;; Defined at:
  7182 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;  b               4   39[COMRAM] long 
  7185 ;;  a               4   43[COMRAM] long 
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;		None
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  4   39[COMRAM] long 
  7190 ;; Registers used:
  7191 ;;		wreg, status,2, status,0, cstack
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7197 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7200 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7201 ;;Total ram usage:        8 bytes
  7202 ;; Hardware stack levels used: 1
  7203 ;; Hardware stack levels required when called: 3
  7204 ;; This function calls:
  7205 ;;		___fladd
  7206 ;; This function is called by:
  7207 ;;		_efgtoa
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           	psect	text28
  7212  004704                     __ptext28:
  7213                           	callstack 0
  7214  004704                     ___flsub:
  7215                           	callstack 21
  7216  004704  0E00               	movlw	0
  7217  004706  1A2C               	xorwf	___flsub@a^0,f,c
  7218  004708  0E00               	movlw	0
  7219  00470A  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  7220  00470C  0E00               	movlw	0
  7221  00470E  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  7222  004710  0E80               	movlw	128
  7223  004712  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  7224  004714  C028  F001         	movff	___flsub@b,___fladd@b
  7225  004718  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  7226  00471C  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  7227  004720  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  7228  004724  C02C  F005         	movff	___flsub@a,___fladd@a
  7229  004728  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  7230  00472C  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  7231  004730  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  7232  004734  EC39  F00D         	call	___fladd	;wreg free
  7233  004738  C001  F028         	movff	?___fladd,?___flsub
  7234  00473C  C002  F029         	movff	?___fladd+1,?___flsub+1
  7235  004740  C003  F02A         	movff	?___fladd+2,?___flsub+2
  7236  004744  C004  F02B         	movff	?___fladd+3,?___flsub+3
  7237  004748  0012               	return		;funcret
  7238  00474A                     __end_of___flsub:
  7239                           	callstack 0
  7240                           
  7241 ;; *************** function ___fladd *****************
  7242 ;; Defined at:
  7243 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  b               4    0[COMRAM] long 
  7246 ;;  a               4    4[COMRAM] long 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;  grs             1   15[COMRAM] unsigned char 
  7249 ;;  bexp            1   14[COMRAM] unsigned char 
  7250 ;;  aexp            1   13[COMRAM] unsigned char 
  7251 ;;  signs           1   12[COMRAM] unsigned char 
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  4    0[COMRAM] unsigned char 
  7254 ;; Registers used:
  7255 ;;		wreg, status,2, status,0
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7261 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7262 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7263 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7264 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7265 ;;Total ram usage:       16 bytes
  7266 ;; Hardware stack levels used: 1
  7267 ;; Hardware stack levels required when called: 2
  7268 ;; This function calls:
  7269 ;;		Nothing
  7270 ;; This function is called by:
  7271 ;;		___flsub
  7272 ;;		_efgtoa
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           	psect	text29
  7277  001A72                     __ptext29:
  7278                           	callstack 0
  7279  001A72                     ___fladd:
  7280                           	callstack 21
  7281  001A72  5004               	movf	(___fladd@b+3)^0,w,c
  7282  001A74  0B80               	andlw	128
  7283  001A76  6E0D               	movwf	___fladd@signs^0,c
  7284  001A78  5004               	movf	(___fladd@b+3)^0,w,c
  7285  001A7A  2404               	addwf	(___fladd@b+3)^0,w,c
  7286  001A7C  6E0F               	movwf	___fladd@bexp^0,c
  7287  001A7E  AE03               	btfss	(___fladd@b+2)^0,7,c
  7288  001A80  EF44  F00D         	goto	u2881
  7289  001A84  EF46  F00D         	goto	u2880
  7290  001A88                     u2881:
  7291  001A88  EF47  F00D         	goto	l4103
  7292  001A8C                     u2880:
  7293  001A8C  800F               	bsf	___fladd@bexp^0,0,c
  7294  001A8E                     l4103:
  7295  001A8E  500F               	movf	___fladd@bexp^0,w,c
  7296  001A90  B4D8               	btfsc	status,2,c
  7297  001A92  EF4D  F00D         	goto	u2891
  7298  001A96  EF4F  F00D         	goto	u2890
  7299  001A9A                     u2891:
  7300  001A9A  EF64  F00D         	goto	l4113
  7301  001A9E                     u2890:
  7302  001A9E  280F               	incf	___fladd@bexp^0,w,c
  7303  001AA0  A4D8               	btfss	status,2,c
  7304  001AA2  EF55  F00D         	goto	u2901
  7305  001AA6  EF57  F00D         	goto	u2900
  7306  001AAA                     u2901:
  7307  001AAA  EF5F  F00D         	goto	l4109
  7308  001AAE                     u2900:
  7309  001AAE  0E00               	movlw	0
  7310  001AB0  6E01               	movwf	___fladd@b^0,c
  7311  001AB2  0E00               	movlw	0
  7312  001AB4  6E02               	movwf	(___fladd@b+1)^0,c
  7313  001AB6  0E00               	movlw	0
  7314  001AB8  6E03               	movwf	(___fladd@b+2)^0,c
  7315  001ABA  0E00               	movlw	0
  7316  001ABC  6E04               	movwf	(___fladd@b+3)^0,c
  7317  001ABE                     l4109:
  7318  001ABE  8E03               	bsf	(___fladd@b+2)^0,7,c
  7319  001AC0  0E00               	movlw	0
  7320  001AC2  6E04               	movwf	(___fladd@b+3)^0,c
  7321  001AC4  EF6C  F00D         	goto	l4115
  7322  001AC8                     l4113:
  7323  001AC8  0E00               	movlw	0
  7324  001ACA  6E01               	movwf	___fladd@b^0,c
  7325  001ACC  0E00               	movlw	0
  7326  001ACE  6E02               	movwf	(___fladd@b+1)^0,c
  7327  001AD0  0E00               	movlw	0
  7328  001AD2  6E03               	movwf	(___fladd@b+2)^0,c
  7329  001AD4  0E00               	movlw	0
  7330  001AD6  6E04               	movwf	(___fladd@b+3)^0,c
  7331  001AD8                     l4115:
  7332  001AD8  5008               	movf	(___fladd@a+3)^0,w,c
  7333  001ADA  0B80               	andlw	128
  7334  001ADC  6E0E               	movwf	___fladd@aexp^0,c
  7335  001ADE  500D               	movf	___fladd@signs^0,w,c
  7336  001AE0  180E               	xorwf	___fladd@aexp^0,w,c
  7337  001AE2  B4D8               	btfsc	status,2,c
  7338  001AE4  EF76  F00D         	goto	u2911
  7339  001AE8  EF78  F00D         	goto	u2910
  7340  001AEC                     u2911:
  7341  001AEC  EF79  F00D         	goto	l4121
  7342  001AF0                     u2910:
  7343  001AF0  8C0D               	bsf	___fladd@signs^0,6,c
  7344  001AF2                     l4121:
  7345  001AF2  5008               	movf	(___fladd@a+3)^0,w,c
  7346  001AF4  2408               	addwf	(___fladd@a+3)^0,w,c
  7347  001AF6  6E0E               	movwf	___fladd@aexp^0,c
  7348  001AF8  AE07               	btfss	(___fladd@a+2)^0,7,c
  7349  001AFA  EF81  F00D         	goto	u2921
  7350  001AFE  EF83  F00D         	goto	u2920
  7351  001B02                     u2921:
  7352  001B02  EF84  F00D         	goto	l4127
  7353  001B06                     u2920:
  7354  001B06  800E               	bsf	___fladd@aexp^0,0,c
  7355  001B08                     l4127:
  7356  001B08  500E               	movf	___fladd@aexp^0,w,c
  7357  001B0A  B4D8               	btfsc	status,2,c
  7358  001B0C  EF8A  F00D         	goto	u2931
  7359  001B10  EF8C  F00D         	goto	u2930
  7360  001B14                     u2931:
  7361  001B14  EFA1  F00D         	goto	l4137
  7362  001B18                     u2930:
  7363  001B18  280E               	incf	___fladd@aexp^0,w,c
  7364  001B1A  A4D8               	btfss	status,2,c
  7365  001B1C  EF92  F00D         	goto	u2941
  7366  001B20  EF94  F00D         	goto	u2940
  7367  001B24                     u2941:
  7368  001B24  EF9C  F00D         	goto	l4133
  7369  001B28                     u2940:
  7370  001B28  0E00               	movlw	0
  7371  001B2A  6E05               	movwf	___fladd@a^0,c
  7372  001B2C  0E00               	movlw	0
  7373  001B2E  6E06               	movwf	(___fladd@a+1)^0,c
  7374  001B30  0E00               	movlw	0
  7375  001B32  6E07               	movwf	(___fladd@a+2)^0,c
  7376  001B34  0E00               	movlw	0
  7377  001B36  6E08               	movwf	(___fladd@a+3)^0,c
  7378  001B38                     l4133:
  7379  001B38  8E07               	bsf	(___fladd@a+2)^0,7,c
  7380  001B3A  0E00               	movlw	0
  7381  001B3C  6E08               	movwf	(___fladd@a+3)^0,c
  7382  001B3E  EFA9  F00D         	goto	l4139
  7383  001B42                     l4137:
  7384  001B42  0E00               	movlw	0
  7385  001B44  6E05               	movwf	___fladd@a^0,c
  7386  001B46  0E00               	movlw	0
  7387  001B48  6E06               	movwf	(___fladd@a+1)^0,c
  7388  001B4A  0E00               	movlw	0
  7389  001B4C  6E07               	movwf	(___fladd@a+2)^0,c
  7390  001B4E  0E00               	movlw	0
  7391  001B50  6E08               	movwf	(___fladd@a+3)^0,c
  7392  001B52                     l4139:
  7393  001B52  500F               	movf	___fladd@bexp^0,w,c
  7394  001B54  5C0E               	subwf	___fladd@aexp^0,w,c
  7395  001B56  B0D8               	btfsc	status,0,c
  7396  001B58  EFB0  F00D         	goto	u2951
  7397  001B5C  EFB2  F00D         	goto	u2950
  7398  001B60                     u2951:
  7399  001B60  EFD9  F00D         	goto	l4175
  7400  001B64                     u2950:
  7401  001B64  AC0D               	btfss	___fladd@signs^0,6,c
  7402  001B66  EFB7  F00D         	goto	u2961
  7403  001B6A  EFB9  F00D         	goto	u2960
  7404  001B6E                     u2961:
  7405  001B6E  EFBB  F00D         	goto	l4145
  7406  001B72                     u2960:
  7407  001B72  0E80               	movlw	128
  7408  001B74  1A0D               	xorwf	___fladd@signs^0,f,c
  7409  001B76                     l4145:
  7410  001B76  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7411  001B7A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7412  001B7E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7413  001B82  C001  F010         	movff	___fladd@b,___fladd@grs
  7414  001B86  C005  F001         	movff	___fladd@a,___fladd@b
  7415  001B8A  C010  F005         	movff	___fladd@grs,___fladd@a
  7416  001B8E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7417  001B92  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7418  001B96  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7419  001B9A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7420  001B9E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7421  001BA2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7422  001BA6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7423  001BAA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7424  001BAE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7425  001BB2                     l4175:
  7426  001BB2  0E00               	movlw	0
  7427  001BB4  6E10               	movwf	___fladd@grs^0,c
  7428  001BB6  500F               	movf	___fladd@bexp^0,w,c
  7429  001BB8  C00E  F009         	movff	___fladd@aexp,??___fladd
  7430  001BBC  6A0A               	clrf	(??___fladd+1)^0,c
  7431  001BBE  5E09               	subwf	??___fladd^0,f,c
  7432  001BC0  0E00               	movlw	0
  7433  001BC2  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7434  001BC4  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7435  001BC6  EFEE  F00D         	goto	u2971
  7436  001BCA  500A               	movf	(??___fladd+1)^0,w,c
  7437  001BCC  E109               	bnz	u2970
  7438  001BCE  0E1A               	movlw	26
  7439  001BD0  5C09               	subwf	??___fladd^0,w,c
  7440  001BD2  A0D8               	btfss	status,0,c
  7441  001BD4  EFEE  F00D         	goto	u2971
  7442  001BD8  EFF0  F00D         	goto	u2970
  7443  001BDC                     u2971:
  7444  001BDC  EF27  F00E         	goto	l1627
  7445  001BE0                     u2970:
  7446  001BE0  5001               	movf	___fladd@b^0,w,c
  7447  001BE2  1002               	iorwf	(___fladd@b+1)^0,w,c
  7448  001BE4  1003               	iorwf	(___fladd@b+2)^0,w,c
  7449  001BE6  1004               	iorwf	(___fladd@b+3)^0,w,c
  7450  001BE8  A4D8               	btfss	status,2,c
  7451  001BEA  EFF9  F00D         	goto	u2981
  7452  001BEE  EFFC  F00D         	goto	u2980
  7453  001BF2                     u2981:
  7454  001BF2  0E01               	movlw	1
  7455  001BF4  EFFD  F00D         	goto	u2990
  7456  001BF8                     u2980:
  7457  001BF8  0E00               	movlw	0
  7458  001BFA                     u2990:
  7459  001BFA  6E10               	movwf	___fladd@grs^0,c
  7460  001BFC  0E00               	movlw	0
  7461  001BFE  6E01               	movwf	___fladd@b^0,c
  7462  001C00  0E00               	movlw	0
  7463  001C02  6E02               	movwf	(___fladd@b+1)^0,c
  7464  001C04  0E00               	movlw	0
  7465  001C06  6E03               	movwf	(___fladd@b+2)^0,c
  7466  001C08  0E00               	movlw	0
  7467  001C0A  6E04               	movwf	(___fladd@b+3)^0,c
  7468  001C0C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7469  001C10  EF30  F00E         	goto	l1626
  7470  001C14                     l1628:
  7471  001C14  A010               	btfss	___fladd@grs^0,0,c
  7472  001C16  EF0F  F00E         	goto	u3001
  7473  001C1A  EF11  F00E         	goto	u3000
  7474  001C1E                     u3001:
  7475  001C1E  EF17  F00E         	goto	l4187
  7476  001C22                     u3000:
  7477  001C22  90D8               	bcf	status,0,c
  7478  001C24  3010               	rrcf	___fladd@grs^0,w,c
  7479  001C26  0901               	iorlw	1
  7480  001C28  6E10               	movwf	___fladd@grs^0,c
  7481  001C2A  EF19  F00E         	goto	l4189
  7482  001C2E                     l4187:
  7483  001C2E  90D8               	bcf	status,0,c
  7484  001C30  3210               	rrcf	___fladd@grs^0,f,c
  7485  001C32                     l4189:
  7486  001C32  A001               	btfss	___fladd@b^0,0,c
  7487  001C34  EF1E  F00E         	goto	u3011
  7488  001C38  EF20  F00E         	goto	u3010
  7489  001C3C                     u3011:
  7490  001C3C  EF21  F00E         	goto	l4193
  7491  001C40                     u3010:
  7492  001C40  8E10               	bsf	___fladd@grs^0,7,c
  7493  001C42                     l4193:
  7494  001C42  3404               	rlcf	(___fladd@b+3)^0,w,c
  7495  001C44  3204               	rrcf	(___fladd@b+3)^0,f,c
  7496  001C46  3203               	rrcf	(___fladd@b+2)^0,f,c
  7497  001C48  3202               	rrcf	(___fladd@b+1)^0,f,c
  7498  001C4A  3201               	rrcf	___fladd@b^0,f,c
  7499  001C4C  2A0F               	incf	___fladd@bexp^0,f,c
  7500  001C4E                     l1627:
  7501  001C4E  500E               	movf	___fladd@aexp^0,w,c
  7502  001C50  5C0F               	subwf	___fladd@bexp^0,w,c
  7503  001C52  A0D8               	btfss	status,0,c
  7504  001C54  EF2E  F00E         	goto	u3021
  7505  001C58  EF30  F00E         	goto	u3020
  7506  001C5C                     u3021:
  7507  001C5C  EF0A  F00E         	goto	l1628
  7508  001C60                     u3020:
  7509  001C60                     l1626:
  7510  001C60  BC0D               	btfsc	___fladd@signs^0,6,c
  7511  001C62  EF35  F00E         	goto	u3031
  7512  001C66  EF37  F00E         	goto	u3030
  7513  001C6A                     u3031:
  7514  001C6A  EF77  F00E         	goto	l4221
  7515  001C6E                     u3030:
  7516  001C6E  500F               	movf	___fladd@bexp^0,w,c
  7517  001C70  A4D8               	btfss	status,2,c
  7518  001C72  EF3D  F00E         	goto	u3041
  7519  001C76  EF3F  F00E         	goto	u3040
  7520  001C7A                     u3041:
  7521  001C7A  EF49  F00E         	goto	l4203
  7522  001C7E                     u3040:
  7523  001C7E  0E00               	movlw	0
  7524  001C80  6E01               	movwf	?___fladd^0,c
  7525  001C82  0E00               	movlw	0
  7526  001C84  6E02               	movwf	(?___fladd+1)^0,c
  7527  001C86  0E00               	movlw	0
  7528  001C88  6E03               	movwf	(?___fladd+2)^0,c
  7529  001C8A  0E00               	movlw	0
  7530  001C8C  6E04               	movwf	(?___fladd+3)^0,c
  7531  001C8E  EF98  F00F         	goto	l1635
  7532  001C92                     l4203:
  7533  001C92  5005               	movf	___fladd@a^0,w,c
  7534  001C94  2601               	addwf	___fladd@b^0,f,c
  7535  001C96  5006               	movf	(___fladd@a+1)^0,w,c
  7536  001C98  2202               	addwfc	(___fladd@b+1)^0,f,c
  7537  001C9A  5007               	movf	(___fladd@a+2)^0,w,c
  7538  001C9C  2203               	addwfc	(___fladd@b+2)^0,f,c
  7539  001C9E  5008               	movf	(___fladd@a+3)^0,w,c
  7540  001CA0  2204               	addwfc	(___fladd@b+3)^0,f,c
  7541  001CA2  A004               	btfss	(___fladd@b+3)^0,0,c
  7542  001CA4  EF56  F00E         	goto	u3051
  7543  001CA8  EF58  F00E         	goto	u3050
  7544  001CAC                     u3051:
  7545  001CAC  EF04  F00F         	goto	l4257
  7546  001CB0                     u3050:
  7547  001CB0  A010               	btfss	___fladd@grs^0,0,c
  7548  001CB2  EF5D  F00E         	goto	u3061
  7549  001CB6  EF5F  F00E         	goto	u3060
  7550  001CBA                     u3061:
  7551  001CBA  EF65  F00E         	goto	l4211
  7552  001CBE                     u3060:
  7553  001CBE  90D8               	bcf	status,0,c
  7554  001CC0  3010               	rrcf	___fladd@grs^0,w,c
  7555  001CC2  0901               	iorlw	1
  7556  001CC4  6E10               	movwf	___fladd@grs^0,c
  7557  001CC6  EF67  F00E         	goto	l4213
  7558  001CCA                     l4211:
  7559  001CCA  90D8               	bcf	status,0,c
  7560  001CCC  3210               	rrcf	___fladd@grs^0,f,c
  7561  001CCE                     l4213:
  7562  001CCE  A001               	btfss	___fladd@b^0,0,c
  7563  001CD0  EF6C  F00E         	goto	u3071
  7564  001CD4  EF6E  F00E         	goto	u3070
  7565  001CD8                     u3071:
  7566  001CD8  EF6F  F00E         	goto	l4217
  7567  001CDC                     u3070:
  7568  001CDC  8E10               	bsf	___fladd@grs^0,7,c
  7569  001CDE                     l4217:
  7570  001CDE  3404               	rlcf	(___fladd@b+3)^0,w,c
  7571  001CE0  3204               	rrcf	(___fladd@b+3)^0,f,c
  7572  001CE2  3203               	rrcf	(___fladd@b+2)^0,f,c
  7573  001CE4  3202               	rrcf	(___fladd@b+1)^0,f,c
  7574  001CE6  3201               	rrcf	___fladd@b^0,f,c
  7575  001CE8  2A0F               	incf	___fladd@bexp^0,f,c
  7576  001CEA  EF04  F00F         	goto	l4257
  7577  001CEE                     l4221:
  7578  001CEE  5005               	movf	___fladd@a^0,w,c
  7579  001CF0  5C01               	subwf	___fladd@b^0,w,c
  7580  001CF2  5006               	movf	(___fladd@a+1)^0,w,c
  7581  001CF4  5802               	subwfb	(___fladd@b+1)^0,w,c
  7582  001CF6  5007               	movf	(___fladd@a+2)^0,w,c
  7583  001CF8  5803               	subwfb	(___fladd@b+2)^0,w,c
  7584  001CFA  5004               	movf	(___fladd@b+3)^0,w,c
  7585  001CFC  0A80               	xorlw	128
  7586  001CFE  6E09               	movwf	??___fladd^0,c
  7587  001D00  5008               	movf	(___fladd@a+3)^0,w,c
  7588  001D02  0A80               	xorlw	128
  7589  001D04  5809               	subwfb	??___fladd^0,w,c
  7590  001D06  B0D8               	btfsc	status,0,c
  7591  001D08  EF88  F00E         	goto	u3081
  7592  001D0C  EF8A  F00E         	goto	u3080
  7593  001D10                     u3081:
  7594  001D10  EFB5  F00E         	goto	l4231
  7595  001D14                     u3080:
  7596  001D14  5001               	movf	___fladd@b^0,w,c
  7597  001D16  5C05               	subwf	___fladd@a^0,w,c
  7598  001D18  6E09               	movwf	??___fladd^0,c
  7599  001D1A  5002               	movf	(___fladd@b+1)^0,w,c
  7600  001D1C  5806               	subwfb	(___fladd@a+1)^0,w,c
  7601  001D1E  6E0A               	movwf	(??___fladd+1)^0,c
  7602  001D20  5003               	movf	(___fladd@b+2)^0,w,c
  7603  001D22  5807               	subwfb	(___fladd@a+2)^0,w,c
  7604  001D24  6E0B               	movwf	(??___fladd+2)^0,c
  7605  001D26  5004               	movf	(___fladd@b+3)^0,w,c
  7606  001D28  5808               	subwfb	(___fladd@a+3)^0,w,c
  7607  001D2A  6E0C               	movwf	(??___fladd+3)^0,c
  7608  001D2C  0EFF               	movlw	255
  7609  001D2E  2409               	addwf	??___fladd^0,w,c
  7610  001D30  6E01               	movwf	___fladd@b^0,c
  7611  001D32  0EFF               	movlw	255
  7612  001D34  200A               	addwfc	(??___fladd+1)^0,w,c
  7613  001D36  6E02               	movwf	(___fladd@b+1)^0,c
  7614  001D38  0EFF               	movlw	255
  7615  001D3A  200B               	addwfc	(??___fladd+2)^0,w,c
  7616  001D3C  6E03               	movwf	(___fladd@b+2)^0,c
  7617  001D3E  0EFF               	movlw	255
  7618  001D40  200C               	addwfc	(??___fladd+3)^0,w,c
  7619  001D42  6E04               	movwf	(___fladd@b+3)^0,c
  7620  001D44  0E80               	movlw	128
  7621  001D46  1A0D               	xorwf	___fladd@signs^0,f,c
  7622  001D48  6C10               	negf	___fladd@grs^0,c
  7623  001D4A  5010               	movf	___fladd@grs^0,w,c
  7624  001D4C  A4D8               	btfss	status,2,c
  7625  001D4E  EFAB  F00E         	goto	u3091
  7626  001D52  EFAD  F00E         	goto	u3090
  7627  001D56                     u3091:
  7628  001D56  EFBD  F00E         	goto	l1643
  7629  001D5A                     u3090:
  7630  001D5A  0E01               	movlw	1
  7631  001D5C  2601               	addwf	___fladd@b^0,f,c
  7632  001D5E  0E00               	movlw	0
  7633  001D60  2202               	addwfc	(___fladd@b+1)^0,f,c
  7634  001D62  2203               	addwfc	(___fladd@b+2)^0,f,c
  7635  001D64  2204               	addwfc	(___fladd@b+3)^0,f,c
  7636  001D66  EFBD  F00E         	goto	l1643
  7637  001D6A                     l4231:
  7638  001D6A  5005               	movf	___fladd@a^0,w,c
  7639  001D6C  5E01               	subwf	___fladd@b^0,f,c
  7640  001D6E  5006               	movf	(___fladd@a+1)^0,w,c
  7641  001D70  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7642  001D72  5007               	movf	(___fladd@a+2)^0,w,c
  7643  001D74  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7644  001D76  5008               	movf	(___fladd@a+3)^0,w,c
  7645  001D78  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7646  001D7A                     l1643:
  7647  001D7A  5001               	movf	___fladd@b^0,w,c
  7648  001D7C  1002               	iorwf	(___fladd@b+1)^0,w,c
  7649  001D7E  1003               	iorwf	(___fladd@b+2)^0,w,c
  7650  001D80  1004               	iorwf	(___fladd@b+3)^0,w,c
  7651  001D82  A4D8               	btfss	status,2,c
  7652  001D84  EFC6  F00E         	goto	u3101
  7653  001D88  EFC8  F00E         	goto	u3100
  7654  001D8C                     u3101:
  7655  001D8C  EFFD  F00E         	goto	l4255
  7656  001D90                     u3100:
  7657  001D90  5010               	movf	___fladd@grs^0,w,c
  7658  001D92  A4D8               	btfss	status,2,c
  7659  001D94  EFCE  F00E         	goto	u3111
  7660  001D98  EFD0  F00E         	goto	u3110
  7661  001D9C                     u3111:
  7662  001D9C  EFFD  F00E         	goto	l4255
  7663  001DA0                     u3110:
  7664  001DA0  0E00               	movlw	0
  7665  001DA2  6E01               	movwf	?___fladd^0,c
  7666  001DA4  0E00               	movlw	0
  7667  001DA6  6E02               	movwf	(?___fladd+1)^0,c
  7668  001DA8  0E00               	movlw	0
  7669  001DAA  6E03               	movwf	(?___fladd+2)^0,c
  7670  001DAC  0E00               	movlw	0
  7671  001DAE  6E04               	movwf	(?___fladd+3)^0,c
  7672  001DB0  EF98  F00F         	goto	l1635
  7673  001DB4                     l4239:
  7674  001DB4  90D8               	bcf	status,0,c
  7675  001DB6  3601               	rlcf	___fladd@b^0,f,c
  7676  001DB8  3602               	rlcf	(___fladd@b+1)^0,f,c
  7677  001DBA  3603               	rlcf	(___fladd@b+2)^0,f,c
  7678  001DBC  3604               	rlcf	(___fladd@b+3)^0,f,c
  7679  001DBE  AE10               	btfss	___fladd@grs^0,7,c
  7680  001DC0  EFE4  F00E         	goto	u3121
  7681  001DC4  EFE6  F00E         	goto	u3120
  7682  001DC8                     u3121:
  7683  001DC8  EFE7  F00E         	goto	l4245
  7684  001DCC                     u3120:
  7685  001DCC  8001               	bsf	___fladd@b^0,0,c
  7686  001DCE                     l4245:
  7687  001DCE  A010               	btfss	___fladd@grs^0,0,c
  7688  001DD0  EFEC  F00E         	goto	u3131
  7689  001DD4  EFEE  F00E         	goto	u3130
  7690  001DD8                     u3131:
  7691  001DD8  EFF2  F00E         	goto	l4249
  7692  001DDC                     u3130:
  7693  001DDC  80D8               	bsf	status,0,c
  7694  001DDE  3610               	rlcf	___fladd@grs^0,f,c
  7695  001DE0  EFF4  F00E         	goto	l4251
  7696  001DE4                     l4249:
  7697  001DE4  90D8               	bcf	status,0,c
  7698  001DE6  3610               	rlcf	___fladd@grs^0,f,c
  7699  001DE8                     l4251:
  7700  001DE8  500F               	movf	___fladd@bexp^0,w,c
  7701  001DEA  B4D8               	btfsc	status,2,c
  7702  001DEC  EFFA  F00E         	goto	u3141
  7703  001DF0  EFFC  F00E         	goto	u3140
  7704  001DF4                     u3141:
  7705  001DF4  EFFD  F00E         	goto	l4255
  7706  001DF8                     u3140:
  7707  001DF8  060F               	decf	___fladd@bexp^0,f,c
  7708  001DFA                     l4255:
  7709  001DFA  AE03               	btfss	(___fladd@b+2)^0,7,c
  7710  001DFC  EF02  F00F         	goto	u3151
  7711  001E00  EF04  F00F         	goto	u3150
  7712  001E04                     u3151:
  7713  001E04  EFDA  F00E         	goto	l4239
  7714  001E08                     u3150:
  7715  001E08                     l4257:
  7716  001E08  0E00               	movlw	0
  7717  001E0A  6E0E               	movwf	___fladd@aexp^0,c
  7718  001E0C  AE10               	btfss	___fladd@grs^0,7,c
  7719  001E0E  EF0B  F00F         	goto	u3161
  7720  001E12  EF0D  F00F         	goto	u3160
  7721  001E16                     u3161:
  7722  001E16  EF25  F00F         	goto	l1652
  7723  001E1A                     u3160:
  7724  001E1A  C010  F009         	movff	___fladd@grs,??___fladd
  7725  001E1E  0E7F               	movlw	127
  7726  001E20  1609               	andwf	??___fladd^0,f,c
  7727  001E22  B4D8               	btfsc	status,2,c
  7728  001E24  EF16  F00F         	goto	u3171
  7729  001E28  EF18  F00F         	goto	u3170
  7730  001E2C                     u3171:
  7731  001E2C  EF1C  F00F         	goto	l1653
  7732  001E30                     u3170:
  7733  001E30                     l4263:
  7734  001E30  0E01               	movlw	1
  7735  001E32  6E0E               	movwf	___fladd@aexp^0,c
  7736  001E34  EF25  F00F         	goto	l1652
  7737  001E38                     l1653:
  7738  001E38  A001               	btfss	___fladd@b^0,0,c
  7739  001E3A  EF21  F00F         	goto	u3181
  7740  001E3E  EF23  F00F         	goto	u3180
  7741  001E42                     u3181:
  7742  001E42  EF25  F00F         	goto	l1652
  7743  001E46                     u3180:
  7744  001E46  EF18  F00F         	goto	l4263
  7745  001E4A                     l1652:
  7746  001E4A  500E               	movf	___fladd@aexp^0,w,c
  7747  001E4C  B4D8               	btfsc	status,2,c
  7748  001E4E  EF2B  F00F         	goto	u3191
  7749  001E52  EF2D  F00F         	goto	u3190
  7750  001E56                     u3191:
  7751  001E56  EF58  F00F         	goto	l4275
  7752  001E5A                     u3190:
  7753  001E5A  0E01               	movlw	1
  7754  001E5C  2601               	addwf	___fladd@b^0,f,c
  7755  001E5E  0E00               	movlw	0
  7756  001E60  2202               	addwfc	(___fladd@b+1)^0,f,c
  7757  001E62  2203               	addwfc	(___fladd@b+2)^0,f,c
  7758  001E64  2204               	addwfc	(___fladd@b+3)^0,f,c
  7759  001E66  A004               	btfss	(___fladd@b+3)^0,0,c
  7760  001E68  EF38  F00F         	goto	u3201
  7761  001E6C  EF3A  F00F         	goto	u3200
  7762  001E70                     u3201:
  7763  001E70  EF58  F00F         	goto	l4275
  7764  001E74                     u3200:
  7765  001E74  C001  F009         	movff	___fladd@b,??___fladd
  7766  001E78  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7767  001E7C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7768  001E80  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7769  001E84  340C               	rlcf	(??___fladd+3)^0,w,c
  7770  001E86  320C               	rrcf	(??___fladd+3)^0,f,c
  7771  001E88  320B               	rrcf	(??___fladd+2)^0,f,c
  7772  001E8A  320A               	rrcf	(??___fladd+1)^0,f,c
  7773  001E8C  3209               	rrcf	??___fladd^0,f,c
  7774  001E8E  C009  F001         	movff	??___fladd,___fladd@b
  7775  001E92  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7776  001E96  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7777  001E9A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7778  001E9E  280F               	incf	___fladd@bexp^0,w,c
  7779  001EA0  B4D8               	btfsc	status,2,c
  7780  001EA2  EF55  F00F         	goto	u3211
  7781  001EA6  EF57  F00F         	goto	u3210
  7782  001EAA                     u3211:
  7783  001EAA  EF58  F00F         	goto	l4275
  7784  001EAE                     u3210:
  7785  001EAE  2A0F               	incf	___fladd@bexp^0,f,c
  7786  001EB0                     l4275:
  7787  001EB0  280F               	incf	___fladd@bexp^0,w,c
  7788  001EB2  B4D8               	btfsc	status,2,c
  7789  001EB4  EF5E  F00F         	goto	u3221
  7790  001EB8  EF60  F00F         	goto	u3220
  7791  001EBC                     u3221:
  7792  001EBC  EF68  F00F         	goto	l4279
  7793  001EC0                     u3220:
  7794  001EC0  500F               	movf	___fladd@bexp^0,w,c
  7795  001EC2  A4D8               	btfss	status,2,c
  7796  001EC4  EF66  F00F         	goto	u3231
  7797  001EC8  EF68  F00F         	goto	u3230
  7798  001ECC                     u3231:
  7799  001ECC  EF7A  F00F         	goto	l4283
  7800  001ED0                     u3230:
  7801  001ED0                     l4279:
  7802  001ED0  0E00               	movlw	0
  7803  001ED2  6E01               	movwf	___fladd@b^0,c
  7804  001ED4  0E00               	movlw	0
  7805  001ED6  6E02               	movwf	(___fladd@b+1)^0,c
  7806  001ED8  0E00               	movlw	0
  7807  001EDA  6E03               	movwf	(___fladd@b+2)^0,c
  7808  001EDC  0E00               	movlw	0
  7809  001EDE  6E04               	movwf	(___fladd@b+3)^0,c
  7810  001EE0  500F               	movf	___fladd@bexp^0,w,c
  7811  001EE2  A4D8               	btfss	status,2,c
  7812  001EE4  EF76  F00F         	goto	u3241
  7813  001EE8  EF78  F00F         	goto	u3240
  7814  001EEC                     u3241:
  7815  001EEC  EF7A  F00F         	goto	l4283
  7816  001EF0                     u3240:
  7817  001EF0  0E00               	movlw	0
  7818  001EF2  6E0D               	movwf	___fladd@signs^0,c
  7819  001EF4                     l4283:
  7820  001EF4  A00F               	btfss	___fladd@bexp^0,0,c
  7821  001EF6  EF7F  F00F         	goto	u3251
  7822  001EFA  EF81  F00F         	goto	u3250
  7823  001EFE                     u3251:
  7824  001EFE  EF84  F00F         	goto	l4287
  7825  001F02                     u3250:
  7826  001F02  8E03               	bsf	(___fladd@b+2)^0,7,c
  7827  001F04  EF85  F00F         	goto	l4289
  7828  001F08                     l4287:
  7829  001F08  9E03               	bcf	(___fladd@b+2)^0,7,c
  7830  001F0A                     l4289:
  7831  001F0A  90D8               	bcf	status,0,c
  7832  001F0C  300F               	rrcf	___fladd@bexp^0,w,c
  7833  001F0E  6E04               	movwf	(___fladd@b+3)^0,c
  7834  001F10  AE0D               	btfss	___fladd@signs^0,7,c
  7835  001F12  EF8D  F00F         	goto	u3261
  7836  001F16  EF8F  F00F         	goto	u3260
  7837  001F1A                     u3261:
  7838  001F1A  EF90  F00F         	goto	l4295
  7839  001F1E                     u3260:
  7840  001F1E  8E04               	bsf	(___fladd@b+3)^0,7,c
  7841  001F20                     l4295:
  7842  001F20  C001  F001         	movff	___fladd@b,?___fladd
  7843  001F24  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7844  001F28  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7845  001F2C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7846  001F30                     l1635:
  7847  001F30  0012               	return		;funcret
  7848  001F32                     __end_of___fladd:
  7849                           	callstack 0
  7850                           
  7851 ;; *************** function ___flneg *****************
  7852 ;; Defined at:
  7853 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  f1              4    0[COMRAM] unsigned char 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;		None
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  4    0[COMRAM] unsigned char 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7871 ;;Total ram usage:        4 bytes
  7872 ;; Hardware stack levels used: 1
  7873 ;; Hardware stack levels required when called: 2
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_efgtoa
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text30
  7882  0047C6                     __ptext30:
  7883                           	callstack 0
  7884  0047C6                     ___flneg:
  7885                           	callstack 22
  7886  0047C6  5001               	movf	___flneg@f1^0,w,c
  7887  0047C8  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7888  0047CA  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7889  0047CC  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7890  0047CE  B4D8               	btfsc	status,2,c
  7891  0047D0  EFEC  F023         	goto	u3921
  7892  0047D4  EFEE  F023         	goto	u3920
  7893  0047D8                     u3921:
  7894  0047D8  EFF6  F023         	goto	l4713
  7895  0047DC                     u3920:
  7896  0047DC  0E00               	movlw	0
  7897  0047DE  1A01               	xorwf	___flneg@f1^0,f,c
  7898  0047E0  0E00               	movlw	0
  7899  0047E2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7900  0047E4  0E00               	movlw	0
  7901  0047E6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7902  0047E8  0E80               	movlw	128
  7903  0047EA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7904  0047EC                     l4713:
  7905  0047EC  C001  F001         	movff	___flneg@f1,?___flneg
  7906  0047F0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7907  0047F4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7908  0047F8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7909  0047FC  0012               	return		;funcret
  7910  0047FE                     __end_of___flneg:
  7911                           	callstack 0
  7912                           
  7913 ;; *************** function ___fleq *****************
  7914 ;; Defined at:
  7915 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  ff1             4    0[COMRAM] unsigned char 
  7918 ;;  ff2             4    4[COMRAM] unsigned char 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;		None               void
  7923 ;; Registers used:
  7924 ;;		wreg, status,2, status,0
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7930 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7932 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7933 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7934 ;;Total ram usage:       12 bytes
  7935 ;; Hardware stack levels used: 1
  7936 ;; Hardware stack levels required when called: 2
  7937 ;; This function calls:
  7938 ;;		Nothing
  7939 ;; This function is called by:
  7940 ;;		_efgtoa
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           	psect	text31
  7945  0040EC                     __ptext31:
  7946                           	callstack 0
  7947  0040EC                     ___fleq:
  7948                           	callstack 22
  7949  0040EC  0E00               	movlw	0
  7950  0040EE  1401               	andwf	___fleq@ff1^0,w,c
  7951  0040F0  6E09               	movwf	??___fleq^0,c
  7952  0040F2  0E00               	movlw	0
  7953  0040F4  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7954  0040F6  6E0A               	movwf	(??___fleq+1)^0,c
  7955  0040F8  0E80               	movlw	128
  7956  0040FA  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7957  0040FC  6E0B               	movwf	(??___fleq+2)^0,c
  7958  0040FE  0E7F               	movlw	127
  7959  004100  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7960  004102  6E0C               	movwf	(??___fleq+3)^0,c
  7961  004104  5009               	movf	??___fleq^0,w,c
  7962  004106  100A               	iorwf	(??___fleq+1)^0,w,c
  7963  004108  100B               	iorwf	(??___fleq+2)^0,w,c
  7964  00410A  100C               	iorwf	(??___fleq+3)^0,w,c
  7965  00410C  A4D8               	btfss	status,2,c
  7966  00410E  EF8B  F020         	goto	u3841
  7967  004112  EF8D  F020         	goto	u3840
  7968  004116                     u3841:
  7969  004116  EF95  F020         	goto	l4675
  7970  00411A                     u3840:
  7971  00411A  0E00               	movlw	0
  7972  00411C  6E01               	movwf	___fleq@ff1^0,c
  7973  00411E  0E00               	movlw	0
  7974  004120  6E02               	movwf	(___fleq@ff1+1)^0,c
  7975  004122  0E00               	movlw	0
  7976  004124  6E03               	movwf	(___fleq@ff1+2)^0,c
  7977  004126  0E00               	movlw	0
  7978  004128  6E04               	movwf	(___fleq@ff1+3)^0,c
  7979  00412A                     l4675:
  7980  00412A  0E00               	movlw	0
  7981  00412C  1405               	andwf	___fleq@ff2^0,w,c
  7982  00412E  6E09               	movwf	??___fleq^0,c
  7983  004130  0E00               	movlw	0
  7984  004132  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7985  004134  6E0A               	movwf	(??___fleq+1)^0,c
  7986  004136  0E80               	movlw	128
  7987  004138  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7988  00413A  6E0B               	movwf	(??___fleq+2)^0,c
  7989  00413C  0E7F               	movlw	127
  7990  00413E  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7991  004140  6E0C               	movwf	(??___fleq+3)^0,c
  7992  004142  5009               	movf	??___fleq^0,w,c
  7993  004144  100A               	iorwf	(??___fleq+1)^0,w,c
  7994  004146  100B               	iorwf	(??___fleq+2)^0,w,c
  7995  004148  100C               	iorwf	(??___fleq+3)^0,w,c
  7996  00414A  A4D8               	btfss	status,2,c
  7997  00414C  EFAA  F020         	goto	u3851
  7998  004150  EFAC  F020         	goto	u3850
  7999  004154                     u3851:
  8000  004154  EFB4  F020         	goto	l4679
  8001  004158                     u3850:
  8002  004158  0E00               	movlw	0
  8003  00415A  6E05               	movwf	___fleq@ff2^0,c
  8004  00415C  0E00               	movlw	0
  8005  00415E  6E06               	movwf	(___fleq@ff2+1)^0,c
  8006  004160  0E00               	movlw	0
  8007  004162  6E07               	movwf	(___fleq@ff2+2)^0,c
  8008  004164  0E00               	movlw	0
  8009  004166  6E08               	movwf	(___fleq@ff2+3)^0,c
  8010  004168                     l4679:
  8011  004168  5005               	movf	___fleq@ff2^0,w,c
  8012  00416A  1801               	xorwf	___fleq@ff1^0,w,c
  8013  00416C  E10F               	bnz	u3860
  8014  00416E  5006               	movf	(___fleq@ff2+1)^0,w,c
  8015  004170  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8016  004172  E10C               	bnz	u3860
  8017  004174  5007               	movf	(___fleq@ff2+2)^0,w,c
  8018  004176  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8019  004178  E109               	bnz	u3860
  8020  00417A  5008               	movf	(___fleq@ff2+3)^0,w,c
  8021  00417C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8022  00417E  B4D8               	btfsc	status,2,c
  8023  004180  EFC4  F020         	goto	u3861
  8024  004184  EFC6  F020         	goto	u3860
  8025  004188                     u3861:
  8026  004188  EFC9  F020         	goto	l4683
  8027  00418C                     u3860:
  8028  00418C  90D8               	bcf	status,0,c
  8029  00418E  EFCA  F020         	goto	l1357
  8030  004192                     l4683:
  8031  004192  80D8               	bsf	status,0,c
  8032  004194                     l1357:
  8033  004194  0012               	return		;funcret
  8034  004196                     __end_of___fleq:
  8035                           	callstack 0
  8036                           
  8037 ;; *************** function ___fldiv *****************
  8038 ;; Defined at:
  8039 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;  b               4    0[COMRAM] unsigned char 
  8042 ;;  a               4    4[COMRAM] unsigned char 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;  grs             4   19[COMRAM] unsigned long 
  8045 ;;  rem             4   12[COMRAM] unsigned long 
  8046 ;;  new_exp         2   17[COMRAM] short 
  8047 ;;  aexp            1   24[COMRAM] unsigned char 
  8048 ;;  bexp            1   23[COMRAM] unsigned char 
  8049 ;;  sign            1   16[COMRAM] unsigned char 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  4    0[COMRAM] unsigned char 
  8052 ;; Registers used:
  8053 ;;		wreg, status,2, status,0
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8059 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8060 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8061 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8062 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8063 ;;Total ram usage:       25 bytes
  8064 ;; Hardware stack levels used: 1
  8065 ;; Hardware stack levels required when called: 2
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		_efgtoa
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text32
  8074  0027EC                     __ptext32:
  8075                           	callstack 0
  8076  0027EC                     ___fldiv:
  8077                           	callstack 22
  8078  0027EC  5004               	movf	(___fldiv@b+3)^0,w,c
  8079  0027EE  0B80               	andlw	128
  8080  0027F0  6E11               	movwf	___fldiv@sign^0,c
  8081  0027F2  5004               	movf	(___fldiv@b+3)^0,w,c
  8082  0027F4  2404               	addwf	(___fldiv@b+3)^0,w,c
  8083  0027F6  6E18               	movwf	___fldiv@bexp^0,c
  8084  0027F8  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8085  0027FA  EF01  F014         	goto	u3301
  8086  0027FE  EF03  F014         	goto	u3300
  8087  002802                     u3301:
  8088  002802  EF04  F014         	goto	l4323
  8089  002806                     u3300:
  8090  002806  8018               	bsf	___fldiv@bexp^0,0,c
  8091  002808                     l4323:
  8092  002808  5018               	movf	___fldiv@bexp^0,w,c
  8093  00280A  B4D8               	btfsc	status,2,c
  8094  00280C  EF0A  F014         	goto	u3311
  8095  002810  EF0C  F014         	goto	u3310
  8096  002814                     u3311:
  8097  002814  EF21  F014         	goto	l4333
  8098  002818                     u3310:
  8099  002818  2818               	incf	___fldiv@bexp^0,w,c
  8100  00281A  A4D8               	btfss	status,2,c
  8101  00281C  EF12  F014         	goto	u3321
  8102  002820  EF14  F014         	goto	u3320
  8103  002824                     u3321:
  8104  002824  EF1C  F014         	goto	l4329
  8105  002828                     u3320:
  8106  002828  0E00               	movlw	0
  8107  00282A  6E01               	movwf	___fldiv@b^0,c
  8108  00282C  0E00               	movlw	0
  8109  00282E  6E02               	movwf	(___fldiv@b+1)^0,c
  8110  002830  0E00               	movlw	0
  8111  002832  6E03               	movwf	(___fldiv@b+2)^0,c
  8112  002834  0E00               	movlw	0
  8113  002836  6E04               	movwf	(___fldiv@b+3)^0,c
  8114  002838                     l4329:
  8115  002838  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8116  00283A  0E00               	movlw	0
  8117  00283C  6E04               	movwf	(___fldiv@b+3)^0,c
  8118  00283E  EF29  F014         	goto	l4335
  8119  002842                     l4333:
  8120  002842  0E00               	movlw	0
  8121  002844  6E01               	movwf	___fldiv@b^0,c
  8122  002846  0E00               	movlw	0
  8123  002848  6E02               	movwf	(___fldiv@b+1)^0,c
  8124  00284A  0E00               	movlw	0
  8125  00284C  6E03               	movwf	(___fldiv@b+2)^0,c
  8126  00284E  0E00               	movlw	0
  8127  002850  6E04               	movwf	(___fldiv@b+3)^0,c
  8128  002852                     l4335:
  8129  002852  5008               	movf	(___fldiv@a+3)^0,w,c
  8130  002854  0B80               	andlw	128
  8131  002856  1A11               	xorwf	___fldiv@sign^0,f,c
  8132  002858  5008               	movf	(___fldiv@a+3)^0,w,c
  8133  00285A  2408               	addwf	(___fldiv@a+3)^0,w,c
  8134  00285C  6E19               	movwf	___fldiv@aexp^0,c
  8135  00285E  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8136  002860  EF34  F014         	goto	u3331
  8137  002864  EF36  F014         	goto	u3330
  8138  002868                     u3331:
  8139  002868  EF37  F014         	goto	l4343
  8140  00286C                     u3330:
  8141  00286C  8019               	bsf	___fldiv@aexp^0,0,c
  8142  00286E                     l4343:
  8143  00286E  5019               	movf	___fldiv@aexp^0,w,c
  8144  002870  B4D8               	btfsc	status,2,c
  8145  002872  EF3D  F014         	goto	u3341
  8146  002876  EF3F  F014         	goto	u3340
  8147  00287A                     u3341:
  8148  00287A  EF54  F014         	goto	l4353
  8149  00287E                     u3340:
  8150  00287E  2819               	incf	___fldiv@aexp^0,w,c
  8151  002880  A4D8               	btfss	status,2,c
  8152  002882  EF45  F014         	goto	u3351
  8153  002886  EF47  F014         	goto	u3350
  8154  00288A                     u3351:
  8155  00288A  EF4F  F014         	goto	l4349
  8156  00288E                     u3350:
  8157  00288E  0E00               	movlw	0
  8158  002890  6E05               	movwf	___fldiv@a^0,c
  8159  002892  0E00               	movlw	0
  8160  002894  6E06               	movwf	(___fldiv@a+1)^0,c
  8161  002896  0E00               	movlw	0
  8162  002898  6E07               	movwf	(___fldiv@a+2)^0,c
  8163  00289A  0E00               	movlw	0
  8164  00289C  6E08               	movwf	(___fldiv@a+3)^0,c
  8165  00289E                     l4349:
  8166  00289E  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8167  0028A0  0E00               	movlw	0
  8168  0028A2  6E08               	movwf	(___fldiv@a+3)^0,c
  8169  0028A4  EF5C  F014         	goto	l4355
  8170  0028A8                     l4353:
  8171  0028A8  0E00               	movlw	0
  8172  0028AA  6E05               	movwf	___fldiv@a^0,c
  8173  0028AC  0E00               	movlw	0
  8174  0028AE  6E06               	movwf	(___fldiv@a+1)^0,c
  8175  0028B0  0E00               	movlw	0
  8176  0028B2  6E07               	movwf	(___fldiv@a+2)^0,c
  8177  0028B4  0E00               	movlw	0
  8178  0028B6  6E08               	movwf	(___fldiv@a+3)^0,c
  8179  0028B8                     l4355:
  8180  0028B8  5005               	movf	___fldiv@a^0,w,c
  8181  0028BA  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8182  0028BC  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8183  0028BE  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8184  0028C0  A4D8               	btfss	status,2,c
  8185  0028C2  EF65  F014         	goto	u3361
  8186  0028C6  EF67  F014         	goto	u3360
  8187  0028CA                     u3361:
  8188  0028CA  EF7F  F014         	goto	l4367
  8189  0028CE                     u3360:
  8190  0028CE  0E00               	movlw	0
  8191  0028D0  6E01               	movwf	___fldiv@b^0,c
  8192  0028D2  0E00               	movlw	0
  8193  0028D4  6E02               	movwf	(___fldiv@b+1)^0,c
  8194  0028D6  0E00               	movlw	0
  8195  0028D8  6E03               	movwf	(___fldiv@b+2)^0,c
  8196  0028DA  0E00               	movlw	0
  8197  0028DC  6E04               	movwf	(___fldiv@b+3)^0,c
  8198  0028DE  0E80               	movlw	128
  8199  0028E0  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8200  0028E2  0E7F               	movlw	127
  8201  0028E4  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8202  0028E6                     l4361:
  8203  0028E6  5011               	movf	___fldiv@sign^0,w,c
  8204  0028E8  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8205  0028EA  C001  F001         	movff	___fldiv@b,?___fldiv
  8206  0028EE  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8207  0028F2  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8208  0028F6  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8209  0028FA  EFC2  F015         	goto	l1680
  8210  0028FE                     l4367:
  8211  0028FE  5018               	movf	___fldiv@bexp^0,w,c
  8212  002900  A4D8               	btfss	status,2,c
  8213  002902  EF85  F014         	goto	u3371
  8214  002906  EF87  F014         	goto	u3370
  8215  00290A                     u3371:
  8216  00290A  EF91  F014         	goto	l4375
  8217  00290E                     u3370:
  8218  00290E  0E00               	movlw	0
  8219  002910  6E01               	movwf	?___fldiv^0,c
  8220  002912  0E00               	movlw	0
  8221  002914  6E02               	movwf	(?___fldiv+1)^0,c
  8222  002916  0E00               	movlw	0
  8223  002918  6E03               	movwf	(?___fldiv+2)^0,c
  8224  00291A  0E00               	movlw	0
  8225  00291C  6E04               	movwf	(?___fldiv+3)^0,c
  8226  00291E  EFC2  F015         	goto	l1680
  8227  002922                     l4375:
  8228  002922  5019               	movf	___fldiv@aexp^0,w,c
  8229  002924  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8230  002928  6A0A               	clrf	(??___fldiv+1)^0,c
  8231  00292A  5E09               	subwf	??___fldiv^0,f,c
  8232  00292C  0E00               	movlw	0
  8233  00292E  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8234  002930  0E7F               	movlw	127
  8235  002932  2409               	addwf	??___fldiv^0,w,c
  8236  002934  6E12               	movwf	___fldiv@new_exp^0,c
  8237  002936  0E00               	movlw	0
  8238  002938  200A               	addwfc	(??___fldiv+1)^0,w,c
  8239  00293A  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8240  00293C  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8241  002940  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8242  002944  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8243  002948  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8244  00294C  0E00               	movlw	0
  8245  00294E  6E01               	movwf	___fldiv@b^0,c
  8246  002950  0E00               	movlw	0
  8247  002952  6E02               	movwf	(___fldiv@b+1)^0,c
  8248  002954  0E00               	movlw	0
  8249  002956  6E03               	movwf	(___fldiv@b+2)^0,c
  8250  002958  0E00               	movlw	0
  8251  00295A  6E04               	movwf	(___fldiv@b+3)^0,c
  8252  00295C  0E00               	movlw	0
  8253  00295E  6E14               	movwf	___fldiv@grs^0,c
  8254  002960  0E00               	movlw	0
  8255  002962  6E15               	movwf	(___fldiv@grs+1)^0,c
  8256  002964  0E00               	movlw	0
  8257  002966  6E16               	movwf	(___fldiv@grs+2)^0,c
  8258  002968  0E00               	movlw	0
  8259  00296A  6E17               	movwf	(___fldiv@grs+3)^0,c
  8260  00296C  0E00               	movlw	0
  8261  00296E  6E19               	movwf	___fldiv@aexp^0,c
  8262  002970  EFF2  F014         	goto	l1682
  8263  002974                     l4385:
  8264  002974  5019               	movf	___fldiv@aexp^0,w,c
  8265  002976  B4D8               	btfsc	status,2,c
  8266  002978  EFC0  F014         	goto	u3381
  8267  00297C  EFC2  F014         	goto	u3380
  8268  002980                     u3381:
  8269  002980  EFD9  F014         	goto	l4393
  8270  002984                     u3380:
  8271  002984  90D8               	bcf	status,0,c
  8272  002986  360D               	rlcf	___fldiv@rem^0,f,c
  8273  002988  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8274  00298A  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8275  00298C  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8276  00298E  90D8               	bcf	status,0,c
  8277  002990  3601               	rlcf	___fldiv@b^0,f,c
  8278  002992  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8279  002994  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8280  002996  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8281  002998  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8282  00299A  EFD1  F014         	goto	u3391
  8283  00299E  EFD3  F014         	goto	u3390
  8284  0029A2                     u3391:
  8285  0029A2  EFD4  F014         	goto	l1685
  8286  0029A6                     u3390:
  8287  0029A6  8001               	bsf	___fldiv@b^0,0,c
  8288  0029A8                     l1685:
  8289  0029A8  90D8               	bcf	status,0,c
  8290  0029AA  3614               	rlcf	___fldiv@grs^0,f,c
  8291  0029AC  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8292  0029AE  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8293  0029B0  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8294  0029B2                     l4393:
  8295  0029B2  5005               	movf	___fldiv@a^0,w,c
  8296  0029B4  5C0D               	subwf	___fldiv@rem^0,w,c
  8297  0029B6  5006               	movf	(___fldiv@a+1)^0,w,c
  8298  0029B8  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8299  0029BA  5007               	movf	(___fldiv@a+2)^0,w,c
  8300  0029BC  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8301  0029BE  5008               	movf	(___fldiv@a+3)^0,w,c
  8302  0029C0  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8303  0029C2  A0D8               	btfss	status,0,c
  8304  0029C4  EFE6  F014         	goto	u3401
  8305  0029C8  EFE8  F014         	goto	u3400
  8306  0029CC                     u3401:
  8307  0029CC  EFF1  F014         	goto	l4399
  8308  0029D0                     u3400:
  8309  0029D0  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8310  0029D2  5005               	movf	___fldiv@a^0,w,c
  8311  0029D4  5E0D               	subwf	___fldiv@rem^0,f,c
  8312  0029D6  5006               	movf	(___fldiv@a+1)^0,w,c
  8313  0029D8  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8314  0029DA  5007               	movf	(___fldiv@a+2)^0,w,c
  8315  0029DC  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8316  0029DE  5008               	movf	(___fldiv@a+3)^0,w,c
  8317  0029E0  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8318  0029E2                     l4399:
  8319  0029E2  2A19               	incf	___fldiv@aexp^0,f,c
  8320  0029E4                     l1682:
  8321  0029E4  0E19               	movlw	25
  8322  0029E6  6419               	cpfsgt	___fldiv@aexp^0,c
  8323  0029E8  EFF8  F014         	goto	u3411
  8324  0029EC  EFFA  F014         	goto	u3410
  8325  0029F0                     u3411:
  8326  0029F0  EFBA  F014         	goto	l4385
  8327  0029F4                     u3410:
  8328  0029F4  500D               	movf	___fldiv@rem^0,w,c
  8329  0029F6  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8330  0029F8  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8331  0029FA  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8332  0029FC  B4D8               	btfsc	status,2,c
  8333  0029FE  EF03  F015         	goto	u3421
  8334  002A02  EF05  F015         	goto	u3420
  8335  002A06                     u3421:
  8336  002A06  EF1D  F015         	goto	l4411
  8337  002A0A                     u3420:
  8338  002A0A  8014               	bsf	___fldiv@grs^0,0,c
  8339  002A0C  EF1D  F015         	goto	l4411
  8340  002A10                     l4405:
  8341  002A10  90D8               	bcf	status,0,c
  8342  002A12  3601               	rlcf	___fldiv@b^0,f,c
  8343  002A14  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8344  002A16  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8345  002A18  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8346  002A1A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8347  002A1C  EF12  F015         	goto	u3431
  8348  002A20  EF14  F015         	goto	u3430
  8349  002A24                     u3431:
  8350  002A24  EF15  F015         	goto	l1691
  8351  002A28                     u3430:
  8352  002A28  8001               	bsf	___fldiv@b^0,0,c
  8353  002A2A                     l1691:
  8354  002A2A  90D8               	bcf	status,0,c
  8355  002A2C  3614               	rlcf	___fldiv@grs^0,f,c
  8356  002A2E  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8357  002A30  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8358  002A32  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8359  002A34  0612               	decf	___fldiv@new_exp^0,f,c
  8360  002A36  A0D8               	btfss	status,0,c
  8361  002A38  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8362  002A3A                     l4411:
  8363  002A3A  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8364  002A3C  EF22  F015         	goto	u3441
  8365  002A40  EF24  F015         	goto	u3440
  8366  002A44                     u3441:
  8367  002A44  EF08  F015         	goto	l4405
  8368  002A48                     u3440:
  8369  002A48  0E00               	movlw	0
  8370  002A4A  6E19               	movwf	___fldiv@aexp^0,c
  8371  002A4C  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8372  002A4E  EF2B  F015         	goto	u3451
  8373  002A52  EF2D  F015         	goto	u3450
  8374  002A56                     u3451:
  8375  002A56  EF51  F015         	goto	l1693
  8376  002A5A                     u3450:
  8377  002A5A  0EFF               	movlw	255
  8378  002A5C  1414               	andwf	___fldiv@grs^0,w,c
  8379  002A5E  6E09               	movwf	??___fldiv^0,c
  8380  002A60  0EFF               	movlw	255
  8381  002A62  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8382  002A64  6E0A               	movwf	(??___fldiv+1)^0,c
  8383  002A66  0EFF               	movlw	255
  8384  002A68  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8385  002A6A  6E0B               	movwf	(??___fldiv+2)^0,c
  8386  002A6C  0E7F               	movlw	127
  8387  002A6E  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8388  002A70  6E0C               	movwf	(??___fldiv+3)^0,c
  8389  002A72  5009               	movf	??___fldiv^0,w,c
  8390  002A74  100A               	iorwf	(??___fldiv+1)^0,w,c
  8391  002A76  100B               	iorwf	(??___fldiv+2)^0,w,c
  8392  002A78  100C               	iorwf	(??___fldiv+3)^0,w,c
  8393  002A7A  B4D8               	btfsc	status,2,c
  8394  002A7C  EF42  F015         	goto	u3461
  8395  002A80  EF44  F015         	goto	u3460
  8396  002A84                     u3461:
  8397  002A84  EF48  F015         	goto	l1694
  8398  002A88                     u3460:
  8399  002A88                     l4419:
  8400  002A88  0E01               	movlw	1
  8401  002A8A  6E19               	movwf	___fldiv@aexp^0,c
  8402  002A8C  EF51  F015         	goto	l1693
  8403  002A90                     l1694:
  8404  002A90  A001               	btfss	___fldiv@b^0,0,c
  8405  002A92  EF4D  F015         	goto	u3471
  8406  002A96  EF4F  F015         	goto	u3470
  8407  002A9A                     u3471:
  8408  002A9A  EF51  F015         	goto	l1693
  8409  002A9E                     u3470:
  8410  002A9E  EF44  F015         	goto	l4419
  8411  002AA2                     l1693:
  8412  002AA2  5019               	movf	___fldiv@aexp^0,w,c
  8413  002AA4  B4D8               	btfsc	status,2,c
  8414  002AA6  EF57  F015         	goto	u3481
  8415  002AAA  EF59  F015         	goto	u3480
  8416  002AAE                     u3481:
  8417  002AAE  EF7D  F015         	goto	l4431
  8418  002AB2                     u3480:
  8419  002AB2  0E01               	movlw	1
  8420  002AB4  2601               	addwf	___fldiv@b^0,f,c
  8421  002AB6  0E00               	movlw	0
  8422  002AB8  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8423  002ABA  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8424  002ABC  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8425  002ABE  A004               	btfss	(___fldiv@b+3)^0,0,c
  8426  002AC0  EF64  F015         	goto	u3491
  8427  002AC4  EF66  F015         	goto	u3490
  8428  002AC8                     u3491:
  8429  002AC8  EF7D  F015         	goto	l4431
  8430  002ACC                     u3490:
  8431  002ACC  C001  F009         	movff	___fldiv@b,??___fldiv
  8432  002AD0  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8433  002AD4  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8434  002AD8  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8435  002ADC  340C               	rlcf	(??___fldiv+3)^0,w,c
  8436  002ADE  320C               	rrcf	(??___fldiv+3)^0,f,c
  8437  002AE0  320B               	rrcf	(??___fldiv+2)^0,f,c
  8438  002AE2  320A               	rrcf	(??___fldiv+1)^0,f,c
  8439  002AE4  3209               	rrcf	??___fldiv^0,f,c
  8440  002AE6  C009  F001         	movff	??___fldiv,___fldiv@b
  8441  002AEA  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8442  002AEE  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8443  002AF2  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8444  002AF6  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8445  002AF8  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8446  002AFA                     l4431:
  8447  002AFA  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8448  002AFC  EF88  F015         	goto	u3501
  8449  002B00  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8450  002B02  E108               	bnz	u3500
  8451  002B04  2812               	incf	___fldiv@new_exp^0,w,c
  8452  002B06  A0D8               	btfss	status,0,c
  8453  002B08  EF88  F015         	goto	u3501
  8454  002B0C  EF8A  F015         	goto	u3500
  8455  002B10                     u3501:
  8456  002B10  EF95  F015         	goto	l4435
  8457  002B14                     u3500:
  8458  002B14  0E00               	movlw	0
  8459  002B16  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8460  002B18  6812               	setf	___fldiv@new_exp^0,c
  8461  002B1A  0E00               	movlw	0
  8462  002B1C  6E01               	movwf	___fldiv@b^0,c
  8463  002B1E  0E00               	movlw	0
  8464  002B20  6E02               	movwf	(___fldiv@b+1)^0,c
  8465  002B22  0E00               	movlw	0
  8466  002B24  6E03               	movwf	(___fldiv@b+2)^0,c
  8467  002B26  0E00               	movlw	0
  8468  002B28  6E04               	movwf	(___fldiv@b+3)^0,c
  8469  002B2A                     l4435:
  8470  002B2A  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8471  002B2C  EFA2  F015         	goto	u3510
  8472  002B30  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8473  002B32  E106               	bnz	u3511
  8474  002B34  0412               	decf	___fldiv@new_exp^0,w,c
  8475  002B36  B0D8               	btfsc	status,0,c
  8476  002B38  EFA0  F015         	goto	u3511
  8477  002B3C  EFA2  F015         	goto	u3510
  8478  002B40                     u3511:
  8479  002B40  EFB0  F015         	goto	l4439
  8480  002B44                     u3510:
  8481  002B44  0E00               	movlw	0
  8482  002B46  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8483  002B48  0E00               	movlw	0
  8484  002B4A  6E12               	movwf	___fldiv@new_exp^0,c
  8485  002B4C  0E00               	movlw	0
  8486  002B4E  6E01               	movwf	___fldiv@b^0,c
  8487  002B50  0E00               	movlw	0
  8488  002B52  6E02               	movwf	(___fldiv@b+1)^0,c
  8489  002B54  0E00               	movlw	0
  8490  002B56  6E03               	movwf	(___fldiv@b+2)^0,c
  8491  002B58  0E00               	movlw	0
  8492  002B5A  6E04               	movwf	(___fldiv@b+3)^0,c
  8493  002B5C  0E00               	movlw	0
  8494  002B5E  6E11               	movwf	___fldiv@sign^0,c
  8495  002B60                     l4439:
  8496  002B60  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8497  002B64  A018               	btfss	___fldiv@bexp^0,0,c
  8498  002B66  EFB7  F015         	goto	u3521
  8499  002B6A  EFB9  F015         	goto	u3520
  8500  002B6E                     u3521:
  8501  002B6E  EFBC  F015         	goto	l4445
  8502  002B72                     u3520:
  8503  002B72  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8504  002B74  EFBD  F015         	goto	l4447
  8505  002B78                     l4445:
  8506  002B78  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8507  002B7A                     l4447:
  8508  002B7A  90D8               	bcf	status,0,c
  8509  002B7C  3018               	rrcf	___fldiv@bexp^0,w,c
  8510  002B7E  6E04               	movwf	(___fldiv@b+3)^0,c
  8511  002B80  EF73  F014         	goto	l4361
  8512  002B84                     l1680:
  8513  002B84  0012               	return		;funcret
  8514  002B86                     __end_of___fldiv:
  8515                           	callstack 0
  8516                           
  8517 ;; *************** function ___awmod *****************
  8518 ;; Defined at:
  8519 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  dividend        2    0[COMRAM] int 
  8522 ;;  divisor         2    2[COMRAM] int 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  sign            1    5[COMRAM] unsigned char 
  8525 ;;  counter         1    4[COMRAM] unsigned char 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  2    0[COMRAM] int 
  8528 ;; Registers used:
  8529 ;;		wreg, status,2, status,0
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8535 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8539 ;;Total ram usage:        6 bytes
  8540 ;; Hardware stack levels used: 1
  8541 ;; Hardware stack levels required when called: 2
  8542 ;; This function calls:
  8543 ;;		Nothing
  8544 ;; This function is called by:
  8545 ;;		_efgtoa
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           	psect	text33
  8550  00403C                     __ptext33:
  8551                           	callstack 0
  8552  00403C                     ___awmod:
  8553                           	callstack 22
  8554  00403C  0E00               	movlw	0
  8555  00403E  6E06               	movwf	___awmod@sign^0,c
  8556  004040  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8557  004042  EF27  F020         	goto	u3780
  8558  004046  EF25  F020         	goto	u3781
  8559  00404A                     u3781:
  8560  00404A  EF2D  F020         	goto	l4643
  8561  00404E                     u3780:
  8562  00404E  6C01               	negf	___awmod@dividend^0,c
  8563  004050  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8564  004052  B0D8               	btfsc	status,0,c
  8565  004054  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8566  004056  0E01               	movlw	1
  8567  004058  6E06               	movwf	___awmod@sign^0,c
  8568  00405A                     l4643:
  8569  00405A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8570  00405C  EF34  F020         	goto	u3790
  8571  004060  EF32  F020         	goto	u3791
  8572  004064                     u3791:
  8573  004064  EF38  F020         	goto	l4647
  8574  004068                     u3790:
  8575  004068  6C03               	negf	___awmod@divisor^0,c
  8576  00406A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8577  00406C  B0D8               	btfsc	status,0,c
  8578  00406E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8579  004070                     l4647:
  8580  004070  5003               	movf	___awmod@divisor^0,w,c
  8581  004072  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8582  004074  B4D8               	btfsc	status,2,c
  8583  004076  EF3F  F020         	goto	u3801
  8584  00407A  EF41  F020         	goto	u3800
  8585  00407E                     u3801:
  8586  00407E  EF65  F020         	goto	l4663
  8587  004082                     u3800:
  8588  004082  0E01               	movlw	1
  8589  004084  6E05               	movwf	___awmod@counter^0,c
  8590  004086  EF49  F020         	goto	l4653
  8591  00408A                     l4651:
  8592  00408A  90D8               	bcf	status,0,c
  8593  00408C  3603               	rlcf	___awmod@divisor^0,f,c
  8594  00408E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8595  004090  2A05               	incf	___awmod@counter^0,f,c
  8596  004092                     l4653:
  8597  004092  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8598  004094  EF4E  F020         	goto	u3811
  8599  004098  EF50  F020         	goto	u3810
  8600  00409C                     u3811:
  8601  00409C  EF45  F020         	goto	l4651
  8602  0040A0                     u3810:
  8603  0040A0                     l4655:
  8604  0040A0  5003               	movf	___awmod@divisor^0,w,c
  8605  0040A2  5C01               	subwf	___awmod@dividend^0,w,c
  8606  0040A4  5004               	movf	(___awmod@divisor+1)^0,w,c
  8607  0040A6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8608  0040A8  A0D8               	btfss	status,0,c
  8609  0040AA  EF59  F020         	goto	u3821
  8610  0040AE  EF5B  F020         	goto	u3820
  8611  0040B2                     u3821:
  8612  0040B2  EF5F  F020         	goto	l4659
  8613  0040B6                     u3820:
  8614  0040B6  5003               	movf	___awmod@divisor^0,w,c
  8615  0040B8  5E01               	subwf	___awmod@dividend^0,f,c
  8616  0040BA  5004               	movf	(___awmod@divisor+1)^0,w,c
  8617  0040BC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8618  0040BE                     l4659:
  8619  0040BE  90D8               	bcf	status,0,c
  8620  0040C0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8621  0040C2  3203               	rrcf	___awmod@divisor^0,f,c
  8622  0040C4  2E05               	decfsz	___awmod@counter^0,f,c
  8623  0040C6  EF50  F020         	goto	l4655
  8624  0040CA                     l4663:
  8625  0040CA  5006               	movf	___awmod@sign^0,w,c
  8626  0040CC  B4D8               	btfsc	status,2,c
  8627  0040CE  EF6B  F020         	goto	u3831
  8628  0040D2  EF6D  F020         	goto	u3830
  8629  0040D6                     u3831:
  8630  0040D6  EF71  F020         	goto	l4667
  8631  0040DA                     u3830:
  8632  0040DA  6C01               	negf	___awmod@dividend^0,c
  8633  0040DC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8634  0040DE  B0D8               	btfsc	status,0,c
  8635  0040E0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8636  0040E2                     l4667:
  8637  0040E2  C001  F001         	movff	___awmod@dividend,?___awmod
  8638  0040E6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8639  0040EA  0012               	return		;funcret
  8640  0040EC                     __end_of___awmod:
  8641                           	callstack 0
  8642                           
  8643 ;; *************** function ___awdiv *****************
  8644 ;; Defined at:
  8645 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  dividend        2    0[COMRAM] int 
  8648 ;;  divisor         2    2[COMRAM] int 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  quotient        2    6[COMRAM] int 
  8651 ;;  sign            1    5[COMRAM] unsigned char 
  8652 ;;  counter         1    4[COMRAM] unsigned char 
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  2    0[COMRAM] int 
  8655 ;; Registers used:
  8656 ;;		wreg, status,2, status,0
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8665 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8666 ;;Total ram usage:        8 bytes
  8667 ;; Hardware stack levels used: 1
  8668 ;; Hardware stack levels required when called: 2
  8669 ;; This function calls:
  8670 ;;		Nothing
  8671 ;; This function is called by:
  8672 ;;		_efgtoa
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text34
  8677  003EB6                     __ptext34:
  8678                           	callstack 0
  8679  003EB6                     ___awdiv:
  8680                           	callstack 22
  8681  003EB6  0E00               	movlw	0
  8682  003EB8  6E06               	movwf	___awdiv@sign^0,c
  8683  003EBA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8684  003EBC  EF64  F01F         	goto	u3720
  8685  003EC0  EF62  F01F         	goto	u3721
  8686  003EC4                     u3721:
  8687  003EC4  EF6A  F01F         	goto	l4599
  8688  003EC8                     u3720:
  8689  003EC8  6C03               	negf	___awdiv@divisor^0,c
  8690  003ECA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8691  003ECC  B0D8               	btfsc	status,0,c
  8692  003ECE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8693  003ED0  0E01               	movlw	1
  8694  003ED2  6E06               	movwf	___awdiv@sign^0,c
  8695  003ED4                     l4599:
  8696  003ED4  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8697  003ED6  EF71  F01F         	goto	u3730
  8698  003EDA  EF6F  F01F         	goto	u3731
  8699  003EDE                     u3731:
  8700  003EDE  EF77  F01F         	goto	l4605
  8701  003EE2                     u3730:
  8702  003EE2  6C01               	negf	___awdiv@dividend^0,c
  8703  003EE4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8704  003EE6  B0D8               	btfsc	status,0,c
  8705  003EE8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8706  003EEA  0E01               	movlw	1
  8707  003EEC  1A06               	xorwf	___awdiv@sign^0,f,c
  8708  003EEE                     l4605:
  8709  003EEE  0E00               	movlw	0
  8710  003EF0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8711  003EF2  0E00               	movlw	0
  8712  003EF4  6E07               	movwf	___awdiv@quotient^0,c
  8713  003EF6  5003               	movf	___awdiv@divisor^0,w,c
  8714  003EF8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8715  003EFA  B4D8               	btfsc	status,2,c
  8716  003EFC  EF82  F01F         	goto	u3741
  8717  003F00  EF84  F01F         	goto	u3740
  8718  003F04                     u3741:
  8719  003F04  EFAC  F01F         	goto	l4627
  8720  003F08                     u3740:
  8721  003F08  0E01               	movlw	1
  8722  003F0A  6E05               	movwf	___awdiv@counter^0,c
  8723  003F0C  EF8C  F01F         	goto	l4613
  8724  003F10                     l4611:
  8725  003F10  90D8               	bcf	status,0,c
  8726  003F12  3603               	rlcf	___awdiv@divisor^0,f,c
  8727  003F14  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8728  003F16  2A05               	incf	___awdiv@counter^0,f,c
  8729  003F18                     l4613:
  8730  003F18  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8731  003F1A  EF91  F01F         	goto	u3751
  8732  003F1E  EF93  F01F         	goto	u3750
  8733  003F22                     u3751:
  8734  003F22  EF88  F01F         	goto	l4611
  8735  003F26                     u3750:
  8736  003F26                     l4615:
  8737  003F26  90D8               	bcf	status,0,c
  8738  003F28  3607               	rlcf	___awdiv@quotient^0,f,c
  8739  003F2A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8740  003F2C  5003               	movf	___awdiv@divisor^0,w,c
  8741  003F2E  5C01               	subwf	___awdiv@dividend^0,w,c
  8742  003F30  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8743  003F32  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8744  003F34  A0D8               	btfss	status,0,c
  8745  003F36  EF9F  F01F         	goto	u3761
  8746  003F3A  EFA1  F01F         	goto	u3760
  8747  003F3E                     u3761:
  8748  003F3E  EFA6  F01F         	goto	l4623
  8749  003F42                     u3760:
  8750  003F42  5003               	movf	___awdiv@divisor^0,w,c
  8751  003F44  5E01               	subwf	___awdiv@dividend^0,f,c
  8752  003F46  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8753  003F48  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8754  003F4A  8007               	bsf	___awdiv@quotient^0,0,c
  8755  003F4C                     l4623:
  8756  003F4C  90D8               	bcf	status,0,c
  8757  003F4E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8758  003F50  3203               	rrcf	___awdiv@divisor^0,f,c
  8759  003F52  2E05               	decfsz	___awdiv@counter^0,f,c
  8760  003F54  EF93  F01F         	goto	l4615
  8761  003F58                     l4627:
  8762  003F58  5006               	movf	___awdiv@sign^0,w,c
  8763  003F5A  B4D8               	btfsc	status,2,c
  8764  003F5C  EFB2  F01F         	goto	u3771
  8765  003F60  EFB4  F01F         	goto	u3770
  8766  003F64                     u3771:
  8767  003F64  EFB8  F01F         	goto	l4631
  8768  003F68                     u3770:
  8769  003F68  6C07               	negf	___awdiv@quotient^0,c
  8770  003F6A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8771  003F6C  B0D8               	btfsc	status,0,c
  8772  003F6E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8773  003F70                     l4631:
  8774  003F70  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8775  003F74  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8776  003F78  0012               	return		;funcret
  8777  003F7A                     __end_of___awdiv:
  8778                           	callstack 0
  8779                           
  8780 ;; *************** function _atoi *****************
  8781 ;; Defined at:
  8782 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8785 ;;		 -> STR_1(5), 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;  n               2   20[COMRAM] int 
  8788 ;;  neg             2   13[COMRAM] int 
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  2    7[COMRAM] int 
  8791 ;; Registers used:
  8792 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;Total ram usage:       15 bytes
  8803 ;; Hardware stack levels used: 1
  8804 ;; Hardware stack levels required when called: 3
  8805 ;; This function calls:
  8806 ;;		___wmul
  8807 ;;		_isdigit
  8808 ;;		_isspace
  8809 ;; This function is called by:
  8810 ;;		_vfpfcnvrt
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text35
  8815  0032CE                     __ptext35:
  8816                           	callstack 0
  8817  0032CE                     _atoi:
  8818                           	callstack 22
  8819  0032CE  0E00               	movlw	0
  8820  0032D0  6E16               	movwf	(atoi@n+1)^0,c
  8821  0032D2  0E00               	movlw	0
  8822  0032D4  6E15               	movwf	atoi@n^0,c
  8823  0032D6  0E00               	movlw	0
  8824  0032D8  6E0F               	movwf	(atoi@neg+1)^0,c
  8825  0032DA  0E00               	movlw	0
  8826  0032DC  6E0E               	movwf	atoi@neg^0,c
  8827  0032DE  EF73  F019         	goto	l5175
  8828  0032E2                     l5173:
  8829  0032E2  4A08               	infsnz	atoi@s^0,f,c
  8830  0032E4  2A09               	incf	(atoi@s+1)^0,f,c
  8831  0032E6                     l5175:
  8832  0032E6  0E01               	movlw	1
  8833  0032E8  6E14               	movwf	_atoi$2094^0,c
  8834  0032EA  C008  FFF6         	movff	atoi@s,tblptrl
  8835  0032EE  C009  FFF7         	movff	atoi@s+1,tblptrh
  8836  0032F2                     	if	0	;tblptru may be non-zero
  8837  0032F2                     	endif
  8838  0032F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8839  0032F2  0E00               	movlw	low (__mediumconst shr (0+16))
  8840  0032F4  6EF8               	movwf	tblptru,c
  8841  0032F6                     	endif
  8842  0032F6  0008               	tblrd		*
  8843  0032F8  50F5               	movf	tablat,w,c
  8844  0032FA  0A20               	xorlw	32
  8845  0032FC  B4D8               	btfsc	status,2,c
  8846  0032FE  EF83  F019         	goto	u4841
  8847  003302  EF85  F019         	goto	u4840
  8848  003306                     u4841:
  8849  003306  EFA4  F019         	goto	l5183
  8850  00330A                     u4840:
  8851  00330A  0EF7               	movlw	247
  8852  00330C  6E0A               	movwf	??_atoi^0,c
  8853  00330E  0EFF               	movlw	255
  8854  003310  6E0B               	movwf	(??_atoi+1)^0,c
  8855  003312  C008  FFF6         	movff	atoi@s,tblptrl
  8856  003316  C009  FFF7         	movff	atoi@s+1,tblptrh
  8857  00331A                     	if	0	;tblptru may be non-zero
  8858  00331A                     	endif
  8859  00331A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8860  00331A  0E00               	movlw	low (__mediumconst shr (0+16))
  8861  00331C  6EF8               	movwf	tblptru,c
  8862  00331E                     	endif
  8863  00331E  0008               	tblrd		*
  8864  003320  50F5               	movf	tablat,w,c
  8865  003322  6E0C               	movwf	(??_atoi+2)^0,c
  8866  003324  6A0D               	clrf	(??_atoi+3)^0,c
  8867  003326  500A               	movf	??_atoi^0,w,c
  8868  003328  260C               	addwf	(??_atoi+2)^0,f,c
  8869  00332A  500B               	movf	(??_atoi+1)^0,w,c
  8870  00332C  220D               	addwfc	(??_atoi+3)^0,f,c
  8871  00332E  500D               	movf	(??_atoi+3)^0,w,c
  8872  003330  E109               	bnz	u4850
  8873  003332  0E05               	movlw	5
  8874  003334  5C0C               	subwf	(??_atoi+2)^0,w,c
  8875  003336  A0D8               	btfss	status,0,c
  8876  003338  EFA0  F019         	goto	u4851
  8877  00333C  EFA2  F019         	goto	u4850
  8878  003340                     u4851:
  8879  003340  EFA4  F019         	goto	l5183
  8880  003344                     u4850:
  8881  003344  0E00               	movlw	0
  8882  003346  6E14               	movwf	_atoi$2094^0,c
  8883  003348                     l5183:
  8884  003348  C014  F010         	movff	_atoi$2094,_atoi$2093
  8885  00334C  6A11               	clrf	(_atoi$2093+1)^0,c
  8886  00334E  5010               	movf	_atoi$2093^0,w,c
  8887  003350  1011               	iorwf	(_atoi$2093+1)^0,w,c
  8888  003352  A4D8               	btfss	status,2,c
  8889  003354  EFAE  F019         	goto	u4861
  8890  003358  EFB0  F019         	goto	u4860
  8891  00335C                     u4861:
  8892  00335C  EF71  F019         	goto	l5173
  8893  003360                     u4860:
  8894  003360  EFBA  F019         	goto	l5193
  8895  003364                     l5189:
  8896  003364  0E00               	movlw	0
  8897  003366  6E0F               	movwf	(atoi@neg+1)^0,c
  8898  003368  0E01               	movlw	1
  8899  00336A  6E0E               	movwf	atoi@neg^0,c
  8900  00336C                     l5191:
  8901  00336C  4A08               	infsnz	atoi@s^0,f,c
  8902  00336E  2A09               	incf	(atoi@s+1)^0,f,c
  8903  003370  EFF3  F019         	goto	l5199
  8904  003374                     l5193:
  8905  003374  C008  FFF6         	movff	atoi@s,tblptrl
  8906  003378  C009  FFF7         	movff	atoi@s+1,tblptrh
  8907  00337C                     	if	0	;tblptru may be non-zero
  8908  00337C                     	endif
  8909  00337C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8910  00337C  0E00               	movlw	low (__mediumconst shr (0+16))
  8911  00337E  6EF8               	movwf	tblptru,c
  8912  003380                     	endif
  8913  003380  0008               	tblrd		*
  8914  003382  50F5               	movf	tablat,w,c
  8915  003384  6E0A               	movwf	??_atoi^0,c
  8916  003386  6A0B               	clrf	(??_atoi+1)^0,c
  8917                           
  8918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8919                           ; Switch size 1, requested type "simple"
  8920                           ; Number of cases is 1, Range of values is 0 to 0
  8921                           ; switch strategies available:
  8922                           ; Name         Instructions Cycles
  8923                           ; simple_byte            4     3 (average)
  8924                           ;	Chosen strategy is simple_byte
  8925  003388  500B               	movf	(??_atoi+1)^0,w,c
  8926  00338A  0A00               	xorlw	0	; case 0
  8927  00338C  B4D8               	btfsc	status,2,c
  8928  00338E  EFCB  F019         	goto	l5919
  8929  003392  EFF3  F019         	goto	l5199
  8930  003396                     l5919:
  8931                           
  8932                           ; Switch size 1, requested type "simple"
  8933                           ; Number of cases is 2, Range of values is 43 to 45
  8934                           ; switch strategies available:
  8935                           ; Name         Instructions Cycles
  8936                           ; simple_byte            7     4 (average)
  8937                           ;	Chosen strategy is simple_byte
  8938  003396  500A               	movf	??_atoi^0,w,c
  8939  003398  0A2B               	xorlw	43	; case 43
  8940  00339A  B4D8               	btfsc	status,2,c
  8941  00339C  EFB6  F019         	goto	l5191
  8942  0033A0  0A06               	xorlw	6	; case 45
  8943  0033A2  B4D8               	btfsc	status,2,c
  8944  0033A4  EFB2  F019         	goto	l5189
  8945  0033A8  EFF3  F019         	goto	l5199
  8946  0033AC                     l5195:
  8947  0033AC  C015  F001         	movff	atoi@n,___wmul@multiplier
  8948  0033B0  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8949  0033B4  0E00               	movlw	0
  8950  0033B6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8951  0033B8  0E0A               	movlw	10
  8952  0033BA  6E03               	movwf	___wmul@multiplicand^0,c
  8953  0033BC  ECAC  F024         	call	___wmul	;wreg free
  8954  0033C0  C008  FFF6         	movff	atoi@s,tblptrl
  8955  0033C4  C009  FFF7         	movff	atoi@s+1,tblptrh
  8956  0033C8                     	if	0	;tblptru may be non-zero
  8957  0033C8                     	endif
  8958  0033C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8959  0033C8  0E00               	movlw	low (__mediumconst shr (0+16))
  8960  0033CA  6EF8               	movwf	tblptru,c
  8961  0033CC                     	endif
  8962  0033CC  0008               	tblrd		*
  8963  0033CE  50F5               	movf	tablat,w,c
  8964  0033D0  5E01               	subwf	?___wmul^0,f,c
  8965  0033D2  0E00               	movlw	0
  8966  0033D4  5A02               	subwfb	(?___wmul+1)^0,f,c
  8967  0033D6  0E30               	movlw	48
  8968  0033D8  2401               	addwf	?___wmul^0,w,c
  8969  0033DA  6E15               	movwf	atoi@n^0,c
  8970  0033DC  0E00               	movlw	0
  8971  0033DE  2002               	addwfc	(?___wmul+1)^0,w,c
  8972  0033E0  6E16               	movwf	(atoi@n+1)^0,c
  8973  0033E2  EFB6  F019         	goto	l5191
  8974  0033E6                     l5199:
  8975  0033E6  0ED0               	movlw	208
  8976  0033E8  6E0A               	movwf	??_atoi^0,c
  8977  0033EA  0EFF               	movlw	255
  8978  0033EC  6E0B               	movwf	(??_atoi+1)^0,c
  8979  0033EE  C008  FFF6         	movff	atoi@s,tblptrl
  8980  0033F2  C009  FFF7         	movff	atoi@s+1,tblptrh
  8981  0033F6                     	if	0	;tblptru may be non-zero
  8982  0033F6                     	endif
  8983  0033F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8984  0033F6  0E00               	movlw	low (__mediumconst shr (0+16))
  8985  0033F8  6EF8               	movwf	tblptru,c
  8986  0033FA                     	endif
  8987  0033FA  0008               	tblrd		*
  8988  0033FC  50F5               	movf	tablat,w,c
  8989  0033FE  6E0C               	movwf	(??_atoi+2)^0,c
  8990  003400  6A0D               	clrf	(??_atoi+3)^0,c
  8991  003402  500A               	movf	??_atoi^0,w,c
  8992  003404  260C               	addwf	(??_atoi+2)^0,f,c
  8993  003406  500B               	movf	(??_atoi+1)^0,w,c
  8994  003408  220D               	addwfc	(??_atoi+3)^0,f,c
  8995  00340A  500D               	movf	(??_atoi+3)^0,w,c
  8996  00340C  E10A               	bnz	u4870
  8997  00340E  0E0A               	movlw	10
  8998  003410  5C0C               	subwf	(??_atoi+2)^0,w,c
  8999  003412  A0D8               	btfss	status,0,c
  9000  003414  EF0E  F01A         	goto	u4871
  9001  003418  EF11  F01A         	goto	u4870
  9002  00341C                     u4871:
  9003  00341C  0E01               	movlw	1
  9004  00341E  EF12  F01A         	goto	u4880
  9005  003422                     u4870:
  9006  003422  0E00               	movlw	0
  9007  003424                     u4880:
  9008  003424  6E12               	movwf	_atoi$2095^0,c
  9009  003426  6A13               	clrf	(_atoi$2095+1)^0,c
  9010  003428  5012               	movf	_atoi$2095^0,w,c
  9011  00342A  1013               	iorwf	(_atoi$2095+1)^0,w,c
  9012  00342C  A4D8               	btfss	status,2,c
  9013  00342E  EF1B  F01A         	goto	u4891
  9014  003432  EF1D  F01A         	goto	u4890
  9015  003436                     u4891:
  9016  003436  EFD6  F019         	goto	l5195
  9017  00343A                     u4890:
  9018  00343A  500E               	movf	atoi@neg^0,w,c
  9019  00343C  100F               	iorwf	(atoi@neg+1)^0,w,c
  9020  00343E  A4D8               	btfss	status,2,c
  9021  003440  EF24  F01A         	goto	u4901
  9022  003444  EF26  F01A         	goto	u4900
  9023  003448                     u4901:
  9024  003448  EF34  F01A         	goto	l1997
  9025  00344C                     u4900:
  9026  00344C  C015  F00A         	movff	atoi@n,??_atoi
  9027  003450  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9028  003454  1E0A               	comf	??_atoi^0,f,c
  9029  003456  1E0B               	comf	(??_atoi+1)^0,f,c
  9030  003458  4A0A               	infsnz	??_atoi^0,f,c
  9031  00345A  2A0B               	incf	(??_atoi+1)^0,f,c
  9032  00345C  C00A  F008         	movff	??_atoi,?_atoi
  9033  003460  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9034  003464  EF38  F01A         	goto	l2000
  9035  003468                     l1997:
  9036  003468  C015  F008         	movff	atoi@n,?_atoi
  9037  00346C  C016  F009         	movff	atoi@n+1,?_atoi+1
  9038  003470                     l2000:
  9039  003470  0012               	return		;funcret
  9040  003472                     __end_of_atoi:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function _isspace *****************
  9044 ;; Defined at:
  9045 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  c               2    0[COMRAM] int 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;		None
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  2    0[COMRAM] int 
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;Total ram usage:        7 bytes
  9064 ;; Hardware stack levels used: 1
  9065 ;; Hardware stack levels required when called: 2
  9066 ;; This function calls:
  9067 ;;		Nothing
  9068 ;; This function is called by:
  9069 ;;		_atoi
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           	psect	text36
  9074  00457C                     __ptext36:
  9075                           	callstack 0
  9076  00457C                     _isspace:
  9077                           	callstack 22
  9078  00457C  0E01               	movlw	1
  9079  00457E  6E07               	movwf	_isspace$2124^0,c
  9080  004580  0E20               	movlw	32
  9081  004582  1801               	xorwf	isspace@c^0,w,c
  9082  004584  1002               	iorwf	(isspace@c+1)^0,w,c
  9083  004586  B4D8               	btfsc	status,2,c
  9084  004588  EFC8  F022         	goto	u4281
  9085  00458C  EFCA  F022         	goto	u4280
  9086  004590                     u4281:
  9087  004590  EFE3  F022         	goto	l4859
  9088  004594                     u4280:
  9089  004594  0EF7               	movlw	247
  9090  004596  6E03               	movwf	??_isspace^0,c
  9091  004598  0EFF               	movlw	255
  9092  00459A  6E04               	movwf	(??_isspace+1)^0,c
  9093  00459C  C001  F005         	movff	isspace@c,??_isspace+2
  9094  0045A0  C002  F006         	movff	isspace@c+1,??_isspace+3
  9095  0045A4  5003               	movf	??_isspace^0,w,c
  9096  0045A6  2605               	addwf	(??_isspace+2)^0,f,c
  9097  0045A8  5004               	movf	(??_isspace+1)^0,w,c
  9098  0045AA  2206               	addwfc	(??_isspace+3)^0,f,c
  9099  0045AC  5006               	movf	(??_isspace+3)^0,w,c
  9100  0045AE  E109               	bnz	u4290
  9101  0045B0  0E05               	movlw	5
  9102  0045B2  5C05               	subwf	(??_isspace+2)^0,w,c
  9103  0045B4  A0D8               	btfss	status,0,c
  9104  0045B6  EFDF  F022         	goto	u4291
  9105  0045BA  EFE1  F022         	goto	u4290
  9106  0045BE                     u4291:
  9107  0045BE  EFE3  F022         	goto	l4859
  9108  0045C2                     u4290:
  9109  0045C2  0E00               	movlw	0
  9110  0045C4  6E07               	movwf	_isspace$2124^0,c
  9111  0045C6                     l4859:
  9112  0045C6  C007  F001         	movff	_isspace$2124,?_isspace
  9113  0045CA  6A02               	clrf	(?_isspace+1)^0,c
  9114  0045CC  0012               	return		;funcret
  9115  0045CE                     __end_of_isspace:
  9116                           	callstack 0
  9117                           
  9118 ;; *************** function _isdigit *****************
  9119 ;; Defined at:
  9120 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  c               2    0[COMRAM] int 
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;		None
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  2    0[COMRAM] int 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2, status,0
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9137 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9138 ;;Total ram usage:        6 bytes
  9139 ;; Hardware stack levels used: 1
  9140 ;; Hardware stack levels required when called: 2
  9141 ;; This function calls:
  9142 ;;		Nothing
  9143 ;; This function is called by:
  9144 ;;		_vfpfcnvrt
  9145 ;;		_atoi
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           	psect	text37
  9150  0047FE                     __ptext37:
  9151                           	callstack 0
  9152  0047FE                     _isdigit:
  9153                           	callstack 23
  9154  0047FE  0ED0               	movlw	208
  9155  004800  6E03               	movwf	??_isdigit^0,c
  9156  004802  0EFF               	movlw	255
  9157  004804  6E04               	movwf	(??_isdigit+1)^0,c
  9158  004806  C001  F005         	movff	isdigit@c,??_isdigit+2
  9159  00480A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9160  00480E  5003               	movf	??_isdigit^0,w,c
  9161  004810  2605               	addwf	(??_isdigit+2)^0,f,c
  9162  004812  5004               	movf	(??_isdigit+1)^0,w,c
  9163  004814  2206               	addwfc	(??_isdigit+3)^0,f,c
  9164  004816  5006               	movf	(??_isdigit+3)^0,w,c
  9165  004818  E10A               	bnz	u4260
  9166  00481A  0E0A               	movlw	10
  9167  00481C  5C05               	subwf	(??_isdigit+2)^0,w,c
  9168  00481E  A0D8               	btfss	status,0,c
  9169  004820  EF14  F024         	goto	u4261
  9170  004824  EF17  F024         	goto	u4260
  9171  004828                     u4261:
  9172  004828  0E01               	movlw	1
  9173  00482A  EF18  F024         	goto	u4270
  9174  00482E                     u4260:
  9175  00482E  0E00               	movlw	0
  9176  004830                     u4270:
  9177  004830  6E01               	movwf	?_isdigit^0,c
  9178  004832  6A02               	clrf	(?_isdigit+1)^0,c
  9179  004834  0012               	return		;funcret
  9180  004836                     __end_of_isdigit:
  9181                           	callstack 0
  9182                           
  9183 ;; *************** function ___wmul *****************
  9184 ;; Defined at:
  9185 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  multiplier      2    0[COMRAM] unsigned int 
  9188 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;  product         2    4[COMRAM] unsigned int 
  9191 ;; Return value:  Size  Location     Type
  9192 ;;                  2    0[COMRAM] unsigned int 
  9193 ;; Registers used:
  9194 ;;		wreg, status,2, status,0, prodl, prodh
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9203 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9204 ;;Total ram usage:        6 bytes
  9205 ;; Hardware stack levels used: 1
  9206 ;; Hardware stack levels required when called: 2
  9207 ;; This function calls:
  9208 ;;		Nothing
  9209 ;; This function is called by:
  9210 ;;		_atoi
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           	psect	text38
  9215  004958                     __ptext38:
  9216                           	callstack 0
  9217  004958                     ___wmul:
  9218                           	callstack 22
  9219  004958  5001               	movf	___wmul@multiplier^0,w,c
  9220  00495A  0203               	mulwf	___wmul@multiplicand^0,c
  9221  00495C  CFF3 F005          	movff	prodl,___wmul@product
  9222  004960  CFF4 F006          	movff	prodh,___wmul@product+1
  9223  004964  5001               	movf	___wmul@multiplier^0,w,c
  9224  004966  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9225  004968  50F3               	movf	243,w,c
  9226  00496A  2606               	addwf	(___wmul@product+1)^0,f,c
  9227  00496C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9228  00496E  0203               	mulwf	___wmul@multiplicand^0,c
  9229  004970  50F3               	movf	243,w,c
  9230  004972  2606               	addwf	(___wmul@product+1)^0,f,c
  9231  004974  C005  F001         	movff	___wmul@product,?___wmul
  9232  004978  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9233  00497C  0012               	return		;funcret
  9234  00497E                     __end_of___wmul:
  9235                           	callstack 0
  9236                           
  9237 ;; *************** function _delayedBrownOut *****************
  9238 ;; Defined at:
  9239 ;;		line 419 in file "ConfigureCaps.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;		None
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;  vcap            4   57[COMRAM] float 
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9254 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9256 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;Total ram usage:        4 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; Hardware stack levels required when called: 5
  9260 ;; This function calls:
  9261 ;;		___flge
  9262 ;;		_isolateCapsToSeries
  9263 ;;		_sampleTaskCapArray
  9264 ;; This function is called by:
  9265 ;;		_main
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text39
  9270  004230                     __ptext39:
  9271                           	callstack 0
  9272  004230                     _delayedBrownOut:
  9273                           	callstack 25
  9274  004230                     
  9275                           ;ConfigureCaps.c: 423:  vcap = sampleTaskCapArray();
  9276  004230  EC97  F024         	call	_sampleTaskCapArray	;wreg free
  9277  004234  C032  F03A         	movff	?_sampleTaskCapArray,delayedBrownOut@vcap
  9278  004238  C033  F03B         	movff	?_sampleTaskCapArray+1,delayedBrownOut@vcap+1
  9279  00423C  C034  F03C         	movff	?_sampleTaskCapArray+2,delayedBrownOut@vcap+2
  9280  004240  C035  F03D         	movff	?_sampleTaskCapArray+3,delayedBrownOut@vcap+3
  9281  004244                     
  9282                           ;ConfigureCaps.c: 425:  if (vcap <= (2.7 * 1.1) && capTaskSeries_count != 8 ) {
  9283  004244  0E7B               	movlw	123
  9284  004246  6E28               	movwf	___flge@ff1^0,c
  9285  004248  0E14               	movlw	20
  9286  00424A  6E29               	movwf	(___flge@ff1+1)^0,c
  9287  00424C  0E3E               	movlw	62
  9288  00424E  6E2A               	movwf	(___flge@ff1+2)^0,c
  9289  004250  0E40               	movlw	64
  9290  004252  6E2B               	movwf	(___flge@ff1+3)^0,c
  9291  004254  C03A  F02C         	movff	delayedBrownOut@vcap,___flge@ff2
  9292  004258  C03B  F02D         	movff	delayedBrownOut@vcap+1,___flge@ff2+1
  9293  00425C  C03C  F02E         	movff	delayedBrownOut@vcap+2,___flge@ff2+2
  9294  004260  C03D  F02F         	movff	delayedBrownOut@vcap+3,___flge@ff2+3
  9295  004264  EC21  F01D         	call	___flge	;wreg free
  9296  004268  A0D8               	btfss	status,0,c
  9297  00426A  EF39  F021         	goto	u5481
  9298  00426E  EF3B  F021         	goto	u5480
  9299  004272                     u5481:
  9300  004272  EF48  F021         	goto	l5777
  9301  004276                     u5480:
  9302  004276  0E08               	movlw	8
  9303  004278  185E               	xorwf	_capTaskSeries_count^0,w,c
  9304  00427A  B4D8               	btfsc	status,2,c
  9305  00427C  EF42  F021         	goto	u5491
  9306  004280  EF44  F021         	goto	u5490
  9307  004284                     u5491:
  9308  004284  EF48  F021         	goto	l5777
  9309  004288                     u5490:
  9310  004288                     
  9311                           ;ConfigureCaps.c: 428:   isolateCapsToSeries();
  9312  004288  EC39  F01A         	call	_isolateCapsToSeries	;wreg free
  9313                           
  9314                           ;ConfigureCaps.c: 429:  }
  9315  00428C  EF64  F021         	goto	l1076
  9316  004290                     l5777:
  9317  004290  0ECD               	movlw	205
  9318  004292  6E28               	movwf	___flge@ff1^0,c
  9319  004294  0ECC               	movlw	204
  9320  004296  6E29               	movwf	(___flge@ff1+1)^0,c
  9321  004298  0E2C               	movlw	44
  9322  00429A  6E2A               	movwf	(___flge@ff1+2)^0,c
  9323  00429C  0E40               	movlw	64
  9324  00429E  6E2B               	movwf	(___flge@ff1+3)^0,c
  9325  0042A0  C03A  F02C         	movff	delayedBrownOut@vcap,___flge@ff2
  9326  0042A4  C03B  F02D         	movff	delayedBrownOut@vcap+1,___flge@ff2+1
  9327  0042A8  C03C  F02E         	movff	delayedBrownOut@vcap+2,___flge@ff2+2
  9328  0042AC  C03D  F02F         	movff	delayedBrownOut@vcap+3,___flge@ff2+3
  9329  0042B0  EC21  F01D         	call	___flge	;wreg free
  9330  0042B4  A0D8               	btfss	status,0,c
  9331  0042B6  EF5F  F021         	goto	u5501
  9332  0042BA  EF61  F021         	goto	u5500
  9333  0042BE                     u5501:
  9334  0042BE  EF64  F021         	goto	l1076
  9335  0042C2                     u5500:
  9336  0042C2                     
  9337                           ;ConfigureCaps.c: 431:         {;ConfigureCaps.c: 433:             isolatedflag=0;
  9338  0042C2  0E00               	movlw	0
  9339  0042C4  0100               	movlb	0	; () banked
  9340  0042C6  6FF8               	movwf	_isolatedflag& (0+255),b	;volatile
  9341  0042C8                     l1076:
  9342  0042C8  0012               	return		;funcret
  9343  0042CA                     __end_of_delayedBrownOut:
  9344                           	callstack 0
  9345                           
  9346 ;; *************** function _sampleTaskCapArray *****************
  9347 ;; Defined at:
  9348 ;;		line 269 in file "ConfigureCaps.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;		None
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;  vcap            4   53[COMRAM] float 
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  4   49[COMRAM] float 
  9355 ;; Registers used:
  9356 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9363 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9365 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9366 ;;Total ram usage:        8 bytes
  9367 ;; Hardware stack levels used: 1
  9368 ;; Hardware stack levels required when called: 4
  9369 ;; This function calls:
  9370 ;;		_getADCValue
  9371 ;; This function is called by:
  9372 ;;		_delayedBrownOut
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376                           	psect	text40
  9377  00492E                     __ptext40:
  9378                           	callstack 0
  9379  00492E                     _sampleTaskCapArray:
  9380                           	callstack 25
  9381  00492E  927C               	bcf	124,1,c	;volatile
  9382  004930  947C               	bcf	124,2,c	;volatile
  9383  004932                     
  9384                           ;ConfigureCaps.c: 275:             vcap= getADCValue();
  9385  004932  EC65  F021         	call	_getADCValue	;wreg free
  9386  004936  C028  F036         	movff	?_getADCValue,sampleTaskCapArray@vcap
  9387  00493A  C029  F037         	movff	?_getADCValue+1,sampleTaskCapArray@vcap+1
  9388  00493E  C02A  F038         	movff	?_getADCValue+2,sampleTaskCapArray@vcap+2
  9389  004942  C02B  F039         	movff	?_getADCValue+3,sampleTaskCapArray@vcap+3
  9390  004946                     
  9391                           ;ConfigureCaps.c: 277:             return vcap;
  9392  004946  C036  F032         	movff	sampleTaskCapArray@vcap,?_sampleTaskCapArray
  9393  00494A  C037  F033         	movff	sampleTaskCapArray@vcap+1,?_sampleTaskCapArray+1
  9394  00494E  C038  F034         	movff	sampleTaskCapArray@vcap+2,?_sampleTaskCapArray+2
  9395  004952  C039  F035         	movff	sampleTaskCapArray@vcap+3,?_sampleTaskCapArray+3
  9396  004956  0012               	return		;funcret
  9397  004958                     __end_of_sampleTaskCapArray:
  9398                           	callstack 0
  9399                           
  9400 ;; *************** function _getADCValue *****************
  9401 ;; Defined at:
  9402 ;;		line 57 in file "main.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;		None
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;  ADC_float       4   43[COMRAM] float 
  9407 ;;  getADCValue     2   47[COMRAM] unsigned short 
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  4   39[COMRAM] float 
  9410 ;; Registers used:
  9411 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9418 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9420 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9421 ;;Total ram usage:       10 bytes
  9422 ;; Hardware stack levels used: 1
  9423 ;; Hardware stack levels required when called: 3
  9424 ;; This function calls:
  9425 ;;		_ADCC_GetSingleConversion
  9426 ;;		___flmul
  9427 ;;		___xxtofl
  9428 ;; This function is called by:
  9429 ;;		_executeCommand
  9430 ;;		_sampleEHvoc
  9431 ;;		_sampleChargingCapArray
  9432 ;;		_sampleTaskCapArray
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           	psect	text41
  9437  0042CA                     __ptext41:
  9438                           	callstack 0
  9439  0042CA                     _getADCValue:
  9440                           	callstack 25
  9441  0042CA                     
  9442                           ;main.c: 60:     adc_result_t getADCValue =0 ;
  9443  0042CA  0E00               	movlw	0
  9444  0042CC  6E31               	movwf	(getADCValue@getADCValue+1)^0,c
  9445  0042CE  0E00               	movlw	0
  9446  0042D0  6E30               	movwf	getADCValue@getADCValue^0,c
  9447  0042D2                     
  9448                           ;main.c: 62:     getADCValue= ADCC_GetSingleConversion(channel_AND3);
  9449  0042D2  0E1B               	movlw	27
  9450  0042D4  EC69  F024         	call	_ADCC_GetSingleConversion
  9451  0042D8  C001  F030         	movff	?_ADCC_GetSingleConversion,getADCValue@getADCValue
  9452  0042DC  C002  F031         	movff	?_ADCC_GetSingleConversion+1,getADCValue@getADCValue+1
  9453  0042E0                     
  9454                           ;main.c: 64:     ADC_float = getADCValue *(3.3 / 1023);
  9455  0042E0  C030  F001         	movff	getADCValue@getADCValue,___xxtofl@val
  9456  0042E4  C031  F002         	movff	getADCValue@getADCValue+1,___xxtofl@val+1
  9457  0042E8  6A03               	clrf	(___xxtofl@val+2)^0,c
  9458  0042EA  6A04               	clrf	(___xxtofl@val+3)^0,c
  9459  0042EC  0E00               	movlw	0
  9460  0042EE  EC8D  F018         	call	___xxtofl
  9461  0042F2  C001  F00F         	movff	?___xxtofl,___flmul@b
  9462  0042F6  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  9463  0042FA  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  9464  0042FE  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  9465  004302  0E0D               	movlw	13
  9466  004304  6E13               	movwf	___flmul@a^0,c
  9467  004306  0E68               	movlw	104
  9468  004308  6E14               	movwf	(___flmul@a+1)^0,c
  9469  00430A  0E53               	movlw	83
  9470  00430C  6E15               	movwf	(___flmul@a+2)^0,c
  9471  00430E  0E3B               	movlw	59
  9472  004310  6E16               	movwf	(___flmul@a+3)^0,c
  9473  004312  ECE1  F011         	call	___flmul	;wreg free
  9474  004316  C00F  F02C         	movff	?___flmul,getADCValue@ADC_float
  9475  00431A  C010  F02D         	movff	?___flmul+1,getADCValue@ADC_float+1
  9476  00431E  C011  F02E         	movff	?___flmul+2,getADCValue@ADC_float+2
  9477  004322  C012  F02F         	movff	?___flmul+3,getADCValue@ADC_float+3
  9478  004326                     
  9479                           ;main.c: 65:     return ADC_float;
  9480  004326  C02C  F028         	movff	getADCValue@ADC_float,?_getADCValue
  9481  00432A  C02D  F029         	movff	getADCValue@ADC_float+1,?_getADCValue+1
  9482  00432E  C02E  F02A         	movff	getADCValue@ADC_float+2,?_getADCValue+2
  9483  004332  C02F  F02B         	movff	getADCValue@ADC_float+3,?_getADCValue+3
  9484  004336  0012               	return		;funcret
  9485  004338                     __end_of_getADCValue:
  9486                           	callstack 0
  9487                           
  9488 ;; *************** function ___xxtofl *****************
  9489 ;; Defined at:
  9490 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  sign            1    wreg     unsigned char 
  9493 ;;  val             4    0[COMRAM] long 
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;  sign            1    8[COMRAM] unsigned char 
  9496 ;;  arg             4   10[COMRAM] unsigned long 
  9497 ;;  exp             1    9[COMRAM] unsigned char 
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  4    0[COMRAM] unsigned char 
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9508 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9509 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9510 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9511 ;;Total ram usage:       14 bytes
  9512 ;; Hardware stack levels used: 1
  9513 ;; Hardware stack levels required when called: 2
  9514 ;; This function calls:
  9515 ;;		Nothing
  9516 ;; This function is called by:
  9517 ;;		_getADCValue
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           	psect	text42
  9522  00311A                     __ptext42:
  9523                           	callstack 0
  9524  00311A                     ___xxtofl:
  9525                           	callstack 25
  9526                           
  9527                           ;incstack = 0
  9528                           ;___xxtofl@sign stored from wreg
  9529  00311A  6E09               	movwf	___xxtofl@sign^0,c
  9530  00311C  5009               	movf	___xxtofl@sign^0,w,c
  9531  00311E  B4D8               	btfsc	status,2,c
  9532  003120  EF94  F018         	goto	u5111
  9533  003124  EF96  F018         	goto	u5110
  9534  003128                     u5111:
  9535  003128  EFB8  F018         	goto	l1753
  9536  00312C                     u5110:
  9537  00312C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9538  00312E  EF9D  F018         	goto	u5120
  9539  003132  EF9B  F018         	goto	u5121
  9540  003136                     u5121:
  9541  003136  EFB8  F018         	goto	l1753
  9542  00313A                     u5120:
  9543  00313A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9544  00313E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9545  003142  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9546  003146  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9547  00314A  1E05               	comf	??___xxtofl^0,f,c
  9548  00314C  1E06               	comf	(??___xxtofl+1)^0,f,c
  9549  00314E  1E07               	comf	(??___xxtofl+2)^0,f,c
  9550  003150  1E08               	comf	(??___xxtofl+3)^0,f,c
  9551  003152  2A05               	incf	??___xxtofl^0,f,c
  9552  003154  0E00               	movlw	0
  9553  003156  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9554  003158  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9555  00315A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9556  00315C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9557  003160  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9558  003164  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9559  003168  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9560  00316C  EFC0  F018         	goto	l5341
  9561  003170                     l1753:
  9562  003170  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9563  003174  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9564  003178  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9565  00317C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9566  003180                     l5341:
  9567  003180  5001               	movf	___xxtofl@val^0,w,c
  9568  003182  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9569  003184  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9570  003186  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9571  003188  A4D8               	btfss	status,2,c
  9572  00318A  EFC9  F018         	goto	u5131
  9573  00318E  EFCB  F018         	goto	u5130
  9574  003192                     u5131:
  9575  003192  EFD5  F018         	goto	l5347
  9576  003196                     u5130:
  9577  003196  0E00               	movlw	0
  9578  003198  6E01               	movwf	?___xxtofl^0,c
  9579  00319A  0E00               	movlw	0
  9580  00319C  6E02               	movwf	(?___xxtofl+1)^0,c
  9581  00319E  0E00               	movlw	0
  9582  0031A0  6E03               	movwf	(?___xxtofl+2)^0,c
  9583  0031A2  0E00               	movlw	0
  9584  0031A4  6E04               	movwf	(?___xxtofl+3)^0,c
  9585  0031A6  EF66  F019         	goto	l1756
  9586  0031AA                     l5347:
  9587  0031AA  0E96               	movlw	150
  9588  0031AC  6E0A               	movwf	___xxtofl@exp^0,c
  9589  0031AE  EFDF  F018         	goto	l5351
  9590  0031B2                     l5349:
  9591  0031B2  2A0A               	incf	___xxtofl@exp^0,f,c
  9592  0031B4  90D8               	bcf	status,0,c
  9593  0031B6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9594  0031B8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9595  0031BA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9596  0031BC  320B               	rrcf	___xxtofl@arg^0,f,c
  9597  0031BE                     l5351:
  9598  0031BE  0E00               	movlw	0
  9599  0031C0  140B               	andwf	___xxtofl@arg^0,w,c
  9600  0031C2  6E05               	movwf	??___xxtofl^0,c
  9601  0031C4  0E00               	movlw	0
  9602  0031C6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9603  0031C8  6E06               	movwf	(??___xxtofl+1)^0,c
  9604  0031CA  0E00               	movlw	0
  9605  0031CC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9606  0031CE  6E07               	movwf	(??___xxtofl+2)^0,c
  9607  0031D0  0EFE               	movlw	254
  9608  0031D2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9609  0031D4  6E08               	movwf	(??___xxtofl+3)^0,c
  9610  0031D6  5005               	movf	??___xxtofl^0,w,c
  9611  0031D8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9612  0031DA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9613  0031DC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9614  0031DE  A4D8               	btfss	status,2,c
  9615  0031E0  EFF4  F018         	goto	u5141
  9616  0031E4  EFF6  F018         	goto	u5140
  9617  0031E8                     u5141:
  9618  0031E8  EFD9  F018         	goto	l5349
  9619  0031EC                     u5140:
  9620  0031EC  EF04  F019         	goto	l1760
  9621  0031F0                     l5353:
  9622  0031F0  2A0A               	incf	___xxtofl@exp^0,f,c
  9623  0031F2  0E01               	movlw	1
  9624  0031F4  260B               	addwf	___xxtofl@arg^0,f,c
  9625  0031F6  0E00               	movlw	0
  9626  0031F8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9627  0031FA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9628  0031FC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9629  0031FE  90D8               	bcf	status,0,c
  9630  003200  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9631  003202  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9632  003204  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9633  003206  320B               	rrcf	___xxtofl@arg^0,f,c
  9634  003208                     l1760:
  9635  003208  0E00               	movlw	0
  9636  00320A  140B               	andwf	___xxtofl@arg^0,w,c
  9637  00320C  6E05               	movwf	??___xxtofl^0,c
  9638  00320E  0E00               	movlw	0
  9639  003210  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9640  003212  6E06               	movwf	(??___xxtofl+1)^0,c
  9641  003214  0E00               	movlw	0
  9642  003216  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9643  003218  6E07               	movwf	(??___xxtofl+2)^0,c
  9644  00321A  0EFF               	movlw	255
  9645  00321C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9646  00321E  6E08               	movwf	(??___xxtofl+3)^0,c
  9647  003220  5005               	movf	??___xxtofl^0,w,c
  9648  003222  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9649  003224  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9650  003226  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9651  003228  A4D8               	btfss	status,2,c
  9652  00322A  EF19  F019         	goto	u5151
  9653  00322E  EF1B  F019         	goto	u5150
  9654  003232                     u5151:
  9655  003232  EFF8  F018         	goto	l5353
  9656  003236                     u5150:
  9657  003236  EF23  F019         	goto	l5361
  9658  00323A                     l5359:
  9659  00323A  060A               	decf	___xxtofl@exp^0,f,c
  9660  00323C  90D8               	bcf	status,0,c
  9661  00323E  360B               	rlcf	___xxtofl@arg^0,f,c
  9662  003240  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9663  003242  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9664  003244  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9665  003246                     l5361:
  9666  003246  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9667  003248  EF28  F019         	goto	u5161
  9668  00324C  EF2A  F019         	goto	u5160
  9669  003250                     u5161:
  9670  003250  EF32  F019         	goto	l1767
  9671  003254                     u5160:
  9672  003254  0E02               	movlw	2
  9673  003256  600A               	cpfslt	___xxtofl@exp^0,c
  9674  003258  EF30  F019         	goto	u5171
  9675  00325C  EF32  F019         	goto	u5170
  9676  003260                     u5171:
  9677  003260  EF1D  F019         	goto	l5359
  9678  003264                     u5170:
  9679  003264                     l1767:
  9680  003264  B00A               	btfsc	___xxtofl@exp^0,0,c
  9681  003266  EF37  F019         	goto	u5181
  9682  00326A  EF39  F019         	goto	u5180
  9683  00326E                     u5181:
  9684  00326E  EF3A  F019         	goto	l5367
  9685  003272                     u5180:
  9686  003272  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9687  003274                     l5367:
  9688  003274  90D8               	bcf	status,0,c
  9689  003276  320A               	rrcf	___xxtofl@exp^0,f,c
  9690  003278  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9691  00327C  6A06               	clrf	(??___xxtofl+1)^0,c
  9692  00327E  6A07               	clrf	(??___xxtofl+2)^0,c
  9693  003280  6A08               	clrf	(??___xxtofl+3)^0,c
  9694  003282  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9695  003286  6A07               	clrf	(??___xxtofl+2)^0,c
  9696  003288  6A06               	clrf	(??___xxtofl+1)^0,c
  9697  00328A  6A05               	clrf	??___xxtofl^0,c
  9698  00328C  5005               	movf	??___xxtofl^0,w,c
  9699  00328E  120B               	iorwf	___xxtofl@arg^0,f,c
  9700  003290  5006               	movf	(??___xxtofl+1)^0,w,c
  9701  003292  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9702  003294  5007               	movf	(??___xxtofl+2)^0,w,c
  9703  003296  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9704  003298  5008               	movf	(??___xxtofl+3)^0,w,c
  9705  00329A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9706  00329C  5009               	movf	___xxtofl@sign^0,w,c
  9707  00329E  B4D8               	btfsc	status,2,c
  9708  0032A0  EF54  F019         	goto	u5191
  9709  0032A4  EF56  F019         	goto	u5190
  9710  0032A8                     u5191:
  9711  0032A8  EF5E  F019         	goto	l5377
  9712  0032AC                     u5190:
  9713  0032AC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9714  0032AE  EF5D  F019         	goto	u5200
  9715  0032B2  EF5B  F019         	goto	u5201
  9716  0032B6                     u5201:
  9717  0032B6  EF5E  F019         	goto	l5377
  9718  0032BA                     u5200:
  9719  0032BA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9720  0032BC                     l5377:
  9721  0032BC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9722  0032C0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9723  0032C4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9724  0032C8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9725  0032CC                     l1756:
  9726  0032CC  0012               	return		;funcret
  9727  0032CE                     __end_of___xxtofl:
  9728                           	callstack 0
  9729                           
  9730 ;; *************** function ___flmul *****************
  9731 ;; Defined at:
  9732 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;  b               4   14[COMRAM] unsigned char 
  9735 ;;  a               4   18[COMRAM] unsigned char 
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;  prod            4   33[COMRAM] struct .
  9738 ;;  grs             4   27[COMRAM] unsigned long 
  9739 ;;  temp            2   37[COMRAM] struct .
  9740 ;;  bexp            1   32[COMRAM] unsigned char 
  9741 ;;  aexp            1   31[COMRAM] unsigned char 
  9742 ;;  sign            1   26[COMRAM] unsigned char 
  9743 ;; Return value:  Size  Location     Type
  9744 ;;                  4   14[COMRAM] unsigned char 
  9745 ;; Registers used:
  9746 ;;		wreg, status,2, status,0, prodl, prodh
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9752 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9753 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9754 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9755 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9756 ;;Total ram usage:       25 bytes
  9757 ;; Hardware stack levels used: 1
  9758 ;; Hardware stack levels required when called: 2
  9759 ;; This function calls:
  9760 ;;		Nothing
  9761 ;; This function is called by:
  9762 ;;		_getADCValue
  9763 ;;		_fastChargingcaps
  9764 ;;		_efgtoa
  9765 ;; This function uses a non-reentrant model
  9766 ;;
  9767                           
  9768                           	psect	text43
  9769  0023C2                     __ptext43:
  9770                           	callstack 0
  9771  0023C2                     ___flmul:
  9772                           	callstack 25
  9773  0023C2  5012               	movf	(___flmul@b+3)^0,w,c
  9774  0023C4  0B80               	andlw	128
  9775  0023C6  6E1B               	movwf	___flmul@sign^0,c
  9776  0023C8  5012               	movf	(___flmul@b+3)^0,w,c
  9777  0023CA  2412               	addwf	(___flmul@b+3)^0,w,c
  9778  0023CC  6E21               	movwf	___flmul@bexp^0,c
  9779  0023CE  AE11               	btfss	(___flmul@b+2)^0,7,c
  9780  0023D0  EFEC  F011         	goto	u3531
  9781  0023D4  EFEE  F011         	goto	u3530
  9782  0023D8                     u3531:
  9783  0023D8  EFEF  F011         	goto	l4461
  9784  0023DC                     u3530:
  9785  0023DC  8021               	bsf	___flmul@bexp^0,0,c
  9786  0023DE                     l4461:
  9787  0023DE  5021               	movf	___flmul@bexp^0,w,c
  9788  0023E0  B4D8               	btfsc	status,2,c
  9789  0023E2  EFF5  F011         	goto	u3541
  9790  0023E6  EFF7  F011         	goto	u3540
  9791  0023EA                     u3541:
  9792  0023EA  EF0A  F012         	goto	l4469
  9793  0023EE                     u3540:
  9794  0023EE  2821               	incf	___flmul@bexp^0,w,c
  9795  0023F0  A4D8               	btfss	status,2,c
  9796  0023F2  EFFD  F011         	goto	u3551
  9797  0023F6  EFFF  F011         	goto	u3550
  9798  0023FA                     u3551:
  9799  0023FA  EF07  F012         	goto	l4467
  9800  0023FE                     u3550:
  9801  0023FE  0E00               	movlw	0
  9802  002400  6E0F               	movwf	___flmul@b^0,c
  9803  002402  0E00               	movlw	0
  9804  002404  6E10               	movwf	(___flmul@b+1)^0,c
  9805  002406  0E00               	movlw	0
  9806  002408  6E11               	movwf	(___flmul@b+2)^0,c
  9807  00240A  0E00               	movlw	0
  9808  00240C  6E12               	movwf	(___flmul@b+3)^0,c
  9809  00240E                     l4467:
  9810  00240E  8E11               	bsf	(___flmul@b+2)^0,7,c
  9811  002410  EF12  F012         	goto	l4471
  9812  002414                     l4469:
  9813  002414  0E00               	movlw	0
  9814  002416  6E0F               	movwf	___flmul@b^0,c
  9815  002418  0E00               	movlw	0
  9816  00241A  6E10               	movwf	(___flmul@b+1)^0,c
  9817  00241C  0E00               	movlw	0
  9818  00241E  6E11               	movwf	(___flmul@b+2)^0,c
  9819  002420  0E00               	movlw	0
  9820  002422  6E12               	movwf	(___flmul@b+3)^0,c
  9821  002424                     l4471:
  9822  002424  5016               	movf	(___flmul@a+3)^0,w,c
  9823  002426  0B80               	andlw	128
  9824  002428  1A1B               	xorwf	___flmul@sign^0,f,c
  9825  00242A  5016               	movf	(___flmul@a+3)^0,w,c
  9826  00242C  2416               	addwf	(___flmul@a+3)^0,w,c
  9827  00242E  6E20               	movwf	___flmul@aexp^0,c
  9828  002430  AE15               	btfss	(___flmul@a+2)^0,7,c
  9829  002432  EF1D  F012         	goto	u3561
  9830  002436  EF1F  F012         	goto	u3560
  9831  00243A                     u3561:
  9832  00243A  EF20  F012         	goto	l4479
  9833  00243E                     u3560:
  9834  00243E  8020               	bsf	___flmul@aexp^0,0,c
  9835  002440                     l4479:
  9836  002440  5020               	movf	___flmul@aexp^0,w,c
  9837  002442  B4D8               	btfsc	status,2,c
  9838  002444  EF26  F012         	goto	u3571
  9839  002448  EF28  F012         	goto	u3570
  9840  00244C                     u3571:
  9841  00244C  EF3B  F012         	goto	l4487
  9842  002450                     u3570:
  9843  002450  2820               	incf	___flmul@aexp^0,w,c
  9844  002452  A4D8               	btfss	status,2,c
  9845  002454  EF2E  F012         	goto	u3581
  9846  002458  EF30  F012         	goto	u3580
  9847  00245C                     u3581:
  9848  00245C  EF38  F012         	goto	l4485
  9849  002460                     u3580:
  9850  002460  0E00               	movlw	0
  9851  002462  6E13               	movwf	___flmul@a^0,c
  9852  002464  0E00               	movlw	0
  9853  002466  6E14               	movwf	(___flmul@a+1)^0,c
  9854  002468  0E00               	movlw	0
  9855  00246A  6E15               	movwf	(___flmul@a+2)^0,c
  9856  00246C  0E00               	movlw	0
  9857  00246E  6E16               	movwf	(___flmul@a+3)^0,c
  9858  002470                     l4485:
  9859  002470  8E15               	bsf	(___flmul@a+2)^0,7,c
  9860  002472  EF43  F012         	goto	l1712
  9861  002476                     l4487:
  9862  002476  0E00               	movlw	0
  9863  002478  6E13               	movwf	___flmul@a^0,c
  9864  00247A  0E00               	movlw	0
  9865  00247C  6E14               	movwf	(___flmul@a+1)^0,c
  9866  00247E  0E00               	movlw	0
  9867  002480  6E15               	movwf	(___flmul@a+2)^0,c
  9868  002482  0E00               	movlw	0
  9869  002484  6E16               	movwf	(___flmul@a+3)^0,c
  9870  002486                     l1712:
  9871  002486  5020               	movf	___flmul@aexp^0,w,c
  9872  002488  B4D8               	btfsc	status,2,c
  9873  00248A  EF49  F012         	goto	u3591
  9874  00248E  EF4B  F012         	goto	u3590
  9875  002492                     u3591:
  9876  002492  EF53  F012         	goto	l4491
  9877  002496                     u3590:
  9878  002496  5021               	movf	___flmul@bexp^0,w,c
  9879  002498  A4D8               	btfss	status,2,c
  9880  00249A  EF51  F012         	goto	u3601
  9881  00249E  EF53  F012         	goto	u3600
  9882  0024A2                     u3601:
  9883  0024A2  EF5D  F012         	goto	l4495
  9884  0024A6                     u3600:
  9885  0024A6                     l4491:
  9886  0024A6  0E00               	movlw	0
  9887  0024A8  6E0F               	movwf	?___flmul^0,c
  9888  0024AA  0E00               	movlw	0
  9889  0024AC  6E10               	movwf	(?___flmul+1)^0,c
  9890  0024AE  0E00               	movlw	0
  9891  0024B0  6E11               	movwf	(?___flmul+2)^0,c
  9892  0024B2  0E00               	movlw	0
  9893  0024B4  6E12               	movwf	(?___flmul+3)^0,c
  9894  0024B6  EFF5  F013         	goto	l1716
  9895  0024BA                     l4495:
  9896  0024BA  5015               	movf	(___flmul@a+2)^0,w,c
  9897  0024BC  020F               	mulwf	___flmul@b^0,c
  9898  0024BE  CFF3 F026          	movff	prodl,___flmul@temp
  9899  0024C2  CFF4 F027          	movff	prodh,___flmul@temp+1
  9900  0024C6  5026               	movf	___flmul@temp^0,w,c
  9901  0024C8  6E1C               	movwf	___flmul@grs^0,c
  9902  0024CA  6A1D               	clrf	(___flmul@grs+1)^0,c
  9903  0024CC  6A1E               	clrf	(___flmul@grs+2)^0,c
  9904  0024CE  6A1F               	clrf	(___flmul@grs+3)^0,c
  9905  0024D0  5027               	movf	(___flmul@temp+1)^0,w,c
  9906  0024D2  6E22               	movwf	___flmul@prod^0,c
  9907  0024D4  6A23               	clrf	(___flmul@prod+1)^0,c
  9908  0024D6  6A24               	clrf	(___flmul@prod+2)^0,c
  9909  0024D8  6A25               	clrf	(___flmul@prod+3)^0,c
  9910  0024DA  5014               	movf	(___flmul@a+1)^0,w,c
  9911  0024DC  0210               	mulwf	(___flmul@b+1)^0,c
  9912  0024DE  CFF3 F026          	movff	prodl,___flmul@temp
  9913  0024E2  CFF4 F027          	movff	prodh,___flmul@temp+1
  9914  0024E6  5026               	movf	___flmul@temp^0,w,c
  9915  0024E8  261C               	addwf	___flmul@grs^0,f,c
  9916  0024EA  0E00               	movlw	0
  9917  0024EC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9918  0024EE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9919  0024F0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9920  0024F2  5027               	movf	(___flmul@temp+1)^0,w,c
  9921  0024F4  2622               	addwf	___flmul@prod^0,f,c
  9922  0024F6  0E00               	movlw	0
  9923  0024F8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9924  0024FA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9925  0024FC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9926  0024FE  5013               	movf	___flmul@a^0,w,c
  9927  002500  0211               	mulwf	(___flmul@b+2)^0,c
  9928  002502  CFF3 F026          	movff	prodl,___flmul@temp
  9929  002506  CFF4 F027          	movff	prodh,___flmul@temp+1
  9930  00250A  5026               	movf	___flmul@temp^0,w,c
  9931  00250C  261C               	addwf	___flmul@grs^0,f,c
  9932  00250E  0E00               	movlw	0
  9933  002510  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9934  002512  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9935  002514  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9936  002516  5027               	movf	(___flmul@temp+1)^0,w,c
  9937  002518  2622               	addwf	___flmul@prod^0,f,c
  9938  00251A  0E00               	movlw	0
  9939  00251C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9940  00251E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9941  002520  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9942  002522  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9943  002526  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9944  00252A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9945  00252E  6A1C               	clrf	___flmul@grs^0,c
  9946  002530  5013               	movf	___flmul@a^0,w,c
  9947  002532  0210               	mulwf	(___flmul@b+1)^0,c
  9948  002534  CFF3 F026          	movff	prodl,___flmul@temp
  9949  002538  CFF4 F027          	movff	prodh,___flmul@temp+1
  9950  00253C  5026               	movf	___flmul@temp^0,w,c
  9951  00253E  261C               	addwf	___flmul@grs^0,f,c
  9952  002540  5027               	movf	(___flmul@temp+1)^0,w,c
  9953  002542  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9954  002544  0E00               	movlw	0
  9955  002546  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9956  002548  0E00               	movlw	0
  9957  00254A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9958  00254C  5014               	movf	(___flmul@a+1)^0,w,c
  9959  00254E  020F               	mulwf	___flmul@b^0,c
  9960  002550  CFF3 F026          	movff	prodl,___flmul@temp
  9961  002554  CFF4 F027          	movff	prodh,___flmul@temp+1
  9962  002558  5026               	movf	___flmul@temp^0,w,c
  9963  00255A  261C               	addwf	___flmul@grs^0,f,c
  9964  00255C  5027               	movf	(___flmul@temp+1)^0,w,c
  9965  00255E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9966  002560  0E00               	movlw	0
  9967  002562  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9968  002564  0E00               	movlw	0
  9969  002566  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9970  002568  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9971  00256C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9972  002570  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9973  002574  6A1C               	clrf	___flmul@grs^0,c
  9974  002576  5013               	movf	___flmul@a^0,w,c
  9975  002578  020F               	mulwf	___flmul@b^0,c
  9976  00257A  CFF3 F026          	movff	prodl,___flmul@temp
  9977  00257E  CFF4 F027          	movff	prodh,___flmul@temp+1
  9978  002582  5026               	movf	___flmul@temp^0,w,c
  9979  002584  261C               	addwf	___flmul@grs^0,f,c
  9980  002586  5027               	movf	(___flmul@temp+1)^0,w,c
  9981  002588  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9982  00258A  0E00               	movlw	0
  9983  00258C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9984  00258E  0E00               	movlw	0
  9985  002590  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9986  002592  5015               	movf	(___flmul@a+2)^0,w,c
  9987  002594  0210               	mulwf	(___flmul@b+1)^0,c
  9988  002596  CFF3 F026          	movff	prodl,___flmul@temp
  9989  00259A  CFF4 F027          	movff	prodh,___flmul@temp+1
  9990  00259E  5026               	movf	___flmul@temp^0,w,c
  9991  0025A0  2622               	addwf	___flmul@prod^0,f,c
  9992  0025A2  5027               	movf	(___flmul@temp+1)^0,w,c
  9993  0025A4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9994  0025A6  0E00               	movlw	0
  9995  0025A8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9996  0025AA  0E00               	movlw	0
  9997  0025AC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9998  0025AE  5014               	movf	(___flmul@a+1)^0,w,c
  9999  0025B0  0211               	mulwf	(___flmul@b+2)^0,c
 10000  0025B2  CFF3 F026          	movff	prodl,___flmul@temp
 10001  0025B6  CFF4 F027          	movff	prodh,___flmul@temp+1
 10002  0025BA  5026               	movf	___flmul@temp^0,w,c
 10003  0025BC  2622               	addwf	___flmul@prod^0,f,c
 10004  0025BE  5027               	movf	(___flmul@temp+1)^0,w,c
 10005  0025C0  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10006  0025C2  0E00               	movlw	0
 10007  0025C4  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10008  0025C6  0E00               	movlw	0
 10009  0025C8  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10010  0025CA  5015               	movf	(___flmul@a+2)^0,w,c
 10011  0025CC  0211               	mulwf	(___flmul@b+2)^0,c
 10012  0025CE  CFF3 F026          	movff	prodl,___flmul@temp
 10013  0025D2  CFF4 F027          	movff	prodh,___flmul@temp+1
 10014  0025D6  5026               	movf	___flmul@temp^0,w,c
 10015  0025D8  6E17               	movwf	??___flmul^0,c
 10016  0025DA  5027               	movf	(___flmul@temp+1)^0,w,c
 10017  0025DC  6E18               	movwf	(??___flmul+1)^0,c
 10018  0025DE  6A19               	clrf	(??___flmul+2)^0,c
 10019  0025E0  6A1A               	clrf	(??___flmul+3)^0,c
 10020  0025E2  C019  F01A         	movff	??___flmul+2,??___flmul+3
 10021  0025E6  C018  F019         	movff	??___flmul+1,??___flmul+2
 10022  0025EA  C017  F018         	movff	??___flmul,??___flmul+1
 10023  0025EE  6A17               	clrf	??___flmul^0,c
 10024  0025F0  5017               	movf	??___flmul^0,w,c
 10025  0025F2  2622               	addwf	___flmul@prod^0,f,c
 10026  0025F4  5018               	movf	(??___flmul+1)^0,w,c
 10027  0025F6  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10028  0025F8  5019               	movf	(??___flmul+2)^0,w,c
 10029  0025FA  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10030  0025FC  501A               	movf	(??___flmul+3)^0,w,c
 10031  0025FE  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10032  002600  C01C  F017         	movff	___flmul@grs,??___flmul
 10033  002604  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
 10034  002608  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
 10035  00260C  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
 10036  002610  0E19               	movlw	25
 10037  002612  EF10  F013         	goto	u3610
 10038  002616                     u3615:
 10039  002616  90D8               	bcf	status,0,c
 10040  002618  321A               	rrcf	(??___flmul+3)^0,f,c
 10041  00261A  3219               	rrcf	(??___flmul+2)^0,f,c
 10042  00261C  3218               	rrcf	(??___flmul+1)^0,f,c
 10043  00261E  3217               	rrcf	??___flmul^0,f,c
 10044  002620                     u3610:
 10045  002620  2EE8               	decfsz	wreg,f,c
 10046  002622  EF0B  F013         	goto	u3615
 10047  002626  5017               	movf	??___flmul^0,w,c
 10048  002628  2622               	addwf	___flmul@prod^0,f,c
 10049  00262A  5018               	movf	(??___flmul+1)^0,w,c
 10050  00262C  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10051  00262E  5019               	movf	(??___flmul+2)^0,w,c
 10052  002630  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10053  002632  501A               	movf	(??___flmul+3)^0,w,c
 10054  002634  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10055  002636  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10056  00263A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10057  00263E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10058  002642  6A1C               	clrf	___flmul@grs^0,c
 10059  002644  5020               	movf	___flmul@aexp^0,w,c
 10060  002646  C021  F017         	movff	___flmul@bexp,??___flmul
 10061  00264A  6A18               	clrf	(??___flmul+1)^0,c
 10062  00264C  2617               	addwf	??___flmul^0,f,c
 10063  00264E  0E00               	movlw	0
 10064  002650  2218               	addwfc	(??___flmul+1)^0,f,c
 10065  002652  0E82               	movlw	130
 10066  002654  2417               	addwf	??___flmul^0,w,c
 10067  002656  6E26               	movwf	___flmul@temp^0,c
 10068  002658  0EFF               	movlw	255
 10069  00265A  2018               	addwfc	(??___flmul+1)^0,w,c
 10070  00265C  6E27               	movwf	(___flmul@temp+1)^0,c
 10071  00265E  EF46  F013         	goto	l4543
 10072  002662                     l4537:
 10073  002662  90D8               	bcf	status,0,c
 10074  002664  3622               	rlcf	___flmul@prod^0,f,c
 10075  002666  3623               	rlcf	(___flmul@prod+1)^0,f,c
 10076  002668  3624               	rlcf	(___flmul@prod+2)^0,f,c
 10077  00266A  3625               	rlcf	(___flmul@prod+3)^0,f,c
 10078  00266C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 10079  00266E  EF3B  F013         	goto	u3621
 10080  002672  EF3D  F013         	goto	u3620
 10081  002676                     u3621:
 10082  002676  EF3E  F013         	goto	l1719
 10083  00267A                     u3620:
 10084  00267A  8022               	bsf	___flmul@prod^0,0,c
 10085  00267C                     l1719:
 10086  00267C  90D8               	bcf	status,0,c
 10087  00267E  361C               	rlcf	___flmul@grs^0,f,c
 10088  002680  361D               	rlcf	(___flmul@grs+1)^0,f,c
 10089  002682  361E               	rlcf	(___flmul@grs+2)^0,f,c
 10090  002684  361F               	rlcf	(___flmul@grs+3)^0,f,c
 10091  002686  0626               	decf	___flmul@temp^0,f,c
 10092  002688  A0D8               	btfss	status,0,c
 10093  00268A  0627               	decf	(___flmul@temp+1)^0,f,c
 10094  00268C                     l4543:
 10095  00268C  AE24               	btfss	(___flmul@prod+2)^0,7,c
 10096  00268E  EF4B  F013         	goto	u3631
 10097  002692  EF4D  F013         	goto	u3630
 10098  002696                     u3631:
 10099  002696  EF31  F013         	goto	l4537
 10100  00269A                     u3630:
 10101  00269A  0E00               	movlw	0
 10102  00269C  6E20               	movwf	___flmul@aexp^0,c
 10103  00269E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 10104  0026A0  EF54  F013         	goto	u3641
 10105  0026A4  EF56  F013         	goto	u3640
 10106  0026A8                     u3641:
 10107  0026A8  EF7A  F013         	goto	l1721
 10108  0026AC                     u3640:
 10109  0026AC  0EFF               	movlw	255
 10110  0026AE  141C               	andwf	___flmul@grs^0,w,c
 10111  0026B0  6E17               	movwf	??___flmul^0,c
 10112  0026B2  0EFF               	movlw	255
 10113  0026B4  141D               	andwf	(___flmul@grs+1)^0,w,c
 10114  0026B6  6E18               	movwf	(??___flmul+1)^0,c
 10115  0026B8  0EFF               	movlw	255
 10116  0026BA  141E               	andwf	(___flmul@grs+2)^0,w,c
 10117  0026BC  6E19               	movwf	(??___flmul+2)^0,c
 10118  0026BE  0E7F               	movlw	127
 10119  0026C0  141F               	andwf	(___flmul@grs+3)^0,w,c
 10120  0026C2  6E1A               	movwf	(??___flmul+3)^0,c
 10121  0026C4  5017               	movf	??___flmul^0,w,c
 10122  0026C6  1018               	iorwf	(??___flmul+1)^0,w,c
 10123  0026C8  1019               	iorwf	(??___flmul+2)^0,w,c
 10124  0026CA  101A               	iorwf	(??___flmul+3)^0,w,c
 10125  0026CC  B4D8               	btfsc	status,2,c
 10126  0026CE  EF6B  F013         	goto	u3651
 10127  0026D2  EF6D  F013         	goto	u3650
 10128  0026D6                     u3651:
 10129  0026D6  EF71  F013         	goto	l1722
 10130  0026DA                     u3650:
 10131  0026DA                     l4551:
 10132  0026DA  0E01               	movlw	1
 10133  0026DC  6E20               	movwf	___flmul@aexp^0,c
 10134  0026DE  EF7A  F013         	goto	l1721
 10135  0026E2                     l1722:
 10136  0026E2  A022               	btfss	___flmul@prod^0,0,c
 10137  0026E4  EF76  F013         	goto	u3661
 10138  0026E8  EF78  F013         	goto	u3660
 10139  0026EC                     u3661:
 10140  0026EC  EF7A  F013         	goto	l1721
 10141  0026F0                     u3660:
 10142  0026F0  EF6D  F013         	goto	l4551
 10143  0026F4                     l1721:
 10144  0026F4  5020               	movf	___flmul@aexp^0,w,c
 10145  0026F6  B4D8               	btfsc	status,2,c
 10146  0026F8  EF80  F013         	goto	u3671
 10147  0026FC  EF82  F013         	goto	u3670
 10148  002700                     u3671:
 10149  002700  EFA6  F013         	goto	l4563
 10150  002704                     u3670:
 10151  002704  0E01               	movlw	1
 10152  002706  2622               	addwf	___flmul@prod^0,f,c
 10153  002708  0E00               	movlw	0
 10154  00270A  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10155  00270C  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10156  00270E  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10157  002710  A025               	btfss	(___flmul@prod+3)^0,0,c
 10158  002712  EF8D  F013         	goto	u3681
 10159  002716  EF8F  F013         	goto	u3680
 10160  00271A                     u3681:
 10161  00271A  EFA6  F013         	goto	l4563
 10162  00271E                     u3680:
 10163  00271E  C022  F017         	movff	___flmul@prod,??___flmul
 10164  002722  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 10165  002726  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 10166  00272A  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 10167  00272E  341A               	rlcf	(??___flmul+3)^0,w,c
 10168  002730  321A               	rrcf	(??___flmul+3)^0,f,c
 10169  002732  3219               	rrcf	(??___flmul+2)^0,f,c
 10170  002734  3218               	rrcf	(??___flmul+1)^0,f,c
 10171  002736  3217               	rrcf	??___flmul^0,f,c
 10172  002738  C017  F022         	movff	??___flmul,___flmul@prod
 10173  00273C  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 10174  002740  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 10175  002744  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 10176  002748  4A26               	infsnz	___flmul@temp^0,f,c
 10177  00274A  2A27               	incf	(___flmul@temp+1)^0,f,c
 10178  00274C                     l4563:
 10179  00274C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10180  00274E  EFB1  F013         	goto	u3691
 10181  002752  5027               	movf	(___flmul@temp+1)^0,w,c
 10182  002754  E108               	bnz	u3690
 10183  002756  2826               	incf	___flmul@temp^0,w,c
 10184  002758  A0D8               	btfss	status,0,c
 10185  00275A  EFB1  F013         	goto	u3691
 10186  00275E  EFB3  F013         	goto	u3690
 10187  002762                     u3691:
 10188  002762  EFBD  F013         	goto	l4567
 10189  002766                     u3690:
 10190  002766  0E00               	movlw	0
 10191  002768  6E22               	movwf	___flmul@prod^0,c
 10192  00276A  0E00               	movlw	0
 10193  00276C  6E23               	movwf	(___flmul@prod+1)^0,c
 10194  00276E  0E80               	movlw	128
 10195  002770  6E24               	movwf	(___flmul@prod+2)^0,c
 10196  002772  0E7F               	movlw	127
 10197  002774  6E25               	movwf	(___flmul@prod+3)^0,c
 10198  002776  EFEB  F013         	goto	l4579
 10199  00277A                     l4567:
 10200  00277A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10201  00277C  EFCA  F013         	goto	u3700
 10202  002780  5027               	movf	(___flmul@temp+1)^0,w,c
 10203  002782  E106               	bnz	u3701
 10204  002784  0426               	decf	___flmul@temp^0,w,c
 10205  002786  B0D8               	btfsc	status,0,c
 10206  002788  EFC8  F013         	goto	u3701
 10207  00278C  EFCA  F013         	goto	u3700
 10208  002790                     u3701:
 10209  002790  EFD6  F013         	goto	l1729
 10210  002794                     u3700:
 10211  002794  0E00               	movlw	0
 10212  002796  6E22               	movwf	___flmul@prod^0,c
 10213  002798  0E00               	movlw	0
 10214  00279A  6E23               	movwf	(___flmul@prod+1)^0,c
 10215  00279C  0E00               	movlw	0
 10216  00279E  6E24               	movwf	(___flmul@prod+2)^0,c
 10217  0027A0  0E00               	movlw	0
 10218  0027A2  6E25               	movwf	(___flmul@prod+3)^0,c
 10219  0027A4  0E00               	movlw	0
 10220  0027A6  6E1B               	movwf	___flmul@sign^0,c
 10221  0027A8  EFEB  F013         	goto	l4579
 10222  0027AC                     l1729:
 10223  0027AC  C026  F021         	movff	___flmul@temp,___flmul@bexp
 10224  0027B0  0EFF               	movlw	255
 10225  0027B2  1622               	andwf	___flmul@prod^0,f,c
 10226  0027B4  0EFF               	movlw	255
 10227  0027B6  1623               	andwf	(___flmul@prod+1)^0,f,c
 10228  0027B8  0E7F               	movlw	127
 10229  0027BA  1624               	andwf	(___flmul@prod+2)^0,f,c
 10230  0027BC  0E00               	movlw	0
 10231  0027BE  1625               	andwf	(___flmul@prod+3)^0,f,c
 10232  0027C0  A021               	btfss	___flmul@bexp^0,0,c
 10233  0027C2  EFE5  F013         	goto	u3711
 10234  0027C6  EFE7  F013         	goto	u3710
 10235  0027CA                     u3711:
 10236  0027CA  EFE8  F013         	goto	l4577
 10237  0027CE                     u3710:
 10238  0027CE  8E24               	bsf	(___flmul@prod+2)^0,7,c
 10239  0027D0                     l4577:
 10240  0027D0  90D8               	bcf	status,0,c
 10241  0027D2  3021               	rrcf	___flmul@bexp^0,w,c
 10242  0027D4  6E25               	movwf	(___flmul@prod+3)^0,c
 10243  0027D6                     l4579:
 10244  0027D6  501B               	movf	___flmul@sign^0,w,c
 10245  0027D8  1225               	iorwf	(___flmul@prod+3)^0,f,c
 10246  0027DA  C022  F00F         	movff	___flmul@prod,?___flmul
 10247  0027DE  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 10248  0027E2  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 10249  0027E6  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 10250  0027EA                     l1716:
 10251  0027EA  0012               	return		;funcret
 10252  0027EC                     __end_of___flmul:
 10253                           	callstack 0
 10254                           
 10255 ;; *************** function _ADCC_GetSingleConversion *****************
 10256 ;; Defined at:
 10257 ;;		line 131 in file "mcc_generated_files/adcc.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;  channel         1    wreg     enum E14212
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;  channel         1    4[COMRAM] enum E14212
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  2    0[COMRAM] unsigned short 
 10264 ;; Registers used:
 10265 ;;		wreg, status,2, status,0
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10273 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10274 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10275 ;;Total ram usage:        5 bytes
 10276 ;; Hardware stack levels used: 1
 10277 ;; Hardware stack levels required when called: 2
 10278 ;; This function calls:
 10279 ;;		Nothing
 10280 ;; This function is called by:
 10281 ;;		_getADCValue
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           	psect	text44
 10286  0048D2                     __ptext44:
 10287                           	callstack 0
 10288  0048D2                     _ADCC_GetSingleConversion:
 10289                           	callstack 25
 10290                           
 10291                           ;incstack = 0
 10292                           ;ADCC_GetSingleConversion@channel stored from wreg
 10293  0048D2  6E05               	movwf	ADCC_GetSingleConversion@channel^0,c
 10294  0048D4                     
 10295                           ;mcc_generated_files/adcc.c: 131: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = 
      +                          channel;
 10296  0048D4  C005  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 10297  0048D8                     
 10298                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 10299  0048D8  8E60               	bsf	96,7,c	;volatile
 10300  0048DA                     
 10301                           ;mcc_generated_files/adcc.c: 140:     ADCON0bits.ADCONT = 0;
 10302  0048DA  9C60               	bcf	96,6,c	;volatile
 10303  0048DC                     
 10304                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADGO = 1;
 10305  0048DC  8060               	bsf	96,0,c	;volatile
 10306  0048DE                     l344:
 10307                           
 10308                           ;mcc_generated_files/adcc.c: 147:     while (ADCON0bits.ADGO)
 10309  0048DE  B060               	btfsc	96,0,c	;volatile
 10310  0048E0  EF74  F024         	goto	u5101
 10311  0048E4  EF76  F024         	goto	u5100
 10312  0048E8                     u5101:
 10313  0048E8  EF6F  F024         	goto	l344
 10314  0048EC                     u5100:
 10315  0048EC                     
 10316                           ;mcc_generated_files/adcc.c: 153:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10317  0048EC  5064               	movf	100,w,c	;volatile
 10318  0048EE  6E04               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
 10319  0048F0  6A03               	clrf	??_ADCC_GetSingleConversion^0,c
 10320  0048F2  5063               	movf	99,w,c	;volatile
 10321  0048F4  2403               	addwf	??_ADCC_GetSingleConversion^0,w,c
 10322  0048F6  6E01               	movwf	?_ADCC_GetSingleConversion^0,c
 10323  0048F8  0E00               	movlw	0
 10324  0048FA  2004               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
 10325  0048FC  6E02               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
 10326  0048FE  0012               	return		;funcret
 10327  004900                     __end_of_ADCC_GetSingleConversion:
 10328                           	callstack 0
 10329                           
 10330 ;; *************** function _isolateCapsToSeries *****************
 10331 ;; Defined at:
 10332 ;;		line 280 in file "ConfigureCaps.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;		None
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;		None
 10337 ;; Return value:  Size  Location     Type
 10338 ;;                  1    wreg      void 
 10339 ;; Registers used:
 10340 ;;		wreg, status,2, status,0
 10341 ;; Tracked objects:
 10342 ;;		On entry : 0/0
 10343 ;;		On exit  : 0/0
 10344 ;;		Unchanged: 0/0
 10345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10350 ;;Total ram usage:        2 bytes
 10351 ;; Hardware stack levels used: 1
 10352 ;; Hardware stack levels required when called: 2
 10353 ;; This function calls:
 10354 ;;		Nothing
 10355 ;; This function is called by:
 10356 ;;		_delayedBrownOut
 10357 ;; This function uses a non-reentrant model
 10358 ;;
 10359                           
 10360                           	psect	text45
 10361  003472                     __ptext45:
 10362                           	callstack 0
 10363  003472                     _isolateCapsToSeries:
 10364                           	callstack 27
 10365  003472  927C               	bcf	124,1,c	;volatile
 10366  003474  947C               	bcf	124,2,c	;volatile
 10367  003476  EFAE  F01A         	goto	l5603
 10368  00347A                     l934:
 10369  00347A  8680               	bsf	128,3,c	;volatile
 10370  00347C  9C7D               	bcf	125,6,c	;volatile
 10371  00347E  847C               	bsf	124,2,c	;volatile
 10372  003480                     
 10373                           ;ConfigureCaps.c: 294:             capTaskSeries_count=2;
 10374  003480  0E02               	movlw	2
 10375  003482  6E5E               	movwf	_capTaskSeries_count^0,c
 10376                           
 10377                           ;ConfigureCaps.c: 295:             capTaskParalle_count=6;
 10378  003484  0E06               	movlw	6
 10379  003486  0100               	movlb	0	; () banked
 10380  003488  6FF5               	movwf	_capTaskParalle_count& (0+255),b
 10381                           
 10382                           ;ConfigureCaps.c: 297:             break;
 10383  00348A  EFD7  F01A         	goto	l1070
 10384  00348E                     l942:
 10385  00348E  8680               	bsf	128,3,c	;volatile
 10386  003490  8E7D               	bsf	125,7,c	;volatile
 10387  003492  9C7D               	bcf	125,6,c	;volatile
 10388  003494  987D               	bcf	125,4,c	;volatile
 10389  003496  847C               	bsf	124,2,c	;volatile
 10390  003498                     
 10391                           ;ConfigureCaps.c: 308:             capTaskSeries_count=3;
 10392  003498  0E03               	movlw	3
 10393  00349A  6E5E               	movwf	_capTaskSeries_count^0,c
 10394                           
 10395                           ;ConfigureCaps.c: 309:             capTaskParalle_count=5;
 10396  00349C  0E05               	movlw	5
 10397  00349E  0100               	movlb	0	; () banked
 10398  0034A0  6FF5               	movwf	_capTaskParalle_count& (0+255),b
 10399                           
 10400                           ;ConfigureCaps.c: 311:             break;
 10401  0034A2  EFD7  F01A         	goto	l1070
 10402  0034A6                     l953:
 10403  0034A6  8680               	bsf	128,3,c	;volatile
 10404  0034A8  8E7D               	bsf	125,7,c	;volatile
 10405  0034AA  8A7D               	bsf	125,5,c	;volatile
 10406  0034AC  9C7D               	bcf	125,6,c	;volatile
 10407  0034AE  987D               	bcf	125,4,c	;volatile
 10408  0034B0  907D               	bcf	125,0,c	;volatile
 10409  0034B2  847C               	bsf	124,2,c	;volatile
 10410  0034B4                     
 10411                           ;ConfigureCaps.c: 324:             capTaskSeries_count=4;
 10412  0034B4  0E04               	movlw	4
 10413  0034B6  6E5E               	movwf	_capTaskSeries_count^0,c
 10414                           
 10415                           ;ConfigureCaps.c: 325:             capTaskParalle_count=4;
 10416  0034B8  0E04               	movlw	4
 10417  0034BA  0100               	movlb	0	; () banked
 10418  0034BC  6FF5               	movwf	_capTaskParalle_count& (0+255),b
 10419                           
 10420                           ;ConfigureCaps.c: 327:             break;
 10421  0034BE  EFD7  F01A         	goto	l1070
 10422  0034C2                     l968:
 10423  0034C2  8680               	bsf	128,3,c	;volatile
 10424  0034C4  8E7D               	bsf	125,7,c	;volatile
 10425  0034C6  8A7D               	bsf	125,5,c	;volatile
 10426  0034C8  827D               	bsf	125,1,c	;volatile
 10427  0034CA  9C7D               	bcf	125,6,c	;volatile
 10428  0034CC  987D               	bcf	125,4,c	;volatile
 10429  0034CE  907D               	bcf	125,0,c	;volatile
 10430  0034D0  927F               	bcf	127,1,c	;volatile
 10431  0034D2  847C               	bsf	124,2,c	;volatile
 10432  0034D4                     
 10433                           ;ConfigureCaps.c: 341:             capTaskSeries_count=5;
 10434  0034D4  0E05               	movlw	5
 10435  0034D6  6E5E               	movwf	_capTaskSeries_count^0,c
 10436                           
 10437                           ;ConfigureCaps.c: 342:             capTaskParalle_count=3;
 10438  0034D8  0E03               	movlw	3
 10439  0034DA  0100               	movlb	0	; () banked
 10440  0034DC  6FF5               	movwf	_capTaskParalle_count& (0+255),b
 10441                           
 10442                           ;ConfigureCaps.c: 344:             break;
 10443  0034DE  EFD7  F01A         	goto	l1070
 10444  0034E2                     l987:
 10445  0034E2  8680               	bsf	128,3,c	;volatile
 10446  0034E4  8E7D               	bsf	125,7,c	;volatile
 10447  0034E6  8A7D               	bsf	125,5,c	;volatile
 10448  0034E8  827D               	bsf	125,1,c	;volatile
 10449  0034EA  807F               	bsf	127,0,c	;volatile
 10450  0034EC  9C7D               	bcf	125,6,c	;volatile
 10451  0034EE  987D               	bcf	125,4,c	;volatile
 10452  0034F0  907D               	bcf	125,0,c	;volatile
 10453  0034F2  927F               	bcf	127,1,c	;volatile
 10454  0034F4  967F               	bcf	127,3,c	;volatile
 10455  0034F6  847C               	bsf	124,2,c	;volatile
 10456  0034F8                     
 10457                           ;ConfigureCaps.c: 360:             capTaskSeries_count=6;
 10458  0034F8  0E06               	movlw	6
 10459  0034FA  6E5E               	movwf	_capTaskSeries_count^0,c
 10460                           
 10461                           ;ConfigureCaps.c: 361:             capTaskParalle_count=2;
 10462  0034FC  0E02               	movlw	2
 10463  0034FE  0100               	movlb	0	; () banked
 10464  003500  6FF5               	movwf	_capTaskParalle_count& (0+255),b
 10465                           
 10466                           ;ConfigureCaps.c: 363:             break;
 10467  003502  EFD7  F01A         	goto	l1070
 10468  003506                     l1010:
 10469  003506  8680               	bsf	128,3,c	;volatile
 10470  003508  8E7D               	bsf	125,7,c	;volatile
 10471  00350A  8A7D               	bsf	125,5,c	;volatile
 10472  00350C  827D               	bsf	125,1,c	;volatile
 10473  00350E  807F               	bsf	127,0,c	;volatile
 10474  003510  847F               	bsf	127,2,c	;volatile
 10475  003512  9C7D               	bcf	125,6,c	;volatile
 10476  003514  987D               	bcf	125,4,c	;volatile
 10477  003516  907D               	bcf	125,0,c	;volatile
 10478  003518  927F               	bcf	127,1,c	;volatile
 10479  00351A  967F               	bcf	127,3,c	;volatile
 10480  00351C  9C7E               	bcf	126,6,c	;volatile
 10481  00351E  847C               	bsf	124,2,c	;volatile
 10482  003520                     
 10483                           ;ConfigureCaps.c: 382:             capTaskSeries_count=7;
 10484  003520  0E07               	movlw	7
 10485  003522  6E5E               	movwf	_capTaskSeries_count^0,c
 10486                           
 10487                           ;ConfigureCaps.c: 383:             capTaskParalle_count=1;
 10488  003524  0E01               	movlw	1
 10489  003526  0100               	movlb	0	; () banked
 10490  003528  6FF5               	movwf	_capTaskParalle_count& (0+255),b
 10491                           
 10492                           ;ConfigureCaps.c: 385:             break;
 10493  00352A  EFD7  F01A         	goto	l1070
 10494  00352E                     l1037:
 10495  00352E  8680               	bsf	128,3,c	;volatile
 10496  003530  8E7D               	bsf	125,7,c	;volatile
 10497  003532  8A7D               	bsf	125,5,c	;volatile
 10498  003534  827D               	bsf	125,1,c	;volatile
 10499  003536  807F               	bsf	127,0,c	;volatile
 10500  003538  847F               	bsf	127,2,c	;volatile
 10501  00353A  8E7E               	bsf	126,7,c	;volatile
 10502  00353C  9C7D               	bcf	125,6,c	;volatile
 10503  00353E  987D               	bcf	125,4,c	;volatile
 10504  003540  907D               	bcf	125,0,c	;volatile
 10505  003542  927F               	bcf	127,1,c	;volatile
 10506  003544  967F               	bcf	127,3,c	;volatile
 10507  003546  9C7E               	bcf	126,6,c	;volatile
 10508  003548  987E               	bcf	126,4,c	;volatile
 10509  00354A  947E               	bcf	126,2,c	;volatile
 10510  00354C  847C               	bsf	124,2,c	;volatile
 10511  00354E                     
 10512                           ;ConfigureCaps.c: 407:             capTaskSeries_count=8;
 10513  00354E  0E08               	movlw	8
 10514  003550  6E5E               	movwf	_capTaskSeries_count^0,c
 10515                           
 10516                           ;ConfigureCaps.c: 408:             capTaskParalle_count=0;
 10517  003552  0E00               	movlw	0
 10518  003554  0100               	movlb	0	; () banked
 10519  003556  6FF5               	movwf	_capTaskParalle_count& (0+255),b
 10520                           
 10521                           ;ConfigureCaps.c: 410:             break;
 10522  003558  EFD7  F01A         	goto	l1070
 10523  00355C                     l5603:
 10524  00355C  505E               	movf	_capTaskSeries_count^0,w,c
 10525  00355E  6E01               	movwf	??_isolateCapsToSeries^0,c
 10526  003560  6A02               	clrf	(??_isolateCapsToSeries+1)^0,c
 10527                           
 10528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10529                           ; Switch size 1, requested type "simple"
 10530                           ; Number of cases is 1, Range of values is 0 to 0
 10531                           ; switch strategies available:
 10532                           ; Name         Instructions Cycles
 10533                           ; simple_byte            4     3 (average)
 10534                           ;	Chosen strategy is simple_byte
 10535  003562  5002               	movf	(??_isolateCapsToSeries+1)^0,w,c
 10536  003564  0A00               	xorlw	0	; case 0
 10537  003566  B4D8               	btfsc	status,2,c
 10538  003568  EFB8  F01A         	goto	l5921
 10539  00356C  EFD7  F01A         	goto	l1070
 10540  003570                     l5921:
 10541                           
 10542                           ; Switch size 1, requested type "simple"
 10543                           ; Number of cases is 7, Range of values is 1 to 7
 10544                           ; switch strategies available:
 10545                           ; Name         Instructions Cycles
 10546                           ; simple_byte           22    12 (average)
 10547                           ;	Chosen strategy is simple_byte
 10548  003570  5001               	movf	??_isolateCapsToSeries^0,w,c
 10549  003572  0A01               	xorlw	1	; case 1
 10550  003574  B4D8               	btfsc	status,2,c
 10551  003576  EF3D  F01A         	goto	l934
 10552  00357A  0A03               	xorlw	3	; case 2
 10553  00357C  B4D8               	btfsc	status,2,c
 10554  00357E  EF47  F01A         	goto	l942
 10555  003582  0A01               	xorlw	1	; case 3
 10556  003584  B4D8               	btfsc	status,2,c
 10557  003586  EF53  F01A         	goto	l953
 10558  00358A  0A07               	xorlw	7	; case 4
 10559  00358C  B4D8               	btfsc	status,2,c
 10560  00358E  EF61  F01A         	goto	l968
 10561  003592  0A01               	xorlw	1	; case 5
 10562  003594  B4D8               	btfsc	status,2,c
 10563  003596  EF71  F01A         	goto	l987
 10564  00359A  0A03               	xorlw	3	; case 6
 10565  00359C  B4D8               	btfsc	status,2,c
 10566  00359E  EF83  F01A         	goto	l1010
 10567  0035A2  0A01               	xorlw	1	; case 7
 10568  0035A4  B4D8               	btfsc	status,2,c
 10569  0035A6  EF97  F01A         	goto	l1037
 10570  0035AA  EFD7  F01A         	goto	l1070
 10571  0035AE                     l1070:
 10572  0035AE  0012               	return		;funcret
 10573  0035B0                     __end_of_isolateCapsToSeries:
 10574                           	callstack 0
 10575                           
 10576 ;; *************** function ___flge *****************
 10577 ;; Defined at:
 10578 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;  ff1             4   39[COMRAM] void 
 10581 ;;  ff2             4   43[COMRAM] void 
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;		None
 10584 ;; Return value:  Size  Location     Type
 10585 ;;		None               void
 10586 ;; Registers used:
 10587 ;;		wreg, status,2, status,0
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10593 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10595 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10596 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10597 ;;Total ram usage:       12 bytes
 10598 ;; Hardware stack levels used: 1
 10599 ;; Hardware stack levels required when called: 2
 10600 ;; This function calls:
 10601 ;;		Nothing
 10602 ;; This function is called by:
 10603 ;;		_delayedBrownOut
 10604 ;;		_fastChargingcaps
 10605 ;;		_efgtoa
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           	psect	text46
 10610  003A42                     __ptext46:
 10611                           	callstack 0
 10612  003A42                     ___flge:
 10613                           	callstack 27
 10614  003A42  0E00               	movlw	0
 10615  003A44  1428               	andwf	___flge@ff1^0,w,c
 10616  003A46  6E30               	movwf	??___flge^0,c
 10617  003A48  0E00               	movlw	0
 10618  003A4A  1429               	andwf	(___flge@ff1+1)^0,w,c
 10619  003A4C  6E31               	movwf	(??___flge+1)^0,c
 10620  003A4E  0E80               	movlw	128
 10621  003A50  142A               	andwf	(___flge@ff1+2)^0,w,c
 10622  003A52  6E32               	movwf	(??___flge+2)^0,c
 10623  003A54  0E7F               	movlw	127
 10624  003A56  142B               	andwf	(___flge@ff1+3)^0,w,c
 10625  003A58  6E33               	movwf	(??___flge+3)^0,c
 10626  003A5A  5030               	movf	??___flge^0,w,c
 10627  003A5C  1031               	iorwf	(??___flge+1)^0,w,c
 10628  003A5E  1032               	iorwf	(??___flge+2)^0,w,c
 10629  003A60  1033               	iorwf	(??___flge+3)^0,w,c
 10630  003A62  A4D8               	btfss	status,2,c
 10631  003A64  EF36  F01D         	goto	u3871
 10632  003A68  EF38  F01D         	goto	u3870
 10633  003A6C                     u3871:
 10634  003A6C  EF40  F01D         	goto	l4691
 10635  003A70                     u3870:
 10636  003A70  0E00               	movlw	0
 10637  003A72  6E28               	movwf	___flge@ff1^0,c
 10638  003A74  0E00               	movlw	0
 10639  003A76  6E29               	movwf	(___flge@ff1+1)^0,c
 10640  003A78  0E00               	movlw	0
 10641  003A7A  6E2A               	movwf	(___flge@ff1+2)^0,c
 10642  003A7C  0E00               	movlw	0
 10643  003A7E  6E2B               	movwf	(___flge@ff1+3)^0,c
 10644  003A80                     l4691:
 10645  003A80  0E00               	movlw	0
 10646  003A82  142C               	andwf	___flge@ff2^0,w,c
 10647  003A84  6E30               	movwf	??___flge^0,c
 10648  003A86  0E00               	movlw	0
 10649  003A88  142D               	andwf	(___flge@ff2+1)^0,w,c
 10650  003A8A  6E31               	movwf	(??___flge+1)^0,c
 10651  003A8C  0E80               	movlw	128
 10652  003A8E  142E               	andwf	(___flge@ff2+2)^0,w,c
 10653  003A90  6E32               	movwf	(??___flge+2)^0,c
 10654  003A92  0E7F               	movlw	127
 10655  003A94  142F               	andwf	(___flge@ff2+3)^0,w,c
 10656  003A96  6E33               	movwf	(??___flge+3)^0,c
 10657  003A98  5030               	movf	??___flge^0,w,c
 10658  003A9A  1031               	iorwf	(??___flge+1)^0,w,c
 10659  003A9C  1032               	iorwf	(??___flge+2)^0,w,c
 10660  003A9E  1033               	iorwf	(??___flge+3)^0,w,c
 10661  003AA0  A4D8               	btfss	status,2,c
 10662  003AA2  EF55  F01D         	goto	u3881
 10663  003AA6  EF57  F01D         	goto	u3880
 10664  003AAA                     u3881:
 10665  003AAA  EF5F  F01D         	goto	l4695
 10666  003AAE                     u3880:
 10667  003AAE  0E00               	movlw	0
 10668  003AB0  6E2C               	movwf	___flge@ff2^0,c
 10669  003AB2  0E00               	movlw	0
 10670  003AB4  6E2D               	movwf	(___flge@ff2+1)^0,c
 10671  003AB6  0E00               	movlw	0
 10672  003AB8  6E2E               	movwf	(___flge@ff2+2)^0,c
 10673  003ABA  0E00               	movlw	0
 10674  003ABC  6E2F               	movwf	(___flge@ff2+3)^0,c
 10675  003ABE                     l4695:
 10676  003ABE  AE2B               	btfss	(___flge@ff1+3)^0,7,c
 10677  003AC0  EF64  F01D         	goto	u3891
 10678  003AC4  EF66  F01D         	goto	u3890
 10679  003AC8                     u3891:
 10680  003AC8  EF6F  F01D         	goto	l4699
 10681  003ACC                     u3890:
 10682  003ACC  6C28               	negf	___flge@ff1^0,c
 10683  003ACE  1E29               	comf	(___flge@ff1+1)^0,f,c
 10684  003AD0  B0D8               	btfsc	status,0,c
 10685  003AD2  2A29               	incf	(___flge@ff1+1)^0,f,c
 10686  003AD4  1E2A               	comf	(___flge@ff1+2)^0,f,c
 10687  003AD6  B0D8               	btfsc	status,0,c
 10688  003AD8  2A2A               	incf	(___flge@ff1+2)^0,f,c
 10689  003ADA  0E80               	movlw	128
 10690  003ADC  562B               	subfwb	(___flge@ff1+3)^0,f,c
 10691  003ADE                     l4699:
 10692  003ADE  AE2F               	btfss	(___flge@ff2+3)^0,7,c
 10693  003AE0  EF74  F01D         	goto	u3901
 10694  003AE4  EF76  F01D         	goto	u3900
 10695  003AE8                     u3901:
 10696  003AE8  EF7F  F01D         	goto	l1363
 10697  003AEC                     u3900:
 10698  003AEC  6C2C               	negf	___flge@ff2^0,c
 10699  003AEE  1E2D               	comf	(___flge@ff2+1)^0,f,c
 10700  003AF0  B0D8               	btfsc	status,0,c
 10701  003AF2  2A2D               	incf	(___flge@ff2+1)^0,f,c
 10702  003AF4  1E2E               	comf	(___flge@ff2+2)^0,f,c
 10703  003AF6  B0D8               	btfsc	status,0,c
 10704  003AF8  2A2E               	incf	(___flge@ff2+2)^0,f,c
 10705  003AFA  0E80               	movlw	128
 10706  003AFC  562F               	subfwb	(___flge@ff2+3)^0,f,c
 10707  003AFE                     l1363:
 10708  003AFE  0E00               	movlw	0
 10709  003B00  1A28               	xorwf	___flge@ff1^0,f,c
 10710  003B02  0E00               	movlw	0
 10711  003B04  1A29               	xorwf	(___flge@ff1+1)^0,f,c
 10712  003B06  0E00               	movlw	0
 10713  003B08  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
 10714  003B0A  0E80               	movlw	128
 10715  003B0C  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
 10716  003B0E  0E00               	movlw	0
 10717  003B10  1A2C               	xorwf	___flge@ff2^0,f,c
 10718  003B12  0E00               	movlw	0
 10719  003B14  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
 10720  003B16  0E00               	movlw	0
 10721  003B18  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
 10722  003B1A  0E80               	movlw	128
 10723  003B1C  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
 10724  003B1E  502C               	movf	___flge@ff2^0,w,c
 10725  003B20  5C28               	subwf	___flge@ff1^0,w,c
 10726  003B22  502D               	movf	(___flge@ff2+1)^0,w,c
 10727  003B24  5829               	subwfb	(___flge@ff1+1)^0,w,c
 10728  003B26  502E               	movf	(___flge@ff2+2)^0,w,c
 10729  003B28  582A               	subwfb	(___flge@ff1+2)^0,w,c
 10730  003B2A  502F               	movf	(___flge@ff2+3)^0,w,c
 10731  003B2C  582B               	subwfb	(___flge@ff1+3)^0,w,c
 10732  003B2E  B0D8               	btfsc	status,0,c
 10733  003B30  EF9C  F01D         	goto	u3911
 10734  003B34  EF9E  F01D         	goto	u3910
 10735  003B38                     u3911:
 10736  003B38  EFA1  F01D         	goto	l4705
 10737  003B3C                     u3910:
 10738  003B3C  90D8               	bcf	status,0,c
 10739  003B3E  EFA2  F01D         	goto	l1368
 10740  003B42                     l4705:
 10741  003B42  80D8               	bsf	status,0,c
 10742  003B44                     l1368:
 10743  003B44  0012               	return		;funcret
 10744  003B46                     __end_of___flge:
 10745                           	callstack 0
 10746                           
 10747 ;; *************** function _SYSTEM_Initialize *****************
 10748 ;; Defined at:
 10749 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;		None
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;		None
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  1    wreg      void 
 10756 ;; Registers used:
 10757 ;;		wreg, status,2, status,0, cstack
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10767 ;;Total ram usage:        0 bytes
 10768 ;; Hardware stack levels used: 1
 10769 ;; Hardware stack levels required when called: 4
 10770 ;; This function calls:
 10771 ;;		_ADCC_Initialize
 10772 ;;		_EUSART5_Initialize
 10773 ;;		_INTERRUPT_Initialize
 10774 ;;		_OSCILLATOR_Initialize
 10775 ;;		_PIN_MANAGER_Initialize
 10776 ;;		_PMD_Initialize
 10777 ;;		_TMR6_Initialize
 10778 ;; This function is called by:
 10779 ;;		_main
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           	psect	text47
 10784  004A00                     __ptext47:
 10785                           	callstack 0
 10786  004A00                     _SYSTEM_Initialize:
 10787                           	callstack 26
 10788  004A00                     
 10789                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 10790  004A00  EC65  F025         	call	_INTERRUPT_Initialize	;wreg free
 10791  004A04                     
 10792                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10793  004A04  EC0F  F025         	call	_PMD_Initialize	;wreg free
 10794  004A08                     
 10795                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10796  004A08  ECBD  F01F         	call	_PIN_MANAGER_Initialize	;wreg free
 10797  004A0C                     
 10798                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10799  004A0C  EC29  F025         	call	_OSCILLATOR_Initialize	;wreg free
 10800  004A10                     
 10801                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10802  004A10  ECE7  F022         	call	_ADCC_Initialize	;wreg free
 10803  004A14                     
 10804                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
 10805  004A14  ECE1  F024         	call	_TMR6_Initialize	;wreg free
 10806  004A18                     
 10807                           ;mcc_generated_files/mcc.c: 58:     EUSART5_Initialize();
 10808  004A18  EC0F  F023         	call	_EUSART5_Initialize	;wreg free
 10809  004A1C  0012               	return		;funcret
 10810  004A1E                     __end_of_SYSTEM_Initialize:
 10811                           	callstack 0
 10812                           
 10813 ;; *************** function _TMR6_Initialize *****************
 10814 ;; Defined at:
 10815 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;		None
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;		None
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  1    wreg      void 
 10822 ;; Registers used:
 10823 ;;		wreg, status,2
 10824 ;; Tracked objects:
 10825 ;;		On entry : 0/0
 10826 ;;		On exit  : 0/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10833 ;;Total ram usage:        0 bytes
 10834 ;; Hardware stack levels used: 1
 10835 ;; Hardware stack levels required when called: 2
 10836 ;; This function calls:
 10837 ;;		Nothing
 10838 ;; This function is called by:
 10839 ;;		_SYSTEM_Initialize
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           	psect	text48
 10844  0049C2                     __ptext48:
 10845                           	callstack 0
 10846  0049C2                     _TMR6_Initialize:
 10847                           	callstack 27
 10848  0049C2                     
 10849                           ;mcc_generated_files/tmr6.c: 69:     T6CLKCON = 0x04;
 10850  0049C2  0E04               	movlw	4
 10851  0049C4  6EB3               	movwf	179,c	;volatile
 10852                           
 10853                           ;mcc_generated_files/tmr6.c: 72:     T6HLT = 0x00;
 10854  0049C6  0E00               	movlw	0
 10855  0049C8  6EB2               	movwf	178,c	;volatile
 10856                           
 10857                           ;mcc_generated_files/tmr6.c: 75:     T6RST = 0x00;
 10858  0049CA  0E00               	movlw	0
 10859  0049CC  6EB4               	movwf	180,c	;volatile
 10860                           
 10861                           ;mcc_generated_files/tmr6.c: 78:     T6PR = 0xF1;
 10862  0049CE  0EF1               	movlw	241
 10863  0049D0  6EB0               	movwf	176,c	;volatile
 10864                           
 10865                           ;mcc_generated_files/tmr6.c: 81:     T6TMR = 0x00;
 10866  0049D2  0E00               	movlw	0
 10867  0049D4  6EAF               	movwf	175,c	;volatile
 10868  0049D6                     
 10869                           ;mcc_generated_files/tmr6.c: 84:     PIR5bits.TMR6IF = 0;
 10870  0049D6  010E               	movlb	14	; () banked
 10871  0049D8  9B38               	bcf	56,5,b	;volatile
 10872  0049DA                     
 10873                           ; BSR set to: 14
 10874                           ;mcc_generated_files/tmr6.c: 87:     PIE5bits.TMR6IE = 1;
 10875  0049DA  8B2E               	bsf	46,5,b	;volatile
 10876                           
 10877                           ;mcc_generated_files/tmr6.c: 93:     T6CON = 0xE9;
 10878  0049DC  0EE9               	movlw	233
 10879  0049DE  6EB1               	movwf	177,c	;volatile
 10880  0049E0                     
 10881                           ; BSR set to: 14
 10882  0049E0  0012               	return		;funcret
 10883  0049E2                     __end_of_TMR6_Initialize:
 10884                           	callstack 0
 10885                           
 10886 ;; *************** function _PMD_Initialize *****************
 10887 ;; Defined at:
 10888 ;;		line 75 in file "mcc_generated_files/mcc.c"
 10889 ;; Parameters:    Size  Location     Type
 10890 ;;		None
 10891 ;; Auto vars:     Size  Location     Type
 10892 ;;		None
 10893 ;; Return value:  Size  Location     Type
 10894 ;;                  1    wreg      void 
 10895 ;; Registers used:
 10896 ;;		wreg, status,2
 10897 ;; Tracked objects:
 10898 ;;		On entry : 0/0
 10899 ;;		On exit  : 0/0
 10900 ;;		Unchanged: 0/0
 10901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10906 ;;Total ram usage:        0 bytes
 10907 ;; Hardware stack levels used: 1
 10908 ;; Hardware stack levels required when called: 2
 10909 ;; This function calls:
 10910 ;;		Nothing
 10911 ;; This function is called by:
 10912 ;;		_SYSTEM_Initialize
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916                           	psect	text49
 10917  004A1E                     __ptext49:
 10918                           	callstack 0
 10919  004A1E                     _PMD_Initialize:
 10920                           	callstack 27
 10921  004A1E                     
 10922                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
 10923  004A1E  0E00               	movlw	0
 10924  004A20  010E               	movlb	14	; () banked
 10925  004A22  6F4C               	movwf	76,b	;volatile
 10926                           
 10927                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
 10928  004A24  0E00               	movlw	0
 10929  004A26  6F4D               	movwf	77,b	;volatile
 10930                           
 10931                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
 10932  004A28  0E00               	movlw	0
 10933  004A2A  6F4E               	movwf	78,b	;volatile
 10934                           
 10935                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
 10936  004A2C  0E00               	movlw	0
 10937  004A2E  6F4F               	movwf	79,b	;volatile
 10938                           
 10939                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
 10940  004A30  0E00               	movlw	0
 10941  004A32  6F50               	movwf	80,b	;volatile
 10942                           
 10943                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
 10944  004A34  0E00               	movlw	0
 10945  004A36  6F51               	movwf	81,b	;volatile
 10946  004A38                     
 10947                           ; BSR set to: 14
 10948  004A38  0012               	return		;funcret
 10949  004A3A                     __end_of_PMD_Initialize:
 10950                           	callstack 0
 10951                           
 10952 ;; *************** function _PIN_MANAGER_Initialize *****************
 10953 ;; Defined at:
 10954 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10955 ;; Parameters:    Size  Location     Type
 10956 ;;		None
 10957 ;; Auto vars:     Size  Location     Type
 10958 ;;		None
 10959 ;; Return value:  Size  Location     Type
 10960 ;;                  1    wreg      void 
 10961 ;; Registers used:
 10962 ;;		wreg, status,2
 10963 ;; Tracked objects:
 10964 ;;		On entry : 0/0
 10965 ;;		On exit  : 0/0
 10966 ;;		Unchanged: 0/0
 10967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10972 ;;Total ram usage:        0 bytes
 10973 ;; Hardware stack levels used: 1
 10974 ;; Hardware stack levels required when called: 2
 10975 ;; This function calls:
 10976 ;;		Nothing
 10977 ;; This function is called by:
 10978 ;;		_SYSTEM_Initialize
 10979 ;; This function uses a non-reentrant model
 10980 ;;
 10981                           
 10982                           	psect	text50
 10983  003F7A                     __ptext50:
 10984                           	callstack 0
 10985  003F7A                     _PIN_MANAGER_Initialize:
 10986                           	callstack 27
 10987  003F7A                     
 10988                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 10989  003F7A  0E00               	movlw	0
 10990  003F7C  6E7D               	movwf	125,c	;volatile
 10991                           
 10992                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 10993  003F7E  0E00               	movlw	0
 10994  003F80  6E7C               	movwf	124,c	;volatile
 10995                           
 10996                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 10997  003F82  0E00               	movlw	0
 10998  003F84  6E79               	movwf	121,c	;volatile
 10999                           
 11000                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 11001  003F86  0E00               	movlw	0
 11002  003F88  6E7E               	movwf	126,c	;volatile
 11003                           
 11004                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 11005  003F8A  0E00               	movlw	0
 11006  003F8C  6E7A               	movwf	122,c	;volatile
 11007                           
 11008                           ;mcc_generated_files/pin_manager.c: 65:     LATG = 0x00;
 11009  003F8E  0E00               	movlw	0
 11010  003F90  6E7F               	movwf	127,c	;volatile
 11011                           
 11012                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 11013  003F92  0E00               	movlw	0
 11014  003F94  6E7B               	movwf	123,c	;volatile
 11015                           
 11016                           ;mcc_generated_files/pin_manager.c: 67:     LATH = 0x00;
 11017  003F96  0E00               	movlw	0
 11018  003F98  6E80               	movwf	128,c	;volatile
 11019                           
 11020                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x08;
 11021  003F9A  0E08               	movlw	8
 11022  003F9C  6E85               	movwf	133,c	;volatile
 11023                           
 11024                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x01;
 11025  003F9E  0E01               	movlw	1
 11026  003FA0  6E86               	movwf	134,c	;volatile
 11027                           
 11028                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xF5;
 11029  003FA2  0EF5               	movlw	245
 11030  003FA4  6E81               	movwf	129,c	;volatile
 11031                           
 11032                           ;mcc_generated_files/pin_manager.c: 75:     TRISG = 0x50;
 11033  003FA6  0E50               	movlw	80
 11034  003FA8  6E87               	movwf	135,c	;volatile
 11035                           
 11036                           ;mcc_generated_files/pin_manager.c: 76:     TRISB = 0x7E;
 11037  003FAA  0E7E               	movlw	126
 11038  003FAC  6E82               	movwf	130,c	;volatile
 11039                           
 11040                           ;mcc_generated_files/pin_manager.c: 77:     TRISH = 0x01;
 11041  003FAE  0E01               	movlw	1
 11042  003FB0  6E88               	movwf	136,c	;volatile
 11043  003FB2                     
 11044                           ;mcc_generated_files/pin_manager.c: 78:     TRISC = 0xFF;
 11045  003FB2  6883               	setf	131,c	;volatile
 11046                           
 11047                           ;mcc_generated_files/pin_manager.c: 79:     TRISD = 0xB9;
 11048  003FB4  0EB9               	movlw	185
 11049  003FB6  6E84               	movwf	132,c	;volatile
 11050                           
 11051                           ;mcc_generated_files/pin_manager.c: 84:     ANSELD = 0xF9;
 11052  003FB8  0EF9               	movlw	249
 11053  003FBA  010E               	movlb	14	; () banked
 11054  003FBC  6FA7               	movwf	167,b	;volatile
 11055                           
 11056                           ;mcc_generated_files/pin_manager.c: 85:     ANSELB = 0x3E;
 11057  003FBE  0E3E               	movlw	62
 11058  003FC0  6F9A               	movwf	154,b	;volatile
 11059                           
 11060                           ;mcc_generated_files/pin_manager.c: 86:     ANSELE = 0x00;
 11061  003FC2  0E00               	movlw	0
 11062  003FC4  6FAF               	movwf	175,b	;volatile
 11063                           
 11064                           ;mcc_generated_files/pin_manager.c: 87:     ANSELG = 0x70;
 11065  003FC6  0E70               	movlw	112
 11066  003FC8  6FBC               	movwf	188,b	;volatile
 11067                           
 11068                           ;mcc_generated_files/pin_manager.c: 88:     ANSELF = 0x01;
 11069  003FCA  0E01               	movlw	1
 11070  003FCC  6FB4               	movwf	180,b	;volatile
 11071                           
 11072                           ;mcc_generated_files/pin_manager.c: 89:     ANSELA = 0xA5;
 11073  003FCE  0EA5               	movlw	165
 11074  003FD0  6F92               	movwf	146,b	;volatile
 11075                           
 11076                           ;mcc_generated_files/pin_manager.c: 94:     WPUD = 0x00;
 11077  003FD2  0E00               	movlw	0
 11078  003FD4  6FA6               	movwf	166,b	;volatile
 11079                           
 11080                           ;mcc_generated_files/pin_manager.c: 95:     WPUF = 0x00;
 11081  003FD6  0E00               	movlw	0
 11082  003FD8  6FB3               	movwf	179,b	;volatile
 11083                           
 11084                           ;mcc_generated_files/pin_manager.c: 96:     WPUE = 0x00;
 11085  003FDA  0E00               	movlw	0
 11086  003FDC  6FAE               	movwf	174,b	;volatile
 11087                           
 11088                           ;mcc_generated_files/pin_manager.c: 97:     WPUB = 0x00;
 11089  003FDE  0E00               	movlw	0
 11090  003FE0  6F99               	movwf	153,b	;volatile
 11091                           
 11092                           ;mcc_generated_files/pin_manager.c: 98:     WPUG = 0x00;
 11093  003FE2  0E00               	movlw	0
 11094  003FE4  6FBB               	movwf	187,b	;volatile
 11095                           
 11096                           ;mcc_generated_files/pin_manager.c: 99:     WPUA = 0x00;
 11097  003FE6  0E00               	movlw	0
 11098  003FE8  6F91               	movwf	145,b	;volatile
 11099                           
 11100                           ;mcc_generated_files/pin_manager.c: 100:     WPUC = 0x00;
 11101  003FEA  0E00               	movlw	0
 11102  003FEC  6FA1               	movwf	161,b	;volatile
 11103                           
 11104                           ;mcc_generated_files/pin_manager.c: 101:     WPUH = 0x00;
 11105  003FEE  0E00               	movlw	0
 11106  003FF0  6FC0               	movwf	192,b	;volatile
 11107                           
 11108                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 11109  003FF2  0E00               	movlw	0
 11110  003FF4  6FAD               	movwf	173,b	;volatile
 11111                           
 11112                           ;mcc_generated_files/pin_manager.c: 107:     ODCONF = 0x00;
 11113  003FF6  0E00               	movlw	0
 11114  003FF8  6FB2               	movwf	178,b	;volatile
 11115                           
 11116                           ;mcc_generated_files/pin_manager.c: 108:     ODCONA = 0x00;
 11117  003FFA  0E00               	movlw	0
 11118  003FFC  6F90               	movwf	144,b	;volatile
 11119                           
 11120                           ;mcc_generated_files/pin_manager.c: 109:     ODCONG = 0x00;
 11121  003FFE  0E00               	movlw	0
 11122  004000  6FBA               	movwf	186,b	;volatile
 11123                           
 11124                           ;mcc_generated_files/pin_manager.c: 110:     ODCONB = 0x00;
 11125  004002  0E00               	movlw	0
 11126  004004  6F98               	movwf	152,b	;volatile
 11127                           
 11128                           ;mcc_generated_files/pin_manager.c: 111:     ODCONH = 0x00;
 11129  004006  0E00               	movlw	0
 11130  004008  6FBF               	movwf	191,b	;volatile
 11131                           
 11132                           ;mcc_generated_files/pin_manager.c: 112:     ODCONC = 0x00;
 11133  00400A  0E00               	movlw	0
 11134  00400C  6FA0               	movwf	160,b	;volatile
 11135                           
 11136                           ;mcc_generated_files/pin_manager.c: 113:     ODCOND = 0x00;
 11137  00400E  0E00               	movlw	0
 11138  004010  6FA5               	movwf	165,b	;volatile
 11139  004012                     
 11140                           ; BSR set to: 14
 11141                           ;mcc_generated_files/pin_manager.c: 118:     SLRCONA = 0xFF;
 11142  004012  698F               	setf	143,b	;volatile
 11143  004014                     
 11144                           ; BSR set to: 14
 11145                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONB = 0xFF;
 11146  004014  6997               	setf	151,b	;volatile
 11147  004016                     
 11148                           ; BSR set to: 14
 11149                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONC = 0xFF;
 11150  004016  699F               	setf	159,b	;volatile
 11151  004018                     
 11152                           ; BSR set to: 14
 11153                           ;mcc_generated_files/pin_manager.c: 121:     SLRCOND = 0xFF;
 11154  004018  69A4               	setf	164,b	;volatile
 11155  00401A                     
 11156                           ; BSR set to: 14
 11157                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONE = 0xFF;
 11158  00401A  69AC               	setf	172,b	;volatile
 11159  00401C                     
 11160                           ; BSR set to: 14
 11161                           ;mcc_generated_files/pin_manager.c: 123:     SLRCONF = 0xFF;
 11162  00401C  69B1               	setf	177,b	;volatile
 11163  00401E                     
 11164                           ; BSR set to: 14
 11165                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONG = 0xFF;
 11166  00401E  69B9               	setf	185,b	;volatile
 11167  004020                     
 11168                           ; BSR set to: 14
 11169                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONH = 0xFF;
 11170  004020  69BE               	setf	190,b	;volatile
 11171  004022                     
 11172                           ; BSR set to: 14
 11173                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 11174  004022  698E               	setf	142,b	;volatile
 11175  004024                     
 11176                           ; BSR set to: 14
 11177                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 11178  004024  6996               	setf	150,b	;volatile
 11179  004026                     
 11180                           ; BSR set to: 14
 11181                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 11182  004026  699E               	setf	158,b	;volatile
 11183  004028                     
 11184                           ; BSR set to: 14
 11185                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 11186  004028  69A3               	setf	163,b	;volatile
 11187  00402A                     
 11188                           ; BSR set to: 14
 11189                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0xFF;
 11190  00402A  69AB               	setf	171,b	;volatile
 11191  00402C                     
 11192                           ; BSR set to: 14
 11193                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 11194  00402C  69B0               	setf	176,b	;volatile
 11195  00402E                     
 11196                           ; BSR set to: 14
 11197                           ;mcc_generated_files/pin_manager.c: 136:     INLVLG = 0xFF;
 11198  00402E  69B8               	setf	184,b	;volatile
 11199  004030                     
 11200                           ; BSR set to: 14
 11201                           ;mcc_generated_files/pin_manager.c: 137:     INLVLH = 0xFF;
 11202  004030  69BD               	setf	189,b	;volatile
 11203                           
 11204                           ;mcc_generated_files/pin_manager.c: 146:     RE2PPS = 0x14;
 11205  004032  0E14               	movlw	20
 11206  004034  6F74               	movwf	116,b	;volatile
 11207                           
 11208                           ;mcc_generated_files/pin_manager.c: 147:     RX5PPS = 0x23;
 11209  004036  0E23               	movlw	35
 11210  004038  6F17               	movwf	23,b	;volatile
 11211  00403A                     
 11212                           ; BSR set to: 14
 11213  00403A  0012               	return		;funcret
 11214  00403C                     __end_of_PIN_MANAGER_Initialize:
 11215                           	callstack 0
 11216                           
 11217 ;; *************** function _OSCILLATOR_Initialize *****************
 11218 ;; Defined at:
 11219 ;;		line 61 in file "mcc_generated_files/mcc.c"
 11220 ;; Parameters:    Size  Location     Type
 11221 ;;		None
 11222 ;; Auto vars:     Size  Location     Type
 11223 ;;		None
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  1    wreg      void 
 11226 ;; Registers used:
 11227 ;;		wreg, status,2
 11228 ;; Tracked objects:
 11229 ;;		On entry : 0/0
 11230 ;;		On exit  : 0/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11237 ;;Total ram usage:        0 bytes
 11238 ;; Hardware stack levels used: 1
 11239 ;; Hardware stack levels required when called: 2
 11240 ;; This function calls:
 11241 ;;		Nothing
 11242 ;; This function is called by:
 11243 ;;		_SYSTEM_Initialize
 11244 ;; This function uses a non-reentrant model
 11245 ;;
 11246                           
 11247                           	psect	text51
 11248  004A52                     __ptext51:
 11249                           	callstack 0
 11250  004A52                     _OSCILLATOR_Initialize:
 11251                           	callstack 27
 11252  004A52                     
 11253                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x62;
 11254  004A52  0E62               	movlw	98
 11255  004A54  010E               	movlb	14	; () banked
 11256  004A56  6F43               	movwf	67,b	;volatile
 11257                           
 11258                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 11259  004A58  0E00               	movlw	0
 11260  004A5A  6F45               	movwf	69,b	;volatile
 11261                           
 11262                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 11263  004A5C  0E00               	movlw	0
 11264  004A5E  6F47               	movwf	71,b	;volatile
 11265                           
 11266                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x02;
 11267  004A60  0E02               	movlw	2
 11268  004A62  6F49               	movwf	73,b	;volatile
 11269                           
 11270                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
 11271  004A64  0E00               	movlw	0
 11272  004A66  6F48               	movwf	72,b	;volatile
 11273  004A68                     
 11274                           ; BSR set to: 14
 11275  004A68  0012               	return		;funcret
 11276  004A6A                     __end_of_OSCILLATOR_Initialize:
 11277                           	callstack 0
 11278                           
 11279 ;; *************** function _INTERRUPT_Initialize *****************
 11280 ;; Defined at:
 11281 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11282 ;; Parameters:    Size  Location     Type
 11283 ;;		None
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;		None
 11286 ;; Return value:  Size  Location     Type
 11287 ;;                  1    wreg      void 
 11288 ;; Registers used:
 11289 ;;		None
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11299 ;;Total ram usage:        0 bytes
 11300 ;; Hardware stack levels used: 1
 11301 ;; Hardware stack levels required when called: 2
 11302 ;; This function calls:
 11303 ;;		Nothing
 11304 ;; This function is called by:
 11305 ;;		_SYSTEM_Initialize
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309                           	psect	text52
 11310  004ACA                     __ptext52:
 11311                           	callstack 0
 11312  004ACA                     _INTERRUPT_Initialize:
 11313                           	callstack 27
 11314  004ACA                     
 11315                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 11316  004ACA  9AF2               	bcf	242,5,c	;volatile
 11317  004ACC  0012               	return		;funcret
 11318  004ACE                     __end_of_INTERRUPT_Initialize:
 11319                           	callstack 0
 11320                           
 11321 ;; *************** function _EUSART5_Initialize *****************
 11322 ;; Defined at:
 11323 ;;		line 66 in file "mcc_generated_files/eusart5.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;		None
 11326 ;; Auto vars:     Size  Location     Type
 11327 ;;		None
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  1    wreg      void 
 11330 ;; Registers used:
 11331 ;;		wreg, status,2, status,0, cstack
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11341 ;;Total ram usage:        0 bytes
 11342 ;; Hardware stack levels used: 1
 11343 ;; Hardware stack levels required when called: 3
 11344 ;; This function calls:
 11345 ;;		_EUSART5_SetErrorHandler
 11346 ;;		_EUSART5_SetFramingErrorHandler
 11347 ;;		_EUSART5_SetOverrunErrorHandler
 11348 ;; This function is called by:
 11349 ;;		_SYSTEM_Initialize
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text53
 11354  00461E                     __ptext53:
 11355                           	callstack 0
 11356  00461E                     _EUSART5_Initialize:
 11357                           	callstack 26
 11358  00461E                     
 11359                           ;mcc_generated_files/eusart5.c: 71:     BAUD5CON = 0x08;
 11360  00461E  0E08               	movlw	8
 11361  004620  010E               	movlb	14	; () banked
 11362  004622  6FE2               	movwf	226,b	;volatile
 11363                           
 11364                           ;mcc_generated_files/eusart5.c: 74:     RC5STA = 0x90;
 11365  004624  0E90               	movlw	144
 11366  004626  6FE0               	movwf	224,b	;volatile
 11367                           
 11368                           ;mcc_generated_files/eusart5.c: 77:     TX5STA = 0x24;
 11369  004628  0E24               	movlw	36
 11370  00462A  6FE1               	movwf	225,b	;volatile
 11371                           
 11372                           ;mcc_generated_files/eusart5.c: 80:     SP5BRGL = 0x19;
 11373  00462C  0E19               	movlw	25
 11374  00462E  6FDE               	movwf	222,b	;volatile
 11375                           
 11376                           ;mcc_generated_files/eusart5.c: 83:     SP5BRGH = 0x00;
 11377  004630  0E00               	movlw	0
 11378  004632  6FDF               	movwf	223,b	;volatile
 11379  004634                     
 11380                           ; BSR set to: 14
 11381                           ;mcc_generated_files/eusart5.c: 86:     EUSART5_SetFramingErrorHandler(EUSART5_DefaultFr
      +                          amingErrorHandler);
 11382  004634  0E00               	movlw	0
 11383  004636  6E01               	movwf	EUSART5_SetFramingErrorHandler@interruptHandler^0,c
 11384  004638  0E00               	movlw	0
 11385  00463A  6E02               	movwf	(EUSART5_SetFramingErrorHandler@interruptHandler+1)^0,c
 11386  00463C  0E00               	movlw	0
 11387  00463E  6E03               	movwf	(EUSART5_SetFramingErrorHandler@interruptHandler+2)^0,c
 11388  004640  EC45  F025         	call	_EUSART5_SetFramingErrorHandler	;wreg free
 11389  004644                     
 11390                           ;mcc_generated_files/eusart5.c: 87:     EUSART5_SetOverrunErrorHandler(EUSART5_DefaultOv
      +                          errunErrorHandler);
 11391  004644  0E00               	movlw	0
 11392  004646  6E01               	movwf	EUSART5_SetOverrunErrorHandler@interruptHandler^0,c
 11393  004648  0E00               	movlw	0
 11394  00464A  6E02               	movwf	(EUSART5_SetOverrunErrorHandler@interruptHandler+1)^0,c
 11395  00464C  0E00               	movlw	0
 11396  00464E  6E03               	movwf	(EUSART5_SetOverrunErrorHandler@interruptHandler+2)^0,c
 11397  004650  EC3E  F025         	call	_EUSART5_SetOverrunErrorHandler	;wreg free
 11398  004654                     
 11399                           ;mcc_generated_files/eusart5.c: 88:     EUSART5_SetErrorHandler(EUSART5_DefaultErrorHand
      +                          ler);
 11400  004654  0E00               	movlw	0
 11401  004656  6E01               	movwf	EUSART5_SetErrorHandler@interruptHandler^0,c
 11402  004658  0E00               	movlw	0
 11403  00465A  6E02               	movwf	(EUSART5_SetErrorHandler@interruptHandler+1)^0,c
 11404  00465C  0E00               	movlw	0
 11405  00465E  6E03               	movwf	(EUSART5_SetErrorHandler@interruptHandler+2)^0,c
 11406  004660  EC4C  F025         	call	_EUSART5_SetErrorHandler	;wreg free
 11407  004664                     
 11408                           ;mcc_generated_files/eusart5.c: 90:     eusart5RxLastError.status = 0;
 11409  004664  0E00               	movlw	0
 11410  004666  0100               	movlb	0	; () banked
 11411  004668  6FF9               	movwf	_eusart5RxLastError& (0+255),b	;volatile
 11412  00466A                     
 11413                           ; BSR set to: 0
 11414  00466A  0012               	return		;funcret
 11415  00466C                     __end_of_EUSART5_Initialize:
 11416                           	callstack 0
 11417                           
 11418 ;; *************** function _EUSART5_SetOverrunErrorHandler *****************
 11419 ;; Defined at:
 11420 ;;		line 170 in file "mcc_generated_files/eusart5.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;  interruptHan    3    0[COMRAM] PTR FTN()void 
 11423 ;;		 -> EUSART5_DefaultOverrunErrorHandler(1), 
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;		None
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  1    wreg      void 
 11428 ;; Registers used:
 11429 ;;		wreg, status,2, status,0
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11435 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11438 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11439 ;;Total ram usage:        3 bytes
 11440 ;; Hardware stack levels used: 1
 11441 ;; Hardware stack levels required when called: 2
 11442 ;; This function calls:
 11443 ;;		Nothing
 11444 ;; This function is called by:
 11445 ;;		_EUSART5_Initialize
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           	psect	text54
 11450  004A7C                     __ptext54:
 11451                           	callstack 0
 11452  004A7C                     _EUSART5_SetOverrunErrorHandler:
 11453                           	callstack 26
 11454  004A7C                     
 11455                           ;mcc_generated_files/eusart5.c: 171:     EUSART5_OverrunErrorHandler = interruptHandler;
 11456  004A7C  C001  F17F         	movff	EUSART5_SetOverrunErrorHandler@interruptHandler,_EUSART5_OverrunErrorHandler
 11457  004A80  C002  F180         	movff	EUSART5_SetOverrunErrorHandler@interruptHandler+1,_EUSART5_OverrunErrorHandler+1
 11458  004A84  C003  F181         	movff	EUSART5_SetOverrunErrorHandler@interruptHandler+2,_EUSART5_OverrunErrorHandler+2
 11459  004A88  0012               	return		;funcret
 11460  004A8A                     __end_of_EUSART5_SetOverrunErrorHandler:
 11461                           	callstack 0
 11462                           
 11463 ;; *************** function _EUSART5_SetFramingErrorHandler *****************
 11464 ;; Defined at:
 11465 ;;		line 166 in file "mcc_generated_files/eusart5.c"
 11466 ;; Parameters:    Size  Location     Type
 11467 ;;  interruptHan    3    0[COMRAM] PTR FTN()void 
 11468 ;;		 -> EUSART5_DefaultFramingErrorHandler(1), 
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1    wreg      void 
 11473 ;; Registers used:
 11474 ;;		wreg, status,2, status,0
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11480 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11483 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11484 ;;Total ram usage:        3 bytes
 11485 ;; Hardware stack levels used: 1
 11486 ;; Hardware stack levels required when called: 2
 11487 ;; This function calls:
 11488 ;;		Nothing
 11489 ;; This function is called by:
 11490 ;;		_EUSART5_Initialize
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text55
 11495  004A8A                     __ptext55:
 11496                           	callstack 0
 11497  004A8A                     _EUSART5_SetFramingErrorHandler:
 11498                           	callstack 26
 11499  004A8A                     
 11500                           ;mcc_generated_files/eusart5.c: 167:     EUSART5_FramingErrorHandler = interruptHandler;
 11501  004A8A  C001  F182         	movff	EUSART5_SetFramingErrorHandler@interruptHandler,_EUSART5_FramingErrorHandler
 11502  004A8E  C002  F183         	movff	EUSART5_SetFramingErrorHandler@interruptHandler+1,_EUSART5_FramingErrorHandler+1
 11503  004A92  C003  F184         	movff	EUSART5_SetFramingErrorHandler@interruptHandler+2,_EUSART5_FramingErrorHandler+2
 11504  004A96  0012               	return		;funcret
 11505  004A98                     __end_of_EUSART5_SetFramingErrorHandler:
 11506                           	callstack 0
 11507                           
 11508 ;; *************** function _EUSART5_SetErrorHandler *****************
 11509 ;; Defined at:
 11510 ;;		line 174 in file "mcc_generated_files/eusart5.c"
 11511 ;; Parameters:    Size  Location     Type
 11512 ;;  interruptHan    3    0[COMRAM] PTR FTN()void 
 11513 ;;		 -> EUSART5_DefaultErrorHandler(1), 
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;		None
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  1    wreg      void 
 11518 ;; Registers used:
 11519 ;;		wreg, status,2, status,0
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11525 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11528 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11529 ;;Total ram usage:        3 bytes
 11530 ;; Hardware stack levels used: 1
 11531 ;; Hardware stack levels required when called: 2
 11532 ;; This function calls:
 11533 ;;		Nothing
 11534 ;; This function is called by:
 11535 ;;		_EUSART5_Initialize
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539                           	psect	text56
 11540  004A98                     __ptext56:
 11541                           	callstack 0
 11542  004A98                     _EUSART5_SetErrorHandler:
 11543                           	callstack 26
 11544  004A98                     
 11545                           ;mcc_generated_files/eusart5.c: 175:     EUSART5_ErrorHandler = interruptHandler;
 11546  004A98  C001  F17C         	movff	EUSART5_SetErrorHandler@interruptHandler,_EUSART5_ErrorHandler
 11547  004A9C  C002  F17D         	movff	EUSART5_SetErrorHandler@interruptHandler+1,_EUSART5_ErrorHandler+1
 11548  004AA0  C003  F17E         	movff	EUSART5_SetErrorHandler@interruptHandler+2,_EUSART5_ErrorHandler+2
 11549  004AA4  0012               	return		;funcret
 11550  004AA6                     __end_of_EUSART5_SetErrorHandler:
 11551                           	callstack 0
 11552                           
 11553 ;; *************** function _ADCC_Initialize *****************
 11554 ;; Defined at:
 11555 ;;		line 62 in file "mcc_generated_files/adcc.c"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;		None
 11558 ;; Auto vars:     Size  Location     Type
 11559 ;;		None
 11560 ;; Return value:  Size  Location     Type
 11561 ;;                  1    wreg      void 
 11562 ;; Registers used:
 11563 ;;		wreg, status,2
 11564 ;; Tracked objects:
 11565 ;;		On entry : 0/0
 11566 ;;		On exit  : 0/0
 11567 ;;		Unchanged: 0/0
 11568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11573 ;;Total ram usage:        0 bytes
 11574 ;; Hardware stack levels used: 1
 11575 ;; Hardware stack levels required when called: 2
 11576 ;; This function calls:
 11577 ;;		Nothing
 11578 ;; This function is called by:
 11579 ;;		_SYSTEM_Initialize
 11580 ;; This function uses a non-reentrant model
 11581 ;;
 11582                           
 11583                           	psect	text57
 11584  0045CE                     __ptext57:
 11585                           	callstack 0
 11586  0045CE                     _ADCC_Initialize:
 11587                           	callstack 27
 11588  0045CE                     
 11589                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 11590  0045CE  0E00               	movlw	0
 11591  0045D0  6E6A               	movwf	106,c	;volatile
 11592                           
 11593                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 11594  0045D2  0E00               	movlw	0
 11595  0045D4  6E6B               	movwf	107,c	;volatile
 11596                           
 11597                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 11598  0045D6  0E00               	movlw	0
 11599  0045D8  6E6C               	movwf	108,c	;volatile
 11600                           
 11601                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 11602  0045DA  0E00               	movlw	0
 11603  0045DC  6E6D               	movwf	109,c	;volatile
 11604                           
 11605                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 11606  0045DE  0E00               	movlw	0
 11607  0045E0  6E68               	movwf	104,c	;volatile
 11608                           
 11609                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 11610  0045E2  0E00               	movlw	0
 11611  0045E4  6E69               	movwf	105,c	;volatile
 11612                           
 11613                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 11614  0045E6  0E00               	movlw	0
 11615  0045E8  6E66               	movwf	102,c	;volatile
 11616                           
 11617                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 11618  0045EA  0E00               	movlw	0
 11619  0045EC  010F               	movlb	15	; () banked
 11620  0045EE  6F5F               	movwf	95,b	;volatile
 11621                           
 11622                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 11623  0045F0  0E00               	movlw	0
 11624  0045F2  6F5D               	movwf	93,b	;volatile
 11625                           
 11626                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 11627  0045F4  0E00               	movlw	0
 11628  0045F6  6F5E               	movwf	94,b	;volatile
 11629                           
 11630                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 11631  0045F8  0E00               	movlw	0
 11632  0045FA  6F59               	movwf	89,b	;volatile
 11633                           
 11634                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 11635  0045FC  0E00               	movlw	0
 11636  0045FE  6F5A               	movwf	90,b	;volatile
 11637                           
 11638                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 11639  004600  0E00               	movlw	0
 11640  004602  6F5B               	movwf	91,b	;volatile
 11641                           
 11642                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 11643  004604  0E00               	movlw	0
 11644  004606  6E65               	movwf	101,c	;volatile
 11645                           
 11646                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 11647  004608  0E00               	movlw	0
 11648  00460A  6F58               	movwf	88,b	;volatile
 11649                           
 11650                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 11651  00460C  0E00               	movlw	0
 11652  00460E  6F56               	movwf	86,b	;volatile
 11653                           
 11654                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x00;
 11655  004610  0E00               	movlw	0
 11656  004612  6F57               	movwf	87,b	;volatile
 11657                           
 11658                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x84;
 11659  004614  0E84               	movlw	132
 11660  004616  6E60               	movwf	96,c	;volatile
 11661                           
 11662                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 11663  004618  0E00               	movlw	0
 11664  00461A  6F5C               	movwf	92,b	;volatile
 11665  00461C                     
 11666                           ; BSR set to: 15
 11667  00461C  0012               	return		;funcret
 11668  00461E                     __end_of_ADCC_Initialize:
 11669                           	callstack 0
 11670                           
 11671 ;; *************** function _EUSART5_Read *****************
 11672 ;; Defined at:
 11673 ;;		line 113 in file "mcc_generated_files/eusart5.c"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;		None
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;		None
 11678 ;; Return value:  Size  Location     Type
 11679 ;;                  1    wreg      unsigned char 
 11680 ;; Registers used:
 11681 ;;		wreg, status,2
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11691 ;;Total ram usage:        0 bytes
 11692 ;; Hardware stack levels used: 1
 11693 ;; Hardware stack levels required when called: 2
 11694 ;; This function calls:
 11695 ;;		Nothing
 11696 ;; This function is called by:
 11697 ;;		_main
 11698 ;;		_getch
 11699 ;; This function uses a non-reentrant model
 11700 ;;
 11701                           
 11702                           	psect	text58
 11703  004900                     __ptext58:
 11704                           	callstack 0
 11705  004900                     _EUSART5_Read:
 11706                           	callstack 28
 11707  004900                     l225:
 11708                           
 11709                           ;mcc_generated_files/eusart5.c: 115:     while(!PIR4bits.RC5IF)
 11710  004900  010E               	movlb	14	; () banked
 11711  004902  AB37               	btfss	55,5,b	;volatile
 11712  004904  EF86  F024         	goto	u5281
 11713  004908  EF88  F024         	goto	u5280
 11714  00490C                     u5281:
 11715  00490C  EF80  F024         	goto	l225
 11716  004910                     u5280:
 11717  004910                     
 11718                           ; BSR set to: 14
 11719                           ;mcc_generated_files/eusart5.c: 119:     eusart5RxLastError.status = 0;
 11720  004910  0E00               	movlw	0
 11721  004912  0100               	movlb	0	; () banked
 11722  004914  6FF9               	movwf	_eusart5RxLastError& (0+255),b	;volatile
 11723  004916                     
 11724                           ; BSR set to: 0
 11725                           ;mcc_generated_files/eusart5.c: 121:     if(1 == RC5STAbits.OERR)
 11726  004916  010E               	movlb	14	; () banked
 11727  004918  A3E0               	btfss	224,1,b	;volatile
 11728  00491A  EF91  F024         	goto	u5291
 11729  00491E  EF93  F024         	goto	u5290
 11730  004922                     u5291:
 11731  004922  EF95  F024         	goto	l5631
 11732  004926                     u5290:
 11733  004926                     
 11734                           ; BSR set to: 14
 11735                           ;mcc_generated_files/eusart5.c: 122:     {;mcc_generated_files/eusart5.c: 125:         R
      +                          C5STAbits.CREN = 0;
 11736  004926  99E0               	bcf	224,4,b	;volatile
 11737                           
 11738                           ;mcc_generated_files/eusart5.c: 126:         RC5STAbits.CREN = 1;
 11739  004928  89E0               	bsf	224,4,b	;volatile
 11740  00492A                     l5631:
 11741                           
 11742                           ; BSR set to: 14
 11743                           ;mcc_generated_files/eusart5.c: 129:     return RC5REG;
 11744  00492A  51DC               	movf	220,w,b	;volatile
 11745  00492C                     
 11746                           ; BSR set to: 14
 11747  00492C  0012               	return		;funcret
 11748  00492E                     __end_of_EUSART5_Read:
 11749                           	callstack 0
 11750                           
 11751 ;; *************** function _DectecLowVolatge *****************
 11752 ;; Defined at:
 11753 ;;		line 76 in file "main.c"
 11754 ;; Parameters:    Size  Location     Type
 11755 ;;		None
 11756 ;; Auto vars:     Size  Location     Type
 11757 ;;		None
 11758 ;; Return value:  Size  Location     Type
 11759 ;;                  1    wreg      void 
 11760 ;; Registers used:
 11761 ;;		wreg
 11762 ;; Tracked objects:
 11763 ;;		On entry : 0/0
 11764 ;;		On exit  : 0/0
 11765 ;;		Unchanged: 0/0
 11766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11771 ;;Total ram usage:        0 bytes
 11772 ;; Hardware stack levels used: 1
 11773 ;; Hardware stack levels required when called: 2
 11774 ;; This function calls:
 11775 ;;		Nothing
 11776 ;; This function is called by:
 11777 ;;		_main
 11778 ;; This function uses a non-reentrant model
 11779 ;;
 11780                           
 11781                           	psect	text59
 11782  004AA6                     __ptext59:
 11783                           	callstack 0
 11784  004AA6                     _DectecLowVolatge:
 11785                           	callstack 28
 11786  004AA6  9E7A               	bcf	122,7,c	;volatile
 11787  004AA8                     
 11788                           ;main.c: 79:         _delay((unsigned long)((1)*(1000000/4000.0)));
 11789  004AA8  0E53               	movlw	83
 11790  004AAA                     u5627:
 11791  004AAA  2EE8               	decfsz	wreg,f,c
 11792  004AAC  D7FE               	bra	u5627
 11793  004AAE  F000               	nop	
 11794  004AB0  8E7A               	bsf	122,7,c	;volatile
 11795  004AB2  0012               	return		;funcret
 11796  004AB4                     __end_of_DectecLowVolatge:
 11797                           	callstack 0
 11798                           
 11799 ;; *************** function _Caps8seriesConnection *****************
 11800 ;; Defined at:
 11801 ;;		line 64 in file "ConfigureCaps.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;		None
 11804 ;; Auto vars:     Size  Location     Type
 11805 ;;		None
 11806 ;; Return value:  Size  Location     Type
 11807 ;;                  1    wreg      void 
 11808 ;; Registers used:
 11809 ;;		wreg, status,2, cstack
 11810 ;; Tracked objects:
 11811 ;;		On entry : 0/0
 11812 ;;		On exit  : 0/0
 11813 ;;		Unchanged: 0/0
 11814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11819 ;;Total ram usage:        0 bytes
 11820 ;; Hardware stack levels used: 1
 11821 ;; Hardware stack levels required when called: 3
 11822 ;; This function calls:
 11823 ;;		_C_N_SWALLconnectGND
 11824 ;; This function is called by:
 11825 ;;		_main
 11826 ;; This function uses a non-reentrant model
 11827 ;;
 11828                           
 11829                           	psect	text60
 11830  00486C                     __ptext60:
 11831                           	callstack 0
 11832  00486C                     _Caps8seriesConnection:
 11833                           	callstack 27
 11834  00486C  847C               	bsf	124,2,c	;volatile
 11835  00486E  927C               	bcf	124,1,c	;volatile
 11836  004870  8480               	bsf	128,2,c	;volatile
 11837  004872  9C7D               	bcf	125,6,c	;volatile
 11838  004874  987D               	bcf	125,4,c	;volatile
 11839  004876  907D               	bcf	125,0,c	;volatile
 11840  004878  927F               	bcf	127,1,c	;volatile
 11841  00487A  967F               	bcf	127,3,c	;volatile
 11842  00487C  9C7E               	bcf	126,6,c	;volatile
 11843  00487E  987E               	bcf	126,4,c	;volatile
 11844  004880  947E               	bcf	126,2,c	;volatile
 11845  004882                     
 11846                           ;ConfigureCaps.c: 80:     C_N_SWALLconnectGND();
 11847  004882  ECBF  F024         	call	_C_N_SWALLconnectGND	;wreg free
 11848  004886  8680               	bsf	128,3,c	;volatile
 11849  004888  8E7D               	bsf	125,7,c	;volatile
 11850  00488A  8A7D               	bsf	125,5,c	;volatile
 11851  00488C  827D               	bsf	125,1,c	;volatile
 11852  00488E  807F               	bsf	127,0,c	;volatile
 11853  004890  847F               	bsf	127,2,c	;volatile
 11854  004892  8E7E               	bsf	126,7,c	;volatile
 11855  004894                     
 11856                           ;ConfigureCaps.c: 88:     capSeries_count=8;
 11857  004894  0E08               	movlw	8
 11858  004896  0100               	movlb	0	; () banked
 11859  004898  6FFE               	movwf	_capSeries_count& (0+255),b
 11860  00489A                     
 11861                           ; BSR set to: 0
 11862                           ;ConfigureCaps.c: 89:     capParalle_count =0;
 11863  00489A  0E00               	movlw	0
 11864  00489C  6FFF               	movwf	_capParalle_count& (0+255),b
 11865  00489E                     
 11866                           ; BSR set to: 0
 11867  00489E  0012               	return		;funcret
 11868  0048A0                     __end_of_Caps8seriesConnection:
 11869                           	callstack 0
 11870                           
 11871 ;; *************** function _C_N_SWALLconnectGND *****************
 11872 ;; Defined at:
 11873 ;;		line 43 in file "ConfigureCaps.c"
 11874 ;; Parameters:    Size  Location     Type
 11875 ;;		None
 11876 ;; Auto vars:     Size  Location     Type
 11877 ;;		None
 11878 ;; Return value:  Size  Location     Type
 11879 ;;                  1    wreg      void 
 11880 ;; Registers used:
 11881 ;;		None
 11882 ;; Tracked objects:
 11883 ;;		On entry : 0/0
 11884 ;;		On exit  : 0/0
 11885 ;;		Unchanged: 0/0
 11886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11891 ;;Total ram usage:        0 bytes
 11892 ;; Hardware stack levels used: 1
 11893 ;; Hardware stack levels required when called: 2
 11894 ;; This function calls:
 11895 ;;		Nothing
 11896 ;; This function is called by:
 11897 ;;		_Caps8seriesConnection
 11898 ;; This function uses a non-reentrant model
 11899 ;;
 11900                           
 11901                           	psect	text61
 11902  00497E                     __ptext61:
 11903                           	callstack 0
 11904  00497E                     _C_N_SWALLconnectGND:
 11905                           	callstack 27
 11906  00497E  9680               	bcf	128,3,c	;volatile
 11907  004980  9E7D               	bcf	125,7,c	;volatile
 11908  004982  9A7D               	bcf	125,5,c	;volatile
 11909  004984  927D               	bcf	125,1,c	;volatile
 11910  004986  907F               	bcf	127,0,c	;volatile
 11911  004988  947F               	bcf	127,2,c	;volatile
 11912  00498A  9E7E               	bcf	126,7,c	;volatile
 11913  00498C  9A7E               	bcf	126,5,c	;volatile
 11914  00498E  967E               	bcf	126,3,c	;volatile
 11915  004990  927E               	bcf	126,1,c	;volatile
 11916  004992  9E7F               	bcf	127,7,c	;volatile
 11917  004994  9679               	bcf	121,3,c	;volatile
 11918  004996  9279               	bcf	121,1,c	;volatile
 11919  004998  9280               	bcf	128,1,c	;volatile
 11920  00499A  907A               	bcf	122,0,c	;volatile
 11921  00499C  9C7C               	bcf	124,6,c	;volatile
 11922  00499E  0012               	return		;funcret
 11923  0049A0                     __end_of_C_N_SWALLconnectGND:
 11924                           	callstack 0
 11925                           
 11926 ;; *************** function _INTERRUPT_InterruptManager *****************
 11927 ;; Defined at:
 11928 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 11929 ;; Parameters:    Size  Location     Type
 11930 ;;		None
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;		None
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  1    wreg      void 
 11935 ;; Registers used:
 11936 ;;		wreg, status,2, cstack
 11937 ;; Tracked objects:
 11938 ;;		On entry : 0/0
 11939 ;;		On exit  : 0/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11946 ;;Total ram usage:        0 bytes
 11947 ;; Hardware stack levels used: 1
 11948 ;; Hardware stack levels required when called: 1
 11949 ;; This function calls:
 11950 ;;		_TMR6_ISR
 11951 ;; This function is called by:
 11952 ;;		Interrupt level 2
 11953 ;; This function uses a non-reentrant model
 11954 ;;
 11955                           
 11956                           	psect	intcode
 11957  000008                     __pintcode:
 11958                           	callstack 0
 11959  000008                     _INTERRUPT_InterruptManager:
 11960                           	callstack 18
 11961                           
 11962                           ;incstack = 0
 11963  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11964  00000A                     
 11965                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 11966  00000A  ACF2               	btfss	242,6,c	;volatile
 11967  00000C  EF0A  F000         	goto	i2u551_41
 11968  000010  EF0C  F000         	goto	i2u551_40
 11969  000014                     i2u551_41:
 11970  000014  EF1D  F000         	goto	i2l433
 11971  000018                     i2u551_40:
 11972  000018                     
 11973                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 11974  000018  010E               	movlb	14	; () banked
 11975  00001A  AB2E               	btfss	46,5,b	;volatile
 11976  00001C  EF12  F000         	goto	i2u552_41
 11977  000020  EF14  F000         	goto	i2u552_40
 11978  000024                     i2u552_41:
 11979  000024  EF1D  F000         	goto	i2l433
 11980  000028                     i2u552_40:
 11981  000028                     
 11982                           ; BSR set to: 14
 11983  000028  AB38               	btfss	56,5,b	;volatile
 11984  00002A  EF19  F000         	goto	i2u553_41
 11985  00002E  EF1B  F000         	goto	i2u553_40
 11986  000032                     i2u553_41:
 11987  000032  EF1D  F000         	goto	i2l433
 11988  000036                     i2u553_40:
 11989  000036                     
 11990                           ; BSR set to: 14
 11991                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR6_ISR();
 11992  000036  EC5A  F025         	call	_TMR6_ISR	;wreg free
 11993  00003A                     i2l433:
 11994  00003A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11995  00003C  0011               	retfie		f
 11996  00003E                     __end_of_INTERRUPT_InterruptManager:
 11997                           	callstack 0
 11998                           
 11999 ;; *************** function _TMR6_ISR *****************
 12000 ;; Defined at:
 12001 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;		None
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;		None
 12006 ;; Return value:  Size  Location     Type
 12007 ;;                  1    wreg      void 
 12008 ;; Registers used:
 12009 ;;		wreg, status,2
 12010 ;; Tracked objects:
 12011 ;;		On entry : 0/0
 12012 ;;		On exit  : 0/0
 12013 ;;		Unchanged: 0/0
 12014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12019 ;;Total ram usage:        0 bytes
 12020 ;; Hardware stack levels used: 1
 12021 ;; This function calls:
 12022 ;;		Nothing
 12023 ;; This function is called by:
 12024 ;;		_INTERRUPT_InterruptManager
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           	psect	text63
 12029  004AB4                     __ptext63:
 12030                           	callstack 0
 12031  004AB4                     _TMR6_ISR:
 12032                           	callstack 18
 12033  004AB4                     
 12034                           ;mcc_generated_files/tmr6.c: 169:     PIR5bits.TMR6IF = 0;
 12035  004AB4  010E               	movlb	14	; () banked
 12036  004AB6  9B38               	bcf	56,5,b	;volatile
 12037  004AB8                     
 12038                           ; BSR set to: 14
 12039                           ;mcc_generated_files/tmr6.c: 170:     Flag5sfastcharing=1;
 12040  004AB8  0E01               	movlw	1
 12041  004ABA  0100               	movlb	0	; () banked
 12042  004ABC  6FFA               	movwf	_Flag5sfastcharing& (0+255),b	;volatile
 12043  004ABE                     
 12044                           ; BSR set to: 0
 12045  004ABE  0012               	return		;funcret
 12046  004AC0                     __end_of_TMR6_ISR:
 12047                           	callstack 0
 12048                           
 12049                           	psect	rparam
 12050  0000                     
 12051                           	psect	temp
 12052  00005F                     btemp:
 12053                           	callstack 0
 12054  00005F                     	ds	1
 12055  0000                     int$flags	set	btemp
 12056  0000                     wtemp8	set	btemp+1
 12057  0000                     ttemp5	set	btemp+1
 12058  0000                     ttemp6	set	btemp+4
 12059  0000                     ttemp7	set	btemp+8
 12060                           
 12061                           	psect	idloc
 12062                           
 12063                           ;Config register IDLOC0 @ 0x200000
 12064                           ;	unspecified, using default values
 12065  200000                     	org	2097152
 12066  200000  0FFF               	dw	4095
 12067                           
 12068                           ;Config register IDLOC1 @ 0x200002
 12069                           ;	unspecified, using default values
 12070  200002                     	org	2097154
 12071  200002  0FFF               	dw	4095
 12072                           
 12073                           ;Config register IDLOC2 @ 0x200004
 12074                           ;	unspecified, using default values
 12075  200004                     	org	2097156
 12076  200004  0FFF               	dw	4095
 12077                           
 12078                           ;Config register IDLOC3 @ 0x200006
 12079                           ;	unspecified, using default values
 12080  200006                     	org	2097158
 12081  200006  0FFF               	dw	4095
 12082                           
 12083                           ;Config register IDLOC4 @ 0x200008
 12084                           ;	unspecified, using default values
 12085  200008                     	org	2097160
 12086  200008  0FFF               	dw	4095
 12087                           
 12088                           ;Config register IDLOC5 @ 0x20000A
 12089                           ;	unspecified, using default values
 12090  20000A                     	org	2097162
 12091  20000A  0FFF               	dw	4095
 12092                           
 12093                           ;Config register IDLOC6 @ 0x20000C
 12094                           ;	unspecified, using default values
 12095  20000C                     	org	2097164
 12096  20000C  0FFF               	dw	4095
 12097                           
 12098                           ;Config register IDLOC7 @ 0x20000E
 12099                           ;	unspecified, using default values
 12100  20000E                     	org	2097166
 12101  20000E  0FFF               	dw	4095
 12102                           
 12103                           	psect	config
 12104                           
 12105                           ;Config register CONFIG1L @ 0x300000
 12106                           ;	External Oscillator mode Selection bits
 12107                           ;	FEXTOSC = OFF, Oscillator not enabled
 12108                           ;	Power-up default value for COSC bits
 12109                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
 12110  300000                     	org	3145728
 12111  300000  EC                 	db	236
 12112                           
 12113                           ;Config register CONFIG1H @ 0x300001
 12114                           ;	Clock Out Enable bit
 12115                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 12116                           ;	Clock Switch Enable bit
 12117                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12118                           ;	Fail-Safe Clock Monitor Enable bit
 12119                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12120  300001                     	org	3145729
 12121  300001  FF                 	db	255
 12122                           
 12123                           ;Config register CONFIG2L @ 0x300002
 12124                           ;	Master Clear Enable bit
 12125                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RG5 pin function is MCLR
 12126                           ;	Power-up Timer Enable bit
 12127                           ;	PWRTE = OFF, Power up timer disabled
 12128                           ;	Low-power BOR enable bit
 12129                           ;	LPBOREN = OFF, ULPBOR disabled
 12130                           ;	Brown-out Reset Enable bits
 12131                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 12132  300002                     	org	3145730
 12133  300002  FF                 	db	255
 12134                           
 12135                           ;Config register CONFIG2H @ 0x300003
 12136                           ;	Brown Out Reset Voltage selection bits
 12137                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
 12138                           ;	ZCD Disable bit
 12139                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 12140                           ;	PPSLOCK bit One-Way Set Enable bit
 12141                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 12142                           ;	Stack Full/Underflow Reset Enable bit
 12143                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12144                           ;	Debugger Enable bit
 12145                           ;	DEBUG = OFF, Background debugger disabled
 12146                           ;	Extended Instruction Set Enable bit
 12147                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 12148  300003                     	org	3145731
 12149  300003  FF                 	db	255
 12150                           
 12151                           ;Config register CONFIG3L @ 0x300004
 12152                           ;	WDT Period Select bits
 12153                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12154                           ;	WDT operating mode
 12155                           ;	WDTE = OFF, WDT Disabled
 12156  300004                     	org	3145732
 12157  300004  9F                 	db	159
 12158                           
 12159                           ;Config register CONFIG3H @ 0x300005
 12160                           ;	WDT Window Select bits
 12161                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12162                           ;	WDT input clock selector
 12163                           ;	WDTCCS = SC, Software Control
 12164  300005                     	org	3145733
 12165  300005  FF                 	db	255
 12166                           
 12167                           ;Config register CONFIG4L @ 0x300006
 12168                           ;	Write Protection Block 0
 12169                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12170                           ;	Write Protection Block 1
 12171                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12172                           ;	Write Protection Block 2
 12173                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12174                           ;	Write Protection Block 3
 12175                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12176                           ;	Write Protection Block 3
 12177                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
 12178                           ;	Write Protection Block 3
 12179                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
 12180                           ;	Write Protection Block 3
 12181                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
 12182                           ;	Write Protection Block 3
 12183                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
 12184  300006                     	org	3145734
 12185  300006  FF                 	db	255
 12186                           
 12187                           ;Config register CONFIG4H @ 0x300007
 12188                           ;	Configuration Register Write Protection bit
 12189                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 12190                           ;	Boot Block Write Protection bit
 12191                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12192                           ;	Data EEPROM Write Protection bit
 12193                           ;	WRTD = OFF, Data EEPROM not write-protected
 12194                           ;	Scanner Enable bit
 12195                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 12196                           ;	Low Voltage Programming Enable bit
 12197                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 12198  300007                     	org	3145735
 12199  300007  FF                 	db	255
 12200                           
 12201                           ;Config register CONFIG5L @ 0x300008
 12202                           ;	UserNVM Program Memory Code Protection bit
 12203                           ;	CP = OFF, UserNVM code protection disabled
 12204                           ;	DataNVM Memory Code Protection bit
 12205                           ;	CPD = OFF, DataNVM code protection disabled
 12206  300008                     	org	3145736
 12207  300008  FF                 	db	255
 12208                           
 12209                           ;Config register CONFIG5H @ 0x300009
 12210                           ;	unspecified, using default values
 12211  300009                     	org	3145737
 12212  300009  FF                 	db	255
 12213                           
 12214                           ;Config register CONFIG6L @ 0x30000A
 12215                           ;	Table Read Protection Block 0
 12216                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12217                           ;	Table Read Protection Block 1
 12218                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12219                           ;	Table Read Protection Block 2
 12220                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12221                           ;	Table Read Protection Block 3
 12222                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12223                           ;	Table Read Protection Block 4
 12224                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
 12225                           ;	Table Read Protection Block 5
 12226                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
 12227                           ;	Table Read Protection Block 6
 12228                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
 12229                           ;	Table Read Protection Block 7
 12230                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
 12231  30000A                     	org	3145738
 12232  30000A  FF                 	db	255
 12233                           
 12234                           ;Config register CONFIG6H @ 0x30000B
 12235                           ;	Boot Block Table Read Protection bit
 12236                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12237  30000B                     	org	3145739
 12238  30000B  FF                 	db	255
 12239                           tosu	equ	0xFFF
 12240                           tosh	equ	0xFFE
 12241                           tosl	equ	0xFFD
 12242                           stkptr	equ	0xFFC
 12243                           pclatu	equ	0xFFB
 12244                           pclath	equ	0xFFA
 12245                           pcl	equ	0xFF9
 12246                           tblptru	equ	0xFF8
 12247                           tblptrh	equ	0xFF7
 12248                           tblptrl	equ	0xFF6
 12249                           tablat	equ	0xFF5
 12250                           prodh	equ	0xFF4
 12251                           prodl	equ	0xFF3
 12252                           indf0	equ	0xFEF
 12253                           postinc0	equ	0xFEE
 12254                           postdec0	equ	0xFED
 12255                           preinc0	equ	0xFEC
 12256                           plusw0	equ	0xFEB
 12257                           fsr0h	equ	0xFEA
 12258                           fsr0l	equ	0xFE9
 12259                           wreg	equ	0xFE8
 12260                           indf1	equ	0xFE7
 12261                           postinc1	equ	0xFE6
 12262                           postdec1	equ	0xFE5
 12263                           preinc1	equ	0xFE4
 12264                           plusw1	equ	0xFE3
 12265                           fsr1h	equ	0xFE2
 12266                           fsr1l	equ	0xFE1
 12267                           bsr	equ	0xFE0
 12268                           indf2	equ	0xFDF
 12269                           postinc2	equ	0xFDE
 12270                           postdec2	equ	0xFDD
 12271                           preinc2	equ	0xFDC
 12272                           plusw2	equ	0xFDB
 12273                           fsr2h	equ	0xFDA
 12274                           fsr2l	equ	0xFD9
 12275                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        36
    BSS         122
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    125     160
    BANK1           256      0     133
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), msgOK(BANK0[3]), ConvertADCtoSend@msgValue(BANK0[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), msgOK(BANK0[3]), ConvertADCtoSend@msgValue(BANK0[8]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> command17(BANK1[3]), command16(BANK1[3]), command13(BANK1[3]), command12(BANK1[3]), 
		 -> command11(BANK1[4]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> main@command(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ConvertADCtoSend@msgValue(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> ConvertADCtoSend@msgValue(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1908_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ConvertADCtoSend@msgValue(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> ConvertADCtoSend@msgValue(BANK0[8]), 

    memcmp@vr	PTR const void  size(2) Largest target is 7
		 -> command20(BANK1[4]), command14(BANK1[7]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> command20(BANK1[4]), command14(BANK1[7]), 

    memcmp@vl	PTR const void  size(2) Largest target is 20
		 -> main@command(BANK0[20]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> main@command(BANK0[20]), 

    executeCommand@msgValue	PTR unsigned char  size(2) Largest target is 8
		 -> ConvertADCtoSend@msgValue(BANK0[8]), 

    executeCommand@command	PTR unsigned char  size(2) Largest target is 20
		 -> main@command(BANK0[20]), 

    sp__ConvertADCtoSend	PTR unsigned char  size(2) Largest target is 8
		 -> ConvertADCtoSend@msgValue(BANK0[8]), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    EUSART5_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART5_DefaultErrorHandler(), 

    EUSART5_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART5_DefaultErrorHandler(), 

    EUSART5_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART5_DefaultOverrunErrorHandler(), 

    EUSART5_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART5_DefaultOverrunErrorHandler(), 

    EUSART5_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART5_DefaultFramingErrorHandler(), 

    EUSART5_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART5_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _fastChargingcaps->_sampleChargingCapArray
    _fastChargingcaps->_sampleEHvoc
    _sampleEHvoc->_getADCValue
    _sampleChargingCapArray->_getADCValue
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART5_Write
    _floorf->___fldiv
    ___flsub->___flmul
    _atoi->_isspace
    _delayedBrownOut->_sampleTaskCapArray
    _sampleTaskCapArray->_getADCValue
    _getADCValue->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _EUSART5_Initialize->_EUSART5_SetErrorHandler
    _EUSART5_Initialize->_EUSART5_SetFramingErrorHandler
    _EUSART5_Initialize->_EUSART5_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_executeCommand
    _executeCommand->_ConvertADCtoSend
    _ConvertADCtoSend->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   54050
                                            101 BANK0     24    24      0
              _Caps8seriesConnection
                   _DectecLowVolatge
                       _EUSART5_Read
                  _SYSTEM_Initialize
                    _delayedBrownOut
                     _executeCommand
                   _fastChargingcaps
                 _isolatedOneTaskCap
 ---------------------------------------------------------------------------------
 (1) _isolatedOneTaskCap                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fastChargingcaps                                     8     8      0   11680
                                             57 COMRAM     4     4      0
                             ___flge
                            ___flmul
                   _addCapToParallel
                   _decoupleCapArray
             _sampleChargingCapArray
                        _sampleEHvoc
 ---------------------------------------------------------------------------------
 (2) _sampleEHvoc                                          8     4      4    3474
                                             49 COMRAM     8     4      4
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _sampleChargingCapArray                               8     4      4    3474
                                             49 COMRAM     8     4      4
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _decoupleCapArray                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _addCapToParallel                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _executeCommand                                      19    17      2   36619
                                             84 BANK0     17    15      2
                   _ConvertADCtoSend
                      _EUSART5_Write
                        _getADCValue
                             _memcmp
                             _strcmp
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     2      4     872
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              12     6      6     637
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _ConvertADCtoSend                                    12     8      4   30222
                                             72 BANK0     12     8      4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   30072
                                             56 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   29715
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           48    42      6   29343
                                             63 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   24000
                                             51 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3861
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     774
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1279
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     878
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART5_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART5_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _delayedBrownOut                                      4     4      0    5200
                                             57 COMRAM     4     4      0
                             ___flge
                _isolateCapsToSeries
                 _sampleTaskCapArray
 ---------------------------------------------------------------------------------
 (2) _sampleTaskCapArray                                   8     4      4    3452
                                             49 COMRAM     8     4      4
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _getADCValue                                         10     6      4    3428
                                             39 COMRAM    10     6      4
           _ADCC_GetSingleConversion
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2960
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _ADCC_GetSingleConversion                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _isolateCapsToSeries                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1702
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _ADCC_Initialize
                 _EUSART5_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART5_Initialize                                   0     0      0     294
            _EUSART5_SetErrorHandler
     _EUSART5_SetFramingErrorHandler
     _EUSART5_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART5_SetOverrunErrorHandler                       3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART5_SetFramingErrorHandler                       3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART5_SetErrorHandler                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART5_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DectecLowVolatge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Caps8seriesConnection                                0     0      0       0
                _C_N_SWALLconnectGND
 ---------------------------------------------------------------------------------
 (2) _C_N_SWALLconnectGND                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR6_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Caps8seriesConnection
     _C_N_SWALLconnectGND
   _DectecLowVolatge
   _EUSART5_Read
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART5_Initialize
       _EUSART5_SetErrorHandler
       _EUSART5_SetFramingErrorHandler
       _EUSART5_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR6_Initialize
   _delayedBrownOut
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
     _isolateCapsToSeries
     _sampleTaskCapArray
       _getADCValue
         _ADCC_GetSingleConversion
         ___flmul
         ___xxtofl
   _executeCommand
     _ConvertADCtoSend
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART5_Write
                 _fputs
                   _fputc
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isdigit
             _isupper
             _strncmp
             _tolower
     _EUSART5_Write
     _getADCValue
     _memcmp
     _strcmp
     _strlen
   _fastChargingcaps
     ___flge
     ___flmul
     _addCapToParallel
     _decoupleCapArray
     _sampleChargingCapArray
       _getADCValue
     _sampleEHvoc
       _getADCValue
   _isolatedOneTaskCap

 _INTERRUPT_InterruptManager (ROOT)
   _TMR6_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      85       7       52.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7D      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     183       8        0.0%
DATA                 0      0     183       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 07 13:40:26 2021

                                  ___fldiv@aexp 0019                                    ___fldiv@bexp 0018  
                                  ___fldiv@sign 0011                                              l41 4A1C  
                                            l44 4A68                                              l47 4A38  
                                  ___awdiv@sign 0006                             ___wmul@multiplicand 0003  
                                           l208 466A                                             l232 4A3C  
                                           l225 4900                                             l241 4AC8  
                                           l162 403A                                             l235 4A50  
                                           l332 461C                                             l229 492C  
                                           l253 4A96                                             l256 4A88  
                                           l344 48DE                                             l426 4ACC  
                                           l259 4AA4                                             l347 48FE  
                                           l620 382E                                             l701 4994  
                                           l711 499E                                             l703 4996  
                                           l615 2F06                                             l720 4872  
                                           l800 3704                                             l705 4998  
                                           l730 487C                                             l722 4874  
                                           l714 486C                                             l466 49E0  
                                           l626 3874                                             l707 499A  
                                           l811 371A                                             l803 3712  
                                           l732 487E                                             l724 4876  
                                           l716 486E                                             l580 4AA6  
                                           l820 372E                                             l709 499C  
                                           l901 37A0                                             l813 371C  
                                           l805 3714                                             l750 489E  
                                           l734 4880                                             l726 4878  
                                           l718 4870                                             l574 4336  
                                           l830 3738                                             l822 3730  
                                           l911 37AA                                             l903 37A2  
                                           l815 371E                                             l807 3716  
                                           l728 487A                                             l584 4AB2  
                                           l832 373A                                             l824 3732  
                                           l681 4980                                             l577 48D0  
                                           l913 37AC                                             l905 37A4  
                                           l841 374E                                             l809 3718  
                                           l930 3474                                             l834 373C  
                                           l826 3734                                             l818 372C  
                                           l691 498A                                             l683 4982  
                                           l915 37AE                                             l907 37A6  
                                           l851 3758                                             l843 3750  
                                           l860 376C                                             l828 3736  
                                           l772 49F4                                             l693 498C  
                                           l685 4984                                             l925 4956  
                                           l909 37A8                                             l853 375A  
                                           l845 3752                                             l837 374A  
                                           l950 3496                                             l942 348E  
                                           l934 347A                                             l870 3776  
                                           l862 376E                                             l918 3810  
                                           l695 498E                                             l687 4986  
                                           l679 497E                                             l855 375C  
                                           l847 3754                                             l839 374C  
                                           l775 49FA                                             l759 46B6  
                                           l944 3490                                             l936 347C  
                                           l928 3472                                             l880 3780  
                                           l872 3778                                             l864 3770  
                                           l792 36FC                                             l784 36EA  
                                           l768 4702                                             l697 4990  
                                           l689 4988                                             l961 34AE  
                                           l953 34A6                                             l857 375E  
                                           l849 3756                                             l777 49FC  
                                           l970 34C4                                             l946 3492  
                                           l938 347E                                             l882 3782  
                                           l874 377A                                             l866 3772  
                                           l794 36FE                                             l786 36EC  
                                           l699 4992                                             l963 34B0  
                                           l955 34A8                                             l891 3796  
                                           l779 49FE                                             l980 34CE  
                                           l972 34C6                                             l948 3494  
                                           l884 3784                                             l876 377C  
                                           l868 3774                                             l796 3700  
                                           l788 36EE                                             l965 34B2  
                                           l957 34AA                                             l893 3798  
                                           l982 34D0                                             l974 34C8  
                                           l878 377E                                             l798 3702  
                                           l991 34E6                                             l959 34AC  
                                           l895 379A                                             l887 3792  
                                           l984 34D2                                             l976 34CA  
                                           l968 34C2                                             l993 34E8  
                                           l897 379C                                             l889 3794  
                                           l978 34CC                                             l995 34EA  
                                           l987 34E2                                             l899 379E  
                                           l997 34EC                                             l989 34E4  
                                           l999 34EE                                             _PR6 000FB0  
                                           _pad 3DF0                         __size_of_PMD_Initialize 001C  
                                  ___awmod@sign 0006                                             wreg 000FE8  
                                  ___flmul@aexp 0020                                    ___flmul@bexp 0021  
                       _EUSART5_SetErrorHandler 4A98                                    ___flmul@sign 001B  
                                  ___flmul@temp 0026                                    ___flmul@prod 0022  
                              _DectecLowVolatge 4AA6          __end_of_EUSART5_SetFramingErrorHandler 4A98  
       __size_of_EUSART5_SetFramingErrorHandler 000E                  _EUSART5_SetFramingErrorHandler 4A8A  
                                  ___fltol@exp1 000A                                     main@command 00C7  
                                          l1001 34F0                                            l1010 3506  
                                          l1003 34F2                                            l1020 3510  
                                          l1012 3508                                            l1005 34F4  
                                          l1030 351A                                            l1022 3512  
                                          l1014 350A                                            l1007 34F6  
                                          l1032 351C                                            l1024 3514  
                                          l1016 350C                                            l2000 3470  
                                          l1041 3532                                            l1034 351E  
                                          l1026 3516                                            l1018 350E  
                                          l1051 353C                                            l1043 3534  
                                          l1028 3518                                            l1061 3546  
                                          l1053 353E                                            l1045 3536  
                                          l1037 352E                                            l1070 35AE  
                                          l2006 3118                                            l2030 47C4  
                                          l1063 3548                                            l1055 3540  
                                          l1047 3538                                            l1039 3530  
                                          l2016 4834                                            l2024 45CC  
                                          l1065 354A                                            l1057 3542  
                                          l1049 353A                                            l2009 305C  
                                          l1081 4A6C                                            l1067 354C  
                                          l1059 3544                                            l1083 4A6E  
                                          l1076 42C8                                            l2045 3DEE  
                                          l2053 478C                                            l2061 43A2  
                                          l1085 4A7A                                            l1342 40EA  
                                          l1095 36E4                                            l1079 4A6A  
                                          l1329 3F78                                            l2073 486A  
                                          l1098 497C                                            l1363 3AFE  
                                          l2067 4528                                            l1372 47FC  
                                          l2092 44CA                                            l1357 4194  
                                          l4101 1A8C                                            l2077 3D24  
                                          l4111 1AC0                                            l4103 1A8E  
                                          l2087 44C2                                            l1368 3B44  
                                          l1712 2486                                            l1721 26F4  
                                          l4121 1AF2                                            l4105 1A9E  
                                          l4113 1AC8                                            l5001 133C  
                                          l1722 26E2                                            l1626 1C60  
                                          l1643 1D7A                                            l4211 1CCA  
                                          l1635 1F30                                            l4203 1C92  
                                          l1627 1C4E                                            l4131 1B28  
                                          l4123 1AF8                                            l4115 1AD8  
                                          l4107 1AAE                                            l1395 3A40  
                                          l5003 1350                                            l5011 1446  
                                          l1716 27EA                                            l1652 1E4A  
                                          l1628 1C14                                            l1653 1E38  
                                          l4213 1CCE                                            l4205 1CA2  
                                          l4221 1CEE                                            l4141 1B64  
                                          l4133 1B38                                            l4125 1B06  
                                          l4117 1ADE                                            l4109 1ABE  
                                          l4301 4756                                            l5101 1896  
                                          l5021 1512                                            l5013 1464  
                                          l5005 13B4                                            l1719 267C  
                                          l4311 4958                                            l4223 1D14  
                                          l4231 1D6A                                            l4215 1CDC  
                                          l4207 1CB0                                            l4151 1B82  
                                          l4143 1B72                                            l4135 1B3A  
                                          l4127 1B08                                            l4119 1AF0  
                                          l4071 4AC2                                            l4303 4768  
                                          l5111 18D4                                            l5103 18A6  
                                          l5031 15C2                                            l5023 1522  
                                          l5015 1498                                            l5007 140C  
                                          l1760 3208                                            l1680 2B84  
                                          l1832 3E78                                            l1729 27AC  
                                          l1753 3170                                            l4313 4974  
                                          l4401 29F4                                            l4321 2806  
                                          l4241 1DBE                                            l4233 1D90  
                                          l4225 1D48                                            l4217 1CDE  
                                          l4209 1CBE                                            l4161 1B96  
                                          l4153 1B86                                            l4145 1B76  
                                          l4129 1B18                                            l4137 1B42  
                                          l4081 3D72                                            l4073 3D26  
                                          l4305 476C                                            l5121 190A  
                                          l5113 18E4                                            l5105 18AA  
                                          l5041 1632                                            l5033 15F6  
                                          l5025 1532                                            l5017 14CA  
                                          l5009 1440                                            l1682 29E4  
                                          l1834 3EB4                                            l5203 3428  
                                          l1691 2A2A                                            l4403 2A0A  
                                          l4411 2A3A                                            l4331 283A  
                                          l4323 2808                                            l4251 1DE8  
                                          l4243 1DCC                                            l4235 1DA0  
                                          l4227 1D4A                                            l4219 1CE8  
                                          l4171 1BAA                                            l4163 1B9A  
                                          l4155 1B8A                                            l4147 1B7A  
                                          l4139 1B52                                            l4067 4A3C  
                                          l4083 3DA8                                            l4075 3D38  
                                          l4091 4846                                            l4307 478E  
                                          l5131 1966                                            l5123 1916  
                                          l5115 18EC                                            l5107 18BA  
                                          l5051 16E8                                            l5043 163E  
                                          l5035 160A                                            l5027 1566  
                                          l5019 14E0                                            l1756 32CC  
                                          l1668 4748                                            l1852 1A70  
                                          l4501 24E6                                            l5205 343A  
                                          l1693 2AA2                                            l4413 2A48  
                                          l4405 2A10                                            l1685 29A8  
                                          l4341 286C                                            l4325 2818  
                                          l4333 2842                                            l4317 27EC  
                                          l4261 1E1A                                            l4253 1DF8  
                                          l4245 1DCE                                            l4229 1D5A  
                                          l4181 1BFC                                            l4173 1BAE  
                                          l4165 1B9E                                            l4157 1B8E  
                                          l4149 1B7E                                            l4069 4A4C  
                                          l4077 3D4A                                            l4093 485E  
                                          l1829 3E36                                            l5141 19B0  
                                          l5125 191C                                            l5133 196C  
                                          l5117 18FA                                            l5109 18CC  
                                          l5061 1730                                            l5053 16FA  
                                          l5045 1662                                            l5029 15BC  
                                          l5037 160E                                            l5221 3C88  
                                          l5213 3C44                                            l5301 233E  
                                          l1781 422E                                            l1694 2A90  
                                          l1870 1206                                            l4511 2530  
                                          l4503 24F2                                            l1767 3264  
                                          l5207 344C                                            l4423 2AB2  
                                          l4431 2AFA                                            l4415 2A4C  
                                          l4407 2A1A                                            l4351 28A0  
                                          l4343 286E                                            l4335 2852  
                                          l4327 2828                                            l4319 27F8  
                                          l4271 1E74                                            l4263 1E30  
                                          l4247 1DDC                                            l4239 1DB4  
                                          l4255 1DFA                                            l4191 1C40  
                                          l4183 1C0C                                            l4167 1BA2  
                                          l4159 1B92                                            l4175 1BB2  
                                          l4079 3D54                                            l4087 4836  
                                          l5151 19E0                                            l5143 19BC  
                                          l5135 197E                                            l5127 1942  
                                          l5119 1902                                            l5071 1766  
                                          l5063 1740                                            l5055 1708  
                                          l5047 16C6                                            l5039 161E  
                                          l5223 3CA0                                            l5215 3C6E  
                                          l5311 237A                                            l5303 234C  
                                          l1951 2302                                            l1944 23C0  
                                          l4521 2582                                            l4513 253C  
                                          l4505 250A                                            l5401 4326  
                                          l4601 3EE2                                            l4441 2B64  
                                          l4433 2B14                                            l4425 2ABE  
                                          l4417 2A5A                                            l4409 2A28  
                                          l4361 28E6                                            l4345 287E  
                                          l4353 28A8                                            l4337 2858  
                                          l4329 2838                                            l4281 1EF0  
                                          l4273 1EAE                                            l4249 1DE4  
                                          l4257 1E08                                            l4193 1C42  
                                          l4185 1C22                                            l4177 1BB6  
                                          l4169 1BA6                                            l4097 1A72  
                                          l4089 4842                                            l5161 1A3A  
                                          l5145 19C4                                            l5137 1998  
                                          l5129 195E                                            l5081 179A  
                                          l5073 176A                                            l5065 1744  
                                          l5049 16D6                                            l5057 1710  
                                          l5225 3CC0                                            l5305 2360  
                                          l5241 1F7E                                            l5233 1F32  
                                          l5331 48EC                                            l5323 48D4  
                                          l4531 2600                                            l4523 2592  
                                          l4515 254C                                            l4507 2516  
                                          l5171 32CE                                            l4611 3F10  
                                          l4603 3EEA                                            l4443 2B72  
                                          l4435 2B2A                                            l4427 2ACC  
                                          l4419 2A88                                            l4371 290E  
                                          l4363 28EA                                            l4355 28B8  
                                          l4347 288E                                            l4339 285E  
                                          l4291 1F10                                            l4283 1EF4  
                                          l4267 1E5A                                            l4275 1EB0  
                                          l4259 1E0C                                            l4195 1C4C  
                                          l4187 1C2E                                            l4179 1BE0  
                                          l4099 1A7E                                            l5163 1A4A  
                                          l5155 1A14                                            l5147 19D4  
                                          l5139 199E                                            l5091 1838  
                                          l5083 179E                                            l5075 1770  
                                          l5067 174A                                            l5059 1722  
                                          l5227 3CD2                                            l5219 3C7A  
                                          l5251 201E                                            l5243 1FA6  
                                          l5235 1F5A                                            l5315 2386  
                                          l5411 454C                                            l1788 457A  
                            _sampleTaskCapArray 492E                                            l5421 3F7A  
                                          l4701 3AEC                                            l5325 48D8  
                                          l4541 267A                                            l4533 2636  
                                          l4525 25AE                                            l4517 2558  
                                          l4509 2522                                            l4461 23DE  
                                          l5341 3180                                            l5181 3344  
                                          l5173 32E2                                            l4621 3F4A  
                                          l4613 3F18                                            l4605 3EEE  
                                          l4445 2B78                                            l4437 2B44  
                                          l4429 2AF6                                            l4381 295C  
                                          l4357 28CE                                            l4349 289E  
                                          l4293 1F1E                                            l4285 1F02  
                                          l4277 1EC0                                            l4269 1E66  
                                          l4197 1C6E                                            l4189 1C32  
                                          l5165 1A50                                            l5157 1A26  
                                          l5149 19DA                                            l5069 1756  
                                          l5077 1776                                            l5085 17A4  
                                          l5093 183C                                            l5229 3CFE  
                                          l5317 23AE                                            l5309 236C  
                                          l5253 203E                                            l5245 1FAE  
                                          l5261 20A8                                            l5237 1F68  
                                          l1957 4400                                            l5413 4568  
                                          l5405 452A                                            l5501 41CA  
                                          l1958 4408                                            ?_pad 0013  
                                          l5431 4018                                            l5423 3FB2  
                                          l4703 3B3C                                            l5327 48DA  
                                          l4551 26DA                                            l4543 268C  
                                          l4535 2644                                            l4527 25BA  
                                          l4519 2568                                            l4471 2424  
                                          l4463 23EE                                            l4455 23C2  
                                          l5351 31BE                                            l5343 3196  
                                          l5335 311C                                            l5191 336C  
                                          l5183 3348                                            l5175 32E6  
                                          l4631 3F70                                            l4623 3F4C  
                                          l4615 3F26                                            l4607 3EF6  
                                          l4447 2B7A                                            l4439 2B60  
                                          l4391 29A6                                            l4383 296C  
                                          l4375 2922                                            l4359 28DE  
                                          l4367 28FE                                            l4711 47DC  
                                          l4295 1F20                                            l4287 1F08  
                                          l4279 1ED0                                            l4199 1C7E  
                                          l5159 1A32                                            l5095 185A  
                                          l5087 17FC                                            l5079 1788  
                                          l5271 2154                                            l5263 20CC  
                                          l5255 204C                                            l5247 1FBC  
                                          l5239 1F7A                                            l5407 453C  
                                          l5503 41EC                                            l5511 466C  
                                          l1968 3C42                                            l5417 4ACA  
                                          l5441 4022                                            l5433 401A  
                                          l5425 4012                                            l4705 3B42  
                                          l5329 48DC                                            l4561 2748  
                                          l4545 269A                                            l4537 2662  
                                          l4529 25D6                                            l4481 2450  
                                          l4473 242A                                            l4465 23FE  
                                          l4457 23CE                                            l5361 3246  
                                          l5353 31F0                                            l5337 312C  
                                          l5193 3374                                            l5177 32EA  
                                          l4625 3F52                                            l4617 3F2C  
                                          l4609 3F08                                            l4641 4056  
                                          l4393 29B2                                            l4385 2974  
                                          l4377 293C                                            l4369 290E  
                                          l4713 47EC                                            l4289 1F0A  
                                          l4801 3C3A                                            l5097 1876  
                                          l5089 1830                                            l5273 2166  
                                          l5265 20DC                                            l5249 1FE4  
                                          l5409 4544                                            l5505 41FE  
                                          l5521 4686                                            l5513 466C  
                                          l1898 1646                                            l5451 402C  
                                          l5443 4024                                            l5435 401C  
                                          l5427 4014                                            l5419 4A1E  
                                          l5611 4A04                                            l5603 355C  
                                          l4571 27B0                                            l4555 2704  
                                          l4563 274C                                            l4547 269E  
                                          l4539 266C                                            l4491 24A6  
                                          l4483 2460                                            l4475 2430  
                                          l4467 240E                                            l4459 23DC  
                                          l5371 329C                                            l5363 3254  
                                          l5355 31F2                                            l5347 31AA  
                                          l5339 313A                                            l5195 33AC  
                                          l5187 334E                                            l5179 330A  
                                          l4619 3F42                                            l4627 3F58  
                                          l4651 408A                                            l4643 405A  
                                          l4635 403C                                            l4395 29D0  
                                          l4387 2984                                            l4379 294C  
                                          l4731 39A6                                            l4723 3966  
                                          l4299 474A                                            l5099 1888  
                                          l5291 229E                                            l5275 2180  
                                          l5283 21EA                                            l5267 2110  
                                          l5259 2096                                            l5507 420A  
                                          l5531 46B8                                            l5523 4696  
                                          l5515 466E                                            l5453 402E  
                                          l5445 4026                                            l5437 401E  
                                          l5429 4016                                            l5461 49C2  
                                          l5621 4A18                                            l5613 4A08  
                                          l4581 27DA                                            l4573 27C0  
                                          l4565 2766                                            l4557 2710  
                                          l4549 26AC                                            l4485 2470  
                                          l4477 243E                                            l4469 2414  
                                          l5373 32AC                                            l5365 3272  
                                          l5357 31FE                                            l5349 31B2  
                                          l1997 3468                                            l5189 3364  
                                          l4629 3F68                                            l4661 40C4  
                                          l4653 4092                                            l4645 4068  
                                          l4637 4040                                            l4397 29D2  
                                          l4389 2998                                            l4709 47C6  
                                          l4741 39D6                                            l4733 39B4  
                                          l4725 3990                                            l4717 393C  
                                          l4821 2F28                                            l4805 44CC  
                                          l4813 44A2                                            l4901 0F42  
                                          l5293 22D2                                            l5285 2218  
                                          l5277 218E                                            l5269 2120  
                                          l5381 43A4                                            l5701 2E1E  
                                          l5541 46E2                                            l5533 46BA  
                                          l5525 46A6                                            l5517 4670  
                                          l5631 492A                                            l5623 4900  
                                          l5391 4A7C                                            l5471 4644  
                                          l5455 4030                                            l5447 4028  
                                          l5439 4020                                            l5463 49D6  
                                          l5615 4A0C                                            l4575 27CE  
                                          l4567 277A                                            l4559 271E  
                                          l4495 24BA                                            l4487 2476  
                                          l4479 2440                                            l5375 32BA  
                                          l5367 3274                                            l5359 323A  
                                          l5199 33E6                                            l4591 3EB6  
                                          l4655 40A0                                            l4663 40CA  
                                          l4647 4070                                            l4639 404E  
                                          l4399 29E2                                            l4671 40EC  
                                          l4751 3A00                                            l4743 39E0  
                                          l4727 3992                                            l4719 3952  
                                          l4831 3010                                            l4823 2F7E  
                                          l4807 44DC                                            l4815 44B4  
                                          l4903 0F5E                                            l4911 0FA8  
                                          l5279 21BE                                            l5383 43AC  
                                          l5703 2E44                                            l5711 2E8E  
                                          l5551 36F0                                            l5543 46F2  
                                          l5535 46BC                                            l5519 4672  
                                          l5721 4882                                            l5641 4AB0  
                                          l5625 4910                                            l5393 4A98  
                                          l5473 4654                                            l5457 4A52  
                                          l5449 402A                                            l5465 49DA  
                                          l5617 4A10                                            l5609 4A00  
                                          l4577 27D0                                            l4569 2794  
                                          l4497 24C6                                            l4489 2496  
                                          l5377 32BC                                            l5369 3278  
                                          l4593 3EBA                                            l4665 40DA  
                                          l4657 40B6                                            l4649 4082  
                                          l4681 418C                                            l4673 411A  
                                          l4585 4704                                            l4753 3A10  
                                          l4729 39A2                                            l4841 30F8  
                                          l4833 304C                                            l4825 2F92  
                                          l4761 3DF0                                            l4809 446C  
                                          l4921 1032                                            l4913 0FCE  
                                          l4905 0F76                                            l5289 228C  
                                          l5385 43BA                                            l5713 2EBC  
                                          l5705 2E4E                                            l5561 3786  
                                          l5553 3706                                            l5537 46BE  
                                          l5529 46B8                                            l5801 381E  
                                          l5731 488E                                            l5723 4886  
                                          l5627 4916                                            l5459 45CE  
                                          l5475 4664                                            l5467 461E  
                                          l5619 4A14                                            l4691 3A80  
                                          l4579 27D6                                            l4499 24D0  
                                          l5395 42CA                                            l4851 457C  
                                          l4595 3EC8                                            l4667 40E2  
                                          l4659 40BE                                            l4683 4192  
                                          l4675 412A                                            l4587 4714  
                                          l4755 3A20                                            l4739 39CC  
                                          l4843 3108                                            l4827 2FA0  
                                          l4835 3080                                            l4819 2F08  
                                          l4771 3E42                                            l4763 3E00  
                                          l4931 1068                                            l4907 0F80  
                                          l5299 2316                                            l5387 43E0  
                                          l5491 437E                                            l5483 4338  
                                          l5715 2EC6                                            l5707 2E60  
                                          l5651 2BCC                                            l5643 2B86  
                                          l5563 37B0                                            l5555 3720  
                                          l5547 49E4                                            l5539 46D2  
                                          l5811 3850                                            l5803 3820  
                                          l5733 4890                                            l5725 4888  
                                          l5629 4926                                            l5389 4A8A  
                                          l5469 4634                                            l4693 3AAE  
                                          l5397 42D2                                            l5581 4932  
                                          l4853 4580                                            l4597 3ED0  
                                          l4677 4158                                            l4757 3A30  
                                          l4749 39F4                                            l4837 30BC  
                                          l4773 3E56                                            l4765 3E14  
                                          l4941 1132                                            l4917 1004  
                                          l5477 48A0                                            l5485 433C  
                                          l5717 2ED8                                            l5709 2E64  
                                          l5661 2C3C                                            l5645 2BAC  
                                          l5653 2BF6                                            l5557 373E  
                                          l5549 36E6                                            l5741 35B0  
                                          l5821 387C                                            l5813 3854  
                                          l5805 3826                                            l5735 4892  
                                          l5727 488A                                            l5639 4AA8  
                                          l4695 3ABE                                            l4687 3A42  
                                          l5591 34B4                                            l5399 42E0  
                                          l5583 4946                                            l5575 492E  
                                          l4847 47FE                                            l4855 4594  
                                          l4599 3ED4                                            l4679 4168  
                                          l4791 3BD8                                            l4783 3B46  
                                          l4839 30D0                                            l4775 3E5A  
                                          l4767 3E22                                            l4951 11B4  
                                          l4943 1166                                            l4935 109E  
                                          l4919 1016                                            l4871 0E4A  
                                          l4863 0E1A                                            l5479 48C6  
                                          l5495 4196                                            l5487 4344  
                                          l5719 2EDC                                            l5671 2CEA  
                                          l5655 2C1C                                            l5663 2C66  
                                          l5647 2BB6                                            l5559 3760  
                                          l5567 37BC                                            l5751 3634  
                                          l5743 35C0                                            l5831 38E4  
                                          l5823 388E                                            l5815 385E  
                                          l5807 382A                                            l5737 4894  
                                          l5729 488C                                            l4697 3ACC  
                                          l4689 3A70                                            l5921 3570  
                                          l5593 34D4                                            l5577 492E  
                                          l4857 45C2                                            l4785 3B66  
                                          l4777 3E88                                            l4769 3E2E  
                                          l4953 11C6                                            l4961 1212  
                                          l4945 116E                                            l4937 10D2  
                                          l4929 104E                                            l4881 0EA0  
                                          l4873 0E6E                                            l4865 0E24  
                                          l5497 41AA                                            l5489 4366  
                                          l5681 2D60                                            l5673 2CF2  
                                          l5665 2C8C                                            l5657 2C26  
                                          l5649 2BC8                                            l5761 36D8  
                                          l5753 363C                                            l5745 35C6  
                                          l5841 391C                                            l5833 38E8  
                                          l5825 389E                                            l5817 386E  
                                          l5809 3840                                            l5739 489A  
                                          l4699 3ADE                                            l5595 34F8  
                                          l5587 3480                                            l5579 4930  
                                          l5771 4244                                            l4859 45C6  
                                          l4787 3BA4                                            l4795 3BE4  
                                          l4779 3E9C                                            l4971 1252  
                                          l4955 11D8                                            l4939 10D8  
                                          l4947 11A0                                            l4891 0ECE  
                                          l4883 0EB2                                            l4875 0E78  
                                          l4867 0E34                                            l5499 41B8  
                                          l5683 2D6A                                            l5691 2DAE  
                                          l5675 2D04                                            l5667 2CA0  
                                          l5659 2C38                                            l5763 36DE  
                                          l5755 366E                                            l5747 35CA  
                                          l5843 3920                                            l5835 38F4  
                                          l5827 38A4                                            l5819 3872  
                                          l5597 3520                                            l5589 3498  
                                          l5773 4276                                            l4797 3BF6  
                                          l4789 3BCC                                            l4981 12AE  
                                          l4973 1288                                            l4957 11E0  
                                          l4949 11B0                                            l4885 0EBE  
                                          l4893 0ED4                                            l4877 0E80  
                                          l4869 0E42                                            l5693 2DD4  
                                          l5685 2D7C                                            l5677 2D08  
                                          l5669 2CBC                                            l5917 37D2  
                                          l5757 3692                                            l5749 35DE  
                                          l5765 4A70                                            l5845 3932  
                                          l5837 3906                                            l5829 38B6  
                                          l5599 354E                                            l5775 4288  
                                          l5767 4230                                            l5919 3396  
                                          l4991 12F2                                            l4983 12C0  
                                          l4975 1290                                            l4967 1224  
                                          l4959 11FA                                            l4895 0EFA  
                                          l4887 0EC6                                            l4879 0E92  
                                          l5695 2DDE                                            l5687 2D80  
                                          l5679 2D32                                            l5759 36A6  
                                          l5839 390A                                            l5777 4290  
                                          l5769 4230                                            l4993 130A  
                                          l4985 12CE                                            l4969 1236  
                                          l4977 1294                                            l4889 0ECA  
                                          l5697 2DF0                                            l5689 2DAA  
                                          l5779 42C2                                            l4995 131C  
                                          l4987 12D2                                            l4979 129C  
                                          l4899 0F30                                            l5699 2DF4  
                                          l5795 3812                                            l4989 12E4  
                                          l4997 1324                                            l5797 3818  
                                          l4999 132C                                            l5799 381C  
                                          STR_1 0E01                                            STR_2 0E06  
                                          STR_3 0E0E                                            STR_6 0E0A  
                                          STR_7 0E12                                            u3000 1C22  
                                          u3001 1C1E                                            u3010 1C40  
                                          u3011 1C3C                                            u3100 1D90  
                                          u3020 1C60                                            u3101 1D8C  
                                          u3021 1C5C                                            _LATA 000F79  
                                          u3110 1DA0                                            u3030 1C6E  
                                          _LATB 000F7A                                            u3111 1D9C  
                                          u3031 1C6A                                            _LATC 000F7B  
                                          u3200 1E74                                            u3120 1DCC  
                                          u3040 1C7E                                            u4000 3E00  
                                          _LATD 000F7C                                            u3201 1E70  
                                          u3121 1DC8                                            u3041 1C7A  
                                          u4001 3DFC                                            _LATE 000F7D  
                                          u3210 1EAE                                            u3130 1DDC  
                                          u3050 1CB0                                            u4010 3E22  
                                          _LATF 000F7E                                            u3211 1EAA  
                                          u3131 1DD8                                            u3051 1CAC  
                                          u4011 3E1E                                            _LATG 000F7F  
                                          u3300 2806                                            u3220 1EC0  
                                          u3140 1DF8                                            u3060 1CBE  
                                          u4100 3C32                                            u4020 3E78  
                                          _LATH 000F80                                            u3301 2802  
                                          u3221 1EBC                                            u3141 1DF4  
                                          u3061 1CBA                                            u4021 3E74  
                                          u3310 2818                                            u3230 1ED0  
                                          u3150 1E08                                            u3070 1CDC  
                                          u4030 3E88                                            u4110 4516  
                                          u3311 2814                                            u3231 1ECC  
                                          u3151 1E04                                            u3071 1CD8  
                                          u4031 3E84                                            u3400 29D0  
                                          u3320 2828                                            u3240 1EF0  
                                          u3160 1E1A                                            u3080 1D14  
                                          u4040 3B86                                            u4200 300C  
                                          u4120 4528                                            u5000 2092  
                                          u3401 29CC                                            u3321 2824  
                                          u3241 1EEC                                            u3161 1E16  
                                          u3081 1D10                                            u4201 3008  
                                          u4121 4524                                            u3410 29F4  
                                          u3330 286C                                            u3250 1F02  
                                          u3170 1E30                                            u3090 1D5A  
                                          u4050 3BA4                                            u4210 3030  
                                          u4130 449C                                            u5010 20A8  
                                          u3411 29F0                                            u3331 2868  
                                          u3251 1EFE                                            u3171 1E2C  
                                          u3091 1D56                                            u4051 3BA0  
                                          u4131 4496                                            u5011 20A4  
                                          u5100 48EC                                            u3500 2B14  
                                          u3420 2A0A                                            u3340 287E  
                                          u3260 1F1E                                            u3180 1E46  
                                          u4060 3BCC                                            u4220 304C  
                                          u4140 449E                                            u4300 0E42  
                                          u5020 20DC                                            u5101 48E8  
                                          u3501 2B10                                            u3421 2A06  
                                          u3341 287A                                            u3261 1F1A  
                                          u3181 1E42                                            u4061 3BC8  
                                          u4045 3B7C                                            u4221 3048  
                                          u4117 450C                                            u4301 0E3E  
                                          u5021 20D8                                            u5110 312C  
                                          u3510 2B44                                            u3430 2A28  
                                          u3350 288E                                            u3190 1E5A  
                                          u4070 3BF6                                            u4230 30A0  
                                          u3270 478C                                            u4150 44B4  
                                          u4310 0E92                                            u5030 2120  
                                          u5111 3128                                            u3511 2B40  
                                          u3431 2A24                                            u3351 288A  
                                          u3191 1E56                                            u4071 3BF2  
                                          u4215 3026                                            u3271 4788  
                                          u4151 44B0                                            u4311 0E8E  
                                          u5031 211C                                            u3600 24A6  
                                          u5200 32BA                                            u5120 313A  
                                          u3520 2B72                                            u3440 2A48  
                                          u3360 28CE                                            u4240 30BC  
                                          u4160 2F50                                            u3280 47BE  
                                          u4400 0FFE                                            u4320 0EA0  
                                          u5040 2166                                            u3601 24A2  
                                          u5201 32B6                                            u5121 3136  
                                          u3521 2B6E                                            u3441 2A44  
                                          u3361 28CA                                            u4241 30B8  
                                          u3281 47B8                                            u4321 0E9C  
                                          u5041 2162                                            u3610 2620  
                                          u3530 23DC                                            u5130 3196  
                                          u3450 2A5A                                            u3370 290E  
                                          u4090 3C30                                            u4250 30F8  
                                          u4170 2F7E                                            u3290 47C0  
                                          u4410 1016                                            u4330 0EB2  
                                          u5050 2218                                            u5210 4400  
                                          u3531 23D8                                            u5131 3192  
                                          u3451 2A56                                            u3371 290A  
                                          u4091 3C2A                                            u4251 30F4  
                                          u4235 3096                                            u4171 2F7A  
                                          u4411 1012                                            u4331 0EAE  
                                          u5051 2214                                            u5211 43FC  
                                          u3700 2794                                            u3620 267A  
                                          u3540 23EE                                            u5140 31EC  
                                          u4260 482E                                            u3460 2A88  
                                          u3380 2984                                            u2900 1AAE  
                                          u4180 2FA0                                            u2820 4A4C  
                                          u4500 1252                                            u4420 109A  
                                          u4340 0EFA                                            u5060 2286  
                                          u5220 4366                                            u5300 2BAC  
                                          u3701 2790                                            u3621 2676  
                                          u3541 23EA                                            u5141 31E8  
                                          u4261 4828                                            u3461 2A84  
                                          u3381 2980                                            u2901 1AAA  
                                          u4085 3C08                                            u4181 2F9C  
                                          u4165 2F46                                            u2821 4A48  
                                          u4501 124E                                            u4421 1096  
                                          u4341 0EF6                                            u5061 2280  
                                          u5221 4362                                            u5301 2BA8  
                                          u3710 27CE                                            u3630 269A  
                                          u3550 23FE                                            u5150 3236  
                                          u4270 4830                                            u3470 2A9E  
                                          u3390 29A6                                            u2910 1AF0  
                                          u2830 3D38                                            u4510 1288  
                                          u4430 112E                                            u4350 0F28  
                                          u5070 2288                                            u5230 437E  
                                          u5310 2BF6                                            u3711 27CA  
                                          u3631 2696                                            u3615 2616  
                                          u3551 23FA                                            u5151 3232  
                                          u3471 2A9A                                            u3391 29A2  
                                          u2911 1AEC                                            u2831 3D34  
                                          u4511 1284                                            u4431 112A  
                                          u4351 0F22                                            u5231 437A  
                                          u5311 2BF2                                            u3640 26AC  
                                          u3560 243E                                            u5160 3254  
                                          u4280 4594                                            u3720 3EC8  
                                          u3800 4082                                            u3480 2AB2  
                                          u2920 1B06                                            u2840 3D4A  
                                          u4600 1512                                            u4520 12AE  
                                          u4440 11A0                                            u4360 0F2A  
                                          u5080 229E                                            u5240 41CA  
                                          u5400 2E44                                            u5320 2C1C  
                                          u3641 26A8                                            u3561 243A  
                                          u5161 3250                                            u4281 4590  
                                          u3721 3EC4                                            u3801 407E  
                                          u3481 2AAE                                            u2921 1B02  
                                          u2841 3D46                                            u4601 150E  
                                          u4521 12AA                                            u4441 119C  
                                          u5081 229A                                            u5241 41C6  
                                          u5401 2E40                                            u5321 2C18  
                                          u3650 26DA                                            u3570 2450  
                                          u5170 3264                                            u4290 45C2  
                                          u3730 3EE2                                            u3810 40A0  
                                          u3490 2ACC                                            u2930 1B18  
                                          u2850 3D72                                            u4610 1522  
                                          u4530 12C0                                            u4450 11C6  
                                          u4370 0F42                                            u5090 233E  
                                          u5250 41EC                                            u5410 2E8E  
                                          u5330 2C66                                            _T6PR 000FB0  
                                          u3651 26D6                                            u3571 244C  
                                          u5171 3260                                            u4291 45BE  
                                          u3731 3EDE                                            u3811 409C  
                                          u3491 2AC8                                            u2931 1B14  
                                          u4195 2FB4                                            u2851 3D6E  
                                          u4611 151E                                            u4531 12BC  
                                          u4451 11C2                                            u4371 0F3E  
                                          u5091 233A                                            u5251 41E8  
                                          u5411 2E8A                                            u5331 2C62  
                                          u3900 3AEC                                            u3660 26F0  
                                          u3580 2460                                            u5180 3272  
                                          u5500 42C2                                            u3740 3F08  
                                          u3820 40B6                                            u2940 1B28  
                                          u4196 2FBE                                            u2860 3DA8  
                                          u4700 1730                                            u4620 15BC  
                                          u4540 12CE                                            u4460 11D8  
                                          u4380 0FCE                                            u5260 41FE  
                                          u5420 2EBC                                            u5340 2C8C  
                                          _PMD0 000E4C                                            u3901 3AE8  
                                          u3661 26EC                                            u3581 245C  
                                          u5181 326E                                            u5501 42BE  
                                          u3741 3F04                                            u3821 40B2  
                                          u2941 1B24                                            u4197 2FCE  
                                          u2861 3DA4                                            u4701 172C  
                                          u4621 15B8                                            u4541 12CA  
                                          u4461 11D4                                            u4381 0FCA  
                                          u5261 41FA                                            u5421 2EB8  
                                          u5341 2C88                                            _PMD1 000E4D  
                                          u3910 3B3C                                            u3670 2704  
                                          u3590 2496                                            u5190 32AC  
                                          u3750 3F26                                            u3830 40DA  
                                          u2950 1B64                                            u2870 485E  
                                          u4710 1788                                            u4630 160A  
                                          u4550 12E4                                            u4470 11FA  
                                          u4390 0FFC                                            u5430 2F06  
                                          u5350 2D32                                            u5270 49F4  
                                          _PMD2 000E4E                                            u3911 3B38  
                                          u3671 2700                                            u3591 2492  
                                          u5191 32A8                                            u3751 3F22  
                                          u3831 40D6                                            u2951 1B60  
                                          u2871 485A                                            u4711 1784  
                                          u4631 1606                                            u4551 12E0  
                                          u4471 11F6                                            u4391 0FF6  
                                          u5431 2F02                                            u5351 2D2E  
                                          u5271 49F0                                            _PMD3 000E4F  
                                          u5280 4910                                            u3680 271E  
                                          u3760 3F42                                            u3840 411A  
                                          u3920 47DC                                            u2960 1B72  
                                          u2880 1A8C                                            u4800 19B0  
                                          u4720 185A                                            u4640 1632  
                                          u4560 12F2                                            u4480 1220  
                                          u5360 2D60                                            u5440 3634  
                                          u5600 391C                                            _PMD4 000E50  
                                          u5281 490C                                            u3681 271A  
                                          u3761 3F3E                                            u3841 4116  
                                          u3921 47D8                                            u2961 1B6E  
                                          u2881 1A88                                            u4801 19AC  
                                          u4721 1856                                            u4641 162E  
                                          u4561 12EE                                            u4481 121C  
                                          u5361 2D5C                                            u5441 3630  
                                          u5601 3918                                            _PMD5 000E51  
                                          u5290 4926                                            u3690 2766  
                                          u3770 3F68                                            u3850 4158  
                                          u2970 1BE0                                            u2890 1A9E  
                                          u3930 3952                                            u4810 1A0E  
                                          u4730 1876                                            u4650 16D6  
                                          u4570 131C                                            u4490 1236  
                                          u5370 2DAA                                            u5450 366E  
                                          u5291 4922                                            u3691 2762  
                                          u3771 3F64                                            u3851 4154  
                                          u2971 1BDC                                            u2891 1A9A  
                                          u3931 394E                                            u4811 1A08  
                                          u4731 1872                                            u4651 16D2  
                                          u4571 1318                                            u4491 1232  
                                          u5371 2DA6                                            u5451 366A  
                                          u4900 344C                                            u3780 404E  
                                          u3860 418C                                            u2980 1BF8  
                                          u3940 3986                                            u4820 1A10  
                                          u4740 1888                                            u4660 16E8  
                                          u4580 1464                                            u5380 2DD4  
                                          u5460 36A6                                            u5540 3840  
                                          u4901 3448                                            u3781 404A  
                                          u3861 4188                                            u2981 1BF2  
                                          u4741 1884                                            u4661 16E4  
                                          u4581 1460                                            u5381 2DD0  
                                          u5461 36A2                                            u5541 383C  
                                          u3870 3A70                                            u3790 4068  
                                          u2990 1BFA                                            u3950 39B4  
                                          u4830 1A26                                            u4750 1896  
                                          u4670 16FA                                            u4590 14CA  
                                          u4910 3C6E                                            u5390 2E1E  
                                          u5470 36D8                                            u5550 3850  
                                          u3871 3A6C                                            u3791 4064  
                                          u3951 39B0                                            u4831 1A22  
                                          u4751 1892                                            u4671 16F6  
                                          u4591 14C6                                            u4911 3C6A  
                                          u5391 2E1A                                            u5471 36D4  
                                          u5551 384C                                            u3880 3AAE  
                                          u5480 4276                                            u4840 330A  
                                          u3960 39C8                                            u4760 18CC  
                                          u4680 1708                                            u4920 3CA0  
                                          u5560 386E                                            u3881 3AAA  
                                          u5481 4272                                            u4841 3306  
                                          u3961 39C4                                            u3945 397C  
                                          u4761 18C8                                            u4681 1704  
                                          u4921 3C9C                                            u5617 3928  
                                          u5561 386A                                            u3890 3ACC  
                                          u5490 4288                                            u4850 3344  
                                          u3970 39F0                                            u4770 18FA  
                                          u4690 1722                                            u4930 3CC0  
                                          u5570 388E                                            u5627 4AAA  
                                          u3891 3AC8                                            u5491 4284  
                                          u4851 3340                                            u3971 39EC  
                                          u4771 18F6                                            u4691 171E  
                                          u4931 3CBC                                            u5571 388A  
                                          u4860 3360                                            u3980 3A10  
                                          u4780 197E                                            u4940 3CD2  
                                          u5580 38B6                                            u4861 335C  
                                          u3981 3A0C                                            u4781 197A  
                                          u4941 3CCE                                            u5581 38B2  
                                          u4870 3422                                            u3990 3A20  
                                          u4790 1998                                            u4950 3CFE  
                                          u5590 3906                         ?_sampleChargingCapArray 0032  
                                          u4871 341C                                            u3991 3A1C  
                                          u4791 1994                                            u4951 3CFA  
                                          u5591 3902                                            u4880 3424  
                                          u4960 1F5A                                            u4961 1F56  
                                          u4890 343A                                            u4970 1FA6  
                                          u4891 3436                                            u4971 1FA2  
                                          u4980 1FE4                                            u4981 1FE0  
                                          u4990 2090                                            u4991 208A  
                                          _TMR6 000FAF                                            _WPUA 000E91  
                                          _WPUB 000E99                                            _WPUC 000EA1  
                                          _WPUD 000EA6                                            _WPUE 000EAE  
                                          _WPUF 000EB3                                            _WPUG 000EBB  
                                          _WPUH 000EC0                             EUSART5_Write@txData 0001  
            _EUSART5_DefaultFramingErrorHandler 000000                                            _dbuf 010B  
                                          _atoi 32CE                                            _main 3812  
                                 _EUSART5_Write 4A3A                                            _prec 00F1  
                                          _nout 00ED                                            pad@i 001A  
                                          pad@p 0017                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 001C                                            fsr2l 000FD9  
                                          btemp 005F                                   ?_EUSART5_Read 0001  
                                 ___fpclassifyf 3B46                                            prodh 000FF4  
                                          prodl 000FF3                             ?_sampleTaskCapArray 0032  
                                          start 003E                                 ___fldiv@new_exp 0012  
                                  _tolower$2186 000D                                    ___param_bank 000000  
                          __size_of_getADCValue 006E                                           ??_pad 0019  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 4A6A  
                                 ___fltol@sign1 0009                              _eusart5RxLastError 00F9  
                                         _ADACQ 000F5C                                           _ADCAP 000F5D  
                                         _ADACT 000F56                                           ?_atoi 0008  
                               __end_of___fladd 1F32                                           ?_main 0001  
                                         _ADCLK 000F57                                           _ADCNT 000F67  
                                         _ADPCH 000F5F                                 __end_of___fldiv 2B86  
                                         _ADREF 000F58                                 __end_of___awdiv 3F7A  
                               __end_of___flneg 47FE                                           _ADPRE 000F5E  
                                         STR_10 0E16                                           STR_12 0E16  
                               __end_of___awmod 40EC                                           _ADRPT 000F66  
                               __end_of___flmul 27EC                                 __end_of___flsub 474A  
                               __end_of___fltol 3A42                                 ___awdiv@divisor 0003  
                                         _T6CON 000FB1                                           _T6HLT 000FB2  
                                         i2l505 4ABE                                           i2l433 003A  
                                         _T6TMR 000FAF                                           _T6RST 000FB4  
                          ??_sampleTaskCapArray 0036                                 ___awdiv@counter 0005  
                                         _OSCEN 000E47                                    vfpfcnvrt@fmt 0042  
                                         _TRISA 000F81                                           _TRISB 000F82  
                                         _TRISC 000F83                                           _TRISD 000F84  
                                         _TRISE 000F85                                           _TRISF 000F86  
                                         _TRISG 000F87                                           _TRISH 000F88  
                        getADCValue@getADCValue 0030                                _ConvertADCtoSend 48A0  
                              __end_of_TMR6_ISR 4AC0                                           _flags 00F3  
                __end_of_sampleChargingCapArray 4704                                           _msgOK 00FB  
                                         _fputc 3D26                                           _fputs 474A  
                               __end_of_isdigit 4836                                           atoi@n 0015  
                                         pad@fp 0013                                           atoi@s 0008  
                                         _width 00EF                                           _putch 4AC0  
                                         main@c 00DC                                 __end_of_isspace 45CE  
                               __end_of_isupper 47C6                                           tablat 000FF5  
                               executeCommand@i 00BC                                  ?_EUSART5_Write 0001  
                       ??_Caps8seriesConnection 0001                                           ttemp5 0060  
                                         ttemp6 0063                                           ttemp7 0067  
                                ??_EUSART5_Read 0001                                           status 000FD8  
                                         wtemp8 0060                                 __end_of_sprintf 457C  
                                ?___fpclassifyf 0001                                 __end_of_tolower 44CC  
                               __end_of_strncmp 3D26                        __size_of_delayedBrownOut 009A  
                               __initialization 440A                                    __end_of_atoi 3472  
                                  __end_of_main 393C                     ?_INTERRUPT_InterruptManager 0001  
                             ?_fastChargingcaps 0001                        __end_of_decoupleCapArray 4A00  
                                        ??_atoi 000A                                          ??_main 00C5  
                      ConvertADCtoSend@msgValue 00AC                              ??_fastChargingcaps 003A  
                                 __activetblptr 000003                       ??_EUSART5_SetErrorHandler 0004  
                                  ?_sampleEHvoc 0032                     _EUSART5_DefaultErrorHandler 000000  
                               _TMR6_Initialize 49C2                                          _ADACCH 000F71  
                                        _ADACCL 000F70                                          _ADCON0 000F60  
                                        _ADCON1 000F59                                          _ADCON2 000F5A  
                                        _ADCON3 000F5B                       __size_of_addCapToParallel 012C  
                                        _ADERRH 000F6F                                          _ADERRL 000F6E  
                                        ?_fputc 0003                            fastChargingcaps@vcap 003A  
                                        _ADLTHH 000F6B                                          _ADLTHL 000F6A  
                                        ?_fputs 000C                                          _ADRESH 000F64  
                                        _ADRESL 000F63                                          _ADSTAT 000F65  
                                        _ADUTHH 000F6D                                ___awdiv@dividend 0001  
                                        _ADUTHL 000F6C                                          _ANSELA 000E92  
                                        ?_putch 0001                                          _ANSELB 000E9A  
                                        _ANSELD 000EA7                                          _ANSELE 000EAF  
                                        _ANSELF 000EB4                                          _ANSELG 000EBC  
                                        _RC5REG 000EDC                     __size_of_isolatedOneTaskCap 0012  
                                        _RC5STA 000EE0                                          _ODCONA 000E90  
                                        _ODCONB 000E98                                          _ODCONC 000EA0  
                                        _RE2PPS 000E74                                          _ODCOND 000EA5  
                                        _ODCONE 000EAD                                          _ODCONF 000EB2  
                                        _ODCONG 000EBA                                          _ODCONH 000EBF  
                                        _INLVLA 000E8E                                          _INLVLB 000E96  
                                        _INLVLC 000E9E                                          _INLVLD 000EA3  
                                        _INLVLE 000EAB                                          _INLVLF 000EB0  
                                        _INLVLG 000EB8                                          _INLVLH 000EBD  
                                        i2l5635 4AB4                                          i2l5637 4AB8  
                                        i2l5791 0036                                          i2l5785 000A  
                                        i2l5787 0018                                          i2l5789 0028  
                                        _OSCFRQ 000E49                                          _RX5PPS 000E17  
                                        _TX5REG 000EDD                                          _TX5STA 000EE1  
                              __end_of___xxtofl 32CE                     __end_of_C_N_SWALLconnectGND 49A0  
                                  vfprintf@cfmt 005C                                          ___flge 3A42  
                                        ___fleq 40EC                                       ??___fladd 0009  
                                        ___wmul 4958                                       ??___fldiv 0009  
                                     ??___awdiv 0005                                       ??___flneg 0005  
                                     ??___awmod 0005                                       ??___flmul 0017  
                                     ??___flsub 0030                                       ??___fltol 0005  
                                        _efgtoa 0E1A                                          _floorf 2F08  
                                        _memcmp 4196                                          clear_0 444E  
                                        clear_1 445A                                ___awdiv@quotient 0007  
                               ___awmod@divisor 0003                                          isa$std 000001  
                               ___awmod@counter 0005                                          pad@buf 0015  
                   _EUSART5_FramingErrorHandler 0182                                          _strcmp 4338  
                                        _strcpy 44CC                                          _strlen 4836  
                               _ADCC_Initialize 45CE                                          fputc@c 0003  
                                _PMD_Initialize 4A1E                                          fputs@c 0010  
                                        fputs@i 0011                                          fputs@s 000C  
                                     ??_isdigit 0003                                 ___fpclassifyf@e 0009  
                               ___fpclassifyf@u 000B                                 ___fpclassifyf@x 0001  
                                  __mediumconst 0000                                       ??_isspace 0003  
                                        tblptrh 000FF7                                       ??_isupper 0003  
                                        tblptrl 000FF6                                          tblptru 000FF8  
             __size_of_ADCC_GetSingleConversion 002E                            _EUSART5_ErrorHandler 017C  
                              __end_of_vfprintf 440A                       ?_ADCC_GetSingleConversion 0001  
                                     ??_sprintf 005E                                       ??_tolower 0009  
                               ??_EUSART5_Write 0001                                       ??_strncmp 0007  
                 __size_of_INTERRUPT_Initialize 0004                                      ___flge@ff1 0028  
                                    ___flge@ff2 002C                                 ??___fpclassifyf 0005  
                                  ___xxtofl@arg 000B                                    ___xxtofl@exp 000A  
                             _SYSTEM_Initialize 4A00                                    ___xxtofl@val 0001  
                                    ___fleq@ff1 0001                                      ___fleq@ff2 0005  
                                    __accesstop 0060                         __end_of__initialization 4462  
                                    ___flneg@f1 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                      ___fltol@f1 0001  
                                __pcstackCOMRAM 0001                        __end_of_DectecLowVolatge 4AB4  
                                  __pidataBANK0 4ACE                                    __pidataBANK1 49A0  
                           ??_SYSTEM_Initialize 0004                     __end_of_isolateCapsToSeries 35B0  
                    __end_of_EUSART5_Initialize 466C                                       ?_TMR6_ISR 0001  
                                 __end_of_fputc 3DF0                                   __end_of_fputs 478E  
                             ??_delayedBrownOut 003A                                   __end_of_putch 4ACA  
                       __end_of_TMR6_Initialize 49E2                          __end_of_PMD_Initialize 4A3A  
                          __end_of_EUSART5_Read 492E                            _capTaskParalle_count 00F5  
                                       ??_fputc 0007                       __end_of_SYSTEM_Initialize 4A1E  
                                       ??_fputs 0010                                         ??_putch 0002  
                       __size_of_executeCommand 0382                                      __pbssBANK0 00DD  
                                    __pbssBANK1 0100                        __end_of_ConvertADCtoSend 48D2  
              ??_EUSART5_SetFramingErrorHandler 0004                 ?_EUSART5_SetFramingErrorHandler 0001  
                              _capParalle_count 00FF                                         ?___flge 0028  
                                       ?___fleq 0001                                         ?___wmul 0001  
                       __end_of_ADCC_Initialize 461E                                      ??_TMR6_ISR 0001  
                                       ?_efgtoa 0034                                         _ADFLTRH 000F73  
                                       ?_floorf 001A                                         _ADFLTRL 000F72  
                                       ?_memcmp 0001                                         _ADPREVH 000F62  
                                       _ADPREVL 000F61                                         _ADSTPTH 000F69  
                                       _ADSTPTL 000F68                                 ?_PMD_Initialize 0001  
                                       ?_strcmp 0001                                         ?_strcpy 0001  
                                       ?_strlen 0001                           executeCommand@command 00B4  
                                     ?___xxtofl 0001                                 _capSeries_count 00FE  
                                       _SP5BRGH 000EDF                                         _SP5BRGL 000EDE  
                                       _OSCCON1 000E43                                         _OSCCON3 000E45  
                            __size_of_vfpfcnvrt 0490                            __size_of_sampleEHvoc 004C  
                                       _OSCTUNE 000E48                                         _SLRCONA 000E8F  
                                       _SLRCONB 000E97                                         _SLRCONC 000E9F  
                                       _SLRCOND 000EA4                                         _SLRCONE 000EAC  
                                       _SLRCONF 000EB1                                         _SLRCONG 000EB9  
                                       _SLRCONH 000EBE                                _addCapToParallel 36E6  
                             _Flag5sfastcharing 00FA                  __size_of_Caps8seriesConnection 0034  
                 __end_of_Caps8seriesConnection 48A0                                         __Hparam 0000  
                                 ??_getADCValue 002C                                         __Lparam 0000  
                               __size_of___flge 0104                                 __size_of___fleq 00AA  
                                       ___fladd 1A72                                         ___fldiv 27EC  
                                       ___awdiv 3EB6                                         ___flneg 47C6  
                                       ___awmod 403C                                         ___flmul 23C2  
                                       ___flsub 4704                                         ___fltol 393C  
                               __size_of___wmul 0026                                       ?_vfprintf 0056  
                                  __psmallconst 0E00                                 __size_of_efgtoa 0C58  
                               __size_of_floorf 0212                                         __pcinit 440A  
                               __size_of_memcmp 009A                                ?_TMR6_Initialize 0001  
                                       __ramtop 0E00                               ?_decoupleCapArray 0001  
                                       __ptext0 3812                                         __ptext1 4A6A  
                                       __ptext2 35B0                                         __ptext3 466C  
                                       __ptext4 46B8                                         __ptext5 49E2  
                                       __ptext6 36E6                                         __ptext7 2B86  
                                       __ptext8 4338                                         __ptext9 4196  
                               __size_of_strcmp 006C                                 __size_of_strcpy 005E  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 4A52  
                            ??_decoupleCapArray 0001                     __size_of_sampleTaskCapArray 002A  
                                  __size_of_pad 00C6                                         _isdigit 47FE  
                                    ??___xxtofl 0005                                ___awmod@dividend 0001  
                      ??_PIN_MANAGER_Initialize 0001                                         _isspace 457C  
                                       _isupper 478E                                         efgtoa@c 003A  
                                       efgtoa@d 0078                                         efgtoa@e 0090  
                                       efgtoa@f 0036                                         efgtoa@g 008C  
                                       efgtoa@h 0082                                         efgtoa@i 008A  
                                       efgtoa@l 0086                                         efgtoa@m 0072  
                                       efgtoa@n 0092                                         efgtoa@p 007C  
                                       efgtoa@t 006C                                         efgtoa@u 0094  
                                       efgtoa@w 007E                                       _T6CONbits 000FB1  
                                       atoi@neg 000E                                       _T6HLTbits 000FB2  
                    __size_of_SYSTEM_Initialize 001E                                         _sprintf 452A  
                                       _tolower 446C                                         _strncmp 3C44  
                          end_of_initialization 4462                       __size_of_fastChargingcaps 0136  
                                       floorf@e 0028                                         floorf@m 0024  
                                       floorf@u 002A                                         floorf@x 001A  
                                       memcmp@l 0009                                         memcmp@n 0005  
                                       memcmp@r 000B                                         fputc@fp 0005  
                                       fputs@fp 000E                                       _T6RSTbits 000FB4  
                             __end_of_vfpfcnvrt 23C2                                      efgtoa@mode 0081  
                                    efgtoa@sign 007A                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART5_Read 002E                                ?_ADCC_Initialize 0001  
                                    ??_vfprintf 005C                __end_of_ADCC_GetSingleConversion 4900  
                                       strcmp@l 0001                                         strcmp@r 0003  
                                       strcpy@d 0009                                         strlen@a 0003  
                                       strcpy@s 0007                                         strlen@s 0001  
                           __end_of_getADCValue 4338                                     ___fladd@grs 0010  
                                 ___xxtofl@sign 0009                      __end_of_isolatedOneTaskCap 4A7C  
                                   ___fldiv@grs 0014                                     ___fldiv@rem 000D  
                                _executeCommand 2B86                                     ___flmul@grs 001C  
                               _delayedBrownOut 4230                                    _EUSART5_Read 4900  
                             ?_DectecLowVolatge 0001                    __end_of_INTERRUPT_Initialize 4ACE  
                                __end_of___flge 3B46                                  __end_of___fleq 4196  
                      ?_EUSART5_SetErrorHandler 0001                                     vfpfcnvrt@ap 0044  
                                   vfpfcnvrt@ct 0052                                     vfpfcnvrt@fp 0040  
                                __end_of___wmul 497E                              ??_DectecLowVolatge 0001  
                                __end_of_efgtoa 1A72                    __size_of_C_N_SWALLconnectGND 0022  
                             __size_of_TMR6_ISR 000C                                  __end_of_floorf 311A  
                                __end_of_memcmp 4230                          ?_OSCILLATOR_Initialize 0001  
                                    floorf@F527 0100                      sampleChargingCapArray@vcap 0036  
                      ??_sampleChargingCapArray 0036                                  __end_of_strcmp 43A4  
                                __end_of_strcpy 452A                                  __end_of_strlen 486C  
                           start_initialization 440A                              _EUSART5_Initialize 461E  
               __size_of_PIN_MANAGER_Initialize 00C2                          __end_of_executeCommand 2F08  
                                   __end_of_pad 3EB6                                     putch@txData 0002  
                           ?_EUSART5_Initialize 0001                           __end_of_EUSART5_Write 4A52  
                         __end_of___fpclassifyf 3C44                                     _getADCValue 42CA  
                                   vfprintf@fmt 0058                               ?_ConvertADCtoSend 00A8  
                                      ??___flge 0030                                        ??___fleq 0009  
                              ??_PMD_Initialize 0001                                        ??___wmul 0005  
                      __end_of_addCapToParallel 3812          __end_of_EUSART5_SetOverrunErrorHandler 4A8A  
       __size_of_EUSART5_SetOverrunErrorHandler 000E                  _EUSART5_SetOverrunErrorHandler 4A7C  
                                      ??_efgtoa 003B                              ??_ConvertADCtoSend 005E  
                                   __pdataBANK0 00FB                                     __pdataBANK1 015B  
                                      ??_floorf 001E                                        ??_memcmp 0007  
                          ??_EUSART5_Initialize 0004              _EUSART5_DefaultOverrunErrorHandler 000000  
                                      ??_strcmp 0005                                        ??_strcpy 0005  
                                      ??_strlen 0003                                       ___fladd@a 0005  
                                     ___fladd@b 0001                    __size_of_isolateCapsToSeries 013E  
                      _ADCC_GetSingleConversion 48D2                                       ___fldiv@a 0005  
                                     ___fldiv@b 0001                                       ___flmul@a 0013  
                                     ___flmul@b 000F                                     __pbssCOMRAM 005E  
                                     ___flsub@a 002C                                       ___flsub@b 0028  
                                 __pcstackBANK0 0060                           decoupleCapArray@state 0001  
                               ?_executeCommand 00B4                               __size_of___xxtofl 01B4  
                       __end_of_delayedBrownOut 42CA                                _fastChargingcaps 35B0  
                                     _cap_count 00F6                          sampleTaskCapArray@vcap 0036  
                                     _atoi$2093 0010                                       _atoi$2094 0014  
                                     _atoi$2095 0012                           _TMR6_InterruptHandler 0108  
                                     __pnvBANK0 00FE                                       __pnvBANK1 017C  
                          executeCommand@i_1120 00C0                            executeCommand@i_1121 00C1  
                          executeCommand@i_1122 00C2                            executeCommand@i_1116 00BD  
                          executeCommand@i_1118 00BE                            executeCommand@i_1119 00BF  
                                   _efgtoa$2030 0062                                     _efgtoa$2040 0068  
                                   _efgtoa$2041 006A                                     _efgtoa$2035 0064  
                                   _efgtoa$2029 0060                                     _efgtoa$2039 0066  
                        _PIN_MANAGER_Initialize 3F7A                 __end_of_EUSART5_SetErrorHandler 4AA6  
                                     __pintcode 0008                 ADCC_GetSingleConversion@channel 0005  
                                      ?___fladd 0001                                        ?___fldiv 0001  
                                      ?___awdiv 0001                                        ?___flneg 0001  
                                      ?___awmod 0001                                        ?___flmul 000F  
                                      ?___flsub 0028                                        ?___fltol 0001  
                                     _command11 016C                                       _command12 0179  
                                     _command20 0168                                       _command13 0176  
                                     _command14 0161                                       _command16 0173  
                                     _command17 0170                                       _command18 015E  
                                     _command19 015B                    ??_INTERRUPT_InterruptManager 0001  
                             __size_of_vfprintf 0066                                   ??_sampleEHvoc 0036  
                                      _BAUD5CON 000EE2                                     __smallconst 0E00  
               __size_of_sampleChargingCapArray 004C                                        ?_isdigit 0001  
                                      ?_isspace 0001                                        ?_isupper 0001  
                                      ?_sprintf 0098                                        ?_tolower 0007  
                                __size_of_fputc 00CA                                  __size_of_fputs 0044  
                                      ?_strncmp 0001                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 4ACA                                        _T6CLKCON 000FB3  
                     __size_of_decoupleCapArray 001E                                  ___wmul@product 0005  
                                      _LATAbits 000F79         EUSART5_SetErrorHandler@interruptHandler 0001  
                                      _LATBbits 000F7A                                        _LATDbits 000F7C  
                                      _LATEbits 000F7D                                        _LATFbits 000F7E  
                                      _LATGbits 000F7F                                        _LATHbits 000F80  
                                      _PIE5bits 000E2E                          executeCommand@msgValue 00C3  
                                     _vcap_prev 00E1             __size_of_INTERRUPT_InterruptManager 0036  
                                      i2u551_40 0018                                        i2u551_41 0014  
                                      _PIR4bits 000E37                                        i2u552_40 0028  
                                      i2u552_41 0024                                        i2u553_40 0036  
                                      i2u553_41 0032                                        _PIR5bits 000E38  
                         _Caps8seriesConnection 486C                                        _TMR6_ISR 4AB4  
                                     _vfpfcnvrt 1F32                      __end_of_sampleTaskCapArray 4958  
                                    _ADCON0bits 000F60                                      _ADCON1bits 000F59  
                                    _ADCON2bits 000F5A                                  _DectecLowVFlag 00F7  
                                    _ADCON3bits 000F5B                               ___wmul@multiplier 0001  
                                     main@index 00DB                                    _isolatedflag 00F8  
                                  _isspace$2124 0007                        __size_of_TMR6_Initialize 0020  
                                    vfpfcnvrt@c 0055                                      vfpfcnvrt@f 004E  
                          getADCValue@ADC_float 002C                                ?_delayedBrownOut 0001  
                           __end_of_sampleEHvoc 46B8                                       copy_data0 441E  
                         ?_INTERRUPT_Initialize 0001                             _C_N_SWALLconnectGND 497E  
                   _EUSART5_OverrunErrorHandler 017F                          _sampleChargingCapArray 46B8  
                                    _ADSTATbits 000F65                              _isolatedOneTaskCap 4A6A  
                                      __Hrparam 0000                                      vfprintf@ap 005A  
                                      __Lrparam 0000                                      vfprintf@fp 0056  
                       ??_OSCILLATOR_Initialize 0001                                __size_of___fladd 04C0  
                              __size_of___fldiv 039A                                __size_of___awdiv 00C4  
                              __size_of___flneg 0038                             ?_isolatedOneTaskCap 0001  
                              __size_of___awmod 00B0                                __size_of___flmul 042A  
                              __size_of___flsub 0046                                __size_of___fltol 0106  
                                    ?_vfpfcnvrt 0040                                  sampleEHvoc@voc 0036  
                          ?_C_N_SWALLconnectGND 0001                              ___fpclassifyf@F465 0104  
                                  _vcap_current 00DD                                      sprintf@fmt 009A  
                                      ___xxtofl 311A                        __size_of_ADCC_Initialize 0050  
                              __size_of_isdigit 0038                                __size_of_isspace 0052  
                     __size_of_DectecLowVolatge 000E                                        __ptext10 48A0  
                                      __ptext11 452A                                        __ptext20 4836  
                                      __ptext12 43A4                                        __ptext21 474A  
                                      __ptext13 1F32                                        __ptext30 47C6  
                                      __ptext22 3D26                                        __ptext14 3C44  
                                      __ptext31 40EC                                        __ptext23 4AC0  
                                      __ptext15 0E1A                                        __ptext40 492E  
                                      __ptext32 27EC                                        __ptext24 4A3A  
                                      __ptext16 446C                                        __ptext41 42CA  
                                      __ptext33 403C                                        __ptext25 2F08  
                                      __ptext17 478E                                        __ptext50 3F7A  
                                      __ptext42 311A                                        __ptext34 3EB6  
                                      __ptext26 3B46                                        __ptext18 44CC  
                                      __ptext51 4A52                                        __ptext43 23C2  
                                      __ptext35 32CE                                        __ptext27 393C  
                                      __ptext19 3DF0                                        __ptext60 486C  
                                      __ptext52 4ACA                                        __ptext44 48D2  
                                      __ptext36 457C                                        __ptext28 4704  
                                      __ptext61 497E                                        __ptext53 461E  
                                      __ptext45 3472                                        __ptext37 47FE  
                                      __ptext29 1A72                                        __ptext54 4A7C  
                                      __ptext46 3A42                                        __ptext38 4958  
                                      __ptext63 4AB4                                        __ptext55 4A8A  
                                      __ptext47 4A00                                        __ptext39 4230  
                                      __ptext56 4A98                                        __ptext48 49C2  
                                      __ptext57 45CE                                        __ptext49 4A1E  
                                      __ptext58 4900                                        __ptext59 4AA6  
                              __size_of_isupper 0038                __size_of_EUSART5_SetErrorHandler 000E  
                           _capTaskSeries_count 005E                            ??_isolatedOneTaskCap 0001  
                              __size_of_sprintf 0052                                __size_of_tolower 0060  
                                    strcpy@dest 0001                                __size_of_strncmp 00E2  
                                 __size_of_atoi 01A4                                   __size_of_main 012A  
                           _isolateCapsToSeries 3472                          ?_Caps8seriesConnection 0001  
                                  ?_getADCValue 0028                                        efgtoa@fp 0034  
                                      efgtoa@ne 0070                                        efgtoa@pp 006E  
                                      efgtoa@ou 0074  EUSART5_SetOverrunErrorHandler@interruptHandler 0001  
                                      isa$xinst 000000                      ??_ADCC_GetSingleConversion 0003  
                                      int$flags 005F                                      _RC5STAbits 000EE0  
                                      _voc_prev 00E9                               ?_addCapToParallel 0001  
                                      _vfprintf 43A4                        __end_of_fastChargingcaps 36E6  
            __end_of_INTERRUPT_InterruptManager 003E                      _INTERRUPT_InterruptManager 0008  
                         ??_C_N_SWALLconnectGND 0001                              ??_addCapToParallel 0001  
                              ??_executeCommand 00B6                ConvertADCtoSend@convertedValue01 00A8  
                          ?_isolateCapsToSeries 0001                                     _sampleEHvoc 466C  
                                _vfpfcnvrt$2055 004A                                  _vfpfcnvrt$2059 004C  
                                    _INTCONbits 000FF2                                        memcmp@vl 0001  
                                      memcmp@vr 0003                       __size_of_ConvertADCtoSend 0032  
              ??_EUSART5_SetOverrunErrorHandler 0004                 ?_EUSART5_SetOverrunErrorHandler 0001  
                                      isdigit@c 0001                          ??_INTERRUPT_Initialize 0001  
                                      intlevel2 0000                                       sprintf@ap 00A0  
                              _decoupleCapArray 49E2                                        isspace@c 0001  
                       ?_PIN_MANAGER_Initialize 0001                               ??_TMR6_Initialize 0001  
                                     strcpy@src 0003                                        isupper@c 0001  
                                     strncmp@_l 0001                                       strncmp@_r 0003  
                                   efgtoa@nmode 0080  EUSART5_SetFramingErrorHandler@interruptHandler 0001  
                                   ??_vfpfcnvrt 0046                     __size_of_EUSART5_Initialize 004E  
                  executeCommand@ADCValue_float 00B8                          __size_of_EUSART5_Write 0018  
                         ??_isolateCapsToSeries 0001                                        sprintf@f 00A2  
                                      tolower@c 0007                                        sprintf@s 0098  
                        __size_of___fpclassifyf 00FE                                        strncmp@l 0008  
                                      strncmp@n 0005                                        strncmp@r 000A  
                                 ___fladd@signs 000D                  __end_of_PIN_MANAGER_Initialize 403C  
                             ??_ADCC_Initialize 0001                                      _TX5STAbits 000EE1  
                           delayedBrownOut@vcap 003A                                    ___fladd@aexp 000E  
                                  ___fladd@bexp 000F                                     _voc_current 00E5  
