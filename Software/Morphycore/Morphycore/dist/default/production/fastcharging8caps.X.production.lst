

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 07 12:54:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83  0000                     
    84                           ; Version 2.20
    85                           ; Generated 05/05/2020 GMT
    86                           ; 
    87                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18LF67K40 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119 ;; Function _EUSART5_DefaultFramingErrorHandler is unused but had its address taken
   120  0000                     
   121 ;; Function _EUSART5_DefaultOverrunErrorHandler is unused but had its address taken
   122  0000                     
   123 ;; Function _EUSART5_DefaultErrorHandler is unused but had its address taken
   124  0000                     
   125                           	psect	idataBANK0
   126  013DE8                     __pidataBANK0:
   127                           	callstack 0
   128                           
   129                           ;initializer for _command11
   130  013DE8  00                 	db	0
   131  013DE9  31                 	db	49
   132  013DEA  31                 	db	49
   133  013DEB  0A                 	db	10
   134                           
   135                           ;initializer for _command20
   136  013DEC  32                 	db	50
   137  013DED  30                 	db	48
   138  013DEE  0A                 	db	10
   139                           
   140                           ;initializer for _command19
   141  013DEF  31                 	db	49
   142  013DF0  39                 	db	57
   143  013DF1  0A                 	db	10
   144                           
   145                           ;initializer for _command18
   146  013DF2  31                 	db	49
   147  013DF3  38                 	db	56
   148  013DF4  0A                 	db	10
   149                           
   150                           ;initializer for _command17
   151  013DF5  31                 	db	49
   152  013DF6  37                 	db	55
   153  013DF7  0A                 	db	10
   154                           
   155                           ;initializer for _command16
   156  013DF8  31                 	db	49
   157  013DF9  36                 	db	54
   158  013DFA  0A                 	db	10
   159                           
   160                           ;initializer for _command12
   161  013DFB  31                 	db	49
   162  013DFC  32                 	db	50
   163  013DFD  0A                 	db	10
   164                           
   165                           ;initializer for _command14
   166  013DFE  31                 	db	49
   167  013DFF  34                 	db	52
   168  013E00  2C                 	db	44
   169  013E01  32                 	db	50
   170  013E02  2E                 	db	46
   171  013E03  30                 	db	48
   172  013E04  0A                 	db	10
   173                           
   174                           ;initializer for _command13
   175  013E05  31                 	db	49
   176  013E06  33                 	db	51
   177  013E07  0A                 	db	10
   178                           
   179                           ;initializer for _msgOK
   180  013E08  30                 	db	48
   181  013E09  0A                 	db	10
   182  013E0A  00                 	db	0
   183                           
   184                           	psect	nvBANK0
   185  0000FF                     __pnvBANK0:
   186                           	callstack 0
   187  0000FF                     _capParalle_count:
   188                           	callstack 0
   189  0000FF                     	ds	1
   190                           
   191                           	psect	nvBANK1
   192  000150                     __pnvBANK1:
   193                           	callstack 0
   194  000150                     _EUSART5_ErrorHandler:
   195                           	callstack 0
   196  000150                     	ds	3
   197  000153                     _EUSART5_OverrunErrorHandler:
   198                           	callstack 0
   199  000153                     	ds	3
   200  000156                     _EUSART5_FramingErrorHandler:
   201                           	callstack 0
   202  000156                     	ds	3
   203  000159                     _capSeries_count:
   204                           	callstack 0
   205  000159                     	ds	1
   206  0000                     _PIR5bits	set	3640
   207  0000                     _PIE5bits	set	3630
   208  0000                     _TX5REG	set	3805
   209  0000                     _RC5REG	set	3804
   210  0000                     _RC5STAbits	set	3808
   211  0000                     _TX5STAbits	set	3809
   212  0000                     _PIR4bits	set	3639
   213  0000                     _SP5BRGH	set	3807
   214  0000                     _SP5BRGL	set	3806
   215  0000                     _TX5STA	set	3809
   216  0000                     _RC5STA	set	3808
   217  0000                     _BAUD5CON	set	3810
   218  0000                     _RX5PPS	set	3607
   219  0000                     _RE2PPS	set	3700
   220  0000                     _INLVLH	set	3773
   221  0000                     _INLVLG	set	3768
   222  0000                     _INLVLF	set	3760
   223  0000                     _INLVLE	set	3755
   224  0000                     _INLVLD	set	3747
   225  0000                     _INLVLC	set	3742
   226  0000                     _INLVLB	set	3734
   227  0000                     _INLVLA	set	3726
   228  0000                     _SLRCONH	set	3774
   229  0000                     _SLRCONG	set	3769
   230  0000                     _SLRCONF	set	3761
   231  0000                     _SLRCONE	set	3756
   232  0000                     _SLRCOND	set	3748
   233  0000                     _SLRCONC	set	3743
   234  0000                     _SLRCONB	set	3735
   235  0000                     _SLRCONA	set	3727
   236  0000                     _ODCOND	set	3749
   237  0000                     _ODCONC	set	3744
   238  0000                     _ODCONH	set	3775
   239  0000                     _ODCONB	set	3736
   240  0000                     _ODCONG	set	3770
   241  0000                     _ODCONA	set	3728
   242  0000                     _ODCONF	set	3762
   243  0000                     _ODCONE	set	3757
   244  0000                     _WPUH	set	3776
   245  0000                     _WPUC	set	3745
   246  0000                     _WPUA	set	3729
   247  0000                     _WPUG	set	3771
   248  0000                     _WPUB	set	3737
   249  0000                     _WPUE	set	3758
   250  0000                     _WPUF	set	3763
   251  0000                     _WPUD	set	3750
   252  0000                     _ANSELA	set	3730
   253  0000                     _ANSELF	set	3764
   254  0000                     _ANSELG	set	3772
   255  0000                     _ANSELE	set	3759
   256  0000                     _ANSELB	set	3738
   257  0000                     _ANSELD	set	3751
   258  0000                     _PMD5	set	3665
   259  0000                     _PMD4	set	3664
   260  0000                     _PMD3	set	3663
   261  0000                     _PMD2	set	3662
   262  0000                     _PMD1	set	3661
   263  0000                     _PMD0	set	3660
   264  0000                     _OSCTUNE	set	3656
   265  0000                     _OSCFRQ	set	3657
   266  0000                     _OSCEN	set	3655
   267  0000                     _OSCCON3	set	3653
   268  0000                     _OSCCON1	set	3651
   269  0000                     _ADCON1bits	set	3929
   270  0000                     _ADCON2bits	set	3930
   271  0000                     _ADCON3bits	set	3931
   272  0000                     _ADACQ	set	3932
   273  0000                     _ADCLK	set	3927
   274  0000                     _ADACT	set	3926
   275  0000                     _ADREF	set	3928
   276  0000                     _ADCON3	set	3931
   277  0000                     _ADCON2	set	3930
   278  0000                     _ADCON1	set	3929
   279  0000                     _ADPRE	set	3934
   280  0000                     _ADCAP	set	3933
   281  0000                     _ADPCH	set	3935
   282  0000                     _LATDbits	set	3964
   283  0000                     _LATBbits	set	3962
   284  0000                     _LATAbits	set	3961
   285  0000                     _LATFbits	set	3966
   286  0000                     _LATGbits	set	3967
   287  0000                     _LATEbits	set	3965
   288  0000                     _LATHbits	set	3968
   289  0000                     _PR6	set	4016
   290  0000                     _TMR6	set	4015
   291  0000                     _T6CONbits	set	4017
   292  0000                     _T6RSTbits	set	4020
   293  0000                     _T6HLTbits	set	4018
   294  0000                     _T6CON	set	4017
   295  0000                     _T6TMR	set	4015
   296  0000                     _T6PR	set	4016
   297  0000                     _T6RST	set	4020
   298  0000                     _T6HLT	set	4018
   299  0000                     _T6CLKCON	set	4019
   300  0000                     _INTCONbits	set	4082
   301  0000                     _ADERRL	set	3950
   302  0000                     _ADERRH	set	3951
   303  0000                     _ADPREVL	set	3937
   304  0000                     _ADPREVH	set	3938
   305  0000                     _ADFLTRL	set	3954
   306  0000                     _ADFLTRH	set	3955
   307  0000                     _ADSTATbits	set	3941
   308  0000                     _ADACCL	set	3952
   309  0000                     _ADACCH	set	3953
   310  0000                     _ADCNT	set	3943
   311  0000                     _ADRESL	set	3939
   312  0000                     _ADRESH	set	3940
   313  0000                     _ADCON0bits	set	3936
   314  0000                     _ADCON0	set	3936
   315  0000                     _ADSTAT	set	3941
   316  0000                     _ADRPT	set	3942
   317  0000                     _ADSTPTH	set	3945
   318  0000                     _ADSTPTL	set	3944
   319  0000                     _ADUTHH	set	3949
   320  0000                     _ADUTHL	set	3948
   321  0000                     _ADLTHH	set	3947
   322  0000                     _ADLTHL	set	3946
   323  0000                     _TRISD	set	3972
   324  0000                     _TRISC	set	3971
   325  0000                     _TRISH	set	3976
   326  0000                     _TRISB	set	3970
   327  0000                     _TRISG	set	3975
   328  0000                     _TRISA	set	3969
   329  0000                     _TRISF	set	3974
   330  0000                     _TRISE	set	3973
   331  0000                     _LATH	set	3968
   332  0000                     _LATC	set	3963
   333  0000                     _LATG	set	3967
   334  0000                     _LATB	set	3962
   335  0000                     _LATF	set	3966
   336  0000                     _LATA	set	3961
   337  0000                     _LATD	set	3964
   338  0000                     _LATE	set	3965
   339                           
   340                           	psect	mediumconst
   341  00FDD0                     __pmediumconst:
   342                           	callstack 0
   343  00FDD0  00                 	db	0
   344  00FDD1                     STR_24:
   345                           
   346                           ; BSR set to: 0
   347  00FDD1  0D                 	db	13
   348  00FDD2  0A                 	db	10
   349  00FDD3  20                 	db	32
   350  00FDD4  4E                 	db	78	;'N'
   351  00FDD5  6F                 	db	111	;'o'
   352  00FDD6  77                 	db	119	;'w'
   353  00FDD7  20                 	db	32
   354  00FDD8  74                 	db	116	;'t'
   355  00FDD9  68                 	db	104	;'h'
   356  00FDDA  65                 	db	101	;'e'
   357  00FDDB  20                 	db	32
   358  00FDDC  76                 	db	118	;'v'
   359  00FDDD  6F                 	db	111	;'o'
   360  00FDDE  6C                 	db	108	;'l'
   361  00FDDF  61                 	db	97	;'a'
   362  00FDE0  74                 	db	116	;'t'
   363  00FDE1  67                 	db	103	;'g'
   364  00FDE2  65                 	db	101	;'e'
   365  00FDE3  20                 	db	32
   366  00FDE4  6F                 	db	111	;'o'
   367  00FDE5  66                 	db	102	;'f'
   368  00FDE6  20                 	db	32
   369  00FDE7  74                 	db	116	;'t'
   370  00FDE8  68                 	db	104	;'h'
   371  00FDE9  65                 	db	101	;'e'
   372  00FDEA  20                 	db	32
   373  00FDEB  70                 	db	112	;'p'
   374  00FDEC  61                 	db	97	;'a'
   375  00FDED  72                 	db	114	;'r'
   376  00FDEE  61                 	db	97	;'a'
   377  00FDEF  6C                 	db	108	;'l'
   378  00FDF0  6C                 	db	108	;'l'
   379  00FDF1  65                 	db	101	;'e'
   380  00FDF2  72                 	db	114	;'r'
   381  00FDF3  20                 	db	32
   382  00FDF4  63                 	db	99	;'c'
   383  00FDF5  61                 	db	97	;'a'
   384  00FDF6  70                 	db	112	;'p'
   385  00FDF7  73                 	db	115	;'s'
   386  00FDF8  20                 	db	32
   387  00FDF9  69                 	db	105	;'i'
   388  00FDFA  73                 	db	115	;'s'
   389  00FDFB  20                 	db	32
   390  00FDFC  75                 	db	117	;'u'
   391  00FDFD  70                 	db	112	;'p'
   392  00FDFE  20                 	db	32
   393  00FDFF  74                 	db	116	;'t'
   394  00FE00  6F                 	db	111	;'o'
   395  00FE01  20                 	db	32
   396  00FE02  33                 	db	51	;'3'
   397  00FE03  2E                 	db	46
   398  00FE04  33                 	db	51	;'3'
   399  00FE05  76                 	db	118	;'v'
   400  00FE06  20                 	db	32
   401  00FE07  0D                 	db	13
   402  00FE08  0A                 	db	10
   403  00FE09  00                 	db	0
   404  00FE0A                     STR_9:
   405                           
   406                           ; BSR set to: 0
   407  00FE0A  0D                 	db	13
   408  00FE0B  0A                 	db	10
   409  00FE0C  20                 	db	32
   410  00FE0D  43                 	db	67	;'C'
   411  00FE0E  41                 	db	65	;'A'
   412  00FE0F  50                 	db	80	;'P'
   413  00FE10  31                 	db	49	;'1'
   414  00FE11  32                 	db	50	;'2'
   415  00FE12  33                 	db	51	;'3'
   416  00FE13  34                 	db	52	;'4'
   417  00FE14  35                 	db	53	;'5'
   418  00FE15  36                 	db	54	;'6'
   419  00FE16  37                 	db	55	;'7'
   420  00FE17  38                 	db	56	;'8'
   421  00FE18  20                 	db	32
   422  00FE19  69                 	db	105	;'i'
   423  00FE1A  6E                 	db	110	;'n'
   424  00FE1B  20                 	db	32
   425  00FE1C  70                 	db	112	;'p'
   426  00FE1D  61                 	db	97	;'a'
   427  00FE1E  72                 	db	114	;'r'
   428  00FE1F  61                 	db	97	;'a'
   429  00FE20  6C                 	db	108	;'l'
   430  00FE21  6C                 	db	108	;'l'
   431  00FE22  65                 	db	101	;'e'
   432  00FE23  6C                 	db	108	;'l'
   433  00FE24  20                 	db	32
   434  00FE25  0D                 	db	13
   435  00FE26  0A                 	db	10
   436  00FE27  00                 	db	0
   437  00FE28                     STR_8:
   438                           
   439                           ; BSR set to: 0
   440  00FE28  0D                 	db	13
   441  00FE29  0A                 	db	10
   442  00FE2A  20                 	db	32
   443  00FE2B  43                 	db	67	;'C'
   444  00FE2C  41                 	db	65	;'A'
   445  00FE2D  50                 	db	80	;'P'
   446  00FE2E  32                 	db	50	;'2'
   447  00FE2F  33                 	db	51	;'3'
   448  00FE30  34                 	db	52	;'4'
   449  00FE31  35                 	db	53	;'5'
   450  00FE32  36                 	db	54	;'6'
   451  00FE33  37                 	db	55	;'7'
   452  00FE34  38                 	db	56	;'8'
   453  00FE35  20                 	db	32
   454  00FE36  69                 	db	105	;'i'
   455  00FE37  6E                 	db	110	;'n'
   456  00FE38  20                 	db	32
   457  00FE39  70                 	db	112	;'p'
   458  00FE3A  61                 	db	97	;'a'
   459  00FE3B  72                 	db	114	;'r'
   460  00FE3C  61                 	db	97	;'a'
   461  00FE3D  6C                 	db	108	;'l'
   462  00FE3E  6C                 	db	108	;'l'
   463  00FE3F  65                 	db	101	;'e'
   464  00FE40  6C                 	db	108	;'l'
   465  00FE41  20                 	db	32
   466  00FE42  0D                 	db	13
   467  00FE43  0A                 	db	10
   468  00FE44  00                 	db	0
   469  00FE45                     STR_17:
   470                           
   471                           ; BSR set to: 0
   472  00FE45  0D                 	db	13
   473  00FE46  0A                 	db	10
   474  00FE47  20                 	db	32
   475  00FE48  43                 	db	67	;'C'
   476  00FE49  41                 	db	65	;'A'
   477  00FE4A  50                 	db	80	;'P'
   478  00FE4B  31                 	db	49	;'1'
   479  00FE4C  32                 	db	50	;'2'
   480  00FE4D  33                 	db	51	;'3'
   481  00FE4E  34                 	db	52	;'4'
   482  00FE4F  35                 	db	53	;'5'
   483  00FE50  36                 	db	54	;'6'
   484  00FE51  37                 	db	55	;'7'
   485  00FE52  38                 	db	56	;'8'
   486  00FE53  20                 	db	32
   487  00FE54  69                 	db	105	;'i'
   488  00FE55  6E                 	db	110	;'n'
   489  00FE56  20                 	db	32
   490  00FE57  53                 	db	83	;'S'
   491  00FE58  45                 	db	69	;'E'
   492  00FE59  52                 	db	82	;'R'
   493  00FE5A  49                 	db	73	;'I'
   494  00FE5B  45                 	db	69	;'E'
   495  00FE5C  53                 	db	83	;'S'
   496  00FE5D  20                 	db	32
   497  00FE5E  0D                 	db	13
   498  00FE5F  0A                 	db	10
   499  00FE60  00                 	db	0
   500  00FE61                     STR_7:
   501                           
   502                           ; BSR set to: 0
   503  00FE61  0D                 	db	13
   504  00FE62  0A                 	db	10
   505  00FE63  20                 	db	32
   506  00FE64  43                 	db	67	;'C'
   507  00FE65  41                 	db	65	;'A'
   508  00FE66  50                 	db	80	;'P'
   509  00FE67  33                 	db	51	;'3'
   510  00FE68  34                 	db	52	;'4'
   511  00FE69  35                 	db	53	;'5'
   512  00FE6A  36                 	db	54	;'6'
   513  00FE6B  37                 	db	55	;'7'
   514  00FE6C  38                 	db	56	;'8'
   515  00FE6D  20                 	db	32
   516  00FE6E  69                 	db	105	;'i'
   517  00FE6F  6E                 	db	110	;'n'
   518  00FE70  20                 	db	32
   519  00FE71  70                 	db	112	;'p'
   520  00FE72  61                 	db	97	;'a'
   521  00FE73  72                 	db	114	;'r'
   522  00FE74  61                 	db	97	;'a'
   523  00FE75  6C                 	db	108	;'l'
   524  00FE76  6C                 	db	108	;'l'
   525  00FE77  65                 	db	101	;'e'
   526  00FE78  6C                 	db	108	;'l'
   527  00FE79  20                 	db	32
   528  00FE7A  0D                 	db	13
   529  00FE7B  0A                 	db	10
   530  00FE7C  00                 	db	0
   531  00FE7D                     STR_16:
   532                           
   533                           ; BSR set to: 0
   534  00FE7D  0D                 	db	13
   535  00FE7E  0A                 	db	10
   536  00FE7F  20                 	db	32
   537  00FE80  43                 	db	67	;'C'
   538  00FE81  41                 	db	65	;'A'
   539  00FE82  50                 	db	80	;'P'
   540  00FE83  31                 	db	49	;'1'
   541  00FE84  32                 	db	50	;'2'
   542  00FE85  33                 	db	51	;'3'
   543  00FE86  34                 	db	52	;'4'
   544  00FE87  35                 	db	53	;'5'
   545  00FE88  36                 	db	54	;'6'
   546  00FE89  37                 	db	55	;'7'
   547  00FE8A  20                 	db	32
   548  00FE8B  69                 	db	105	;'i'
   549  00FE8C  6E                 	db	110	;'n'
   550  00FE8D  20                 	db	32
   551  00FE8E  53                 	db	83	;'S'
   552  00FE8F  45                 	db	69	;'E'
   553  00FE90  52                 	db	82	;'R'
   554  00FE91  49                 	db	73	;'I'
   555  00FE92  45                 	db	69	;'E'
   556  00FE93  53                 	db	83	;'S'
   557  00FE94  20                 	db	32
   558  00FE95  0D                 	db	13
   559  00FE96  0A                 	db	10
   560  00FE97  00                 	db	0
   561  00FE98                     STR_6:
   562                           
   563                           ; BSR set to: 0
   564  00FE98  0D                 	db	13
   565  00FE99  0A                 	db	10
   566  00FE9A  20                 	db	32
   567  00FE9B  43                 	db	67	;'C'
   568  00FE9C  41                 	db	65	;'A'
   569  00FE9D  50                 	db	80	;'P'
   570  00FE9E  34                 	db	52	;'4'
   571  00FE9F  35                 	db	53	;'5'
   572  00FEA0  36                 	db	54	;'6'
   573  00FEA1  37                 	db	55	;'7'
   574  00FEA2  38                 	db	56	;'8'
   575  00FEA3  20                 	db	32
   576  00FEA4  69                 	db	105	;'i'
   577  00FEA5  6E                 	db	110	;'n'
   578  00FEA6  20                 	db	32
   579  00FEA7  70                 	db	112	;'p'
   580  00FEA8  61                 	db	97	;'a'
   581  00FEA9  72                 	db	114	;'r'
   582  00FEAA  61                 	db	97	;'a'
   583  00FEAB  6C                 	db	108	;'l'
   584  00FEAC  6C                 	db	108	;'l'
   585  00FEAD  65                 	db	101	;'e'
   586  00FEAE  6C                 	db	108	;'l'
   587  00FEAF  20                 	db	32
   588  00FEB0  0D                 	db	13
   589  00FEB1  0A                 	db	10
   590  00FEB2  00                 	db	0
   591  00FEB3                     STR_15:
   592                           
   593                           ; BSR set to: 0
   594  00FEB3  0D                 	db	13
   595  00FEB4  0A                 	db	10
   596  00FEB5  20                 	db	32
   597  00FEB6  43                 	db	67	;'C'
   598  00FEB7  41                 	db	65	;'A'
   599  00FEB8  50                 	db	80	;'P'
   600  00FEB9  31                 	db	49	;'1'
   601  00FEBA  32                 	db	50	;'2'
   602  00FEBB  33                 	db	51	;'3'
   603  00FEBC  34                 	db	52	;'4'
   604  00FEBD  35                 	db	53	;'5'
   605  00FEBE  36                 	db	54	;'6'
   606  00FEBF  20                 	db	32
   607  00FEC0  69                 	db	105	;'i'
   608  00FEC1  6E                 	db	110	;'n'
   609  00FEC2  20                 	db	32
   610  00FEC3  53                 	db	83	;'S'
   611  00FEC4  45                 	db	69	;'E'
   612  00FEC5  52                 	db	82	;'R'
   613  00FEC6  49                 	db	73	;'I'
   614  00FEC7  45                 	db	69	;'E'
   615  00FEC8  53                 	db	83	;'S'
   616  00FEC9  20                 	db	32
   617  00FECA  0D                 	db	13
   618  00FECB  0A                 	db	10
   619  00FECC  00                 	db	0
   620  00FECD                     STR_5:
   621                           
   622                           ; BSR set to: 0
   623  00FECD  0D                 	db	13
   624  00FECE  0A                 	db	10
   625  00FECF  20                 	db	32
   626  00FED0  43                 	db	67	;'C'
   627  00FED1  41                 	db	65	;'A'
   628  00FED2  50                 	db	80	;'P'
   629  00FED3  35                 	db	53	;'5'
   630  00FED4  36                 	db	54	;'6'
   631  00FED5  37                 	db	55	;'7'
   632  00FED6  38                 	db	56	;'8'
   633  00FED7  20                 	db	32
   634  00FED8  69                 	db	105	;'i'
   635  00FED9  6E                 	db	110	;'n'
   636  00FEDA  20                 	db	32
   637  00FEDB  70                 	db	112	;'p'
   638  00FEDC  61                 	db	97	;'a'
   639  00FEDD  72                 	db	114	;'r'
   640  00FEDE  61                 	db	97	;'a'
   641  00FEDF  6C                 	db	108	;'l'
   642  00FEE0  6C                 	db	108	;'l'
   643  00FEE1  65                 	db	101	;'e'
   644  00FEE2  6C                 	db	108	;'l'
   645  00FEE3  20                 	db	32
   646  00FEE4  0D                 	db	13
   647  00FEE5  0A                 	db	10
   648  00FEE6  00                 	db	0
   649  00FEE7                     STR_14:
   650                           
   651                           ; BSR set to: 0
   652  00FEE7  0D                 	db	13
   653  00FEE8  0A                 	db	10
   654  00FEE9  20                 	db	32
   655  00FEEA  43                 	db	67	;'C'
   656  00FEEB  41                 	db	65	;'A'
   657  00FEEC  50                 	db	80	;'P'
   658  00FEED  31                 	db	49	;'1'
   659  00FEEE  32                 	db	50	;'2'
   660  00FEEF  33                 	db	51	;'3'
   661  00FEF0  34                 	db	52	;'4'
   662  00FEF1  35                 	db	53	;'5'
   663  00FEF2  20                 	db	32
   664  00FEF3  69                 	db	105	;'i'
   665  00FEF4  6E                 	db	110	;'n'
   666  00FEF5  20                 	db	32
   667  00FEF6  53                 	db	83	;'S'
   668  00FEF7  45                 	db	69	;'E'
   669  00FEF8  52                 	db	82	;'R'
   670  00FEF9  49                 	db	73	;'I'
   671  00FEFA  45                 	db	69	;'E'
   672  00FEFB  53                 	db	83	;'S'
   673  00FEFC  20                 	db	32
   674  00FEFD  0D                 	db	13
   675  00FEFE  0A                 	db	10
   676  00FEFF  00                 	db	0
   677  00FF00                     STR_4:
   678                           
   679                           ; BSR set to: 0
   680  00FF00  0D                 	db	13
   681  00FF01  0A                 	db	10
   682  00FF02  20                 	db	32
   683  00FF03  43                 	db	67	;'C'
   684  00FF04  41                 	db	65	;'A'
   685  00FF05  50                 	db	80	;'P'
   686  00FF06  36                 	db	54	;'6'
   687  00FF07  37                 	db	55	;'7'
   688  00FF08  38                 	db	56	;'8'
   689  00FF09  20                 	db	32
   690  00FF0A  69                 	db	105	;'i'
   691  00FF0B  6E                 	db	110	;'n'
   692  00FF0C  20                 	db	32
   693  00FF0D  70                 	db	112	;'p'
   694  00FF0E  61                 	db	97	;'a'
   695  00FF0F  72                 	db	114	;'r'
   696  00FF10  61                 	db	97	;'a'
   697  00FF11  6C                 	db	108	;'l'
   698  00FF12  6C                 	db	108	;'l'
   699  00FF13  65                 	db	101	;'e'
   700  00FF14  6C                 	db	108	;'l'
   701  00FF15  20                 	db	32
   702  00FF16  0D                 	db	13
   703  00FF17  0A                 	db	10
   704  00FF18  00                 	db	0
   705  00FF19                     STR_13:
   706                           
   707                           ; BSR set to: 0
   708  00FF19  0D                 	db	13
   709  00FF1A  0A                 	db	10
   710  00FF1B  20                 	db	32
   711  00FF1C  43                 	db	67	;'C'
   712  00FF1D  41                 	db	65	;'A'
   713  00FF1E  50                 	db	80	;'P'
   714  00FF1F  31                 	db	49	;'1'
   715  00FF20  32                 	db	50	;'2'
   716  00FF21  33                 	db	51	;'3'
   717  00FF22  34                 	db	52	;'4'
   718  00FF23  20                 	db	32
   719  00FF24  69                 	db	105	;'i'
   720  00FF25  6E                 	db	110	;'n'
   721  00FF26  20                 	db	32
   722  00FF27  53                 	db	83	;'S'
   723  00FF28  45                 	db	69	;'E'
   724  00FF29  52                 	db	82	;'R'
   725  00FF2A  49                 	db	73	;'I'
   726  00FF2B  45                 	db	69	;'E'
   727  00FF2C  53                 	db	83	;'S'
   728  00FF2D  20                 	db	32
   729  00FF2E  0D                 	db	13
   730  00FF2F  0A                 	db	10
   731  00FF30  00                 	db	0
   732  00FF31                     STR_3:
   733                           
   734                           ; BSR set to: 0
   735  00FF31  0D                 	db	13
   736  00FF32  0A                 	db	10
   737  00FF33  20                 	db	32
   738  00FF34  43                 	db	67	;'C'
   739  00FF35  41                 	db	65	;'A'
   740  00FF36  50                 	db	80	;'P'
   741  00FF37  37                 	db	55	;'7'
   742  00FF38  38                 	db	56	;'8'
   743  00FF39  20                 	db	32
   744  00FF3A  69                 	db	105	;'i'
   745  00FF3B  6E                 	db	110	;'n'
   746  00FF3C  20                 	db	32
   747  00FF3D  70                 	db	112	;'p'
   748  00FF3E  61                 	db	97	;'a'
   749  00FF3F  72                 	db	114	;'r'
   750  00FF40  61                 	db	97	;'a'
   751  00FF41  6C                 	db	108	;'l'
   752  00FF42  6C                 	db	108	;'l'
   753  00FF43  65                 	db	101	;'e'
   754  00FF44  6C                 	db	108	;'l'
   755  00FF45  20                 	db	32
   756  00FF46  0D                 	db	13
   757  00FF47  0A                 	db	10
   758  00FF48  00                 	db	0
   759  00FF49                     STR_12:
   760                           
   761                           ; BSR set to: 0
   762  00FF49  0D                 	db	13
   763  00FF4A  0A                 	db	10
   764  00FF4B  20                 	db	32
   765  00FF4C  43                 	db	67	;'C'
   766  00FF4D  41                 	db	65	;'A'
   767  00FF4E  50                 	db	80	;'P'
   768  00FF4F  31                 	db	49	;'1'
   769  00FF50  32                 	db	50	;'2'
   770  00FF51  33                 	db	51	;'3'
   771  00FF52  20                 	db	32
   772  00FF53  69                 	db	105	;'i'
   773  00FF54  6E                 	db	110	;'n'
   774  00FF55  20                 	db	32
   775  00FF56  53                 	db	83	;'S'
   776  00FF57  45                 	db	69	;'E'
   777  00FF58  52                 	db	82	;'R'
   778  00FF59  49                 	db	73	;'I'
   779  00FF5A  45                 	db	69	;'E'
   780  00FF5B  53                 	db	83	;'S'
   781  00FF5C  20                 	db	32
   782  00FF5D  0D                 	db	13
   783  00FF5E  0A                 	db	10
   784  00FF5F  00                 	db	0
   785  00FF60                     STR_11:
   786                           
   787                           ; BSR set to: 0
   788  00FF60  0D                 	db	13
   789  00FF61  0A                 	db	10
   790  00FF62  20                 	db	32
   791  00FF63  43                 	db	67	;'C'
   792  00FF64  41                 	db	65	;'A'
   793  00FF65  50                 	db	80	;'P'
   794  00FF66  31                 	db	49	;'1'
   795  00FF67  32                 	db	50	;'2'
   796  00FF68  20                 	db	32
   797  00FF69  69                 	db	105	;'i'
   798  00FF6A  6E                 	db	110	;'n'
   799  00FF6B  20                 	db	32
   800  00FF6C  53                 	db	83	;'S'
   801  00FF6D  45                 	db	69	;'E'
   802  00FF6E  52                 	db	82	;'R'
   803  00FF6F  49                 	db	73	;'I'
   804  00FF70  45                 	db	69	;'E'
   805  00FF71  53                 	db	83	;'S'
   806  00FF72  20                 	db	32
   807  00FF73  0D                 	db	13
   808  00FF74  0A                 	db	10
   809  00FF75  00                 	db	0
   810  00FF76                     STR_18:
   811                           
   812                           ; BSR set to: 0
   813  00FF76  0D                 	db	13
   814  00FF77  0A                 	db	10
   815  00FF78  20                 	db	32
   816  00FF79  61                 	db	97	;'a'
   817  00FF7A  64                 	db	100	;'d'
   818  00FF7B  64                 	db	100	;'d'
   819  00FF7C  20                 	db	32
   820  00FF7D  61                 	db	97	;'a'
   821  00FF7E  6C                 	db	108	;'l'
   822  00FF7F  6C                 	db	108	;'l'
   823  00FF80  20                 	db	32
   824  00FF81  53                 	db	83	;'S'
   825  00FF82  45                 	db	69	;'E'
   826  00FF83  52                 	db	82	;'R'
   827  00FF84  49                 	db	73	;'I'
   828  00FF85  45                 	db	69	;'E'
   829  00FF86  53                 	db	83	;'S'
   830  00FF87  20                 	db	32
   831  00FF88  0D                 	db	13
   832  00FF89  0A                 	db	10
   833  00FF8A  00                 	db	0
   834  00FF8B                     STR_23:
   835                           
   836                           ; BSR set to: 0
   837  00FF8B  0D                 	db	13
   838  00FF8C  0A                 	db	10
   839  00FF8D  20                 	db	32
   840  00FF8E  76                 	db	118	;'v'
   841  00FF8F  63                 	db	99	;'c'
   842  00FF90  61                 	db	97	;'a'
   843  00FF91  70                 	db	112	;'p'
   844  00FF92  5F                 	db	95	;'_'
   845  00FF93  70                 	db	112	;'p'
   846  00FF94  72                 	db	114	;'r'
   847  00FF95  65                 	db	101	;'e'
   848  00FF96  76                 	db	118	;'v'
   849  00FF97  20                 	db	32
   850  00FF98  3D                 	db	61	;'='
   851  00FF99  25                 	db	37
   852  00FF9A  2E                 	db	46
   853  00FF9B  32                 	db	50	;'2'
   854  00FF9C  66                 	db	102	;'f'
   855  00FF9D  0D                 	db	13
   856  00FF9E  0A                 	db	10
   857  00FF9F  00                 	db	0
   858  00FFA0                     STR_21:
   859                           
   860                           ; BSR set to: 0
   861  00FFA0  0D                 	db	13
   862  00FFA1  0A                 	db	10
   863  00FFA2  20                 	db	32
   864  00FFA3  76                 	db	118	;'v'
   865  00FFA4  6F                 	db	111	;'o'
   866  00FFA5  63                 	db	99	;'c'
   867  00FFA6  5F                 	db	95	;'_'
   868  00FFA7  70                 	db	112	;'p'
   869  00FFA8  72                 	db	114	;'r'
   870  00FFA9  65                 	db	101	;'e'
   871  00FFAA  76                 	db	118	;'v'
   872  00FFAB  20                 	db	32
   873  00FFAC  3D                 	db	61	;'='
   874  00FFAD  25                 	db	37
   875  00FFAE  2E                 	db	46
   876  00FFAF  32                 	db	50	;'2'
   877  00FFB0  66                 	db	102	;'f'
   878  00FFB1  0D                 	db	13
   879  00FFB2  0A                 	db	10
   880  00FFB3  00                 	db	0
   881  00FFB4                     STR_22:
   882                           
   883                           ; BSR set to: 0
   884  00FFB4  0D                 	db	13
   885  00FFB5  0A                 	db	10
   886  00FFB6  20                 	db	32
   887  00FFB7  76                 	db	118	;'v'
   888  00FFB8  63                 	db	99	;'c'
   889  00FFB9  61                 	db	97	;'a'
   890  00FFBA  70                 	db	112	;'p'
   891  00FFBB  20                 	db	32
   892  00FFBC  3D                 	db	61	;'='
   893  00FFBD  25                 	db	37
   894  00FFBE  2E                 	db	46
   895  00FFBF  32                 	db	50	;'2'
   896  00FFC0  66                 	db	102	;'f'
   897  00FFC1  0D                 	db	13
   898  00FFC2  0A                 	db	10
   899  00FFC3  00                 	db	0
   900  00FFC4                     STR_20:
   901                           
   902                           ; BSR set to: 0
   903  00FFC4  0D                 	db	13
   904  00FFC5  0A                 	db	10
   905  00FFC6  20                 	db	32
   906  00FFC7  76                 	db	118	;'v'
   907  00FFC8  6F                 	db	111	;'o'
   908  00FFC9  63                 	db	99	;'c'
   909  00FFCA  20                 	db	32
   910  00FFCB  3D                 	db	61	;'='
   911  00FFCC  25                 	db	37
   912  00FFCD  2E                 	db	46
   913  00FFCE  32                 	db	50	;'2'
   914  00FFCF  66                 	db	102	;'f'
   915  00FFD0  0D                 	db	13
   916  00FFD1  0A                 	db	10
   917  00FFD2  00                 	db	0
   918  00FFD3                     STR_19:
   919                           
   920                           ; BSR set to: 0
   921  00FFD3  0D                 	db	13
   922  00FFD4  0A                 	db	10
   923  00FFD5  20                 	db	32
   924  00FFD6  25                 	db	37
   925  00FFD7  2E                 	db	46
   926  00FFD8  32                 	db	50	;'2'
   927  00FFD9  66                 	db	102	;'f'
   928  00FFDA  20                 	db	32
   929  00FFDB  0D                 	db	13
   930  00FFDC  0A                 	db	10
   931  00FFDD  00                 	db	0
   932  00FFDE                     STR_10:
   933                           
   934                           ; BSR set to: 0
   935  00FFDE  0D                 	db	13
   936  00FFDF  0A                 	db	10
   937  00FFE0  25                 	db	37
   938  00FFE1  64                 	db	100	;'d'
   939  00FFE2  20                 	db	32
   940  00FFE3  0D                 	db	13
   941  00FFE4  0A                 	db	10
   942  00FFE5  00                 	db	0
   943  00FFE6                     STR_25:
   944                           
   945                           ; BSR set to: 0
   946  00FFE6  49                 	db	73	;'I'
   947  00FFE7  4E                 	db	78	;'N'
   948  00FFE8  46                 	db	70	;'F'
   949  00FFE9  00                 	db	0
   950  00FFEA                     STR_29:
   951                           
   952                           ; BSR set to: 0
   953  00FFEA  4E                 	db	78	;'N'
   954  00FFEB  41                 	db	65	;'A'
   955  00FFEC  4E                 	db	78	;'N'
   956  00FFED  00                 	db	0
   957  00FFEE                     STR_26:
   958                           
   959                           ; BSR set to: 0
   960  00FFEE  69                 	db	105	;'i'
   961  00FFEF  6E                 	db	110	;'n'
   962  00FFF0  66                 	db	102	;'f'
   963  00FFF1  00                 	db	0
   964  00FFF2                     STR_30:
   965                           
   966                           ; BSR set to: 0
   967  00FFF2  6E                 	db	110	;'n'
   968  00FFF3  61                 	db	97	;'a'
   969  00FFF4  6E                 	db	110	;'n'
   970  00FFF5  00                 	db	0
   971  00FFF6                     STR_33:
   972                           
   973                           ; BSR set to: 0
   974  00FFF6  6C                 	db	108	;'l'
   975  00FFF7  66                 	db	102	;'f'
   976  00FFF8  00                 	db	0
   977  00FFF9                     
   978                           ; BSR set to: 0
   979  00FFF9  31                 	db	49	;'1'
   980  00FFFA  31                 	db	49	;'1'
   981  00FFFB  00                 	db	0
   982  00FFFC                     
   983                           ; BSR set to: 0
   984  00FFFC  31                 	db	49	;'1'
   985  00FFFD  32                 	db	50	;'2'
   986  00FFFE  00                 	db	0
   987  00FFFF  00                 	db	0	; dummy byte at the end
   988  0000                     
   989                           ; #config settings
   990                           
   991                           	psect	cinit
   992  013B68                     __pcinit:
   993                           	callstack 0
   994  013B68                     start_initialization:
   995                           	callstack 0
   996  013B68                     __initialization:
   997                           	callstack 0
   998                           
   999                           ; Initialize objects allocated to BANK0 (35 bytes)
  1000                           ; load TBLPTR registers with __pidataBANK0
  1001  013B68  0EE8               	movlw	low __pidataBANK0
  1002  013B6A  6EF6               	movwf	tblptrl,c
  1003  013B6C  0E3D               	movlw	high __pidataBANK0
  1004  013B6E  6EF7               	movwf	tblptrh,c
  1005  013B70  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1006  013B72  6EF8               	movwf	tblptru,c
  1007  013B74  EE00  F0DC         	lfsr	0,__pdataBANK0
  1008  013B78  EE10 F023          	lfsr	1,35
  1009  013B7C                     copy_data0:
  1010  013B7C  0009               	tblrd		*+
  1011  013B7E  CFF5 FFEE          	movff	tablat,postinc0
  1012  013B82  50E5               	movf	postdec1,w,c
  1013  013B84  50E1               	movf	fsr1l,w,c
  1014  013B86  E1FA               	bnz	copy_data0
  1015                           
  1016                           ; Clear objects allocated to BANK1 (80 bytes)
  1017  013B88  EE01  F000         	lfsr	0,__pbssBANK1
  1018  013B8C  0E50               	movlw	80
  1019  013B8E                     clear_0:
  1020  013B8E  6AEE               	clrf	postinc0,c
  1021  013B90  06E8               	decf	wreg,f,c
  1022  013B92  E1FD               	bnz	clear_0
  1023                           
  1024                           ; Clear objects allocated to BANK0 (40 bytes)
  1025  013B94  EE00  F0B4         	lfsr	0,__pbssBANK0
  1026  013B98  0E28               	movlw	40
  1027  013B9A                     clear_1:
  1028  013B9A  6AEE               	clrf	postinc0,c
  1029  013B9C  06E8               	decf	wreg,f,c
  1030  013B9E  E1FD               	bnz	clear_1
  1031                           
  1032                           ; Clear objects allocated to COMRAM (1 bytes)
  1033  013BA0  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1034  013BA2                     end_of_initialization:
  1035                           	callstack 0
  1036  013BA2                     __end_of__initialization:
  1037                           	callstack 0
  1038  013BA2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1039  013BA4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1040  013BA6  0100               	movlb	0
  1041  013BA8  EF08  F09C         	goto	_main	;jump to C main() function
  1042                           
  1043                           	psect	bssCOMRAM
  1044  00005E                     __pbssCOMRAM:
  1045                           	callstack 0
  1046  00005E                     _capTaskSeries_count:
  1047                           	callstack 0
  1048  00005E                     	ds	1
  1049                           
  1050                           	psect	bssBANK0
  1051  0000B4                     __pbssBANK0:
  1052                           	callstack 0
  1053  0000B4                     floorf@F527:
  1054                           	callstack 0
  1055  0000B4                     	ds	4
  1056  0000B8                     ___fpclassifyf@F465:
  1057                           	callstack 0
  1058  0000B8                     	ds	4
  1059  0000BC                     _vcap_current:
  1060                           	callstack 0
  1061  0000BC                     	ds	4
  1062  0000C0                     _vcap_prev:
  1063                           	callstack 0
  1064  0000C0                     	ds	4
  1065  0000C4                     _voc_current:
  1066                           	callstack 0
  1067  0000C4                     	ds	4
  1068  0000C8                     _voc_prev:
  1069                           	callstack 0
  1070  0000C8                     	ds	4
  1071  0000CC                     _TMR6_InterruptHandler:
  1072                           	callstack 0
  1073  0000CC                     	ds	3
  1074  0000CF                     _nout:
  1075                           	callstack 0
  1076  0000CF                     	ds	2
  1077  0000D1                     _width:
  1078                           	callstack 0
  1079  0000D1                     	ds	2
  1080  0000D3                     _prec:
  1081                           	callstack 0
  1082  0000D3                     	ds	2
  1083  0000D5                     _flags:
  1084                           	callstack 0
  1085  0000D5                     	ds	2
  1086  0000D7                     _capTaskParalle_count:
  1087                           	callstack 0
  1088  0000D7                     	ds	1
  1089  0000D8                     	ds	1
  1090  0000D9                     _isolatedflag:
  1091                           	callstack 0
  1092  0000D9                     	ds	1
  1093  0000DA                     _eusart5RxLastError:
  1094                           	callstack 0
  1095  0000DA                     	ds	1
  1096  0000DB                     _Flag5sfastcharing:
  1097                           	callstack 0
  1098  0000DB                     	ds	1
  1099                           
  1100                           	psect	dataBANK0
  1101  0000DC                     __pdataBANK0:
  1102                           	callstack 0
  1103  0000DC                     _command11:
  1104                           	callstack 0
  1105  0000DC                     	ds	4
  1106  0000E0                     _command20:
  1107                           	callstack 0
  1108  0000E0                     	ds	3
  1109  0000E3                     _command19:
  1110                           	callstack 0
  1111  0000E3                     	ds	3
  1112  0000E6                     _command18:
  1113                           	callstack 0
  1114  0000E6                     	ds	3
  1115  0000E9                     _command17:
  1116                           	callstack 0
  1117  0000E9                     	ds	3
  1118  0000EC                     _command16:
  1119                           	callstack 0
  1120  0000EC                     	ds	3
  1121  0000EF                     _command12:
  1122                           	callstack 0
  1123  0000EF                     	ds	3
  1124  0000F2                     _command14:
  1125                           	callstack 0
  1126  0000F2                     	ds	7
  1127  0000F9                     _command13:
  1128                           	callstack 0
  1129  0000F9                     	ds	3
  1130  0000FC                     _msgOK:
  1131                           	callstack 0
  1132  0000FC                     	ds	3
  1133                           
  1134                           	psect	bssBANK1
  1135  000100                     __pbssBANK1:
  1136                           	callstack 0
  1137  000100                     _dbuf:
  1138                           	callstack 0
  1139  000100                     	ds	80
  1140                           
  1141                           	psect	cstackBANK0
  1142  000060                     __pcstackBANK0:
  1143                           	callstack 0
  1144  000060                     _efgtoa$1996:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x0
  1148  000060                     	ds	2
  1149  000062                     _efgtoa$1997:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x2
  1153  000062                     	ds	2
  1154  000064                     _efgtoa$2001:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x4
  1158  000064                     	ds	2
  1159  000066                     _efgtoa$2005:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x6
  1163  000066                     	ds	2
  1164  000068                     _efgtoa$2006:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x8
  1168  000068                     	ds	2
  1169  00006A                     _efgtoa$2007:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0xA
  1173  00006A                     	ds	2
  1174  00006C                     efgtoa@t:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0xC
  1178  00006C                     	ds	2
  1179  00006E                     efgtoa@pp:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0xE
  1183  00006E                     	ds	2
  1184  000070                     efgtoa@ne:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x10
  1188  000070                     	ds	2
  1189  000072                     efgtoa@m:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x12
  1193  000072                     	ds	2
  1194  000074                     efgtoa@ou:
  1195                           	callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x14
  1198  000074                     	ds	4
  1199  000078                     efgtoa@d:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x18
  1203  000078                     	ds	2
  1204  00007A                     efgtoa@sign:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x1A
  1208  00007A                     	ds	2
  1209  00007C                     efgtoa@p:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x1C
  1213  00007C                     	ds	2
  1214  00007E                     efgtoa@w:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x1E
  1218  00007E                     	ds	2
  1219  000080                     efgtoa@nmode:
  1220                           	callstack 0
  1221                           
  1222                           ; 1 bytes @ 0x20
  1223  000080                     	ds	1
  1224  000081                     efgtoa@mode:
  1225                           	callstack 0
  1226                           
  1227                           ; 1 bytes @ 0x21
  1228  000081                     	ds	1
  1229  000082                     efgtoa@h:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x22
  1233  000082                     	ds	4
  1234  000086                     efgtoa@l:
  1235                           	callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x26
  1238  000086                     	ds	4
  1239  00008A                     efgtoa@i:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x2A
  1243  00008A                     	ds	2
  1244  00008C                     efgtoa@g:
  1245                           	callstack 0
  1246                           
  1247                           ; 4 bytes @ 0x2C
  1248  00008C                     	ds	4
  1249  000090                     efgtoa@e:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x30
  1253  000090                     	ds	2
  1254  000092                     efgtoa@n:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x32
  1258  000092                     	ds	2
  1259  000094                     efgtoa@u:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x34
  1263  000094                     	ds	4
  1264  000098                     vfpfcnvrt@ll:
  1265                           	callstack 0
  1266                           
  1267                           ; 8 bytes @ 0x38
  1268  000098                     	ds	8
  1269  0000A0                     _vfpfcnvrt$2021:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x40
  1273  0000A0                     	ds	2
  1274  0000A2                     _vfpfcnvrt$2026:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x42
  1278  0000A2                     	ds	2
  1279  0000A4                     vfpfcnvrt@f:
  1280                           	callstack 0
  1281                           
  1282                           ; 4 bytes @ 0x44
  1283  0000A4                     	ds	4
  1284  0000A8                     vfpfcnvrt@ct:
  1285                           	callstack 0
  1286                           
  1287                           ; 3 bytes @ 0x48
  1288  0000A8                     	ds	3
  1289  0000AB                     vfpfcnvrt@c:
  1290                           	callstack 0
  1291                           
  1292                           ; 1 bytes @ 0x4B
  1293  0000AB                     	ds	1
  1294  0000AC                     delayedBrownOut@vcap:
  1295                           	callstack 0
  1296  0000AC                     fastChargingcaps@voc:
  1297                           	callstack 0
  1298                           
  1299                           ; 4 bytes @ 0x4C
  1300  0000AC                     	ds	4
  1301  0000B0                     fastChargingcaps@vcap:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x50
  1305  0000B0                     	ds	4
  1306                           
  1307                           	psect	cstackCOMRAM
  1308  000001                     __pcstackCOMRAM:
  1309                           	callstack 0
  1310  000001                     ?_strlen:
  1311                           	callstack 0
  1312  000001                     ?___fpclassifyf:
  1313                           	callstack 0
  1314  000001                     ?_isupper:
  1315                           	callstack 0
  1316  000001                     ?_isdigit:
  1317                           	callstack 0
  1318  000001                     ?_strncmp:
  1319                           	callstack 0
  1320  000001                     ?_isspace:
  1321                           	callstack 0
  1322  000001                     ?_ADCC_GetSingleConversion:
  1323                           	callstack 0
  1324  000001                     ?___wmul:
  1325                           	callstack 0
  1326  000001                     ?___awdiv:
  1327                           	callstack 0
  1328  000001                     ?___awmod:
  1329                           	callstack 0
  1330  000001                     ?___fladd:
  1331                           	callstack 0
  1332  000001                     ?___fldiv:
  1333                           	callstack 0
  1334  000001                     ?___flneg:
  1335                           	callstack 0
  1336  000001                     ?___fltol:
  1337                           	callstack 0
  1338  000001                     ?___xxtofl:
  1339                           	callstack 0
  1340  000001                     ?___aodiv:
  1341                           	callstack 0
  1342  000001                     ?___aomod:
  1343                           	callstack 0
  1344  000001                     EUSART5_Write@txData:
  1345                           	callstack 0
  1346  000001                     decoupleCapArray@state:
  1347                           	callstack 0
  1348  000001                     ___wmul@multiplier:
  1349                           	callstack 0
  1350  000001                     ___awdiv@dividend:
  1351                           	callstack 0
  1352  000001                     ___awmod@dividend:
  1353                           	callstack 0
  1354  000001                     isdigit@c:
  1355                           	callstack 0
  1356  000001                     isspace@c:
  1357                           	callstack 0
  1358  000001                     isupper@c:
  1359                           	callstack 0
  1360  000001                     strcpy@dest:
  1361                           	callstack 0
  1362  000001                     strlen@s:
  1363                           	callstack 0
  1364  000001                     strncmp@_l:
  1365                           	callstack 0
  1366  000001                     EUSART5_SetFramingErrorHandler@interruptHandler:
  1367                           	callstack 0
  1368  000001                     EUSART5_SetOverrunErrorHandler@interruptHandler:
  1369                           	callstack 0
  1370  000001                     EUSART5_SetErrorHandler@interruptHandler:
  1371                           	callstack 0
  1372  000001                     ___fleq@ff1:
  1373                           	callstack 0
  1374  000001                     ___flneg@f1:
  1375                           	callstack 0
  1376  000001                     ___fltol@f1:
  1377                           	callstack 0
  1378  000001                     ___fladd@b:
  1379                           	callstack 0
  1380  000001                     ___fldiv@b:
  1381                           	callstack 0
  1382  000001                     ___xxtofl@val:
  1383                           	callstack 0
  1384  000001                     ___fpclassifyf@x:
  1385                           	callstack 0
  1386  000001                     ___aodiv@dividend:
  1387                           	callstack 0
  1388  000001                     ___aomod@dividend:
  1389                           	callstack 0
  1390                           
  1391                           ; 8 bytes @ 0x0
  1392  000001                     	ds	1
  1393  000002                     putch@txData:
  1394                           	callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x1
  1397  000002                     	ds	1
  1398  000003                     ??_isupper:
  1399  000003                     ??_isdigit:
  1400  000003                     ??_isspace:
  1401  000003                     ??_ADCC_GetSingleConversion:
  1402  000003                     ___wmul@multiplicand:
  1403                           	callstack 0
  1404  000003                     ___awdiv@divisor:
  1405                           	callstack 0
  1406  000003                     ___awmod@divisor:
  1407                           	callstack 0
  1408  000003                     fputc@c:
  1409                           	callstack 0
  1410  000003                     strcpy@src:
  1411                           	callstack 0
  1412  000003                     strlen@a:
  1413                           	callstack 0
  1414  000003                     strncmp@_r:
  1415                           	callstack 0
  1416                           
  1417                           ; 2 bytes @ 0x2
  1418  000003                     	ds	1
  1419  000004                     
  1420                           ; 1 bytes @ 0x3
  1421  000004                     	ds	1
  1422  000005                     ??___fpclassifyf:
  1423  000005                     ??_strcpy:
  1424  000005                     ??___fltol:
  1425  000005                     ??___xxtofl:
  1426  000005                     ADCC_GetSingleConversion@channel:
  1427                           	callstack 0
  1428  000005                     ___awdiv@counter:
  1429                           	callstack 0
  1430  000005                     ___awmod@counter:
  1431                           	callstack 0
  1432  000005                     ___wmul@product:
  1433                           	callstack 0
  1434  000005                     fputc@fp:
  1435                           	callstack 0
  1436  000005                     strncmp@n:
  1437                           	callstack 0
  1438  000005                     ___fleq@ff2:
  1439                           	callstack 0
  1440  000005                     ___fladd@a:
  1441                           	callstack 0
  1442  000005                     ___fldiv@a:
  1443                           	callstack 0
  1444                           
  1445                           ; 4 bytes @ 0x4
  1446  000005                     	ds	1
  1447  000006                     ___awdiv@sign:
  1448                           	callstack 0
  1449  000006                     ___awmod@sign:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x5
  1453  000006                     	ds	1
  1454  000007                     ??_fputc:
  1455  000007                     ??_strncmp:
  1456  000007                     ?_tolower:
  1457                           	callstack 0
  1458  000007                     _isspace$2093:
  1459                           	callstack 0
  1460  000007                     ___awdiv@quotient:
  1461                           	callstack 0
  1462  000007                     strcpy@s:
  1463                           	callstack 0
  1464  000007                     tolower@c:
  1465                           	callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x6
  1468  000007                     	ds	1
  1469  000008                     ?_atoi:
  1470                           	callstack 0
  1471  000008                     atoi@s:
  1472                           	callstack 0
  1473  000008                     strncmp@l:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x7
  1477  000008                     	ds	1
  1478  000009                     ??___fladd:
  1479  000009                     ??___fldiv:
  1480  000009                     ??_tolower:
  1481  000009                     ??___fleq:
  1482  000009                     ___fltol@sign1:
  1483                           	callstack 0
  1484  000009                     ___xxtofl@sign:
  1485                           	callstack 0
  1486  000009                     ___fpclassifyf@e:
  1487                           	callstack 0
  1488  000009                     strcpy@d:
  1489                           	callstack 0
  1490  000009                     ___aodiv@divisor:
  1491                           	callstack 0
  1492  000009                     ___aomod@divisor:
  1493                           	callstack 0
  1494                           
  1495                           ; 8 bytes @ 0x8
  1496  000009                     	ds	1
  1497  00000A                     ??_atoi:
  1498  00000A                     ___fltol@exp1:
  1499                           	callstack 0
  1500  00000A                     ___xxtofl@exp:
  1501                           	callstack 0
  1502  00000A                     strncmp@r:
  1503                           	callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x9
  1506  00000A                     	ds	1
  1507  00000B                     ___xxtofl@arg:
  1508                           	callstack 0
  1509  00000B                     ___fpclassifyf@u:
  1510                           	callstack 0
  1511                           
  1512                           ; 4 bytes @ 0xA
  1513  00000B                     	ds	1
  1514  00000C                     fputs@s:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0xB
  1518  00000C                     	ds	1
  1519  00000D                     ___fladd@signs:
  1520                           	callstack 0
  1521  00000D                     _tolower$2154:
  1522                           	callstack 0
  1523  00000D                     ___fldiv@rem:
  1524                           	callstack 0
  1525                           
  1526                           ; 4 bytes @ 0xC
  1527  00000D                     	ds	1
  1528  00000E                     ___fladd@aexp:
  1529                           	callstack 0
  1530  00000E                     atoi@neg:
  1531                           	callstack 0
  1532  00000E                     fputs@fp:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0xD
  1536  00000E                     	ds	1
  1537  00000F                     ?___flmul:
  1538                           	callstack 0
  1539  00000F                     ___fladd@bexp:
  1540                           	callstack 0
  1541  00000F                     ___flmul@b:
  1542                           	callstack 0
  1543                           
  1544                           ; 4 bytes @ 0xE
  1545  00000F                     	ds	1
  1546  000010                     ___fladd@grs:
  1547                           	callstack 0
  1548  000010                     fputs@c:
  1549                           	callstack 0
  1550  000010                     _atoi$2062:
  1551                           	callstack 0
  1552                           
  1553                           ; 2 bytes @ 0xF
  1554  000010                     	ds	1
  1555  000011                     ___aodiv@counter:
  1556                           	callstack 0
  1557  000011                     ___aomod@counter:
  1558                           	callstack 0
  1559  000011                     ___fldiv@sign:
  1560                           	callstack 0
  1561  000011                     fputs@i:
  1562                           	callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x10
  1565  000011                     	ds	1
  1566  000012                     ___aodiv@sign:
  1567                           	callstack 0
  1568  000012                     ___aomod@sign:
  1569                           	callstack 0
  1570  000012                     ___fldiv@new_exp:
  1571                           	callstack 0
  1572  000012                     _atoi$2064:
  1573                           	callstack 0
  1574                           
  1575                           ; 2 bytes @ 0x11
  1576  000012                     	ds	1
  1577  000013                     ?_abs:
  1578                           	callstack 0
  1579  000013                     ?_pad:
  1580                           	callstack 0
  1581  000013                     pad@fp:
  1582                           	callstack 0
  1583  000013                     abs@a:
  1584                           	callstack 0
  1585  000013                     ___flmul@a:
  1586                           	callstack 0
  1587  000013                     ___aodiv@quotient:
  1588                           	callstack 0
  1589                           
  1590                           ; 8 bytes @ 0x12
  1591  000013                     	ds	1
  1592  000014                     _atoi$2063:
  1593                           	callstack 0
  1594  000014                     ___fldiv@grs:
  1595                           	callstack 0
  1596                           
  1597                           ; 4 bytes @ 0x13
  1598  000014                     	ds	1
  1599  000015                     ??_abs:
  1600  000015                     pad@buf:
  1601                           	callstack 0
  1602  000015                     atoi@n:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x14
  1606  000015                     	ds	2
  1607  000017                     ??___flmul:
  1608  000017                     pad@p:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x16
  1612  000017                     	ds	1
  1613  000018                     ___fldiv@bexp:
  1614                           	callstack 0
  1615                           
  1616                           ; 1 bytes @ 0x17
  1617  000018                     	ds	1
  1618  000019                     ??_pad:
  1619  000019                     ___fldiv@aexp:
  1620                           	callstack 0
  1621                           
  1622                           ; 1 bytes @ 0x18
  1623  000019                     	ds	1
  1624  00001A                     ?_floorf:
  1625                           	callstack 0
  1626  00001A                     pad@i:
  1627                           	callstack 0
  1628  00001A                     floorf@x:
  1629                           	callstack 0
  1630                           
  1631                           ; 4 bytes @ 0x19
  1632  00001A                     	ds	1
  1633  00001B                     ___flmul@sign:
  1634                           	callstack 0
  1635                           
  1636                           ; 1 bytes @ 0x1A
  1637  00001B                     	ds	1
  1638  00001C                     pad@w:
  1639                           	callstack 0
  1640  00001C                     ___flmul@grs:
  1641                           	callstack 0
  1642                           
  1643                           ; 4 bytes @ 0x1B
  1644  00001C                     	ds	2
  1645  00001E                     ??_floorf:
  1646  00001E                     ?_dtoa:
  1647                           	callstack 0
  1648  00001E                     dtoa@fp:
  1649                           	callstack 0
  1650                           
  1651                           ; 2 bytes @ 0x1D
  1652  00001E                     	ds	2
  1653  000020                     ___flmul@aexp:
  1654                           	callstack 0
  1655  000020                     dtoa@d:
  1656                           	callstack 0
  1657                           
  1658                           ; 8 bytes @ 0x1F
  1659  000020                     	ds	1
  1660  000021                     ___flmul@bexp:
  1661                           	callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x20
  1664  000021                     	ds	1
  1665  000022                     ___flmul@prod:
  1666                           	callstack 0
  1667                           
  1668                           ; 4 bytes @ 0x21
  1669  000022                     	ds	2
  1670  000024                     floorf@m:
  1671                           	callstack 0
  1672                           
  1673                           ; 4 bytes @ 0x23
  1674  000024                     	ds	2
  1675  000026                     ___flmul@temp:
  1676                           	callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x25
  1679  000026                     	ds	2
  1680  000028                     ??_dtoa:
  1681  000028                     ?___flsub:
  1682                           	callstack 0
  1683  000028                     ?_getADCValue:
  1684                           	callstack 0
  1685  000028                     floorf@e:
  1686                           	callstack 0
  1687  000028                     ___flge@ff1:
  1688                           	callstack 0
  1689  000028                     ___flsub@b:
  1690                           	callstack 0
  1691                           
  1692                           ; 4 bytes @ 0x27
  1693  000028                     	ds	2
  1694  00002A                     floorf@u:
  1695                           	callstack 0
  1696                           
  1697                           ; 4 bytes @ 0x29
  1698  00002A                     	ds	2
  1699  00002C                     getADCValue@ADC_float:
  1700                           	callstack 0
  1701  00002C                     ___flge@ff2:
  1702                           	callstack 0
  1703  00002C                     ___flsub@a:
  1704                           	callstack 0
  1705                           
  1706                           ; 4 bytes @ 0x2B
  1707  00002C                     	ds	4
  1708  000030                     ??___flge:
  1709  000030                     getADCValue@getADCValue:
  1710                           	callstack 0
  1711  000030                     _dtoa$1972:
  1712                           	callstack 0
  1713                           
  1714                           ; 2 bytes @ 0x2F
  1715  000030                     	ds	2
  1716  000032                     ?_sampleEHvoc:
  1717                           	callstack 0
  1718  000032                     ?_sampleChargingCapArray:
  1719                           	callstack 0
  1720  000032                     ?_sampleTaskCapArray:
  1721                           	callstack 0
  1722  000032                     dtoa@p:
  1723                           	callstack 0
  1724                           
  1725                           ; 2 bytes @ 0x31
  1726  000032                     	ds	2
  1727  000034                     ?_efgtoa:
  1728                           	callstack 0
  1729  000034                     dtoa@w:
  1730                           	callstack 0
  1731  000034                     efgtoa@fp:
  1732                           	callstack 0
  1733                           
  1734                           ; 2 bytes @ 0x33
  1735  000034                     	ds	2
  1736  000036                     dtoa@s:
  1737                           	callstack 0
  1738  000036                     sampleEHvoc@voc:
  1739                           	callstack 0
  1740  000036                     sampleChargingCapArray@vcap:
  1741                           	callstack 0
  1742  000036                     sampleTaskCapArray@vcap:
  1743                           	callstack 0
  1744  000036                     efgtoa@f:
  1745                           	callstack 0
  1746                           
  1747                           ; 4 bytes @ 0x35
  1748  000036                     	ds	2
  1749  000038                     dtoa@n:
  1750                           	callstack 0
  1751                           
  1752                           ; 8 bytes @ 0x37
  1753  000038                     	ds	2
  1754  00003A                     efgtoa@c:
  1755                           	callstack 0
  1756                           
  1757                           ; 1 bytes @ 0x39
  1758  00003A                     	ds	1
  1759  00003B                     ??_efgtoa:
  1760                           
  1761                           ; 1 bytes @ 0x3A
  1762  00003B                     	ds	5
  1763  000040                     dtoa@i:
  1764                           	callstack 0
  1765                           
  1766                           ; 2 bytes @ 0x3F
  1767  000040                     	ds	2
  1768  000042                     ?_vfpfcnvrt:
  1769                           	callstack 0
  1770  000042                     vfpfcnvrt@fp:
  1771                           	callstack 0
  1772                           
  1773                           ; 2 bytes @ 0x41
  1774  000042                     	ds	2
  1775  000044                     vfpfcnvrt@fmt:
  1776                           	callstack 0
  1777                           
  1778                           ; 2 bytes @ 0x43
  1779  000044                     	ds	2
  1780  000046                     vfpfcnvrt@ap:
  1781                           	callstack 0
  1782                           
  1783                           ; 2 bytes @ 0x45
  1784  000046                     	ds	2
  1785  000048                     ??_vfpfcnvrt:
  1786                           
  1787                           ; 1 bytes @ 0x47
  1788  000048                     	ds	4
  1789  00004C                     ?_vfprintf:
  1790                           	callstack 0
  1791  00004C                     vfprintf@fp:
  1792                           	callstack 0
  1793                           
  1794                           ; 2 bytes @ 0x4B
  1795  00004C                     	ds	2
  1796  00004E                     vfprintf@fmt:
  1797                           	callstack 0
  1798                           
  1799                           ; 2 bytes @ 0x4D
  1800  00004E                     	ds	2
  1801  000050                     vfprintf@ap:
  1802                           	callstack 0
  1803                           
  1804                           ; 2 bytes @ 0x4F
  1805  000050                     	ds	2
  1806  000052                     vfprintf@cfmt:
  1807                           	callstack 0
  1808                           
  1809                           ; 2 bytes @ 0x51
  1810  000052                     	ds	2
  1811  000054                     ?_printf:
  1812                           	callstack 0
  1813  000054                     printf@fmt:
  1814                           	callstack 0
  1815                           
  1816                           ; 2 bytes @ 0x53
  1817  000054                     	ds	6
  1818  00005A                     printf@ap:
  1819                           	callstack 0
  1820                           
  1821                           ; 2 bytes @ 0x59
  1822  00005A                     	ds	2
  1823  00005C                     ??_addCapToParallel:
  1824  00005C                     ??_isolateCapsToSeries:
  1825                           
  1826                           ; 1 bytes @ 0x5B
  1827  00005C                     	ds	2
  1828  00005E                     
  1829                           ; 1 bytes @ 0x5D
  1830 ;;
  1831 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1832 ;;
  1833 ;; *************** function _main *****************
  1834 ;; Defined at:
  1835 ;;		line 140 in file "main.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  command        20    0        unsigned char [20]
  1840 ;;  index           1    0        unsigned char 
  1841 ;;  c               1    0        unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels required when called: 13
  1857 ;; This function calls:
  1858 ;;		_Caps8seriesConnection
  1859 ;;		_SYSTEM_Initialize
  1860 ;;		_delayedBrownOut
  1861 ;;		_fastChargingcaps
  1862 ;;		_isolatedOneTaskCap
  1863 ;; This function is called by:
  1864 ;;		Startup code after reset
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text0
  1869  013810                     __ptext0:
  1870                           	callstack 0
  1871  013810                     _main:
  1872                           	callstack 18
  1873  013810                     
  1874                           ;main.c: 147:     SYSTEM_Initialize();
  1875  013810  EC36  F09F         	call	_SYSTEM_Initialize	;wreg free
  1876  013814                     
  1877                           ;main.c: 153:     (INTCONbits.GIE = 1);
  1878  013814  8EF2               	bsf	242,7,c	;volatile
  1879  013816                     
  1880                           ;main.c: 159:     (INTCONbits.PEIE = 1);
  1881  013816  8CF2               	bsf	242,6,c	;volatile
  1882  013818                     
  1883                           ;main.c: 163:     isolatedflag=0;
  1884  013818  0E00               	movlw	0
  1885  01381A  0100               	movlb	0	; () banked
  1886  01381C  6FD9               	movwf	_isolatedflag& (0+255),b	;volatile
  1887  01381E                     
  1888                           ; BSR set to: 0
  1889                           ;main.c: 164:     Flag5sfastcharing=0;
  1890  01381E  0E00               	movlw	0
  1891  013820  6FDB               	movwf	_Flag5sfastcharing& (0+255),b	;volatile
  1892  013822                     
  1893                           ; BSR set to: 0
  1894                           ;main.c: 165:     Caps8seriesConnection();
  1895  013822  EC87  F09E         	call	_Caps8seriesConnection	;wreg free
  1896  013826                     l583:
  1897                           
  1898                           ;main.c: 168:     {;main.c: 169:        if((Flag5sfastcharing==1) &&(isolatedflag ==0) )
  1899  013826  0100               	movlb	0	; () banked
  1900  013828  05DB               	decf	_Flag5sfastcharing& (0+255),w,b	;volatile
  1901  01382A  A4D8               	btfss	status,2,c
  1902  01382C  EF1A  F09C         	goto	u5891
  1903  013830  EF1C  F09C         	goto	u5890
  1904  013834                     u5891:
  1905  013834  EF2B  F09C         	goto	l6043
  1906  013838                     u5890:
  1907  013838                     
  1908                           ; BSR set to: 0
  1909  013838  51D9               	movf	_isolatedflag& (0+255),w,b	;volatile
  1910  01383A  A4D8               	btfss	status,2,c
  1911  01383C  EF22  F09C         	goto	u5901
  1912  013840  EF24  F09C         	goto	u5900
  1913  013844                     u5901:
  1914  013844  EF2B  F09C         	goto	l6043
  1915  013848                     u5900:
  1916  013848                     
  1917                           ; BSR set to: 0
  1918                           ;main.c: 170:        {;main.c: 171:            fastChargingcaps();
  1919  013848  ECD9  F091         	call	_fastChargingcaps	;wreg free
  1920  01384C                     
  1921                           ;main.c: 172:             Flag5sfastcharing =0;
  1922  01384C  0E00               	movlw	0
  1923  01384E  0100               	movlb	0	; () banked
  1924  013850  6FDB               	movwf	_Flag5sfastcharing& (0+255),b	;volatile
  1925                           
  1926                           ;main.c: 173:        }
  1927  013852  EF13  F09C         	goto	l583
  1928  013856                     l6043:
  1929                           
  1930                           ; BSR set to: 0
  1931  013856  05D9               	decf	_isolatedflag& (0+255),w,b	;volatile
  1932  013858  A4D8               	btfss	status,2,c
  1933  01385A  EF31  F09C         	goto	u5911
  1934  01385E  EF33  F09C         	goto	u5910
  1935  013862                     u5911:
  1936  013862  EF13  F09C         	goto	l583
  1937  013866                     u5910:
  1938  013866                     
  1939                           ; BSR set to: 0
  1940                           ;main.c: 175:        {;main.c: 176:             isolatedOneTaskCap();
  1941  013866  EC6B  F09F         	call	_isolatedOneTaskCap	;wreg free
  1942  01386A                     
  1943                           ;main.c: 177:             delayedBrownOut();
  1944  01386A  EC9A  F09B         	call	_delayedBrownOut	;wreg free
  1945  01386E  EF13  F09C         	goto	l583
  1946  013872  EF1F  F000         	goto	start
  1947  013876                     __end_of_main:
  1948                           	callstack 0
  1949                           
  1950 ;; *************** function _isolatedOneTaskCap *****************
  1951 ;; Defined at:
  1952 ;;		line 437 in file "ConfigureCaps.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1970 ;;Total ram usage:        0 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; Hardware stack levels required when called: 2
  1973 ;; This function calls:
  1974 ;;		Nothing
  1975 ;; This function is called by:
  1976 ;;		_main
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text1
  1981  013ED6                     __ptext1:
  1982                           	callstack 0
  1983  013ED6                     _isolatedOneTaskCap:
  1984                           	callstack 28
  1985  013ED6  947C               	bcf	124,2,c	;volatile
  1986  013ED8  9480               	bcf	128,2,c	;volatile
  1987  013EDA  827C               	bsf	124,1,c	;volatile
  1988  013EDC                     
  1989                           ;ConfigureCaps.c: 443:     capTaskParalle_count =7;
  1990  013EDC  0E07               	movlw	7
  1991  013EDE  0100               	movlb	0	; () banked
  1992  013EE0  6FD7               	movwf	_capTaskParalle_count& (0+255),b
  1993                           
  1994                           ;ConfigureCaps.c: 444:     capTaskSeries_count =1;
  1995  013EE2  0E01               	movlw	1
  1996  013EE4  6E5E               	movwf	_capTaskSeries_count^0,c
  1997  013EE6                     
  1998                           ; BSR set to: 0
  1999  013EE6  0012               	return		;funcret
  2000  013EE8                     __end_of_isolatedOneTaskCap:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _fastChargingcaps *****************
  2004 ;; Defined at:
  2005 ;;		line 448 in file "ConfigureCaps.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  vcap            4   80[BANK0 ] float 
  2010 ;;  voc             4   76[BANK0 ] float 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2021 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2023 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2024 ;;Total ram usage:        8 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 12
  2027 ;; This function calls:
  2028 ;;		___flge
  2029 ;;		___flmul
  2030 ;;		_addCapToParallel
  2031 ;;		_decoupleCapArray
  2032 ;;		_printf
  2033 ;;		_sampleChargingCapArray
  2034 ;;		_sampleEHvoc
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text2
  2041  0123B2                     __ptext2:
  2042                           	callstack 0
  2043  0123B2                     _fastChargingcaps:
  2044                           	callstack 18
  2045  0123B2                     
  2046                           ;ConfigureCaps.c: 451:     float vcap = 0;
  2047  0123B2  0E00               	movlw	0
  2048  0123B4  0100               	movlb	0	; () banked
  2049  0123B6  6FB0               	movwf	fastChargingcaps@vcap& (0+255),b
  2050  0123B8  0E00               	movlw	0
  2051  0123BA  6FB1               	movwf	(fastChargingcaps@vcap+1)& (0+255),b
  2052  0123BC  0E00               	movlw	0
  2053  0123BE  6FB2               	movwf	(fastChargingcaps@vcap+2)& (0+255),b
  2054  0123C0  0E00               	movlw	0
  2055  0123C2  6FB3               	movwf	(fastChargingcaps@vcap+3)& (0+255),b
  2056  0123C4                     
  2057                           ; BSR set to: 0
  2058                           ;ConfigureCaps.c: 453:    decoupleCapArray(1);
  2059  0123C4  0E01               	movlw	1
  2060  0123C6  EC27  F09F         	call	_decoupleCapArray
  2061  0123CA                     
  2062                           ;ConfigureCaps.c: 455:    voc=sampleEHvoc();
  2063  0123CA  EC45  F09D         	call	_sampleEHvoc	;wreg free
  2064  0123CE  C032  F0AC         	movff	?_sampleEHvoc,fastChargingcaps@voc
  2065  0123D2  C033  F0AD         	movff	?_sampleEHvoc+1,fastChargingcaps@voc+1
  2066  0123D6  C034  F0AE         	movff	?_sampleEHvoc+2,fastChargingcaps@voc+2
  2067  0123DA  C035  F0AF         	movff	?_sampleEHvoc+3,fastChargingcaps@voc+3
  2068  0123DE                     
  2069                           ;ConfigureCaps.c: 456:    printf("\r\n voc =%.2f\r\n", voc);
  2070  0123DE  0EC4               	movlw	low STR_20
  2071  0123E0  6E54               	movwf	printf@fmt^0,c
  2072  0123E2  0EFF               	movlw	high STR_20
  2073  0123E4  6E55               	movwf	(printf@fmt+1)^0,c
  2074  0123E6  C0AC  F056         	movff	fastChargingcaps@voc,?_printf+2
  2075  0123EA  C0AD  F057         	movff	fastChargingcaps@voc+1,?_printf+3
  2076  0123EE  C0AE  F058         	movff	fastChargingcaps@voc+2,?_printf+4
  2077  0123F2  C0AF  F059         	movff	fastChargingcaps@voc+3,?_printf+5
  2078  0123F6  ECCE  F09E         	call	_printf	;wreg free
  2079  0123FA                     
  2080                           ;ConfigureCaps.c: 457:    printf("\r\n voc_prev =%.2f\r\n", voc_prev);
  2081  0123FA  0EA0               	movlw	low STR_21
  2082  0123FC  6E54               	movwf	printf@fmt^0,c
  2083  0123FE  0EFF               	movlw	high STR_21
  2084  012400  6E55               	movwf	(printf@fmt+1)^0,c
  2085  012402  C0C8  F056         	movff	_voc_prev,?_printf+2
  2086  012406  C0C9  F057         	movff	_voc_prev+1,?_printf+3
  2087  01240A  C0CA  F058         	movff	_voc_prev+2,?_printf+4
  2088  01240E  C0CB  F059         	movff	_voc_prev+3,?_printf+5
  2089  012412  ECCE  F09E         	call	_printf	;wreg free
  2090  012416                     
  2091                           ;ConfigureCaps.c: 459:    vcap = sampleChargingCapArray();
  2092  012416  EC6B  F09D         	call	_sampleChargingCapArray	;wreg free
  2093  01241A  C032  F0B0         	movff	?_sampleChargingCapArray,fastChargingcaps@vcap
  2094  01241E  C033  F0B1         	movff	?_sampleChargingCapArray+1,fastChargingcaps@vcap+1
  2095  012422  C034  F0B2         	movff	?_sampleChargingCapArray+2,fastChargingcaps@vcap+2
  2096  012426  C035  F0B3         	movff	?_sampleChargingCapArray+3,fastChargingcaps@vcap+3
  2097  01242A                     
  2098                           ;ConfigureCaps.c: 460:    printf("\r\n vcap =%.2f\r\n", vcap);
  2099  01242A  0EB4               	movlw	low STR_22
  2100  01242C  6E54               	movwf	printf@fmt^0,c
  2101  01242E  0EFF               	movlw	high STR_22
  2102  012430  6E55               	movwf	(printf@fmt+1)^0,c
  2103  012432  C0B0  F056         	movff	fastChargingcaps@vcap,?_printf+2
  2104  012436  C0B1  F057         	movff	fastChargingcaps@vcap+1,?_printf+3
  2105  01243A  C0B2  F058         	movff	fastChargingcaps@vcap+2,?_printf+4
  2106  01243E  C0B3  F059         	movff	fastChargingcaps@vcap+3,?_printf+5
  2107  012442  ECCE  F09E         	call	_printf	;wreg free
  2108  012446                     
  2109                           ;ConfigureCaps.c: 461:    printf("\r\n vcap_prev =%.2f\r\n", vcap_prev);
  2110  012446  0E8B               	movlw	low STR_23
  2111  012448  6E54               	movwf	printf@fmt^0,c
  2112  01244A  0EFF               	movlw	high STR_23
  2113  01244C  6E55               	movwf	(printf@fmt+1)^0,c
  2114  01244E  C0C0  F056         	movff	_vcap_prev,?_printf+2
  2115  012452  C0C1  F057         	movff	_vcap_prev+1,?_printf+3
  2116  012456  C0C2  F058         	movff	_vcap_prev+2,?_printf+4
  2117  01245A  C0C3  F059         	movff	_vcap_prev+3,?_printf+5
  2118  01245E  ECCE  F09E         	call	_printf	;wreg free
  2119  012462                     
  2120                           ;ConfigureCaps.c: 463:    if (vcap >(0.9 * voc_current))
  2121  012462  0E66               	movlw	102
  2122  012464  6E13               	movwf	___flmul@a^0,c
  2123  012466  0E66               	movlw	102
  2124  012468  6E14               	movwf	(___flmul@a+1)^0,c
  2125  01246A  0E66               	movlw	102
  2126  01246C  6E15               	movwf	(___flmul@a+2)^0,c
  2127  01246E  0E3F               	movlw	63
  2128  012470  6E16               	movwf	(___flmul@a+3)^0,c
  2129  012472  C0C4  F00F         	movff	_voc_current,___flmul@b
  2130  012476  C0C5  F010         	movff	_voc_current+1,___flmul@b+1
  2131  01247A  C0C6  F011         	movff	_voc_current+2,___flmul@b+2
  2132  01247E  C0C7  F012         	movff	_voc_current+3,___flmul@b+3
  2133  012482  EC7C  F08B         	call	___flmul	;wreg free
  2134  012486  C00F  F028         	movff	?___flmul,___flge@ff1
  2135  01248A  C010  F029         	movff	?___flmul+1,___flge@ff1+1
  2136  01248E  C011  F02A         	movff	?___flmul+2,___flge@ff1+2
  2137  012492  C012  F02B         	movff	?___flmul+3,___flge@ff1+3
  2138  012496  C0B0  F02C         	movff	fastChargingcaps@vcap,___flge@ff2
  2139  01249A  C0B1  F02D         	movff	fastChargingcaps@vcap+1,___flge@ff2+1
  2140  01249E  C0B2  F02E         	movff	fastChargingcaps@vcap+2,___flge@ff2+2
  2141  0124A2  C0B3  F02F         	movff	fastChargingcaps@vcap+3,___flge@ff2+3
  2142  0124A6  EC0A  F098         	call	___flge	;wreg free
  2143  0124AA  B0D8               	btfsc	status,0,c
  2144  0124AC  EF5A  F092         	goto	u5681
  2145  0124B0  EF5C  F092         	goto	u5680
  2146  0124B4                     u5681:
  2147  0124B4  EF60  F092         	goto	l5923
  2148  0124B8                     u5680:
  2149  0124B8                     
  2150                           ;ConfigureCaps.c: 464:     {;ConfigureCaps.c: 465:         addCapToParallel();
  2151  0124B8  EC95  F093         	call	_addCapToParallel	;wreg free
  2152                           
  2153                           ;ConfigureCaps.c: 466:      }
  2154  0124BC  EF8B  F092         	goto	l5927
  2155  0124C0                     l5923:
  2156  0124C0  C0C4  F028         	movff	_voc_current,___flge@ff1
  2157  0124C4  C0C5  F029         	movff	_voc_current+1,___flge@ff1+1
  2158  0124C8  C0C6  F02A         	movff	_voc_current+2,___flge@ff1+2
  2159  0124CC  C0C7  F02B         	movff	_voc_current+3,___flge@ff1+3
  2160  0124D0  C0C8  F02C         	movff	_voc_prev,___flge@ff2
  2161  0124D4  C0C9  F02D         	movff	_voc_prev+1,___flge@ff2+1
  2162  0124D8  C0CA  F02E         	movff	_voc_prev+2,___flge@ff2+2
  2163  0124DC  C0CB  F02F         	movff	_voc_prev+3,___flge@ff2+3
  2164  0124E0  EC0A  F098         	call	___flge	;wreg free
  2165  0124E4  B0D8               	btfsc	status,0,c
  2166  0124E6  EF77  F092         	goto	u5691
  2167  0124EA  EF79  F092         	goto	u5690
  2168  0124EE                     u5691:
  2169  0124EE  EF8B  F092         	goto	l5927
  2170  0124F2                     u5690:
  2171  0124F2  C0C0  F028         	movff	_vcap_prev,___flge@ff1
  2172  0124F6  C0C1  F029         	movff	_vcap_prev+1,___flge@ff1+1
  2173  0124FA  C0C2  F02A         	movff	_vcap_prev+2,___flge@ff1+2
  2174  0124FE  C0C3  F02B         	movff	_vcap_prev+3,___flge@ff1+3
  2175  012502  C0BC  F02C         	movff	_vcap_current,___flge@ff2
  2176  012506  C0BD  F02D         	movff	_vcap_current+1,___flge@ff2+1
  2177  01250A  C0BE  F02E         	movff	_vcap_current+2,___flge@ff2+2
  2178  01250E  C0BF  F02F         	movff	_vcap_current+3,___flge@ff2+3
  2179  012512  EC0A  F098         	call	___flge	;wreg free
  2180  012516                     l5927:
  2181                           
  2182                           ;ConfigureCaps.c: 484:    if(capParalle_count ==8 )
  2183  012516  0E08               	movlw	8
  2184  012518  0100               	movlb	0	; () banked
  2185  01251A  19FF               	xorwf	_capParalle_count& (0+255),w,b
  2186  01251C  A4D8               	btfss	status,2,c
  2187  01251E  EF93  F092         	goto	u5701
  2188  012522  EF95  F092         	goto	u5700
  2189  012526                     u5701:
  2190  012526  EFB7  F092         	goto	l5935
  2191  01252A                     u5700:
  2192  01252A                     
  2193                           ; BSR set to: 0
  2194                           ;ConfigureCaps.c: 485:         {;ConfigureCaps.c: 486:              if(vcap > 3.29)
  2195  01252A  0E5C               	movlw	92
  2196  01252C  6E28               	movwf	___flge@ff1^0,c
  2197  01252E  0E8F               	movlw	143
  2198  012530  6E29               	movwf	(___flge@ff1+1)^0,c
  2199  012532  0E52               	movlw	82
  2200  012534  6E2A               	movwf	(___flge@ff1+2)^0,c
  2201  012536  0E40               	movlw	64
  2202  012538  6E2B               	movwf	(___flge@ff1+3)^0,c
  2203  01253A  C0B0  F02C         	movff	fastChargingcaps@vcap,___flge@ff2
  2204  01253E  C0B1  F02D         	movff	fastChargingcaps@vcap+1,___flge@ff2+1
  2205  012542  C0B2  F02E         	movff	fastChargingcaps@vcap+2,___flge@ff2+2
  2206  012546  C0B3  F02F         	movff	fastChargingcaps@vcap+3,___flge@ff2+3
  2207  01254A  EC0A  F098         	call	___flge	;wreg free
  2208  01254E  B0D8               	btfsc	status,0,c
  2209  012550  EFAC  F092         	goto	u5711
  2210  012554  EFAE  F092         	goto	u5710
  2211  012558                     u5711:
  2212  012558  EFB7  F092         	goto	l5935
  2213  01255C                     u5710:
  2214  01255C                     
  2215                           ;ConfigureCaps.c: 487:              {;ConfigureCaps.c: 488:                     printf("
      +                          \r\n Now the volatge of the paraller caps is up to 3.3v \r\n");
  2216  01255C  0ED1               	movlw	low STR_24
  2217  01255E  6E54               	movwf	printf@fmt^0,c
  2218  012560  0EFD               	movlw	high STR_24
  2219  012562  6E55               	movwf	(printf@fmt+1)^0,c
  2220  012564  ECCE  F09E         	call	_printf	;wreg free
  2221  012568                     
  2222                           ;ConfigureCaps.c: 489:                     isolatedflag=1;
  2223  012568  0E01               	movlw	1
  2224  01256A  0100               	movlb	0	; () banked
  2225  01256C  6FD9               	movwf	_isolatedflag& (0+255),b	;volatile
  2226  01256E                     l5935:
  2227                           
  2228                           ;ConfigureCaps.c: 494:      decoupleCapArray(0);
  2229  01256E  0E00               	movlw	0
  2230  012570  EC27  F09F         	call	_decoupleCapArray
  2231  012574  0012               	return		;funcret
  2232  012576                     __end_of_fastChargingcaps:
  2233                           	callstack 0
  2234                           
  2235 ;; *************** function _sampleEHvoc *****************
  2236 ;; Defined at:
  2237 ;;		line 94 in file "ConfigureCaps.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  voc             4   53[COMRAM] float 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  4   49[COMRAM] float 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2255 ;;Total ram usage:        8 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 4
  2258 ;; This function calls:
  2259 ;;		_getADCValue
  2260 ;; This function is called by:
  2261 ;;		_fastChargingcaps
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text3
  2266  013A8A                     __ptext3:
  2267                           	callstack 0
  2268  013A8A                     _sampleEHvoc:
  2269                           	callstack 25
  2270  013A8A  847C               	bsf	124,2,c	;volatile
  2271  013A8C  927C               	bcf	124,1,c	;volatile
  2272  013A8E  9480               	bcf	128,2,c	;volatile
  2273  013A90                     
  2274                           ;ConfigureCaps.c: 102:     voc=getADCValue();
  2275  013A90  ECD1  F09B         	call	_getADCValue	;wreg free
  2276  013A94  C028  F036         	movff	?_getADCValue,sampleEHvoc@voc
  2277  013A98  C029  F037         	movff	?_getADCValue+1,sampleEHvoc@voc+1
  2278  013A9C  C02A  F038         	movff	?_getADCValue+2,sampleEHvoc@voc+2
  2279  013AA0  C02B  F039         	movff	?_getADCValue+3,sampleEHvoc@voc+3
  2280  013AA4                     
  2281                           ;ConfigureCaps.c: 104:     voc_prev = voc_current;
  2282  013AA4  C0C4  F0C8         	movff	_voc_current,_voc_prev
  2283  013AA8  C0C5  F0C9         	movff	_voc_current+1,_voc_prev+1
  2284  013AAC  C0C6  F0CA         	movff	_voc_current+2,_voc_prev+2
  2285  013AB0  C0C7  F0CB         	movff	_voc_current+3,_voc_prev+3
  2286  013AB4                     
  2287                           ;ConfigureCaps.c: 105:     voc_current = voc;
  2288  013AB4  C036  F0C4         	movff	sampleEHvoc@voc,_voc_current
  2289  013AB8  C037  F0C5         	movff	sampleEHvoc@voc+1,_voc_current+1
  2290  013ABC  C038  F0C6         	movff	sampleEHvoc@voc+2,_voc_current+2
  2291  013AC0  C039  F0C7         	movff	sampleEHvoc@voc+3,_voc_current+3
  2292  013AC4                     
  2293                           ;ConfigureCaps.c: 106:     return voc;
  2294  013AC4  C036  F032         	movff	sampleEHvoc@voc,?_sampleEHvoc
  2295  013AC8  C037  F033         	movff	sampleEHvoc@voc+1,?_sampleEHvoc+1
  2296  013ACC  C038  F034         	movff	sampleEHvoc@voc+2,?_sampleEHvoc+2
  2297  013AD0  C039  F035         	movff	sampleEHvoc@voc+3,?_sampleEHvoc+3
  2298  013AD4  0012               	return		;funcret
  2299  013AD6                     __end_of_sampleEHvoc:
  2300                           	callstack 0
  2301                           
  2302 ;; *************** function _sampleChargingCapArray *****************
  2303 ;; Defined at:
  2304 ;;		line 109 in file "ConfigureCaps.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  vcap            4   53[COMRAM] float 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  4   49[COMRAM] float 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2318 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2319 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2321 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2322 ;;Total ram usage:        8 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; Hardware stack levels required when called: 4
  2325 ;; This function calls:
  2326 ;;		_getADCValue
  2327 ;; This function is called by:
  2328 ;;		_fastChargingcaps
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text4
  2333  013AD6                     __ptext4:
  2334                           	callstack 0
  2335  013AD6                     _sampleChargingCapArray:
  2336                           	callstack 25
  2337  013AD6  947C               	bcf	124,2,c	;volatile
  2338  013AD8  927C               	bcf	124,1,c	;volatile
  2339  013ADA  8480               	bsf	128,2,c	;volatile
  2340  013ADC                     
  2341                           ;ConfigureCaps.c: 117:     vcap=getADCValue();
  2342  013ADC  ECD1  F09B         	call	_getADCValue	;wreg free
  2343  013AE0  C028  F036         	movff	?_getADCValue,sampleChargingCapArray@vcap
  2344  013AE4  C029  F037         	movff	?_getADCValue+1,sampleChargingCapArray@vcap+1
  2345  013AE8  C02A  F038         	movff	?_getADCValue+2,sampleChargingCapArray@vcap+2
  2346  013AEC  C02B  F039         	movff	?_getADCValue+3,sampleChargingCapArray@vcap+3
  2347  013AF0                     
  2348                           ;ConfigureCaps.c: 119:     vcap_prev = vcap_current;
  2349  013AF0  C0BC  F0C0         	movff	_vcap_current,_vcap_prev
  2350  013AF4  C0BD  F0C1         	movff	_vcap_current+1,_vcap_prev+1
  2351  013AF8  C0BE  F0C2         	movff	_vcap_current+2,_vcap_prev+2
  2352  013AFC  C0BF  F0C3         	movff	_vcap_current+3,_vcap_prev+3
  2353  013B00                     
  2354                           ;ConfigureCaps.c: 120:     vcap_current = vcap;
  2355  013B00  C036  F0BC         	movff	sampleChargingCapArray@vcap,_vcap_current
  2356  013B04  C037  F0BD         	movff	sampleChargingCapArray@vcap+1,_vcap_current+1
  2357  013B08  C038  F0BE         	movff	sampleChargingCapArray@vcap+2,_vcap_current+2
  2358  013B0C  C039  F0BF         	movff	sampleChargingCapArray@vcap+3,_vcap_current+3
  2359  013B10                     
  2360                           ;ConfigureCaps.c: 122:     return vcap;
  2361  013B10  C036  F032         	movff	sampleChargingCapArray@vcap,?_sampleChargingCapArray
  2362  013B14  C037  F033         	movff	sampleChargingCapArray@vcap+1,?_sampleChargingCapArray+1
  2363  013B18  C038  F034         	movff	sampleChargingCapArray@vcap+2,?_sampleChargingCapArray+2
  2364  013B1C  C039  F035         	movff	sampleChargingCapArray@vcap+3,?_sampleChargingCapArray+3
  2365  013B20  0012               	return		;funcret
  2366  013B22                     __end_of_sampleChargingCapArray:
  2367                           	callstack 0
  2368                           
  2369 ;; *************** function _decoupleCapArray *****************
  2370 ;; Defined at:
  2371 ;;		line 125 in file "ConfigureCaps.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  state           1    wreg     _Bool 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  state           1    0[COMRAM] _Bool 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2389 ;;Total ram usage:        1 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; Hardware stack levels required when called: 2
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_fastChargingcaps
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text5
  2400  013E4E                     __ptext5:
  2401                           	callstack 0
  2402  013E4E                     _decoupleCapArray:
  2403                           	callstack 27
  2404                           
  2405                           ;incstack = 0
  2406                           ;decoupleCapArray@state stored from wreg
  2407  013E4E  6E01               	movwf	decoupleCapArray@state^0,c
  2408  013E50                     
  2409                           ;ConfigureCaps.c: 125: void decoupleCapArray(_Bool state);ConfigureCaps.c: 126: {;Config
      +                          ureCaps.c: 128:     if (state == 1) {
  2410  013E50  0401               	decf	decoupleCapArray@state^0,w,c
  2411  013E52  A4D8               	btfss	status,2,c
  2412  013E54  EF2E  F09F         	goto	u5651
  2413  013E58  EF30  F09F         	goto	u5650
  2414  013E5C                     u5651:
  2415  013E5C  EF33  F09F         	goto	l728
  2416  013E60                     u5650:
  2417  013E60  9480               	bcf	128,2,c	;volatile
  2418  013E62  EF35  F09F         	goto	l732
  2419  013E66                     l728:
  2420  013E66  847C               	bsf	124,2,c	;volatile
  2421  013E68  8480               	bsf	128,2,c	;volatile
  2422  013E6A                     l732:
  2423  013E6A  0012               	return		;funcret
  2424  013E6C                     __end_of_decoupleCapArray:
  2425                           	callstack 0
  2426                           
  2427 ;; *************** function _addCapToParallel *****************
  2428 ;; Defined at:
  2429 ;;		line 138 in file "ConfigureCaps.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2447 ;;Total ram usage:        2 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 11
  2450 ;; This function calls:
  2451 ;;		_printf
  2452 ;; This function is called by:
  2453 ;;		_fastChargingcaps
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text6
  2458  01272A                     __ptext6:
  2459                           	callstack 0
  2460  01272A                     _addCapToParallel:
  2461                           	callstack 18
  2462  01272A                     
  2463                           ;ConfigureCaps.c: 141:     switch(capParalle_count)
  2464  01272A  EF43  F094         	goto	l5795
  2465  01272E                     l737:
  2466                           
  2467                           ; BSR set to: 0
  2468  01272E  887E               	bsf	126,4,c	;volatile
  2469  012730                     
  2470                           ; BSR set to: 0
  2471  012730  947E               	bcf	126,2,c	;volatile
  2472  012732                     
  2473                           ; BSR set to: 0
  2474  012732  9E7E               	bcf	126,7,c	;volatile
  2475  012734                     
  2476                           ; BSR set to: 0
  2477                           ;ConfigureCaps.c: 148:                 printf("\r\n CAP78 in parallel \r\n");
  2478  012734  0E31               	movlw	low STR_3
  2479  012736  6E54               	movwf	printf@fmt^0,c
  2480  012738  0EFF               	movlw	high STR_3
  2481  01273A  6E55               	movwf	(printf@fmt+1)^0,c
  2482  01273C  ECCE  F09E         	call	_printf	;wreg free
  2483  012740                     
  2484                           ;ConfigureCaps.c: 150:                 capParalle_count =2;
  2485  012740  0E02               	movlw	2
  2486  012742  0100               	movlb	0	; () banked
  2487  012744  6FFF               	movwf	_capParalle_count& (0+255),b
  2488  012746                     
  2489                           ; BSR set to: 0
  2490                           ;ConfigureCaps.c: 151:                 capSeries_count=6;
  2491  012746  0E06               	movlw	6
  2492  012748  0101               	movlb	1	; () banked
  2493  01274A  6F59               	movwf	_capSeries_count& (0+255),b
  2494                           
  2495                           ;ConfigureCaps.c: 152:                 break;
  2496  01274C  EF6D  F094         	goto	l871
  2497  012750                     l745:
  2498                           
  2499                           ; BSR set to: 0
  2500  012750  947E               	bcf	126,2,c	;volatile
  2501  012752                     
  2502                           ; BSR set to: 0
  2503  012752  887E               	bsf	126,4,c	;volatile
  2504  012754                     
  2505                           ; BSR set to: 0
  2506  012754  8C7E               	bsf	126,6,c	;volatile
  2507  012756                     
  2508                           ; BSR set to: 0
  2509  012756  9E7E               	bcf	126,7,c	;volatile
  2510  012758                     
  2511                           ; BSR set to: 0
  2512  012758  947F               	bcf	127,2,c	;volatile
  2513  01275A                     
  2514                           ; BSR set to: 0
  2515                           ;ConfigureCaps.c: 161:                 printf("\r\n CAP678 in parallel \r\n");
  2516  01275A  0E00               	movlw	low STR_4
  2517  01275C  6E54               	movwf	printf@fmt^0,c
  2518  01275E  0EFF               	movlw	high STR_4
  2519  012760  6E55               	movwf	(printf@fmt+1)^0,c
  2520  012762  ECCE  F09E         	call	_printf	;wreg free
  2521  012766                     
  2522                           ;ConfigureCaps.c: 163:                 capParalle_count =3;
  2523  012766  0E03               	movlw	3
  2524  012768  0100               	movlb	0	; () banked
  2525  01276A  6FFF               	movwf	_capParalle_count& (0+255),b
  2526  01276C                     
  2527                           ; BSR set to: 0
  2528                           ;ConfigureCaps.c: 164:                 capSeries_count=5;
  2529  01276C  0E05               	movlw	5
  2530  01276E  0101               	movlb	1	; () banked
  2531  012770  6F59               	movwf	_capSeries_count& (0+255),b
  2532                           
  2533                           ;ConfigureCaps.c: 165:                 break;
  2534  012772  EF6D  F094         	goto	l871
  2535  012776                     l756:
  2536                           
  2537                           ; BSR set to: 0
  2538  012776  947E               	bcf	126,2,c	;volatile
  2539  012778                     
  2540                           ; BSR set to: 0
  2541  012778  887E               	bsf	126,4,c	;volatile
  2542  01277A                     
  2543                           ; BSR set to: 0
  2544  01277A  8C7E               	bsf	126,6,c	;volatile
  2545  01277C                     
  2546                           ; BSR set to: 0
  2547  01277C  867F               	bsf	127,3,c	;volatile
  2548  01277E                     
  2549                           ; BSR set to: 0
  2550  01277E  9E7E               	bcf	126,7,c	;volatile
  2551  012780                     
  2552                           ; BSR set to: 0
  2553  012780  947F               	bcf	127,2,c	;volatile
  2554  012782                     
  2555                           ; BSR set to: 0
  2556  012782  907F               	bcf	127,0,c	;volatile
  2557  012784                     
  2558                           ; BSR set to: 0
  2559                           ;ConfigureCaps.c: 176:                 printf("\r\n CAP5678 in parallel \r\n");
  2560  012784  0ECD               	movlw	low STR_5
  2561  012786  6E54               	movwf	printf@fmt^0,c
  2562  012788  0EFE               	movlw	high STR_5
  2563  01278A  6E55               	movwf	(printf@fmt+1)^0,c
  2564  01278C  ECCE  F09E         	call	_printf	;wreg free
  2565  012790                     
  2566                           ;ConfigureCaps.c: 178:                 capParalle_count =4;
  2567  012790  0E04               	movlw	4
  2568  012792  0100               	movlb	0	; () banked
  2569  012794  6FFF               	movwf	_capParalle_count& (0+255),b
  2570  012796                     
  2571                           ; BSR set to: 0
  2572                           ;ConfigureCaps.c: 179:                 capSeries_count=4;
  2573  012796  0E04               	movlw	4
  2574  012798  0101               	movlb	1	; () banked
  2575  01279A  6F59               	movwf	_capSeries_count& (0+255),b
  2576                           
  2577                           ;ConfigureCaps.c: 180:                  break;
  2578  01279C  EF6D  F094         	goto	l871
  2579  0127A0                     l771:
  2580                           
  2581                           ; BSR set to: 0
  2582  0127A0  947E               	bcf	126,2,c	;volatile
  2583  0127A2                     
  2584                           ; BSR set to: 0
  2585  0127A2  887E               	bsf	126,4,c	;volatile
  2586  0127A4                     
  2587                           ; BSR set to: 0
  2588  0127A4  8C7E               	bsf	126,6,c	;volatile
  2589  0127A6                     
  2590                           ; BSR set to: 0
  2591  0127A6  867F               	bsf	127,3,c	;volatile
  2592  0127A8                     
  2593                           ; BSR set to: 0
  2594  0127A8  827F               	bsf	127,1,c	;volatile
  2595  0127AA                     
  2596                           ; BSR set to: 0
  2597  0127AA  9E7E               	bcf	126,7,c	;volatile
  2598  0127AC                     
  2599                           ; BSR set to: 0
  2600  0127AC  947F               	bcf	127,2,c	;volatile
  2601  0127AE                     
  2602                           ; BSR set to: 0
  2603  0127AE  907F               	bcf	127,0,c	;volatile
  2604  0127B0                     
  2605                           ; BSR set to: 0
  2606  0127B0  927D               	bcf	125,1,c	;volatile
  2607  0127B2                     
  2608                           ; BSR set to: 0
  2609                           ;ConfigureCaps.c: 194:                 printf("\r\n CAP45678 in parallel \r\n");
  2610  0127B2  0E98               	movlw	low STR_6
  2611  0127B4  6E54               	movwf	printf@fmt^0,c
  2612  0127B6  0EFE               	movlw	high STR_6
  2613  0127B8  6E55               	movwf	(printf@fmt+1)^0,c
  2614  0127BA  ECCE  F09E         	call	_printf	;wreg free
  2615  0127BE                     
  2616                           ;ConfigureCaps.c: 196:                 capParalle_count =5;
  2617  0127BE  0E05               	movlw	5
  2618  0127C0  0100               	movlb	0	; () banked
  2619  0127C2  6FFF               	movwf	_capParalle_count& (0+255),b
  2620  0127C4                     
  2621                           ; BSR set to: 0
  2622                           ;ConfigureCaps.c: 197:                 capSeries_count=3;
  2623  0127C4  0E03               	movlw	3
  2624  0127C6  0101               	movlb	1	; () banked
  2625  0127C8  6F59               	movwf	_capSeries_count& (0+255),b
  2626                           
  2627                           ;ConfigureCaps.c: 198:                  break;
  2628  0127CA  EF6D  F094         	goto	l871
  2629  0127CE                     l790:
  2630                           
  2631                           ; BSR set to: 0
  2632  0127CE  947E               	bcf	126,2,c	;volatile
  2633  0127D0                     
  2634                           ; BSR set to: 0
  2635  0127D0  887E               	bsf	126,4,c	;volatile
  2636  0127D2                     
  2637                           ; BSR set to: 0
  2638  0127D2  8C7E               	bsf	126,6,c	;volatile
  2639  0127D4                     
  2640                           ; BSR set to: 0
  2641  0127D4  867F               	bsf	127,3,c	;volatile
  2642  0127D6                     
  2643                           ; BSR set to: 0
  2644  0127D6  827F               	bsf	127,1,c	;volatile
  2645  0127D8                     
  2646                           ; BSR set to: 0
  2647  0127D8  807D               	bsf	125,0,c	;volatile
  2648  0127DA                     
  2649                           ; BSR set to: 0
  2650  0127DA  9E7E               	bcf	126,7,c	;volatile
  2651  0127DC                     
  2652                           ; BSR set to: 0
  2653  0127DC  947F               	bcf	127,2,c	;volatile
  2654  0127DE                     
  2655                           ; BSR set to: 0
  2656  0127DE  907F               	bcf	127,0,c	;volatile
  2657  0127E0                     
  2658                           ; BSR set to: 0
  2659  0127E0  927D               	bcf	125,1,c	;volatile
  2660  0127E2                     
  2661                           ; BSR set to: 0
  2662  0127E2  9A7D               	bcf	125,5,c	;volatile
  2663  0127E4                     
  2664                           ; BSR set to: 0
  2665                           ;ConfigureCaps.c: 213:                 printf("\r\n CAP345678 in parallel \r\n");
  2666  0127E4  0E61               	movlw	low STR_7
  2667  0127E6  6E54               	movwf	printf@fmt^0,c
  2668  0127E8  0EFE               	movlw	high STR_7
  2669  0127EA  6E55               	movwf	(printf@fmt+1)^0,c
  2670  0127EC  ECCE  F09E         	call	_printf	;wreg free
  2671  0127F0                     
  2672                           ;ConfigureCaps.c: 215:                 capParalle_count =6;
  2673  0127F0  0E06               	movlw	6
  2674  0127F2  0100               	movlb	0	; () banked
  2675  0127F4  6FFF               	movwf	_capParalle_count& (0+255),b
  2676  0127F6                     
  2677                           ; BSR set to: 0
  2678                           ;ConfigureCaps.c: 216:                 capSeries_count=2;
  2679  0127F6  0E02               	movlw	2
  2680  0127F8  0101               	movlb	1	; () banked
  2681  0127FA  6F59               	movwf	_capSeries_count& (0+255),b
  2682                           
  2683                           ;ConfigureCaps.c: 217:                  break;
  2684  0127FC  EF6D  F094         	goto	l871
  2685  012800                     l813:
  2686                           
  2687                           ; BSR set to: 0
  2688  012800  947E               	bcf	126,2,c	;volatile
  2689  012802                     
  2690                           ; BSR set to: 0
  2691  012802  887E               	bsf	126,4,c	;volatile
  2692  012804                     
  2693                           ; BSR set to: 0
  2694  012804  8C7E               	bsf	126,6,c	;volatile
  2695  012806                     
  2696                           ; BSR set to: 0
  2697  012806  867F               	bsf	127,3,c	;volatile
  2698  012808                     
  2699                           ; BSR set to: 0
  2700  012808  827F               	bsf	127,1,c	;volatile
  2701  01280A                     
  2702                           ; BSR set to: 0
  2703  01280A  807D               	bsf	125,0,c	;volatile
  2704  01280C                     
  2705                           ; BSR set to: 0
  2706  01280C  887D               	bsf	125,4,c	;volatile
  2707  01280E                     
  2708                           ; BSR set to: 0
  2709  01280E  9E7E               	bcf	126,7,c	;volatile
  2710  012810                     
  2711                           ; BSR set to: 0
  2712  012810  947F               	bcf	127,2,c	;volatile
  2713  012812                     
  2714                           ; BSR set to: 0
  2715  012812  907F               	bcf	127,0,c	;volatile
  2716  012814                     
  2717                           ; BSR set to: 0
  2718  012814  927D               	bcf	125,1,c	;volatile
  2719  012816                     
  2720                           ; BSR set to: 0
  2721  012816  9A7D               	bcf	125,5,c	;volatile
  2722  012818                     
  2723                           ; BSR set to: 0
  2724  012818  9E7D               	bcf	125,7,c	;volatile
  2725  01281A                     
  2726                           ; BSR set to: 0
  2727                           ;ConfigureCaps.c: 233:                 printf("\r\n CAP2345678 in parallel \r\n");
  2728  01281A  0E28               	movlw	low STR_8
  2729  01281C  6E54               	movwf	printf@fmt^0,c
  2730  01281E  0EFE               	movlw	high STR_8
  2731  012820  6E55               	movwf	(printf@fmt+1)^0,c
  2732  012822  ECCE  F09E         	call	_printf	;wreg free
  2733  012826                     
  2734                           ;ConfigureCaps.c: 235:                 capParalle_count =7;
  2735  012826  0E07               	movlw	7
  2736  012828  0100               	movlb	0	; () banked
  2737  01282A  6FFF               	movwf	_capParalle_count& (0+255),b
  2738  01282C                     
  2739                           ; BSR set to: 0
  2740                           ;ConfigureCaps.c: 236:                 capSeries_count=1;
  2741  01282C  0E01               	movlw	1
  2742  01282E  0101               	movlb	1	; () banked
  2743  012830  6F59               	movwf	_capSeries_count& (0+255),b
  2744                           
  2745                           ;ConfigureCaps.c: 237:             break;
  2746  012832  EF6D  F094         	goto	l871
  2747  012836                     l840:
  2748                           
  2749                           ; BSR set to: 0
  2750  012836  947E               	bcf	126,2,c	;volatile
  2751  012838                     
  2752                           ; BSR set to: 0
  2753  012838  887E               	bsf	126,4,c	;volatile
  2754  01283A                     
  2755                           ; BSR set to: 0
  2756  01283A  8C7E               	bsf	126,6,c	;volatile
  2757  01283C                     
  2758                           ; BSR set to: 0
  2759  01283C  867F               	bsf	127,3,c	;volatile
  2760  01283E                     
  2761                           ; BSR set to: 0
  2762  01283E  827F               	bsf	127,1,c	;volatile
  2763  012840                     
  2764                           ; BSR set to: 0
  2765  012840  807D               	bsf	125,0,c	;volatile
  2766  012842                     
  2767                           ; BSR set to: 0
  2768  012842  887D               	bsf	125,4,c	;volatile
  2769  012844                     
  2770                           ; BSR set to: 0
  2771  012844  8C7D               	bsf	125,6,c	;volatile
  2772  012846                     
  2773                           ; BSR set to: 0
  2774  012846  9E7E               	bcf	126,7,c	;volatile
  2775  012848                     
  2776                           ; BSR set to: 0
  2777  012848  947F               	bcf	127,2,c	;volatile
  2778  01284A                     
  2779                           ; BSR set to: 0
  2780  01284A  907F               	bcf	127,0,c	;volatile
  2781  01284C                     
  2782                           ; BSR set to: 0
  2783  01284C  927D               	bcf	125,1,c	;volatile
  2784  01284E                     
  2785                           ; BSR set to: 0
  2786  01284E  9A7D               	bcf	125,5,c	;volatile
  2787  012850                     
  2788                           ; BSR set to: 0
  2789  012850  9E7D               	bcf	125,7,c	;volatile
  2790  012852                     
  2791                           ; BSR set to: 0
  2792  012852  9680               	bcf	128,3,c	;volatile
  2793  012854                     
  2794                           ; BSR set to: 0
  2795                           ;ConfigureCaps.c: 256:                 printf("\r\n CAP12345678 in parallel \r\n");
  2796  012854  0E0A               	movlw	low STR_9
  2797  012856  6E54               	movwf	printf@fmt^0,c
  2798  012858  0EFE               	movlw	high STR_9
  2799  01285A  6E55               	movwf	(printf@fmt+1)^0,c
  2800  01285C  ECCE  F09E         	call	_printf	;wreg free
  2801  012860                     
  2802                           ;ConfigureCaps.c: 258:                 capParalle_count =8;
  2803  012860  0E08               	movlw	8
  2804  012862  0100               	movlb	0	; () banked
  2805  012864  6FFF               	movwf	_capParalle_count& (0+255),b
  2806  012866                     
  2807                           ; BSR set to: 0
  2808                           ;ConfigureCaps.c: 259:                 capSeries_count=0;
  2809  012866  0E00               	movlw	0
  2810  012868  0101               	movlb	1	; () banked
  2811  01286A  6F59               	movwf	_capSeries_count& (0+255),b
  2812                           
  2813                           ;ConfigureCaps.c: 260:             break;
  2814  01286C  EF6D  F094         	goto	l871
  2815  012870                     l5791:
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;ConfigureCaps.c: 263:                   printf("\r\n%d \r\n", capParalle_count);
  2819  012870  0EDE               	movlw	low STR_10
  2820  012872  6E54               	movwf	printf@fmt^0,c
  2821  012874  0EFF               	movlw	high STR_10
  2822  012876  6E55               	movwf	(printf@fmt+1)^0,c
  2823  012878  C0FF  F056         	movff	_capParalle_count,?_printf+2
  2824  01287C  6A57               	clrf	(?_printf+3)^0,c
  2825  01287E  ECCE  F09E         	call	_printf	;wreg free
  2826                           
  2827                           ;ConfigureCaps.c: 264:                 break;
  2828  012882  EF6D  F094         	goto	l871
  2829  012886                     l5795:
  2830  012886  0100               	movlb	0	; () banked
  2831  012888  51FF               	movf	_capParalle_count& (0+255),w,b
  2832  01288A  6E5C               	movwf	??_addCapToParallel^0,c
  2833  01288C  6A5D               	clrf	(??_addCapToParallel+1)^0,c
  2834                           
  2835                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2836                           ; Switch size 1, requested type "simple"
  2837                           ; Number of cases is 1, Range of values is 0 to 0
  2838                           ; switch strategies available:
  2839                           ; Name         Instructions Cycles
  2840                           ; simple_byte            4     3 (average)
  2841                           ;	Chosen strategy is simple_byte
  2842  01288E  505D               	movf	(??_addCapToParallel+1)^0,w,c
  2843  012890  0A00               	xorlw	0	; case 0
  2844  012892  B4D8               	btfsc	status,2,c
  2845  012894  EF4E  F094         	goto	l6119
  2846  012898  EF38  F094         	goto	l5791
  2847  01289C                     l6119:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ; Switch size 1, requested type "simple"
  2851                           ; Number of cases is 7, Range of values is 0 to 7
  2852                           ; switch strategies available:
  2853                           ; Name         Instructions Cycles
  2854                           ; simple_byte           22    12 (average)
  2855                           ;	Chosen strategy is simple_byte
  2856  01289C  505C               	movf	??_addCapToParallel^0,w,c
  2857  01289E  0A00               	xorlw	0	; case 0
  2858  0128A0  B4D8               	btfsc	status,2,c
  2859  0128A2  EF97  F093         	goto	l737
  2860  0128A6  0A02               	xorlw	2	; case 2
  2861  0128A8  B4D8               	btfsc	status,2,c
  2862  0128AA  EFA8  F093         	goto	l745
  2863  0128AE  0A01               	xorlw	1	; case 3
  2864  0128B0  B4D8               	btfsc	status,2,c
  2865  0128B2  EFBB  F093         	goto	l756
  2866  0128B6  0A07               	xorlw	7	; case 4
  2867  0128B8  B4D8               	btfsc	status,2,c
  2868  0128BA  EFD0  F093         	goto	l771
  2869  0128BE  0A01               	xorlw	1	; case 5
  2870  0128C0  B4D8               	btfsc	status,2,c
  2871  0128C2  EFE7  F093         	goto	l790
  2872  0128C6  0A03               	xorlw	3	; case 6
  2873  0128C8  B4D8               	btfsc	status,2,c
  2874  0128CA  EF00  F094         	goto	l813
  2875  0128CE  0A01               	xorlw	1	; case 7
  2876  0128D0  B4D8               	btfsc	status,2,c
  2877  0128D2  EF1B  F094         	goto	l840
  2878  0128D6  EF38  F094         	goto	l5791
  2879  0128DA                     l871:
  2880  0128DA  0012               	return		;funcret
  2881  0128DC                     __end_of_addCapToParallel:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _delayedBrownOut *****************
  2885 ;; Defined at:
  2886 ;;		line 419 in file "ConfigureCaps.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  vcap            4   76[BANK0 ] float 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;Total ram usage:        4 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 12
  2907 ;; This function calls:
  2908 ;;		___flge
  2909 ;;		_isolateCapsToSeries
  2910 ;;		_printf
  2911 ;;		_sampleTaskCapArray
  2912 ;; This function is called by:
  2913 ;;		_main
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text7
  2918  013734                     __ptext7:
  2919                           	callstack 0
  2920  013734                     _delayedBrownOut:
  2921                           	callstack 18
  2922  013734                     
  2923                           ;ConfigureCaps.c: 423:  vcap = sampleTaskCapArray();
  2924  013734  ECB9  F09E         	call	_sampleTaskCapArray	;wreg free
  2925  013738  C032  F0AC         	movff	?_sampleTaskCapArray,delayedBrownOut@vcap
  2926  01373C  C033  F0AD         	movff	?_sampleTaskCapArray+1,delayedBrownOut@vcap+1
  2927  013740  C034  F0AE         	movff	?_sampleTaskCapArray+2,delayedBrownOut@vcap+2
  2928  013744  C035  F0AF         	movff	?_sampleTaskCapArray+3,delayedBrownOut@vcap+3
  2929  013748                     
  2930                           ;ConfigureCaps.c: 425:  if (vcap <= (2.7 * 1.1)) {
  2931  013748  0E7B               	movlw	123
  2932  01374A  6E28               	movwf	___flge@ff1^0,c
  2933  01374C  0E14               	movlw	20
  2934  01374E  6E29               	movwf	(___flge@ff1+1)^0,c
  2935  013750  0E3E               	movlw	62
  2936  013752  6E2A               	movwf	(___flge@ff1+2)^0,c
  2937  013754  0E40               	movlw	64
  2938  013756  6E2B               	movwf	(___flge@ff1+3)^0,c
  2939  013758  C0AC  F02C         	movff	delayedBrownOut@vcap,___flge@ff2
  2940  01375C  C0AD  F02D         	movff	delayedBrownOut@vcap+1,___flge@ff2+1
  2941  013760  C0AE  F02E         	movff	delayedBrownOut@vcap+2,___flge@ff2+2
  2942  013764  C0AF  F02F         	movff	delayedBrownOut@vcap+3,___flge@ff2+3
  2943  013768  EC0A  F098         	call	___flge	;wreg free
  2944  01376C  A0D8               	btfss	status,0,c
  2945  01376E  EFBB  F09B         	goto	u5721
  2946  013772  EFBD  F09B         	goto	u5720
  2947  013776                     u5721:
  2948  013776  EFD0  F09B         	goto	l1028
  2949  01377A                     u5720:
  2950  01377A                     
  2951                           ;ConfigureCaps.c: 427:                     printf("\r\n %.2f \r\n",vcap);
  2952  01377A  0ED3               	movlw	low STR_19
  2953  01377C  6E54               	movwf	printf@fmt^0,c
  2954  01377E  0EFF               	movlw	high STR_19
  2955  013780  6E55               	movwf	(printf@fmt+1)^0,c
  2956  013782  C0AC  F056         	movff	delayedBrownOut@vcap,?_printf+2
  2957  013786  C0AD  F057         	movff	delayedBrownOut@vcap+1,?_printf+3
  2958  01378A  C0AE  F058         	movff	delayedBrownOut@vcap+2,?_printf+4
  2959  01378E  C0AF  F059         	movff	delayedBrownOut@vcap+3,?_printf+5
  2960  013792  ECCE  F09E         	call	_printf	;wreg free
  2961                           
  2962                           ;ConfigureCaps.c: 428:   isolateCapsToSeries();
  2963  013796  EC40  F095         	call	_isolateCapsToSeries	;wreg free
  2964  01379A                     
  2965                           ;ConfigureCaps.c: 429:                     isolatedflag=0;
  2966  01379A  0E00               	movlw	0
  2967  01379C  0100               	movlb	0	; () banked
  2968  01379E  6FD9               	movwf	_isolatedflag& (0+255),b	;volatile
  2969  0137A0                     l1028:
  2970  0137A0  0012               	return		;funcret
  2971  0137A2                     __end_of_delayedBrownOut:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _sampleTaskCapArray *****************
  2975 ;; Defined at:
  2976 ;;		line 269 in file "ConfigureCaps.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  vcap            4   53[COMRAM] float 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  4   49[COMRAM] float 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2991 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2993 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2994 ;;Total ram usage:        8 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; Hardware stack levels required when called: 4
  2997 ;; This function calls:
  2998 ;;		_getADCValue
  2999 ;; This function is called by:
  3000 ;;		_delayedBrownOut
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text8
  3005  013D72                     __ptext8:
  3006                           	callstack 0
  3007  013D72                     _sampleTaskCapArray:
  3008                           	callstack 25
  3009  013D72  927C               	bcf	124,1,c	;volatile
  3010  013D74  947C               	bcf	124,2,c	;volatile
  3011  013D76                     
  3012                           ;ConfigureCaps.c: 275:             vcap= getADCValue();
  3013  013D76  ECD1  F09B         	call	_getADCValue	;wreg free
  3014  013D7A  C028  F036         	movff	?_getADCValue,sampleTaskCapArray@vcap
  3015  013D7E  C029  F037         	movff	?_getADCValue+1,sampleTaskCapArray@vcap+1
  3016  013D82  C02A  F038         	movff	?_getADCValue+2,sampleTaskCapArray@vcap+2
  3017  013D86  C02B  F039         	movff	?_getADCValue+3,sampleTaskCapArray@vcap+3
  3018  013D8A                     
  3019                           ;ConfigureCaps.c: 277:             return vcap;
  3020  013D8A  C036  F032         	movff	sampleTaskCapArray@vcap,?_sampleTaskCapArray
  3021  013D8E  C037  F033         	movff	sampleTaskCapArray@vcap+1,?_sampleTaskCapArray+1
  3022  013D92  C038  F034         	movff	sampleTaskCapArray@vcap+2,?_sampleTaskCapArray+2
  3023  013D96  C039  F035         	movff	sampleTaskCapArray@vcap+3,?_sampleTaskCapArray+3
  3024  013D9A  0012               	return		;funcret
  3025  013D9C                     __end_of_sampleTaskCapArray:
  3026                           	callstack 0
  3027                           
  3028 ;; *************** function _getADCValue *****************
  3029 ;; Defined at:
  3030 ;;		line 56 in file "main.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  ADC_float       4   43[COMRAM] float 
  3035 ;;  getADCValue     2   47[COMRAM] unsigned short 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  4   39[COMRAM] float 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3048 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3049 ;;Total ram usage:       10 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; Hardware stack levels required when called: 3
  3052 ;; This function calls:
  3053 ;;		_ADCC_GetSingleConversion
  3054 ;;		___flmul
  3055 ;;		___xxtofl
  3056 ;; This function is called by:
  3057 ;;		_sampleEHvoc
  3058 ;;		_sampleChargingCapArray
  3059 ;;		_sampleTaskCapArray
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text9
  3064  0137A2                     __ptext9:
  3065                           	callstack 0
  3066  0137A2                     _getADCValue:
  3067                           	callstack 25
  3068  0137A2                     
  3069                           ;main.c: 59:     adc_result_t getADCValue =0 ;
  3070  0137A2  0E00               	movlw	0
  3071  0137A4  6E31               	movwf	(getADCValue@getADCValue+1)^0,c
  3072  0137A6  0E00               	movlw	0
  3073  0137A8  6E30               	movwf	getADCValue@getADCValue^0,c
  3074  0137AA                     
  3075                           ;main.c: 61:     getADCValue= ADCC_GetSingleConversion(channel_AND3);
  3076  0137AA  0E1B               	movlw	27
  3077  0137AC  ECA2  F09E         	call	_ADCC_GetSingleConversion
  3078  0137B0  C001  F030         	movff	?_ADCC_GetSingleConversion,getADCValue@getADCValue
  3079  0137B4  C002  F031         	movff	?_ADCC_GetSingleConversion+1,getADCValue@getADCValue+1
  3080  0137B8                     
  3081                           ;main.c: 63:     ADC_float = getADCValue *(3.3 / 1023);
  3082  0137B8  C030  F001         	movff	getADCValue@getADCValue,___xxtofl@val
  3083  0137BC  C031  F002         	movff	getADCValue@getADCValue+1,___xxtofl@val+1
  3084  0137C0  6A03               	clrf	(___xxtofl@val+2)^0,c
  3085  0137C2  6A04               	clrf	(___xxtofl@val+3)^0,c
  3086  0137C4  0E00               	movlw	0
  3087  0137C6  ECBB  F092         	call	___xxtofl
  3088  0137CA  C001  F00F         	movff	?___xxtofl,___flmul@b
  3089  0137CE  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3090  0137D2  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3091  0137D6  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3092  0137DA  0E0D               	movlw	13
  3093  0137DC  6E13               	movwf	___flmul@a^0,c
  3094  0137DE  0E68               	movlw	104
  3095  0137E0  6E14               	movwf	(___flmul@a+1)^0,c
  3096  0137E2  0E53               	movlw	83
  3097  0137E4  6E15               	movwf	(___flmul@a+2)^0,c
  3098  0137E6  0E3B               	movlw	59
  3099  0137E8  6E16               	movwf	(___flmul@a+3)^0,c
  3100  0137EA  EC7C  F08B         	call	___flmul	;wreg free
  3101  0137EE  C00F  F02C         	movff	?___flmul,getADCValue@ADC_float
  3102  0137F2  C010  F02D         	movff	?___flmul+1,getADCValue@ADC_float+1
  3103  0137F6  C011  F02E         	movff	?___flmul+2,getADCValue@ADC_float+2
  3104  0137FA  C012  F02F         	movff	?___flmul+3,getADCValue@ADC_float+3
  3105  0137FE                     
  3106                           ;main.c: 64:     return ADC_float;
  3107  0137FE  C02C  F028         	movff	getADCValue@ADC_float,?_getADCValue
  3108  013802  C02D  F029         	movff	getADCValue@ADC_float+1,?_getADCValue+1
  3109  013806  C02E  F02A         	movff	getADCValue@ADC_float+2,?_getADCValue+2
  3110  01380A  C02F  F02B         	movff	getADCValue@ADC_float+3,?_getADCValue+3
  3111  01380E  0012               	return		;funcret
  3112  013810                     __end_of_getADCValue:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function ___xxtofl *****************
  3116 ;; Defined at:
  3117 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  sign            1    wreg     unsigned char 
  3120 ;;  val             4    0[COMRAM] long 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  sign            1    8[COMRAM] unsigned char 
  3123 ;;  arg             4   10[COMRAM] unsigned long 
  3124 ;;  exp             1    9[COMRAM] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  4    0[COMRAM] unsigned char 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;Total ram usage:       14 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 2
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_getADCValue
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text10
  3149  012576                     __ptext10:
  3150                           	callstack 0
  3151  012576                     ___xxtofl:
  3152                           	callstack 25
  3153                           
  3154                           ;incstack = 0
  3155                           ;___xxtofl@sign stored from wreg
  3156  012576  6E09               	movwf	___xxtofl@sign^0,c
  3157  012578  5009               	movf	___xxtofl@sign^0,w,c
  3158  01257A  B4D8               	btfsc	status,2,c
  3159  01257C  EFC2  F092         	goto	u5541
  3160  012580  EFC4  F092         	goto	u5540
  3161  012584                     u5541:
  3162  012584  EFE6  F092         	goto	l1705
  3163  012588                     u5540:
  3164  012588  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3165  01258A  EFCB  F092         	goto	u5550
  3166  01258E  EFC9  F092         	goto	u5551
  3167  012592                     u5551:
  3168  012592  EFE6  F092         	goto	l1705
  3169  012596                     u5550:
  3170  012596  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3171  01259A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3172  01259E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3173  0125A2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3174  0125A6  1E05               	comf	??___xxtofl^0,f,c
  3175  0125A8  1E06               	comf	(??___xxtofl+1)^0,f,c
  3176  0125AA  1E07               	comf	(??___xxtofl+2)^0,f,c
  3177  0125AC  1E08               	comf	(??___xxtofl+3)^0,f,c
  3178  0125AE  2A05               	incf	??___xxtofl^0,f,c
  3179  0125B0  0E00               	movlw	0
  3180  0125B2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3181  0125B4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3182  0125B6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3183  0125B8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3184  0125BC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3185  0125C0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3186  0125C4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3187  0125C8  EFEE  F092         	goto	l5579
  3188  0125CC                     l1705:
  3189  0125CC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3190  0125D0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3191  0125D4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3192  0125D8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3193  0125DC                     l5579:
  3194  0125DC  5001               	movf	___xxtofl@val^0,w,c
  3195  0125DE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3196  0125E0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3197  0125E2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3198  0125E4  A4D8               	btfss	status,2,c
  3199  0125E6  EFF7  F092         	goto	u5561
  3200  0125EA  EFF9  F092         	goto	u5560
  3201  0125EE                     u5561:
  3202  0125EE  EF03  F093         	goto	l5585
  3203  0125F2                     u5560:
  3204  0125F2  0E00               	movlw	0
  3205  0125F4  6E01               	movwf	?___xxtofl^0,c
  3206  0125F6  0E00               	movlw	0
  3207  0125F8  6E02               	movwf	(?___xxtofl+1)^0,c
  3208  0125FA  0E00               	movlw	0
  3209  0125FC  6E03               	movwf	(?___xxtofl+2)^0,c
  3210  0125FE  0E00               	movlw	0
  3211  012600  6E04               	movwf	(?___xxtofl+3)^0,c
  3212  012602  EF94  F093         	goto	l1708
  3213  012606                     l5585:
  3214  012606  0E96               	movlw	150
  3215  012608  6E0A               	movwf	___xxtofl@exp^0,c
  3216  01260A  EF0D  F093         	goto	l5589
  3217  01260E                     l5587:
  3218  01260E  2A0A               	incf	___xxtofl@exp^0,f,c
  3219  012610  90D8               	bcf	status,0,c
  3220  012612  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3221  012614  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3222  012616  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3223  012618  320B               	rrcf	___xxtofl@arg^0,f,c
  3224  01261A                     l5589:
  3225  01261A  0E00               	movlw	0
  3226  01261C  140B               	andwf	___xxtofl@arg^0,w,c
  3227  01261E  6E05               	movwf	??___xxtofl^0,c
  3228  012620  0E00               	movlw	0
  3229  012622  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3230  012624  6E06               	movwf	(??___xxtofl+1)^0,c
  3231  012626  0E00               	movlw	0
  3232  012628  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3233  01262A  6E07               	movwf	(??___xxtofl+2)^0,c
  3234  01262C  0EFE               	movlw	254
  3235  01262E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3236  012630  6E08               	movwf	(??___xxtofl+3)^0,c
  3237  012632  5005               	movf	??___xxtofl^0,w,c
  3238  012634  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3239  012636  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3240  012638  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3241  01263A  A4D8               	btfss	status,2,c
  3242  01263C  EF22  F093         	goto	u5571
  3243  012640  EF24  F093         	goto	u5570
  3244  012644                     u5571:
  3245  012644  EF07  F093         	goto	l5587
  3246  012648                     u5570:
  3247  012648  EF32  F093         	goto	l1712
  3248  01264C                     l5591:
  3249  01264C  2A0A               	incf	___xxtofl@exp^0,f,c
  3250  01264E  0E01               	movlw	1
  3251  012650  260B               	addwf	___xxtofl@arg^0,f,c
  3252  012652  0E00               	movlw	0
  3253  012654  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3254  012656  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3255  012658  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3256  01265A  90D8               	bcf	status,0,c
  3257  01265C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3258  01265E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3259  012660  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3260  012662  320B               	rrcf	___xxtofl@arg^0,f,c
  3261  012664                     l1712:
  3262  012664  0E00               	movlw	0
  3263  012666  140B               	andwf	___xxtofl@arg^0,w,c
  3264  012668  6E05               	movwf	??___xxtofl^0,c
  3265  01266A  0E00               	movlw	0
  3266  01266C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3267  01266E  6E06               	movwf	(??___xxtofl+1)^0,c
  3268  012670  0E00               	movlw	0
  3269  012672  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3270  012674  6E07               	movwf	(??___xxtofl+2)^0,c
  3271  012676  0EFF               	movlw	255
  3272  012678  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3273  01267A  6E08               	movwf	(??___xxtofl+3)^0,c
  3274  01267C  5005               	movf	??___xxtofl^0,w,c
  3275  01267E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3276  012680  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3277  012682  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3278  012684  A4D8               	btfss	status,2,c
  3279  012686  EF47  F093         	goto	u5581
  3280  01268A  EF49  F093         	goto	u5580
  3281  01268E                     u5581:
  3282  01268E  EF26  F093         	goto	l5591
  3283  012692                     u5580:
  3284  012692  EF51  F093         	goto	l5599
  3285  012696                     l5597:
  3286  012696  060A               	decf	___xxtofl@exp^0,f,c
  3287  012698  90D8               	bcf	status,0,c
  3288  01269A  360B               	rlcf	___xxtofl@arg^0,f,c
  3289  01269C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3290  01269E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3291  0126A0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3292  0126A2                     l5599:
  3293  0126A2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3294  0126A4  EF56  F093         	goto	u5591
  3295  0126A8  EF58  F093         	goto	u5590
  3296  0126AC                     u5591:
  3297  0126AC  EF60  F093         	goto	l1719
  3298  0126B0                     u5590:
  3299  0126B0  0E02               	movlw	2
  3300  0126B2  600A               	cpfslt	___xxtofl@exp^0,c
  3301  0126B4  EF5E  F093         	goto	u5601
  3302  0126B8  EF60  F093         	goto	u5600
  3303  0126BC                     u5601:
  3304  0126BC  EF4B  F093         	goto	l5597
  3305  0126C0                     u5600:
  3306  0126C0                     l1719:
  3307  0126C0  B00A               	btfsc	___xxtofl@exp^0,0,c
  3308  0126C2  EF65  F093         	goto	u5611
  3309  0126C6  EF67  F093         	goto	u5610
  3310  0126CA                     u5611:
  3311  0126CA  EF68  F093         	goto	l5605
  3312  0126CE                     u5610:
  3313  0126CE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3314  0126D0                     l5605:
  3315  0126D0  90D8               	bcf	status,0,c
  3316  0126D2  320A               	rrcf	___xxtofl@exp^0,f,c
  3317  0126D4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3318  0126D8  6A06               	clrf	(??___xxtofl+1)^0,c
  3319  0126DA  6A07               	clrf	(??___xxtofl+2)^0,c
  3320  0126DC  6A08               	clrf	(??___xxtofl+3)^0,c
  3321  0126DE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3322  0126E2  6A07               	clrf	(??___xxtofl+2)^0,c
  3323  0126E4  6A06               	clrf	(??___xxtofl+1)^0,c
  3324  0126E6  6A05               	clrf	??___xxtofl^0,c
  3325  0126E8  5005               	movf	??___xxtofl^0,w,c
  3326  0126EA  120B               	iorwf	___xxtofl@arg^0,f,c
  3327  0126EC  5006               	movf	(??___xxtofl+1)^0,w,c
  3328  0126EE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3329  0126F0  5007               	movf	(??___xxtofl+2)^0,w,c
  3330  0126F2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3331  0126F4  5008               	movf	(??___xxtofl+3)^0,w,c
  3332  0126F6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3333  0126F8  5009               	movf	___xxtofl@sign^0,w,c
  3334  0126FA  B4D8               	btfsc	status,2,c
  3335  0126FC  EF82  F093         	goto	u5621
  3336  012700  EF84  F093         	goto	u5620
  3337  012704                     u5621:
  3338  012704  EF8C  F093         	goto	l5615
  3339  012708                     u5620:
  3340  012708  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3341  01270A  EF8B  F093         	goto	u5630
  3342  01270E  EF89  F093         	goto	u5631
  3343  012712                     u5631:
  3344  012712  EF8C  F093         	goto	l5615
  3345  012716                     u5630:
  3346  012716  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3347  012718                     l5615:
  3348  012718  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3349  01271C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3350  012720  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3351  012724  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3352  012728                     l1708:
  3353  012728  0012               	return		;funcret
  3354  01272A                     __end_of___xxtofl:
  3355                           	callstack 0
  3356                           
  3357 ;; *************** function _ADCC_GetSingleConversion *****************
  3358 ;; Defined at:
  3359 ;;		line 131 in file "mcc_generated_files/adcc.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  channel         1    wreg     enum E14212
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  channel         1    4[COMRAM] enum E14212
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  2    0[COMRAM] unsigned short 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;Total ram usage:        5 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 2
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_getADCValue
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text11
  3388  013D44                     __ptext11:
  3389                           	callstack 0
  3390  013D44                     _ADCC_GetSingleConversion:
  3391                           	callstack 25
  3392                           
  3393                           ;incstack = 0
  3394                           ;ADCC_GetSingleConversion@channel stored from wreg
  3395  013D44  6E05               	movwf	ADCC_GetSingleConversion@channel^0,c
  3396  013D46                     
  3397                           ;mcc_generated_files/adcc.c: 131: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = 
      +                          channel;
  3398  013D46  C005  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
  3399  013D4A                     
  3400                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
  3401  013D4A  8E60               	bsf	96,7,c	;volatile
  3402  013D4C                     
  3403                           ;mcc_generated_files/adcc.c: 140:     ADCON0bits.ADCONT = 0;
  3404  013D4C  9C60               	bcf	96,6,c	;volatile
  3405  013D4E                     
  3406                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADGO = 1;
  3407  013D4E  8060               	bsf	96,0,c	;volatile
  3408  013D50                     l344:
  3409                           
  3410                           ;mcc_generated_files/adcc.c: 147:     while (ADCON0bits.ADGO)
  3411  013D50  B060               	btfsc	96,0,c	;volatile
  3412  013D52  EFAD  F09E         	goto	u5531
  3413  013D56  EFAF  F09E         	goto	u5530
  3414  013D5A                     u5531:
  3415  013D5A  EFA8  F09E         	goto	l344
  3416  013D5E                     u5530:
  3417  013D5E                     
  3418                           ;mcc_generated_files/adcc.c: 153:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3419  013D5E  5064               	movf	100,w,c	;volatile
  3420  013D60  6E04               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  3421  013D62  6A03               	clrf	??_ADCC_GetSingleConversion^0,c
  3422  013D64  5063               	movf	99,w,c	;volatile
  3423  013D66  2403               	addwf	??_ADCC_GetSingleConversion^0,w,c
  3424  013D68  6E01               	movwf	?_ADCC_GetSingleConversion^0,c
  3425  013D6A  0E00               	movlw	0
  3426  013D6C  2004               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  3427  013D6E  6E02               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  3428  013D70  0012               	return		;funcret
  3429  013D72                     __end_of_ADCC_GetSingleConversion:
  3430                           	callstack 0
  3431                           
  3432 ;; *************** function _isolateCapsToSeries *****************
  3433 ;; Defined at:
  3434 ;;		line 280 in file "ConfigureCaps.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;Total ram usage:        2 bytes
  3453 ;; Hardware stack levels used: 1
  3454 ;; Hardware stack levels required when called: 11
  3455 ;; This function calls:
  3456 ;;		_printf
  3457 ;; This function is called by:
  3458 ;;		_delayedBrownOut
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text12
  3463  012A80                     __ptext12:
  3464                           	callstack 0
  3465  012A80                     _isolateCapsToSeries:
  3466                           	callstack 18
  3467  012A80  927C               	bcf	124,1,c	;volatile
  3468  012A82  947C               	bcf	124,2,c	;volatile
  3469  012A84  EFE7  F095         	goto	l5847
  3470  012A88                     l887:
  3471  012A88  8680               	bsf	128,3,c	;volatile
  3472  012A8A  9C7D               	bcf	125,6,c	;volatile
  3473  012A8C  847C               	bsf	124,2,c	;volatile
  3474  012A8E                     
  3475                           ;ConfigureCaps.c: 294:             capTaskSeries_count=2;
  3476  012A8E  0E02               	movlw	2
  3477  012A90  6E5E               	movwf	_capTaskSeries_count^0,c
  3478                           
  3479                           ;ConfigureCaps.c: 295:             capTaskParalle_count=6;
  3480  012A92  0E06               	movlw	6
  3481  012A94  0100               	movlb	0	; () banked
  3482  012A96  6FD7               	movwf	_capTaskParalle_count& (0+255),b
  3483  012A98                     
  3484                           ; BSR set to: 0
  3485                           ;ConfigureCaps.c: 296:             printf("\r\n CAP12 in SERIES \r\n");
  3486  012A98  0E60               	movlw	low STR_11
  3487  012A9A  6E54               	movwf	printf@fmt^0,c
  3488  012A9C  0EFF               	movlw	high STR_11
  3489  012A9E  6E55               	movwf	(printf@fmt+1)^0,c
  3490  012AA0  ECCE  F09E         	call	_printf	;wreg free
  3491                           
  3492                           ;ConfigureCaps.c: 297:             break;
  3493  012AA4  EF10  F096         	goto	l1023
  3494  012AA8                     l895:
  3495  012AA8  8680               	bsf	128,3,c	;volatile
  3496  012AAA  8E7D               	bsf	125,7,c	;volatile
  3497  012AAC  9C7D               	bcf	125,6,c	;volatile
  3498  012AAE  987D               	bcf	125,4,c	;volatile
  3499  012AB0  847C               	bsf	124,2,c	;volatile
  3500  012AB2                     
  3501                           ;ConfigureCaps.c: 308:             capTaskSeries_count=3;
  3502  012AB2  0E03               	movlw	3
  3503  012AB4  6E5E               	movwf	_capTaskSeries_count^0,c
  3504                           
  3505                           ;ConfigureCaps.c: 309:             capTaskParalle_count=5;
  3506  012AB6  0E05               	movlw	5
  3507  012AB8  0100               	movlb	0	; () banked
  3508  012ABA  6FD7               	movwf	_capTaskParalle_count& (0+255),b
  3509  012ABC                     
  3510                           ; BSR set to: 0
  3511                           ;ConfigureCaps.c: 310:             printf("\r\n CAP123 in SERIES \r\n");
  3512  012ABC  0E49               	movlw	low STR_12
  3513  012ABE  6E54               	movwf	printf@fmt^0,c
  3514  012AC0  0EFF               	movlw	high STR_12
  3515  012AC2  6E55               	movwf	(printf@fmt+1)^0,c
  3516  012AC4  ECCE  F09E         	call	_printf	;wreg free
  3517                           
  3518                           ;ConfigureCaps.c: 311:             break;
  3519  012AC8  EF10  F096         	goto	l1023
  3520  012ACC                     l906:
  3521  012ACC  8680               	bsf	128,3,c	;volatile
  3522  012ACE  8E7D               	bsf	125,7,c	;volatile
  3523  012AD0  8A7D               	bsf	125,5,c	;volatile
  3524  012AD2  9C7D               	bcf	125,6,c	;volatile
  3525  012AD4  987D               	bcf	125,4,c	;volatile
  3526  012AD6  907D               	bcf	125,0,c	;volatile
  3527  012AD8  847C               	bsf	124,2,c	;volatile
  3528  012ADA                     
  3529                           ;ConfigureCaps.c: 324:             capTaskSeries_count=4;
  3530  012ADA  0E04               	movlw	4
  3531  012ADC  6E5E               	movwf	_capTaskSeries_count^0,c
  3532                           
  3533                           ;ConfigureCaps.c: 325:             capTaskParalle_count=4;
  3534  012ADE  0E04               	movlw	4
  3535  012AE0  0100               	movlb	0	; () banked
  3536  012AE2  6FD7               	movwf	_capTaskParalle_count& (0+255),b
  3537  012AE4                     
  3538                           ; BSR set to: 0
  3539                           ;ConfigureCaps.c: 326:             printf("\r\n CAP1234 in SERIES \r\n");
  3540  012AE4  0E19               	movlw	low STR_13
  3541  012AE6  6E54               	movwf	printf@fmt^0,c
  3542  012AE8  0EFF               	movlw	high STR_13
  3543  012AEA  6E55               	movwf	(printf@fmt+1)^0,c
  3544  012AEC  ECCE  F09E         	call	_printf	;wreg free
  3545                           
  3546                           ;ConfigureCaps.c: 327:             break;
  3547  012AF0  EF10  F096         	goto	l1023
  3548  012AF4                     l921:
  3549  012AF4  8680               	bsf	128,3,c	;volatile
  3550  012AF6  8E7D               	bsf	125,7,c	;volatile
  3551  012AF8  8A7D               	bsf	125,5,c	;volatile
  3552  012AFA  827D               	bsf	125,1,c	;volatile
  3553  012AFC  9C7D               	bcf	125,6,c	;volatile
  3554  012AFE  987D               	bcf	125,4,c	;volatile
  3555  012B00  907D               	bcf	125,0,c	;volatile
  3556  012B02  927F               	bcf	127,1,c	;volatile
  3557  012B04  847C               	bsf	124,2,c	;volatile
  3558  012B06                     
  3559                           ;ConfigureCaps.c: 341:             capTaskSeries_count=5;
  3560  012B06  0E05               	movlw	5
  3561  012B08  6E5E               	movwf	_capTaskSeries_count^0,c
  3562                           
  3563                           ;ConfigureCaps.c: 342:             capTaskParalle_count=3;
  3564  012B0A  0E03               	movlw	3
  3565  012B0C  0100               	movlb	0	; () banked
  3566  012B0E  6FD7               	movwf	_capTaskParalle_count& (0+255),b
  3567  012B10                     
  3568                           ; BSR set to: 0
  3569                           ;ConfigureCaps.c: 343:             printf("\r\n CAP12345 in SERIES \r\n");
  3570  012B10  0EE7               	movlw	low STR_14
  3571  012B12  6E54               	movwf	printf@fmt^0,c
  3572  012B14  0EFE               	movlw	high STR_14
  3573  012B16  6E55               	movwf	(printf@fmt+1)^0,c
  3574  012B18  ECCE  F09E         	call	_printf	;wreg free
  3575                           
  3576                           ;ConfigureCaps.c: 344:             break;
  3577  012B1C  EF10  F096         	goto	l1023
  3578  012B20                     l940:
  3579  012B20  8680               	bsf	128,3,c	;volatile
  3580  012B22  8E7D               	bsf	125,7,c	;volatile
  3581  012B24  8A7D               	bsf	125,5,c	;volatile
  3582  012B26  827D               	bsf	125,1,c	;volatile
  3583  012B28  807F               	bsf	127,0,c	;volatile
  3584  012B2A  9C7D               	bcf	125,6,c	;volatile
  3585  012B2C  987D               	bcf	125,4,c	;volatile
  3586  012B2E  907D               	bcf	125,0,c	;volatile
  3587  012B30  927F               	bcf	127,1,c	;volatile
  3588  012B32  967F               	bcf	127,3,c	;volatile
  3589  012B34  847C               	bsf	124,2,c	;volatile
  3590  012B36                     
  3591                           ;ConfigureCaps.c: 360:             capTaskSeries_count=6;
  3592  012B36  0E06               	movlw	6
  3593  012B38  6E5E               	movwf	_capTaskSeries_count^0,c
  3594                           
  3595                           ;ConfigureCaps.c: 361:             capTaskParalle_count=2;
  3596  012B3A  0E02               	movlw	2
  3597  012B3C  0100               	movlb	0	; () banked
  3598  012B3E  6FD7               	movwf	_capTaskParalle_count& (0+255),b
  3599  012B40                     
  3600                           ; BSR set to: 0
  3601                           ;ConfigureCaps.c: 362:             printf("\r\n CAP123456 in SERIES \r\n");
  3602  012B40  0EB3               	movlw	low STR_15
  3603  012B42  6E54               	movwf	printf@fmt^0,c
  3604  012B44  0EFE               	movlw	high STR_15
  3605  012B46  6E55               	movwf	(printf@fmt+1)^0,c
  3606  012B48  ECCE  F09E         	call	_printf	;wreg free
  3607                           
  3608                           ;ConfigureCaps.c: 363:             break;
  3609  012B4C  EF10  F096         	goto	l1023
  3610  012B50                     l963:
  3611  012B50  8680               	bsf	128,3,c	;volatile
  3612  012B52  8E7D               	bsf	125,7,c	;volatile
  3613  012B54  8A7D               	bsf	125,5,c	;volatile
  3614  012B56  827D               	bsf	125,1,c	;volatile
  3615  012B58  807F               	bsf	127,0,c	;volatile
  3616  012B5A  847F               	bsf	127,2,c	;volatile
  3617  012B5C  9C7D               	bcf	125,6,c	;volatile
  3618  012B5E  987D               	bcf	125,4,c	;volatile
  3619  012B60  907D               	bcf	125,0,c	;volatile
  3620  012B62  927F               	bcf	127,1,c	;volatile
  3621  012B64  967F               	bcf	127,3,c	;volatile
  3622  012B66  9C7E               	bcf	126,6,c	;volatile
  3623  012B68  847C               	bsf	124,2,c	;volatile
  3624  012B6A                     
  3625                           ;ConfigureCaps.c: 382:             capTaskSeries_count=7;
  3626  012B6A  0E07               	movlw	7
  3627  012B6C  6E5E               	movwf	_capTaskSeries_count^0,c
  3628                           
  3629                           ;ConfigureCaps.c: 383:             capTaskParalle_count=1;
  3630  012B6E  0E01               	movlw	1
  3631  012B70  0100               	movlb	0	; () banked
  3632  012B72  6FD7               	movwf	_capTaskParalle_count& (0+255),b
  3633  012B74                     
  3634                           ; BSR set to: 0
  3635                           ;ConfigureCaps.c: 384:             printf("\r\n CAP1234567 in SERIES \r\n");
  3636  012B74  0E7D               	movlw	low STR_16
  3637  012B76  6E54               	movwf	printf@fmt^0,c
  3638  012B78  0EFE               	movlw	high STR_16
  3639  012B7A  6E55               	movwf	(printf@fmt+1)^0,c
  3640  012B7C  ECCE  F09E         	call	_printf	;wreg free
  3641                           
  3642                           ;ConfigureCaps.c: 385:             break;
  3643  012B80  EF10  F096         	goto	l1023
  3644  012B84                     l990:
  3645  012B84  8680               	bsf	128,3,c	;volatile
  3646  012B86  8E7D               	bsf	125,7,c	;volatile
  3647  012B88  8A7D               	bsf	125,5,c	;volatile
  3648  012B8A  827D               	bsf	125,1,c	;volatile
  3649  012B8C  807F               	bsf	127,0,c	;volatile
  3650  012B8E  847F               	bsf	127,2,c	;volatile
  3651  012B90  8E7E               	bsf	126,7,c	;volatile
  3652  012B92  9C7D               	bcf	125,6,c	;volatile
  3653  012B94  987D               	bcf	125,4,c	;volatile
  3654  012B96  907D               	bcf	125,0,c	;volatile
  3655  012B98  927F               	bcf	127,1,c	;volatile
  3656  012B9A  967F               	bcf	127,3,c	;volatile
  3657  012B9C  9C7E               	bcf	126,6,c	;volatile
  3658  012B9E  987E               	bcf	126,4,c	;volatile
  3659  012BA0  947E               	bcf	126,2,c	;volatile
  3660  012BA2  847C               	bsf	124,2,c	;volatile
  3661  012BA4                     
  3662                           ;ConfigureCaps.c: 407:             capTaskSeries_count=8;
  3663  012BA4  0E08               	movlw	8
  3664  012BA6  6E5E               	movwf	_capTaskSeries_count^0,c
  3665                           
  3666                           ;ConfigureCaps.c: 408:             capTaskParalle_count=0;
  3667  012BA8  0E00               	movlw	0
  3668  012BAA  0100               	movlb	0	; () banked
  3669  012BAC  6FD7               	movwf	_capTaskParalle_count& (0+255),b
  3670  012BAE                     
  3671                           ; BSR set to: 0
  3672                           ;ConfigureCaps.c: 409:              printf("\r\n CAP12345678 in SERIES \r\n");
  3673  012BAE  0E45               	movlw	low STR_17
  3674  012BB0  6E54               	movwf	printf@fmt^0,c
  3675  012BB2  0EFE               	movlw	high STR_17
  3676  012BB4  6E55               	movwf	(printf@fmt+1)^0,c
  3677  012BB6  ECCE  F09E         	call	_printf	;wreg free
  3678                           
  3679                           ;ConfigureCaps.c: 410:             break;
  3680  012BBA  EF10  F096         	goto	l1023
  3681  012BBE                     l5843:
  3682                           
  3683                           ;ConfigureCaps.c: 412:                 printf("\r\n add all SERIES \r\n");
  3684  012BBE  0E76               	movlw	low STR_18
  3685  012BC0  6E54               	movwf	printf@fmt^0,c
  3686  012BC2  0EFF               	movlw	high STR_18
  3687  012BC4  6E55               	movwf	(printf@fmt+1)^0,c
  3688  012BC6  ECCE  F09E         	call	_printf	;wreg free
  3689                           
  3690                           ;ConfigureCaps.c: 413:                 break;
  3691  012BCA  EF10  F096         	goto	l1023
  3692  012BCE                     l5847:
  3693  012BCE  505E               	movf	_capTaskSeries_count^0,w,c
  3694  012BD0  6E5C               	movwf	??_isolateCapsToSeries^0,c
  3695  012BD2  6A5D               	clrf	(??_isolateCapsToSeries+1)^0,c
  3696                           
  3697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3698                           ; Switch size 1, requested type "simple"
  3699                           ; Number of cases is 1, Range of values is 0 to 0
  3700                           ; switch strategies available:
  3701                           ; Name         Instructions Cycles
  3702                           ; simple_byte            4     3 (average)
  3703                           ;	Chosen strategy is simple_byte
  3704  012BD4  505D               	movf	(??_isolateCapsToSeries+1)^0,w,c
  3705  012BD6  0A00               	xorlw	0	; case 0
  3706  012BD8  B4D8               	btfsc	status,2,c
  3707  012BDA  EFF1  F095         	goto	l6121
  3708  012BDE  EFDF  F095         	goto	l5843
  3709  012BE2                     l6121:
  3710                           
  3711                           ; Switch size 1, requested type "simple"
  3712                           ; Number of cases is 7, Range of values is 1 to 7
  3713                           ; switch strategies available:
  3714                           ; Name         Instructions Cycles
  3715                           ; simple_byte           22    12 (average)
  3716                           ;	Chosen strategy is simple_byte
  3717  012BE2  505C               	movf	??_isolateCapsToSeries^0,w,c
  3718  012BE4  0A01               	xorlw	1	; case 1
  3719  012BE6  B4D8               	btfsc	status,2,c
  3720  012BE8  EF44  F095         	goto	l887
  3721  012BEC  0A03               	xorlw	3	; case 2
  3722  012BEE  B4D8               	btfsc	status,2,c
  3723  012BF0  EF54  F095         	goto	l895
  3724  012BF4  0A01               	xorlw	1	; case 3
  3725  012BF6  B4D8               	btfsc	status,2,c
  3726  012BF8  EF66  F095         	goto	l906
  3727  012BFC  0A07               	xorlw	7	; case 4
  3728  012BFE  B4D8               	btfsc	status,2,c
  3729  012C00  EF7A  F095         	goto	l921
  3730  012C04  0A01               	xorlw	1	; case 5
  3731  012C06  B4D8               	btfsc	status,2,c
  3732  012C08  EF90  F095         	goto	l940
  3733  012C0C  0A03               	xorlw	3	; case 6
  3734  012C0E  B4D8               	btfsc	status,2,c
  3735  012C10  EFA8  F095         	goto	l963
  3736  012C14  0A01               	xorlw	1	; case 7
  3737  012C16  B4D8               	btfsc	status,2,c
  3738  012C18  EFC2  F095         	goto	l990
  3739  012C1C  EFDF  F095         	goto	l5843
  3740  012C20                     l1023:
  3741  012C20  0012               	return		;funcret
  3742  012C22                     __end_of_isolateCapsToSeries:
  3743                           	callstack 0
  3744                           
  3745 ;; *************** function _printf *****************
  3746 ;; Defined at:
  3747 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  3750 ;;		 -> STR_24(57), STR_23(21), STR_22(16), STR_21(20), 
  3751 ;;		 -> STR_20(15), STR_19(11), STR_18(21), STR_17(28), 
  3752 ;;		 -> STR_16(27), STR_15(26), STR_14(25), STR_13(24), 
  3753 ;;		 -> STR_12(23), STR_11(22), STR_10(8), STR_9(30), 
  3754 ;;		 -> STR_8(29), STR_7(28), STR_6(27), STR_5(26), 
  3755 ;;		 -> STR_4(25), STR_3(24), 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  ap              2   89[COMRAM] PTR void [1]
  3758 ;;		 -> ?_printf(2), 
  3759 ;;  ret             2    0        int 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  2   83[COMRAM] int 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3769 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3770 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3772 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3773 ;;Total ram usage:        8 bytes
  3774 ;; Hardware stack levels used: 1
  3775 ;; Hardware stack levels required when called: 10
  3776 ;; This function calls:
  3777 ;;		_vfprintf
  3778 ;; This function is called by:
  3779 ;;		_addCapToParallel
  3780 ;;		_isolateCapsToSeries
  3781 ;;		_delayedBrownOut
  3782 ;;		_fastChargingcaps
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text13
  3787  013D9C                     __ptext13:
  3788                           	callstack 0
  3789  013D9C                     _printf:
  3790                           	callstack 19
  3791  013D9C  0E56               	movlw	low (?_printf+2)
  3792  013D9E  6E5A               	movwf	printf@ap^0,c
  3793  013DA0  0E00               	movlw	high (?_printf+2)
  3794  013DA2  6E5B               	movwf	(printf@ap+1)^0,c
  3795  013DA4  0E00               	movlw	0
  3796  013DA6  6E4C               	movwf	vfprintf@fp^0,c
  3797  013DA8  0E00               	movlw	0
  3798  013DAA  6E4D               	movwf	(vfprintf@fp+1)^0,c
  3799  013DAC  C054  F04E         	movff	printf@fmt,vfprintf@fmt
  3800  013DB0  C055  F04F         	movff	printf@fmt+1,vfprintf@fmt+1
  3801  013DB4  0E5A               	movlw	low printf@ap
  3802  013DB6  6E50               	movwf	vfprintf@ap^0,c
  3803  013DB8  0E00               	movlw	high printf@ap
  3804  013DBA  6E51               	movwf	(vfprintf@ap+1)^0,c
  3805  013DBC  EC3B  F09C         	call	_vfprintf	;wreg free
  3806  013DC0  0012               	return		;funcret
  3807  013DC2                     __end_of_printf:
  3808                           	callstack 0
  3809                           
  3810 ;; *************** function _vfprintf *****************
  3811 ;; Defined at:
  3812 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  3815 ;;		 -> NULL(0), 
  3816 ;;  fmt             2   77[COMRAM] PTR const unsigned char 
  3817 ;;		 -> STR_24(57), STR_23(21), STR_22(16), STR_21(20), 
  3818 ;;		 -> STR_20(15), STR_19(11), STR_18(21), STR_17(28), 
  3819 ;;		 -> STR_16(27), STR_15(26), STR_14(25), STR_13(24), 
  3820 ;;		 -> STR_12(23), STR_11(22), STR_10(8), STR_9(30), 
  3821 ;;		 -> STR_8(29), STR_7(28), STR_6(27), STR_5(26), 
  3822 ;;		 -> STR_4(25), STR_3(24), 
  3823 ;;  ap              2   79[COMRAM] PTR PTR void 
  3824 ;;		 -> printf@ap(2), 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  cfmt            2   81[COMRAM] PTR unsigned char 
  3827 ;;		 -> STR_24(57), STR_23(21), STR_22(16), STR_21(20), 
  3828 ;;		 -> STR_20(15), STR_19(11), STR_18(21), STR_17(28), 
  3829 ;;		 -> STR_16(27), STR_15(26), STR_14(25), STR_13(24), 
  3830 ;;		 -> STR_12(23), STR_11(22), STR_10(8), STR_9(30), 
  3831 ;;		 -> STR_8(29), STR_7(28), STR_6(27), STR_5(26), 
  3832 ;;		 -> STR_4(25), STR_3(24), 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2   75[COMRAM] int 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3842 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;Total ram usage:        8 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 9
  3849 ;; This function calls:
  3850 ;;		_vfpfcnvrt
  3851 ;; This function is called by:
  3852 ;;		_printf
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text14
  3857  013876                     __ptext14:
  3858                           	callstack 0
  3859  013876                     _vfprintf:
  3860                           	callstack 19
  3861  013876                     
  3862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3863  013876  C04E  F052         	movff	vfprintf@fmt,vfprintf@cfmt
  3864  01387A  C04F  F053         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3865  01387E                     
  3866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3867  01387E  0E00               	movlw	0
  3868  013880  0100               	movlb	0	; () banked
  3869  013882  6FD0               	movwf	(_nout+1)& (0+255),b
  3870  013884  0E00               	movlw	0
  3871  013886  6FCF               	movwf	_nout& (0+255),b
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3874  013888  EF59  F09C         	goto	l5625
  3875  01388C                     l5623:
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3879  01388C  C04C  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  3880  013890  C04D  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3881  013894  0E52               	movlw	low vfprintf@cfmt
  3882  013896  6E44               	movwf	vfpfcnvrt@fmt^0,c
  3883  013898  0E00               	movlw	high vfprintf@cfmt
  3884  01389A  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3885  01389C  C050  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  3886  0138A0  C051  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3887  0138A4  EC53  F086         	call	_vfpfcnvrt	;wreg free
  3888  0138A8  5042               	movf	?_vfpfcnvrt^0,w,c
  3889  0138AA  0100               	movlb	0	; () banked
  3890  0138AC  27CF               	addwf	_nout& (0+255),f,b
  3891  0138AE  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  3892  0138B0  23D0               	addwfc	(_nout+1)& (0+255),f,b
  3893  0138B2                     l5625:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3897  0138B2  C052  FFF6         	movff	vfprintf@cfmt,tblptrl
  3898  0138B6  C053  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3899  0138BA                     	if	0	;tblptru may be non-zero
  3900  0138BA                     	endif
  3901  0138BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3902  0138BA  0E00               	movlw	low (__mediumconst shr (0+16))
  3903  0138BC  6EF8               	movwf	tblptru,c
  3904  0138BE                     	endif
  3905  0138BE  0008               	tblrd		*
  3906  0138C0  50F5               	movf	tablat,w,c
  3907  0138C2  0900               	iorlw	0
  3908  0138C4  A4D8               	btfss	status,2,c
  3909  0138C6  EF67  F09C         	goto	u5641
  3910  0138CA  EF69  F09C         	goto	u5640
  3911  0138CE                     u5641:
  3912  0138CE  EF46  F09C         	goto	l5623
  3913  0138D2                     u5640:
  3914  0138D2                     
  3915                           ; BSR set to: 0
  3916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3917  0138D2  C0CF  F04C         	movff	_nout,?_vfprintf
  3918  0138D6  C0D0  F04D         	movff	_nout+1,?_vfprintf+1
  3919  0138DA                     
  3920                           ; BSR set to: 0
  3921  0138DA  0012               	return		;funcret
  3922  0138DC                     __end_of_vfprintf:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _vfpfcnvrt *****************
  3926 ;; Defined at:
  3927 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  3930 ;;		 -> NULL(0), 
  3931 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  3932 ;;		 -> vfprintf@cfmt(2), 
  3933 ;;  ap              2   69[COMRAM] PTR PTR void 
  3934 ;;		 -> printf@ap(2), 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  ll              8   56[BANK0 ] long long 
  3937 ;;  llu             8    0        unsigned long long 
  3938 ;;  f               4   68[BANK0 ] unsigned long long 
  3939 ;;  ct              3   72[BANK0 ] unsigned char [3]
  3940 ;;  vp              3    0        PTR void 
  3941 ;;  cp              3    0        PTR unsigned char 
  3942 ;;  i               2    0        int 
  3943 ;;  done            2    0        int 
  3944 ;;  c               1   75[BANK0 ] unsigned char 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  2   65[COMRAM] int 
  3947 ;; Registers used:
  3948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3954 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3955 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;      Totals:        10      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;Total ram usage:       30 bytes
  3959 ;; Hardware stack levels used: 1
  3960 ;; Hardware stack levels required when called: 8
  3961 ;; This function calls:
  3962 ;;		_atoi
  3963 ;;		_dtoa
  3964 ;;		_efgtoa
  3965 ;;		_fputc
  3966 ;;		_isdigit
  3967 ;;		_isupper
  3968 ;;		_strncmp
  3969 ;;		_tolower
  3970 ;; This function is called by:
  3971 ;;		_vfprintf
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text15
  3976  010CA6                     __ptext15:
  3977                           	callstack 0
  3978  010CA6                     _vfpfcnvrt:
  3979                           	callstack 19
  3980  010CA6                     
  3981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3982  010CA6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3983  010CAA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3984  010CAE  CFDE FFF6          	movff	postinc2,tblptrl
  3985  010CB2  CFDD FFF7          	movff	postdec2,tblptrh
  3986  010CB6                     	if	0	;tblptru may be non-zero
  3987  010CB6                     	endif
  3988  010CB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3989  010CB6  0E00               	movlw	low (__mediumconst shr (0+16))
  3990  010CB8  6EF8               	movwf	tblptru,c
  3991  010CBA                     	endif
  3992  010CBA  0008               	tblrd		*
  3993  010CBC  50F5               	movf	tablat,w,c
  3994  010CBE  0A25               	xorlw	37
  3995  010CC0  A4D8               	btfss	status,2,c
  3996  010CC2  EF65  F086         	goto	u5371
  3997  010CC6  EF67  F086         	goto	u5370
  3998  010CCA                     u5371:
  3999  010CCA  EFFE  F088         	goto	l5553
  4000  010CCE                     u5370:
  4001  010CCE                     
  4002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4003  010CCE  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4004  010CD2  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4005  010CD6  2ADE               	incf	postinc2,f,c
  4006  010CD8  0E00               	movlw	0
  4007  010CDA  22DD               	addwfc	postdec2,f,c
  4008  010CDC                     
  4009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4010  010CDC  0E00               	movlw	0
  4011  010CDE  0100               	movlb	0	; () banked
  4012  010CE0  6FD2               	movwf	(_width+1)& (0+255),b
  4013  010CE2  0E00               	movlw	0
  4014  010CE4  6FD1               	movwf	_width& (0+255),b
  4015  010CE6  C0D1  F0D5         	movff	_width,_flags
  4016  010CEA  C0D2  F0D6         	movff	_width+1,_flags+1
  4017  010CEE                     
  4018                           ; BSR set to: 0
  4019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4020  010CEE  69D3               	setf	_prec& (0+255),b
  4021  010CF0  69D4               	setf	(_prec+1)& (0+255),b
  4022  010CF2                     
  4023                           ; BSR set to: 0
  4024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  4025  010CF2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4026  010CF6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4027  010CFA  CFDE FFF6          	movff	postinc2,tblptrl
  4028  010CFE  CFDD FFF7          	movff	postdec2,tblptrh
  4029  010D02                     	if	0	;tblptru may be non-zero
  4030  010D02                     	endif
  4031  010D02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4032  010D02  0E00               	movlw	low (__mediumconst shr (0+16))
  4033  010D04  6EF8               	movwf	tblptru,c
  4034  010D06                     	endif
  4035  010D06  0008               	tblrd		*
  4036  010D08  50F5               	movf	tablat,w,c
  4037  010D0A  0A2E               	xorlw	46
  4038  010D0C  A4D8               	btfss	status,2,c
  4039  010D0E  EF8B  F086         	goto	u5381
  4040  010D12  EF8D  F086         	goto	u5380
  4041  010D16                     u5381:
  4042  010D16  EF0F  F087         	goto	l5489
  4043  010D1A                     u5380:
  4044  010D1A                     
  4045                           ; BSR set to: 0
  4046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  4047  010D1A  0E00               	movlw	0
  4048  010D1C  6FD4               	movwf	(_prec+1)& (0+255),b
  4049  010D1E  0E00               	movlw	0
  4050  010D20  6FD3               	movwf	_prec& (0+255),b
  4051  010D22                     
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  4054  010D22  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4055  010D26  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4056  010D2A  2ADE               	incf	postinc2,f,c
  4057  010D2C  0E00               	movlw	0
  4058  010D2E  22DD               	addwfc	postdec2,f,c
  4059  010D30                     
  4060                           ; BSR set to: 0
  4061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  4062  010D30  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4063  010D34  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4064  010D38  CFDE FFF6          	movff	postinc2,tblptrl
  4065  010D3C  CFDD FFF7          	movff	postdec2,tblptrh
  4066  010D40                     	if	0	;tblptru may be non-zero
  4067  010D40                     	endif
  4068  010D40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4069  010D40  0E00               	movlw	low (__mediumconst shr (0+16))
  4070  010D42  6EF8               	movwf	tblptru,c
  4071  010D44                     	endif
  4072  010D44  0008               	tblrd		*
  4073  010D46  50F5               	movf	tablat,w,c
  4074  010D48  0A2A               	xorlw	42
  4075  010D4A  A4D8               	btfss	status,2,c
  4076  010D4C  EFAA  F086         	goto	u5391
  4077  010D50  EFAC  F086         	goto	u5390
  4078  010D54                     u5391:
  4079  010D54  EFC9  F086         	goto	l5479
  4080  010D58                     u5390:
  4081  010D58                     
  4082                           ; BSR set to: 0
  4083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  4084  010D58  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4085  010D5C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4086  010D60  2ADE               	incf	postinc2,f,c
  4087  010D62  0E00               	movlw	0
  4088  010D64  22DD               	addwfc	postdec2,f,c
  4089                           
  4090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4091  010D66  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4092  010D6A  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4093  010D6E  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4094  010D72  0E02               	movlw	2
  4095  010D74  26DE               	addwf	postinc2,f,c
  4096  010D76  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4097  010D7A  0E00               	movlw	0
  4098  010D7C  22DD               	addwfc	postdec2,f,c
  4099  010D7E  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4100  010D82  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4101  010D86  CFDE F0D3          	movff	postinc2,_prec
  4102  010D8A  CFDD F0D4          	movff	postdec2,_prec+1
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  4105  010D8E  EF0F  F087         	goto	l5489
  4106  010D92                     l5479:
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  4110  010D92  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4111  010D96  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4112  010D9A  CFDE F008          	movff	postinc2,atoi@s
  4113  010D9E  CFDD F009          	movff	postdec2,atoi@s+1
  4114  010DA2  EC6E  F094         	call	_atoi	;wreg free
  4115  010DA6  C008  F0D3         	movff	?_atoi,_prec
  4116  010DAA  C009  F0D4         	movff	?_atoi+1,_prec+1
  4117                           
  4118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4119  010DAE  EFE0  F086         	goto	l5483
  4120  010DB2                     l5481:
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  4124  010DB2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4125  010DB6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4126  010DBA  2ADE               	incf	postinc2,f,c
  4127  010DBC  0E00               	movlw	0
  4128  010DBE  22DD               	addwfc	postdec2,f,c
  4129  010DC0                     l5483:
  4130  010DC0  0ED0               	movlw	208
  4131  010DC2  6E48               	movwf	??_vfpfcnvrt^0,c
  4132  010DC4  0EFF               	movlw	255
  4133  010DC6  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  4134  010DC8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4135  010DCC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4136  010DD0  CFDE FFF6          	movff	postinc2,tblptrl
  4137  010DD4  CFDD FFF7          	movff	postdec2,tblptrh
  4138  010DD8                     	if	0	;tblptru may be non-zero
  4139  010DD8                     	endif
  4140  010DD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4141  010DD8  0E00               	movlw	low (__mediumconst shr (0+16))
  4142  010DDA  6EF8               	movwf	tblptru,c
  4143  010DDC                     	endif
  4144  010DDC  0008               	tblrd		*
  4145  010DDE  50F5               	movf	tablat,w,c
  4146  010DE0  6E4A               	movwf	(??_vfpfcnvrt+2)^0,c
  4147  010DE2  6A4B               	clrf	(??_vfpfcnvrt+3)^0,c
  4148  010DE4  5048               	movf	??_vfpfcnvrt^0,w,c
  4149  010DE6  264A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4150  010DE8  5049               	movf	(??_vfpfcnvrt+1)^0,w,c
  4151  010DEA  224B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4152  010DEC  504B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4153  010DEE  E10A               	bnz	u5400
  4154  010DF0  0E0A               	movlw	10
  4155  010DF2  5C4A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4156  010DF4  A0D8               	btfss	status,0,c
  4157  010DF6  EFFF  F086         	goto	u5401
  4158  010DFA  EF02  F087         	goto	u5400
  4159  010DFE                     u5401:
  4160  010DFE  0E01               	movlw	1
  4161  010E00  EF03  F087         	goto	u5410
  4162  010E04                     u5400:
  4163  010E04  0E00               	movlw	0
  4164  010E06                     u5410:
  4165  010E06  0100               	movlb	0	; () banked
  4166  010E08  6FA0               	movwf	_vfpfcnvrt$2021& (0+255),b
  4167  010E0A  6BA1               	clrf	(_vfpfcnvrt$2021+1)& (0+255),b
  4168  010E0C                     
  4169                           ; BSR set to: 0
  4170  010E0C  51A0               	movf	_vfpfcnvrt$2021& (0+255),w,b
  4171  010E0E  11A1               	iorwf	(_vfpfcnvrt$2021+1)& (0+255),w,b
  4172  010E10  A4D8               	btfss	status,2,c
  4173  010E12  EF0D  F087         	goto	u5421
  4174  010E16  EF0F  F087         	goto	u5420
  4175  010E1A                     u5421:
  4176  010E1A  EFD9  F086         	goto	l5481
  4177  010E1E                     u5420:
  4178  010E1E                     l5489:
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  4182  010E1E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4183  010E22  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4184  010E26  CFDE FFF6          	movff	postinc2,tblptrl
  4185  010E2A  CFDD FFF7          	movff	postdec2,tblptrh
  4186  010E2E                     	if	0	;tblptru may be non-zero
  4187  010E2E                     	endif
  4188  010E2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4189  010E2E  0E00               	movlw	low (__mediumconst shr (0+16))
  4190  010E30  6EF8               	movwf	tblptru,c
  4191  010E32                     	endif
  4192  010E32  0008               	tblrd		*
  4193  010E34  50F5               	movf	tablat,w,c
  4194  010E36  6E07               	movwf	tolower@c^0,c
  4195  010E38  6A08               	clrf	(tolower@c+1)^0,c
  4196  010E3A  EC6E  F09C         	call	_tolower	;wreg free
  4197  010E3E  5007               	movf	?_tolower^0,w,c
  4198  010E40  0100               	movlb	0	; () banked
  4199  010E42  6FA8               	movwf	vfpfcnvrt@ct& (0+255),b
  4200  010E44                     
  4201                           ; BSR set to: 0
  4202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  4203  010E44  51A8               	movf	vfpfcnvrt@ct& (0+255),w,b
  4204  010E46  B4D8               	btfsc	status,2,c
  4205  010E48  EF28  F087         	goto	u5431
  4206  010E4C  EF2A  F087         	goto	u5430
  4207  010E50                     u5431:
  4208  010E50  EF68  F087         	goto	l5499
  4209  010E54                     u5430:
  4210  010E54                     
  4211                           ; BSR set to: 0
  4212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  4213  010E54  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4214  010E58  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4215  010E5C  CFDE F048          	movff	postinc2,??_vfpfcnvrt
  4216  010E60  CFDD F049          	movff	postdec2,??_vfpfcnvrt+1
  4217  010E64  0E01               	movlw	1
  4218  010E66  2648               	addwf	??_vfpfcnvrt^0,f,c
  4219  010E68  0E00               	movlw	0
  4220  010E6A  2249               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4221  010E6C  C048  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4222  010E70  C049  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4223  010E74                     	if	0	;tblptru may be non-zero
  4224  010E74                     	endif
  4225  010E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4226  010E74  0E00               	movlw	low (__mediumconst shr (0+16))
  4227  010E76  6EF8               	movwf	tblptru,c
  4228  010E78                     	endif
  4229  010E78  0008               	tblrd		*
  4230  010E7A  50F5               	movf	tablat,w,c
  4231  010E7C  6E07               	movwf	tolower@c^0,c
  4232  010E7E  6A08               	clrf	(tolower@c+1)^0,c
  4233  010E80  EC6E  F09C         	call	_tolower	;wreg free
  4234  010E84  5007               	movf	?_tolower^0,w,c
  4235  010E86  0100               	movlb	0	; () banked
  4236  010E88  6FA9               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4237  010E8A                     
  4238                           ; BSR set to: 0
  4239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  4240  010E8A  51A9               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4241  010E8C  B4D8               	btfsc	status,2,c
  4242  010E8E  EF4B  F087         	goto	u5441
  4243  010E92  EF4D  F087         	goto	u5440
  4244  010E96                     u5441:
  4245  010E96  EF68  F087         	goto	l5499
  4246  010E9A                     u5440:
  4247  010E9A                     
  4248                           ; BSR set to: 0
  4249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  4250  010E9A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4251  010E9E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4252  010EA2  CFDE F048          	movff	postinc2,??_vfpfcnvrt
  4253  010EA6  CFDD F049          	movff	postdec2,??_vfpfcnvrt+1
  4254  010EAA  0E02               	movlw	2
  4255  010EAC  2648               	addwf	??_vfpfcnvrt^0,f,c
  4256  010EAE  0E00               	movlw	0
  4257  010EB0  2249               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4258  010EB2  C048  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4259  010EB6  C049  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4260  010EBA                     	if	0	;tblptru may be non-zero
  4261  010EBA                     	endif
  4262  010EBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4263  010EBA  0E00               	movlw	low (__mediumconst shr (0+16))
  4264  010EBC  6EF8               	movwf	tblptru,c
  4265  010EBE                     	endif
  4266  010EBE  0008               	tblrd		*
  4267  010EC0  50F5               	movf	tablat,w,c
  4268  010EC2  6E07               	movwf	tolower@c^0,c
  4269  010EC4  6A08               	clrf	(tolower@c+1)^0,c
  4270  010EC6  EC6E  F09C         	call	_tolower	;wreg free
  4271  010ECA  5007               	movf	?_tolower^0,w,c
  4272  010ECC  0100               	movlb	0	; () banked
  4273  010ECE  6FAA               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4274  010ED0                     l5499:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4278  010ED0  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4279  010ED4  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4280  010ED8  CFDE FFF6          	movff	postinc2,tblptrl
  4281  010EDC  CFDD FFF7          	movff	postdec2,tblptrh
  4282  010EE0                     	if	0	;tblptru may be non-zero
  4283  010EE0                     	endif
  4284  010EE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4285  010EE0  0E00               	movlw	low (__mediumconst shr (0+16))
  4286  010EE2  6EF8               	movwf	tblptru,c
  4287  010EE4                     	endif
  4288  010EE4  0008               	tblrd		*
  4289  010EE6  50F5               	movf	tablat,w,c
  4290  010EE8  0A64               	xorlw	100
  4291  010EEA  B4D8               	btfsc	status,2,c
  4292  010EEC  EF7A  F087         	goto	u5451
  4293  010EF0  EF7C  F087         	goto	u5450
  4294  010EF4                     u5451:
  4295  010EF4  EF90  F087         	goto	l5503
  4296  010EF8                     u5450:
  4297  010EF8                     
  4298                           ; BSR set to: 0
  4299  010EF8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4300  010EFC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4301  010F00  CFDE FFF6          	movff	postinc2,tblptrl
  4302  010F04  CFDD FFF7          	movff	postdec2,tblptrh
  4303  010F08                     	if	0	;tblptru may be non-zero
  4304  010F08                     	endif
  4305  010F08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4306  010F08  0E00               	movlw	low (__mediumconst shr (0+16))
  4307  010F0A  6EF8               	movwf	tblptru,c
  4308  010F0C                     	endif
  4309  010F0C  0008               	tblrd		*
  4310  010F0E  50F5               	movf	tablat,w,c
  4311  010F10  0A69               	xorlw	105
  4312  010F12  A4D8               	btfss	status,2,c
  4313  010F14  EF8E  F087         	goto	u5461
  4314  010F18  EF90  F087         	goto	u5460
  4315  010F1C                     u5461:
  4316  010F1C  EFD0  F087         	goto	l5509
  4317  010F20                     u5460:
  4318  010F20                     l5503:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4322  010F20  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4323  010F24  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4324  010F28  2ADE               	incf	postinc2,f,c
  4325  010F2A  0E00               	movlw	0
  4326  010F2C  22DD               	addwfc	postdec2,f,c
  4327                           
  4328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4329  010F2E  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4330  010F32  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4331  010F36  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4332  010F3A  0E02               	movlw	2
  4333  010F3C  26DE               	addwf	postinc2,f,c
  4334  010F3E  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4335  010F42  0E00               	movlw	0
  4336  010F44  22DD               	addwfc	postdec2,f,c
  4337  010F46  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4338  010F4A  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4339  010F4E  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  4340  010F52  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  4341  010F56  0E00               	movlw	0
  4342  010F58  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4343  010F5A  0EFF               	movlw	-1
  4344  010F5C  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4345  010F5E  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4346  010F60  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4347  010F62  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4348  010F64  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4349  010F66  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4350  010F68                     
  4351                           ; BSR set to: 0
  4352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4353  010F68  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  4354  010F6C  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4355  010F70  C098  F020         	movff	vfpfcnvrt@ll,dtoa@d
  4356  010F74  C099  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4357  010F78  C09A  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4358  010F7C  C09B  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4359  010F80  C09C  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4360  010F84  C09D  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4361  010F88  C09E  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4362  010F8C  C09F  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4363  010F90  EC5E  F08F         	call	_dtoa	;wreg free
  4364  010F94  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  4365  010F98  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4366  010F9C  EF1B  F089         	goto	l1926
  4367  010FA0                     l5509:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  4371  010FA0  0E66               	movlw	102
  4372  010FA2  19A8               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4373  010FA4  A4D8               	btfss	status,2,c
  4374  010FA6  EFD7  F087         	goto	u5471
  4375  010FAA  EFD9  F087         	goto	u5470
  4376  010FAE                     u5471:
  4377  010FAE  EF1B  F088         	goto	l5521
  4378  010FB2                     u5470:
  4379  010FB2                     
  4380                           ; BSR set to: 0
  4381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  4382  010FB2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4383  010FB6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4384  010FBA  CFDE FFF6          	movff	postinc2,tblptrl
  4385  010FBE  CFDD FFF7          	movff	postdec2,tblptrh
  4386  010FC2                     	if	0	;tblptru may be non-zero
  4387  010FC2                     	endif
  4388  010FC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4389  010FC2  0E00               	movlw	low (__mediumconst shr (0+16))
  4390  010FC4  6EF8               	movwf	tblptru,c
  4391  010FC6                     	endif
  4392  010FC6  0008               	tblrd		*
  4393  010FC8  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  4394  010FCC                     
  4395                           ; BSR set to: 0
  4396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  4397  010FCC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4398  010FD0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4399  010FD4  2ADE               	incf	postinc2,f,c
  4400  010FD6  0E00               	movlw	0
  4401  010FD8  22DD               	addwfc	postdec2,f,c
  4402  010FDA                     
  4403                           ; BSR set to: 0
  4404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4405  010FDA  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4406  010FDE  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4407  010FE2  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4408  010FE6  0E04               	movlw	4
  4409  010FE8  26DE               	addwf	postinc2,f,c
  4410  010FEA  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4411  010FEE  0E00               	movlw	0
  4412  010FF0  22DD               	addwfc	postdec2,f,c
  4413  010FF2  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4414  010FF6  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4415  010FFA  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  4416  010FFE  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  4417  011002  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  4418  011006  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  4419  01100A                     
  4420                           ; BSR set to: 0
  4421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  4422  01100A  C042  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  4423  01100E  C043  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4424  011012  C0A4  F036         	movff	vfpfcnvrt@f,efgtoa@f
  4425  011016  C0A5  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4426  01101A  C0A6  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4427  01101E  C0A7  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4428  011022  C0AB  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  4429  011026  EC00  F080         	call	_efgtoa	;wreg free
  4430  01102A  C034  F042         	movff	?_efgtoa,?_vfpfcnvrt
  4431  01102E  C035  F043         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4432  011032  EF1B  F089         	goto	l1926
  4433  011036                     l5521:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4437  011036  0EA8               	movlw	low vfpfcnvrt@ct
  4438  011038  6E01               	movwf	strncmp@_l^0,c
  4439  01103A  0E00               	movlw	high vfpfcnvrt@ct
  4440  01103C  6E02               	movwf	(strncmp@_l+1)^0,c
  4441  01103E  0EF6               	movlw	low STR_33
  4442  011040  6E03               	movwf	strncmp@_r^0,c
  4443  011042  0EFF               	movlw	high STR_33
  4444  011044  6E04               	movwf	(strncmp@_r+1)^0,c
  4445  011046  0E00               	movlw	0
  4446  011048  6E06               	movwf	(strncmp@n+1)^0,c
  4447  01104A  0E02               	movlw	2
  4448  01104C  6E05               	movwf	strncmp@n^0,c
  4449  01104E  EC0B  F099         	call	_strncmp	;wreg free
  4450  011052  5001               	movf	?_strncmp^0,w,c
  4451  011054  1002               	iorwf	(?_strncmp+1)^0,w,c
  4452  011056  A4D8               	btfss	status,2,c
  4453  011058  EF30  F088         	goto	u5481
  4454  01105C  EF32  F088         	goto	u5480
  4455  011060                     u5481:
  4456  011060  EFC6  F088         	goto	l5537
  4457  011064                     u5480:
  4458  011064                     
  4459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4460  011064  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4461  011068  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4462  01106C  CFDE F048          	movff	postinc2,??_vfpfcnvrt
  4463  011070  CFDD F049          	movff	postdec2,??_vfpfcnvrt+1
  4464  011074  0E01               	movlw	1
  4465  011076  2648               	addwf	??_vfpfcnvrt^0,f,c
  4466  011078  0E00               	movlw	0
  4467  01107A  2249               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4468  01107C  C048  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4469  011080  C049  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4470  011084                     	if	0	;tblptru may be non-zero
  4471  011084                     	endif
  4472  011084                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4473  011084  0E00               	movlw	low (__mediumconst shr (0+16))
  4474  011086  6EF8               	movwf	tblptru,c
  4475  011088                     	endif
  4476  011088  0008               	tblrd		*
  4477  01108A  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  4478  01108E  0EBF               	movlw	191
  4479  011090  6E48               	movwf	??_vfpfcnvrt^0,c
  4480  011092  0EFF               	movlw	255
  4481  011094  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  4482  011096  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4483  01109A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4484  01109E  CFDE FFF6          	movff	postinc2,tblptrl
  4485  0110A2  CFDD FFF7          	movff	postdec2,tblptrh
  4486  0110A6                     	if	0	;tblptru may be non-zero
  4487  0110A6                     	endif
  4488  0110A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4489  0110A6  0E00               	movlw	low (__mediumconst shr (0+16))
  4490  0110A8  6EF8               	movwf	tblptru,c
  4491  0110AA                     	endif
  4492  0110AA  0008               	tblrd		*
  4493  0110AC  50F5               	movf	tablat,w,c
  4494  0110AE  6E4A               	movwf	(??_vfpfcnvrt+2)^0,c
  4495  0110B0  6A4B               	clrf	(??_vfpfcnvrt+3)^0,c
  4496  0110B2  5048               	movf	??_vfpfcnvrt^0,w,c
  4497  0110B4  264A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4498  0110B6  5049               	movf	(??_vfpfcnvrt+1)^0,w,c
  4499  0110B8  224B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4500  0110BA  504B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4501  0110BC  E10A               	bnz	u5490
  4502  0110BE  0E1A               	movlw	26
  4503  0110C0  5C4A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4504  0110C2  A0D8               	btfss	status,0,c
  4505  0110C4  EF66  F088         	goto	u5491
  4506  0110C8  EF69  F088         	goto	u5490
  4507  0110CC                     u5491:
  4508  0110CC  0E01               	movlw	1
  4509  0110CE  EF6A  F088         	goto	u5500
  4510  0110D2                     u5490:
  4511  0110D2  0E00               	movlw	0
  4512  0110D4                     u5500:
  4513  0110D4  0100               	movlb	0	; () banked
  4514  0110D6  6FA2               	movwf	_vfpfcnvrt$2026& (0+255),b
  4515  0110D8  6BA3               	clrf	(_vfpfcnvrt$2026+1)& (0+255),b
  4516  0110DA                     
  4517                           ; BSR set to: 0
  4518  0110DA  51A2               	movf	_vfpfcnvrt$2026& (0+255),w,b
  4519  0110DC  11A3               	iorwf	(_vfpfcnvrt$2026+1)& (0+255),w,b
  4520  0110DE  B4D8               	btfsc	status,2,c
  4521  0110E0  EF74  F088         	goto	u5511
  4522  0110E4  EF76  F088         	goto	u5510
  4523  0110E8                     u5511:
  4524  0110E8  EF90  F088         	goto	l5531
  4525  0110EC                     u5510:
  4526  0110EC                     
  4527                           ; BSR set to: 0
  4528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4529  0110EC  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4530  0110F0  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4531  0110F4  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4532  0110F8  0E04               	movlw	4
  4533  0110FA  26DE               	addwf	postinc2,f,c
  4534  0110FC  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4535  011100  0E00               	movlw	0
  4536  011102  22DD               	addwfc	postdec2,f,c
  4537  011104  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4538  011108  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4539  01110C  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  4540  011110  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  4541  011114  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  4542  011118  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  4543                           
  4544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  4545  01111C  EFA8  F088         	goto	l1934
  4546  011120                     l5531:
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4550  011120  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4551  011124  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4552  011128  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4553  01112C  0E04               	movlw	4
  4554  01112E  26DE               	addwf	postinc2,f,c
  4555  011130  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4556  011134  0E00               	movlw	0
  4557  011136  22DD               	addwfc	postdec2,f,c
  4558  011138  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4559  01113C  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4560  011140  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  4561  011144  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  4562  011148  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  4563  01114C  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  4564  011150                     l1934:
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4568  011150  0E02               	movlw	2
  4569  011152  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4570  011156  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4571  01115A  26DE               	addwf	postinc2,f,c
  4572  01115C  0E00               	movlw	0
  4573  01115E  22DD               	addwfc	postdec2,f,c
  4574  011160                     
  4575                           ; BSR set to: 0
  4576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  4577  011160  C042  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  4578  011164  C043  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4579  011168  C0A4  F036         	movff	vfpfcnvrt@f,efgtoa@f
  4580  01116C  C0A5  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4581  011170  C0A6  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4582  011174  C0A7  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4583  011178  C0AB  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  4584  01117C  EC00  F080         	call	_efgtoa	;wreg free
  4585  011180  C034  F042         	movff	?_efgtoa,?_vfpfcnvrt
  4586  011184  C035  F043         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4587  011188  EF1B  F089         	goto	l1926
  4588  01118C                     l5537:
  4589                           
  4590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4591  01118C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4592  011190  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4593  011194  CFDE FFF6          	movff	postinc2,tblptrl
  4594  011198  CFDD FFF7          	movff	postdec2,tblptrh
  4595  01119C                     	if	0	;tblptru may be non-zero
  4596  01119C                     	endif
  4597  01119C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4598  01119C  0E00               	movlw	low (__mediumconst shr (0+16))
  4599  01119E  6EF8               	movwf	tblptru,c
  4600  0111A0                     	endif
  4601  0111A0  0008               	tblrd		*
  4602  0111A2  50F5               	movf	tablat,w,c
  4603  0111A4  0A25               	xorlw	37
  4604  0111A6  A4D8               	btfss	status,2,c
  4605  0111A8  EFD8  F088         	goto	u5521
  4606  0111AC  EFDA  F088         	goto	u5520
  4607  0111B0                     u5521:
  4608  0111B0  EFF1  F088         	goto	l5547
  4609  0111B4                     u5520:
  4610  0111B4                     
  4611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4612  0111B4  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4613  0111B8  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4614  0111BC  2ADE               	incf	postinc2,f,c
  4615  0111BE  0E00               	movlw	0
  4616  0111C0  22DD               	addwfc	postdec2,f,c
  4617  0111C2                     
  4618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4619  0111C2  0E00               	movlw	0
  4620  0111C4  6E04               	movwf	(fputc@c+1)^0,c
  4621  0111C6  0E25               	movlw	37
  4622  0111C8  6E03               	movwf	fputc@c^0,c
  4623  0111CA  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4624  0111CE  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4625  0111D2  EC4F  F09B         	call	_fputc	;wreg free
  4626  0111D6                     l5543:
  4627                           
  4628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4629  0111D6  0E00               	movlw	0
  4630  0111D8  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4631  0111DA  0E01               	movlw	1
  4632  0111DC  6E42               	movwf	?_vfpfcnvrt^0,c
  4633  0111DE  EF1B  F089         	goto	l1926
  4634  0111E2                     l5547:
  4635                           
  4636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4637  0111E2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4638  0111E6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4639  0111EA  2ADE               	incf	postinc2,f,c
  4640  0111EC  0E00               	movlw	0
  4641  0111EE  22DD               	addwfc	postdec2,f,c
  4642  0111F0                     
  4643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4644  0111F0  0E00               	movlw	0
  4645  0111F2  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4646  0111F4  0E00               	movlw	0
  4647  0111F6  6E42               	movwf	?_vfpfcnvrt^0,c
  4648  0111F8  EF1B  F089         	goto	l1926
  4649  0111FC                     l5553:
  4650                           
  4651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4652  0111FC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4653  011200  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4654  011204  CFDE FFF6          	movff	postinc2,tblptrl
  4655  011208  CFDD FFF7          	movff	postdec2,tblptrh
  4656  01120C                     	if	0	;tblptru may be non-zero
  4657  01120C                     	endif
  4658  01120C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4659  01120C  0E00               	movlw	low (__mediumconst shr (0+16))
  4660  01120E  6EF8               	movwf	tblptru,c
  4661  011210                     	endif
  4662  011210  0008               	tblrd		*
  4663  011212  50F5               	movf	tablat,w,c
  4664  011214  6E03               	movwf	fputc@c^0,c
  4665  011216  6A04               	clrf	(fputc@c+1)^0,c
  4666  011218  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4667  01121C  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4668  011220  EC4F  F09B         	call	_fputc	;wreg free
  4669  011224                     
  4670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4671  011224  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4672  011228  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4673  01122C  2ADE               	incf	postinc2,f,c
  4674  01122E  0E00               	movlw	0
  4675  011230  22DD               	addwfc	postdec2,f,c
  4676  011232  EFEB  F088         	goto	l5543
  4677  011236                     l1926:
  4678  011236  0012               	return		;funcret
  4679  011238                     __end_of_vfpfcnvrt:
  4680                           	callstack 0
  4681                           
  4682 ;; *************** function _strncmp *****************
  4683 ;; Defined at:
  4684 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4687 ;;		 -> vfpfcnvrt@ct(3), 
  4688 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4689 ;;		 -> STR_35(3), 
  4690 ;;  n               2    4[COMRAM] unsigned int 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4693 ;;		 -> STR_35(3), 
  4694 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4695 ;;		 -> vfpfcnvrt@ct(3), 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  2    0[COMRAM] int 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4705 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4706 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4708 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4709 ;;Total ram usage:       11 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 2
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_vfpfcnvrt
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text16
  4720  013216                     __ptext16:
  4721                           	callstack 0
  4722  013216                     _strncmp:
  4723                           	callstack 24
  4724  013216  C001  F008         	movff	strncmp@_l,strncmp@l
  4725  01321A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4726  01321E  C003  F00A         	movff	strncmp@_r,strncmp@r
  4727  013222  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4728  013226  0605               	decf	strncmp@n^0,f,c
  4729  013228  A0D8               	btfss	status,0,c
  4730  01322A  0606               	decf	(strncmp@n+1)^0,f,c
  4731  01322C  2805               	incf	strncmp@n^0,w,c
  4732  01322E  E106               	bnz	u5321
  4733  013230  2806               	incf	(strncmp@n+1)^0,w,c
  4734  013232  A4D8               	btfss	status,2,c
  4735  013234  EF1E  F099         	goto	u5321
  4736  013238  EF20  F099         	goto	u5320
  4737  01323C                     u5321:
  4738  01323C  EF2D  F099         	goto	l5449
  4739  013240                     u5320:
  4740  013240  0E00               	movlw	0
  4741  013242  6E02               	movwf	(?_strncmp+1)^0,c
  4742  013244  0E00               	movlw	0
  4743  013246  6E01               	movwf	?_strncmp^0,c
  4744  013248  EF7B  F099         	goto	l2067
  4745  01324C                     l5447:
  4746  01324C  4A08               	infsnz	strncmp@l^0,f,c
  4747  01324E  2A09               	incf	(strncmp@l+1)^0,f,c
  4748  013250  4A0A               	infsnz	strncmp@r^0,f,c
  4749  013252  2A0B               	incf	(strncmp@r+1)^0,f,c
  4750  013254  0605               	decf	strncmp@n^0,f,c
  4751  013256  A0D8               	btfss	status,0,c
  4752  013258  0606               	decf	(strncmp@n+1)^0,f,c
  4753  01325A                     l5449:
  4754  01325A  C008  FFD9         	movff	strncmp@l,fsr2l
  4755  01325E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4756  013262  50DF               	movf	indf2,w,c
  4757  013264  B4D8               	btfsc	status,2,c
  4758  013266  EF37  F099         	goto	u5331
  4759  01326A  EF39  F099         	goto	u5330
  4760  01326E                     u5331:
  4761  01326E  EF68  F099         	goto	l5457
  4762  013272                     u5330:
  4763  013272  C00A  FFF6         	movff	strncmp@r,tblptrl
  4764  013276  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4765  01327A                     	if	0	;tblptru may be non-zero
  4766  01327A                     	endif
  4767  01327A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4768  01327A  0E00               	movlw	low (__mediumconst shr (0+16))
  4769  01327C  6EF8               	movwf	tblptru,c
  4770  01327E                     	endif
  4771  01327E  0008               	tblrd		*
  4772  013280  50F5               	movf	tablat,w,c
  4773  013282  0900               	iorlw	0
  4774  013284  B4D8               	btfsc	status,2,c
  4775  013286  EF47  F099         	goto	u5341
  4776  01328A  EF49  F099         	goto	u5340
  4777  01328E                     u5341:
  4778  01328E  EF68  F099         	goto	l5457
  4779  013292                     u5340:
  4780  013292  5005               	movf	strncmp@n^0,w,c
  4781  013294  1006               	iorwf	(strncmp@n+1)^0,w,c
  4782  013296  B4D8               	btfsc	status,2,c
  4783  013298  EF50  F099         	goto	u5351
  4784  01329C  EF52  F099         	goto	u5350
  4785  0132A0                     u5351:
  4786  0132A0  EF68  F099         	goto	l5457
  4787  0132A4                     u5350:
  4788  0132A4  C008  FFD9         	movff	strncmp@l,fsr2l
  4789  0132A8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4790  0132AC  50DF               	movf	indf2,w,c
  4791  0132AE  6E07               	movwf	??_strncmp^0,c
  4792  0132B0  C00A  FFF6         	movff	strncmp@r,tblptrl
  4793  0132B4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4794  0132B8                     	if	0	;tblptru may be non-zero
  4795  0132B8                     	endif
  4796  0132B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4797  0132B8  0E00               	movlw	low (__mediumconst shr (0+16))
  4798  0132BA  6EF8               	movwf	tblptru,c
  4799  0132BC                     	endif
  4800  0132BC  0008               	tblrd		*
  4801  0132BE  50F5               	movf	tablat,w,c
  4802  0132C0  1807               	xorwf	??_strncmp^0,w,c
  4803  0132C2  B4D8               	btfsc	status,2,c
  4804  0132C4  EF66  F099         	goto	u5361
  4805  0132C8  EF68  F099         	goto	u5360
  4806  0132CC                     u5361:
  4807  0132CC  EF26  F099         	goto	l5447
  4808  0132D0                     u5360:
  4809  0132D0                     l5457:
  4810  0132D0  C008  FFD9         	movff	strncmp@l,fsr2l
  4811  0132D4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4812  0132D8  50DF               	movf	indf2,w,c
  4813  0132DA  6E07               	movwf	??_strncmp^0,c
  4814  0132DC  C00A  FFF6         	movff	strncmp@r,tblptrl
  4815  0132E0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4816  0132E4                     	if	0	;tblptru may be non-zero
  4817  0132E4                     	endif
  4818  0132E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4819  0132E4  0E00               	movlw	low (__mediumconst shr (0+16))
  4820  0132E6  6EF8               	movwf	tblptru,c
  4821  0132E8                     	endif
  4822  0132E8  0008               	tblrd		*
  4823  0132EA  50F5               	movf	tablat,w,c
  4824  0132EC  5C07               	subwf	??_strncmp^0,w,c
  4825  0132EE  6E01               	movwf	?_strncmp^0,c
  4826  0132F0  6A02               	clrf	(?_strncmp+1)^0,c
  4827  0132F2  A0D8               	btfss	status,0,c
  4828  0132F4  0602               	decf	(?_strncmp+1)^0,f,c
  4829  0132F6                     l2067:
  4830  0132F6  0012               	return		;funcret
  4831  0132F8                     __end_of_strncmp:
  4832                           	callstack 0
  4833                           
  4834 ;; *************** function _efgtoa *****************
  4835 ;; Defined at:
  4836 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  4839 ;;		 -> NULL(0), 
  4840 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  4841 ;;  c               1   57[COMRAM] unsigned char 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  u               4   52[BANK0 ] unsigned char 
  4844 ;;  g               4   44[BANK0 ] unsigned char 
  4845 ;;  l               4   38[BANK0 ] unsigned char 
  4846 ;;  h               4   34[BANK0 ] unsigned char 
  4847 ;;  ou              4   20[BANK0 ] unsigned char 
  4848 ;;  n               2   50[BANK0 ] int 
  4849 ;;  e               2   48[BANK0 ] int 
  4850 ;;  i               2   42[BANK0 ] int 
  4851 ;;  w               2   30[BANK0 ] int 
  4852 ;;  p               2   28[BANK0 ] int 
  4853 ;;  sign            2   26[BANK0 ] int 
  4854 ;;  d               2   24[BANK0 ] int 
  4855 ;;  m               2   18[BANK0 ] int 
  4856 ;;  ne              2   16[BANK0 ] int 
  4857 ;;  pp              2   14[BANK0 ] int 
  4858 ;;  t               2   12[BANK0 ] int 
  4859 ;;  mode            1   33[BANK0 ] unsigned char 
  4860 ;;  nmode           1   32[BANK0 ] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  2   51[COMRAM] int 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4870 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;Total ram usage:       68 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; Hardware stack levels required when called: 7
  4877 ;; This function calls:
  4878 ;;		___awdiv
  4879 ;;		___awmod
  4880 ;;		___fladd
  4881 ;;		___fldiv
  4882 ;;		___fleq
  4883 ;;		___flge
  4884 ;;		___flmul
  4885 ;;		___flneg
  4886 ;;		___flsub
  4887 ;;		___fltol
  4888 ;;		___fpclassifyf
  4889 ;;		_floorf
  4890 ;;		_isupper
  4891 ;;		_pad
  4892 ;;		_strcpy
  4893 ;;		_tolower
  4894 ;; This function is called by:
  4895 ;;		_vfpfcnvrt
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text17
  4900  010000                     __ptext17:
  4901                           	callstack 0
  4902  010000                     _efgtoa:
  4903                           	callstack 19
  4904  010000                     
  4905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4906  010000  0E00               	movlw	0
  4907  010002  0100               	movlb	0	; () banked
  4908  010004  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4909  010006  0E00               	movlw	0
  4910  010008  6F7A               	movwf	efgtoa@sign& (0+255),b
  4911  01000A                     
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4914  01000A  C036  F08C         	movff	efgtoa@f,efgtoa@g
  4915  01000E  C037  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4916  010012  C038  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4917  010016  C039  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4918  01001A                     
  4919                           ; BSR set to: 0
  4920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4921  01001A  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4922  01001C  EF14  F080         	goto	u4710
  4923  010020  EF12  F080         	goto	u4711
  4924  010024                     u4711:
  4925  010024  EF2A  F080         	goto	l5101
  4926  010028                     u4710:
  4927  010028                     
  4928                           ; BSR set to: 0
  4929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4930  010028  0E00               	movlw	0
  4931  01002A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4932  01002C  0E01               	movlw	1
  4933  01002E  6F7A               	movwf	efgtoa@sign& (0+255),b
  4934  010030                     
  4935                           ; BSR set to: 0
  4936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4937  010030  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4938  010034  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4939  010038  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4940  01003C  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4941  010040  EC34  F09E         	call	___flneg	;wreg free
  4942  010044  C001  F08C         	movff	?___flneg,efgtoa@g
  4943  010048  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4944  01004C  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4945  010050  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4946  010054                     l5101:
  4947                           
  4948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4949  010054  0E00               	movlw	0
  4950  010056  0100               	movlb	0	; () banked
  4951  010058  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4952  01005A  0E00               	movlw	0
  4953  01005C  6F92               	movwf	efgtoa@n& (0+255),b
  4954  01005E                     
  4955                           ; BSR set to: 0
  4956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4957  01005E  C0D1  F07E         	movff	_width,efgtoa@w
  4958  010062  C0D2  F07F         	movff	_width+1,efgtoa@w+1
  4959  010066                     
  4960                           ; BSR set to: 0
  4961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4962  010066  517A               	movf	efgtoa@sign& (0+255),w,b
  4963  010068  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4964  01006A  A4D8               	btfss	status,2,c
  4965  01006C  EF3A  F080         	goto	u4721
  4966  010070  EF3C  F080         	goto	u4720
  4967  010074                     u4721:
  4968  010074  EF43  F080         	goto	l5109
  4969  010078                     u4720:
  4970  010078                     
  4971                           ; BSR set to: 0
  4972  010078  A5D5               	btfss	_flags& (0+255),2,b
  4973  01007A  EF41  F080         	goto	u4731
  4974  01007E  EF43  F080         	goto	u4730
  4975  010082                     u4731:
  4976  010082  EF5D  F080         	goto	l5121
  4977  010086                     u4730:
  4978  010086                     l5109:
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4982  010086  517A               	movf	efgtoa@sign& (0+255),w,b
  4983  010088  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4984  01008A  A4D8               	btfss	status,2,c
  4985  01008C  EF4A  F080         	goto	u4741
  4986  010090  EF4C  F080         	goto	u4740
  4987  010094                     u4741:
  4988  010094  EF52  F080         	goto	l5113
  4989  010098                     u4740:
  4990  010098                     
  4991                           ; BSR set to: 0
  4992  010098  0E00               	movlw	0
  4993  01009A  6F61               	movwf	(_efgtoa$1996+1)& (0+255),b
  4994  01009C  0E2B               	movlw	43
  4995  01009E  6F60               	movwf	_efgtoa$1996& (0+255),b
  4996  0100A0  EF56  F080         	goto	l5115
  4997  0100A4                     l5113:
  4998                           
  4999                           ; BSR set to: 0
  5000  0100A4  0E00               	movlw	0
  5001  0100A6  6F61               	movwf	(_efgtoa$1996+1)& (0+255),b
  5002  0100A8  0E2D               	movlw	45
  5003  0100AA  6F60               	movwf	_efgtoa$1996& (0+255),b
  5004  0100AC                     l5115:
  5005                           
  5006                           ; BSR set to: 0
  5007  0100AC  C060  F100         	movff	_efgtoa$1996,_dbuf
  5008  0100B0                     
  5009                           ; BSR set to: 0
  5010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  5011  0100B0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5012  0100B2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5013  0100B4                     
  5014                           ; BSR set to: 0
  5015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  5016  0100B4  077E               	decf	efgtoa@w& (0+255),f,b
  5017  0100B6  A0D8               	btfss	status,0,c
  5018  0100B8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5019  0100BA                     l5121:
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5023  0100BA  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5024  0100BE  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5025  0100C2  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5026  0100C6  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5027  0100CA  EC8C  F098         	call	___fpclassifyf	;wreg free
  5028  0100CE  0401               	decf	?___fpclassifyf^0,w,c
  5029  0100D0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5030  0100D2  A4D8               	btfss	status,2,c
  5031  0100D4  EF6E  F080         	goto	u4751
  5032  0100D8  EF70  F080         	goto	u4750
  5033  0100DC                     u4751:
  5034  0100DC  EFC7  F080         	goto	l5139
  5035  0100E0                     u4750:
  5036  0100E0  0EBF               	movlw	191
  5037  0100E2  6E3B               	movwf	??_efgtoa^0,c
  5038  0100E4  0EFF               	movlw	255
  5039  0100E6  6E3C               	movwf	(??_efgtoa+1)^0,c
  5040  0100E8  503A               	movf	efgtoa@c^0,w,c
  5041  0100EA  6E3D               	movwf	(??_efgtoa+2)^0,c
  5042  0100EC  6A3E               	clrf	(??_efgtoa+3)^0,c
  5043  0100EE  503B               	movf	??_efgtoa^0,w,c
  5044  0100F0  263D               	addwf	(??_efgtoa+2)^0,f,c
  5045  0100F2  503C               	movf	(??_efgtoa+1)^0,w,c
  5046  0100F4  223E               	addwfc	(??_efgtoa+3)^0,f,c
  5047  0100F6  503E               	movf	(??_efgtoa+3)^0,w,c
  5048  0100F8  E10A               	bnz	u4760
  5049  0100FA  0E1A               	movlw	26
  5050  0100FC  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  5051  0100FE  A0D8               	btfss	status,0,c
  5052  010100  EF84  F080         	goto	u4761
  5053  010104  EF87  F080         	goto	u4760
  5054  010108                     u4761:
  5055  010108  0E01               	movlw	1
  5056  01010A  EF88  F080         	goto	u4770
  5057  01010E                     u4760:
  5058  01010E  0E00               	movlw	0
  5059  010110                     u4770:
  5060  010110  0100               	movlb	0	; () banked
  5061  010112  6F62               	movwf	_efgtoa$1997& (0+255),b
  5062  010114  6B63               	clrf	(_efgtoa$1997+1)& (0+255),b
  5063  010116                     
  5064                           ; BSR set to: 0
  5065  010116  5162               	movf	_efgtoa$1997& (0+255),w,b
  5066  010118  1163               	iorwf	(_efgtoa$1997+1)& (0+255),w,b
  5067  01011A  B4D8               	btfsc	status,2,c
  5068  01011C  EF92  F080         	goto	u4781
  5069  010120  EF94  F080         	goto	u4780
  5070  010124                     u4781:
  5071  010124  EFA2  F080         	goto	l5131
  5072  010128                     u4780:
  5073  010128                     
  5074                           ; BSR set to: 0
  5075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  5076  010128  0E00               	movlw	low _dbuf
  5077  01012A  2592               	addwf	efgtoa@n& (0+255),w,b
  5078  01012C  6E01               	movwf	strcpy@dest^0,c
  5079  01012E  0E01               	movlw	high _dbuf
  5080  010130  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5081  010132  6E02               	movwf	(strcpy@dest+1)^0,c
  5082  010134  0EE6               	movlw	low STR_25
  5083  010136  6E03               	movwf	strcpy@src^0,c
  5084  010138  0EFF               	movlw	high STR_25
  5085  01013A  6E04               	movwf	(strcpy@src+1)^0,c
  5086  01013C  EC9E  F09C         	call	_strcpy	;wreg free
  5087                           
  5088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  5089  010140  EFAE  F080         	goto	l5133
  5090  010144                     l5131:
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  5094  010144  0E00               	movlw	low _dbuf
  5095  010146  2592               	addwf	efgtoa@n& (0+255),w,b
  5096  010148  6E01               	movwf	strcpy@dest^0,c
  5097  01014A  0E01               	movlw	high _dbuf
  5098  01014C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5099  01014E  6E02               	movwf	(strcpy@dest+1)^0,c
  5100  010150  0EEE               	movlw	low STR_26
  5101  010152  6E03               	movwf	strcpy@src^0,c
  5102  010154  0EFF               	movlw	high STR_26
  5103  010156  6E04               	movwf	(strcpy@src+1)^0,c
  5104  010158  EC9E  F09C         	call	_strcpy	;wreg free
  5105  01015C                     l5133:
  5106                           
  5107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5108  01015C  0100               	movlb	0	; () banked
  5109  01015E  0EFD               	movlw	253
  5110  010160  277E               	addwf	efgtoa@w& (0+255),f,b
  5111  010162  0EFF               	movlw	255
  5112  010164  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5113  010166                     
  5114                           ; BSR set to: 0
  5115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5116  010166  C034  F013         	movff	efgtoa@fp,pad@fp
  5117  01016A  C035  F014         	movff	efgtoa@fp+1,pad@fp+1
  5118  01016E  0E00               	movlw	low _dbuf
  5119  010170  6E15               	movwf	pad@buf^0,c
  5120  010172  0E01               	movlw	high _dbuf
  5121  010174  6E16               	movwf	(pad@buf+1)^0,c
  5122  010176  C07E  F017         	movff	efgtoa@w,pad@p
  5123  01017A  C07F  F018         	movff	efgtoa@w+1,pad@p+1
  5124  01017E  EC7C  F099         	call	_pad	;wreg free
  5125  010182  C013  F034         	movff	?_pad,?_efgtoa
  5126  010186  C014  F035         	movff	?_pad+1,?_efgtoa+1
  5127  01018A  EF52  F086         	goto	l1832
  5128  01018E                     l5139:
  5129                           
  5130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5131  01018E  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5132  010192  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5133  010196  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5134  01019A  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5135  01019E  EC8C  F098         	call	___fpclassifyf	;wreg free
  5136  0101A2  5001               	movf	?___fpclassifyf^0,w,c
  5137  0101A4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5138  0101A6  A4D8               	btfss	status,2,c
  5139  0101A8  EFD8  F080         	goto	u4791
  5140  0101AC  EFDA  F080         	goto	u4790
  5141  0101B0                     u4791:
  5142  0101B0  EF31  F081         	goto	l5157
  5143  0101B4                     u4790:
  5144  0101B4  0EBF               	movlw	191
  5145  0101B6  6E3B               	movwf	??_efgtoa^0,c
  5146  0101B8  0EFF               	movlw	255
  5147  0101BA  6E3C               	movwf	(??_efgtoa+1)^0,c
  5148  0101BC  503A               	movf	efgtoa@c^0,w,c
  5149  0101BE  6E3D               	movwf	(??_efgtoa+2)^0,c
  5150  0101C0  6A3E               	clrf	(??_efgtoa+3)^0,c
  5151  0101C2  503B               	movf	??_efgtoa^0,w,c
  5152  0101C4  263D               	addwf	(??_efgtoa+2)^0,f,c
  5153  0101C6  503C               	movf	(??_efgtoa+1)^0,w,c
  5154  0101C8  223E               	addwfc	(??_efgtoa+3)^0,f,c
  5155  0101CA  503E               	movf	(??_efgtoa+3)^0,w,c
  5156  0101CC  E10A               	bnz	u4800
  5157  0101CE  0E1A               	movlw	26
  5158  0101D0  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  5159  0101D2  A0D8               	btfss	status,0,c
  5160  0101D4  EFEE  F080         	goto	u4801
  5161  0101D8  EFF1  F080         	goto	u4800
  5162  0101DC                     u4801:
  5163  0101DC  0E01               	movlw	1
  5164  0101DE  EFF2  F080         	goto	u4810
  5165  0101E2                     u4800:
  5166  0101E2  0E00               	movlw	0
  5167  0101E4                     u4810:
  5168  0101E4  0100               	movlb	0	; () banked
  5169  0101E6  6F64               	movwf	_efgtoa$2001& (0+255),b
  5170  0101E8  6B65               	clrf	(_efgtoa$2001+1)& (0+255),b
  5171  0101EA                     
  5172                           ; BSR set to: 0
  5173  0101EA  5164               	movf	_efgtoa$2001& (0+255),w,b
  5174  0101EC  1165               	iorwf	(_efgtoa$2001+1)& (0+255),w,b
  5175  0101EE  B4D8               	btfsc	status,2,c
  5176  0101F0  EFFC  F080         	goto	u4821
  5177  0101F4  EFFE  F080         	goto	u4820
  5178  0101F8                     u4821:
  5179  0101F8  EF0C  F081         	goto	l5149
  5180  0101FC                     u4820:
  5181  0101FC                     
  5182                           ; BSR set to: 0
  5183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  5184  0101FC  0E00               	movlw	low _dbuf
  5185  0101FE  2592               	addwf	efgtoa@n& (0+255),w,b
  5186  010200  6E01               	movwf	strcpy@dest^0,c
  5187  010202  0E01               	movlw	high _dbuf
  5188  010204  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5189  010206  6E02               	movwf	(strcpy@dest+1)^0,c
  5190  010208  0EEA               	movlw	low STR_29
  5191  01020A  6E03               	movwf	strcpy@src^0,c
  5192  01020C  0EFF               	movlw	high STR_29
  5193  01020E  6E04               	movwf	(strcpy@src+1)^0,c
  5194  010210  EC9E  F09C         	call	_strcpy	;wreg free
  5195                           
  5196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  5197  010214  EF18  F081         	goto	l5151
  5198  010218                     l5149:
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  5202  010218  0E00               	movlw	low _dbuf
  5203  01021A  2592               	addwf	efgtoa@n& (0+255),w,b
  5204  01021C  6E01               	movwf	strcpy@dest^0,c
  5205  01021E  0E01               	movlw	high _dbuf
  5206  010220  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5207  010222  6E02               	movwf	(strcpy@dest+1)^0,c
  5208  010224  0EF2               	movlw	low STR_30
  5209  010226  6E03               	movwf	strcpy@src^0,c
  5210  010228  0EFF               	movlw	high STR_30
  5211  01022A  6E04               	movwf	(strcpy@src+1)^0,c
  5212  01022C  EC9E  F09C         	call	_strcpy	;wreg free
  5213  010230                     l5151:
  5214                           
  5215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5216  010230  0100               	movlb	0	; () banked
  5217  010232  0EFD               	movlw	253
  5218  010234  277E               	addwf	efgtoa@w& (0+255),f,b
  5219  010236  0EFF               	movlw	255
  5220  010238  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5221  01023A                     
  5222                           ; BSR set to: 0
  5223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5224  01023A  C034  F013         	movff	efgtoa@fp,pad@fp
  5225  01023E  C035  F014         	movff	efgtoa@fp+1,pad@fp+1
  5226  010242  0E00               	movlw	low _dbuf
  5227  010244  6E15               	movwf	pad@buf^0,c
  5228  010246  0E01               	movlw	high _dbuf
  5229  010248  6E16               	movwf	(pad@buf+1)^0,c
  5230  01024A  C07E  F017         	movff	efgtoa@w,pad@p
  5231  01024E  C07F  F018         	movff	efgtoa@w+1,pad@p+1
  5232  010252  EC7C  F099         	call	_pad	;wreg free
  5233  010256  C013  F034         	movff	?_pad,?_efgtoa
  5234  01025A  C014  F035         	movff	?_pad+1,?_efgtoa+1
  5235  01025E  EF52  F086         	goto	l1832
  5236  010262                     l5157:
  5237                           
  5238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  5239  010262  0E00               	movlw	0
  5240  010264  0100               	movlb	0	; () banked
  5241  010266  6F94               	movwf	efgtoa@u& (0+255),b
  5242  010268  0E00               	movlw	0
  5243  01026A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5244  01026C  0E80               	movlw	128
  5245  01026E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5246  010270  0E3F               	movlw	63
  5247  010272  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5248                           
  5249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  5250  010274  0E00               	movlw	0
  5251  010276  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5252  010278  0E00               	movlw	0
  5253  01027A  6F90               	movwf	efgtoa@e& (0+255),b
  5254  01027C                     
  5255                           ; BSR set to: 0
  5256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  5257  01027C  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  5258  010280  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5259  010284  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5260  010288  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5261  01028C  0E00               	movlw	0
  5262  01028E  6E05               	movwf	___fleq@ff2^0,c
  5263  010290  0E00               	movlw	0
  5264  010292  6E06               	movwf	(___fleq@ff2+1)^0,c
  5265  010294  0E00               	movlw	0
  5266  010296  6E07               	movwf	(___fleq@ff2+2)^0,c
  5267  010298  0E00               	movlw	0
  5268  01029A  6E08               	movwf	(___fleq@ff2+3)^0,c
  5269  01029C  ECFA  F09A         	call	___fleq	;wreg free
  5270  0102A0  B0D8               	btfsc	status,0,c
  5271  0102A2  EF55  F081         	goto	u4831
  5272  0102A6  EF57  F081         	goto	u4830
  5273  0102AA                     u4831:
  5274  0102AA  EFDA  F081         	goto	l5175
  5275  0102AE                     u4830:
  5276  0102AE  EF76  F081         	goto	l5167
  5277  0102B2                     l5163:
  5278                           
  5279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5280  0102B2  C094  F00F         	movff	efgtoa@u,___flmul@b
  5281  0102B6  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  5282  0102BA  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  5283  0102BE  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  5284  0102C2  0E00               	movlw	0
  5285  0102C4  6E13               	movwf	___flmul@a^0,c
  5286  0102C6  0E00               	movlw	0
  5287  0102C8  6E14               	movwf	(___flmul@a+1)^0,c
  5288  0102CA  0E20               	movlw	32
  5289  0102CC  6E15               	movwf	(___flmul@a+2)^0,c
  5290  0102CE  0E41               	movlw	65
  5291  0102D0  6E16               	movwf	(___flmul@a+3)^0,c
  5292  0102D2  EC7C  F08B         	call	___flmul	;wreg free
  5293  0102D6  C00F  F094         	movff	?___flmul,efgtoa@u
  5294  0102DA  C010  F095         	movff	?___flmul+1,efgtoa@u+1
  5295  0102DE  C011  F096         	movff	?___flmul+2,efgtoa@u+2
  5296  0102E2  C012  F097         	movff	?___flmul+3,efgtoa@u+3
  5297  0102E6                     
  5298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5299  0102E6  0100               	movlb	0	; () banked
  5300  0102E8  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5301  0102EA  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5302  0102EC                     l5167:
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5305  0102EC  C08C  F028         	movff	efgtoa@g,___flge@ff1
  5306  0102F0  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  5307  0102F4  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  5308  0102F8  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  5309  0102FC  0E00               	movlw	0
  5310  0102FE  6E13               	movwf	___flmul@a^0,c
  5311  010300  0E00               	movlw	0
  5312  010302  6E14               	movwf	(___flmul@a+1)^0,c
  5313  010304  0E20               	movlw	32
  5314  010306  6E15               	movwf	(___flmul@a+2)^0,c
  5315  010308  0E41               	movlw	65
  5316  01030A  6E16               	movwf	(___flmul@a+3)^0,c
  5317  01030C  C094  F00F         	movff	efgtoa@u,___flmul@b
  5318  010310  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  5319  010314  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  5320  010318  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  5321  01031C  EC7C  F08B         	call	___flmul	;wreg free
  5322  010320  C00F  F02C         	movff	?___flmul,___flge@ff2
  5323  010324  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  5324  010328  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  5325  01032C  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  5326  010330  EC0A  F098         	call	___flge	;wreg free
  5327  010334  B0D8               	btfsc	status,0,c
  5328  010336  EF9F  F081         	goto	u4841
  5329  01033A  EFA1  F081         	goto	u4840
  5330  01033E                     u4841:
  5331  01033E  EF59  F081         	goto	l5163
  5332  010342                     u4840:
  5333  010342  EFC1  F081         	goto	l5173
  5334  010346                     l5169:
  5335                           
  5336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5337  010346  C094  F001         	movff	efgtoa@u,___fldiv@b
  5338  01034A  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5339  01034E  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5340  010352  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5341  010356  0E00               	movlw	0
  5342  010358  6E05               	movwf	___fldiv@a^0,c
  5343  01035A  0E00               	movlw	0
  5344  01035C  6E06               	movwf	(___fldiv@a+1)^0,c
  5345  01035E  0E20               	movlw	32
  5346  010360  6E07               	movwf	(___fldiv@a+2)^0,c
  5347  010362  0E41               	movlw	65
  5348  010364  6E08               	movwf	(___fldiv@a+3)^0,c
  5349  010366  EC91  F08D         	call	___fldiv	;wreg free
  5350  01036A  C001  F094         	movff	?___fldiv,efgtoa@u
  5351  01036E  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5352  010372  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5353  010376  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5354  01037A                     
  5355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5356  01037A  0100               	movlb	0	; () banked
  5357  01037C  0790               	decf	efgtoa@e& (0+255),f,b
  5358  01037E  A0D8               	btfss	status,0,c
  5359  010380  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  5360  010382                     l5173:
  5361                           
  5362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5363  010382  C08C  F028         	movff	efgtoa@g,___flge@ff1
  5364  010386  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  5365  01038A  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  5366  01038E  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  5367  010392  C094  F02C         	movff	efgtoa@u,___flge@ff2
  5368  010396  C095  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  5369  01039A  C096  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  5370  01039E  C097  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  5371  0103A2  EC0A  F098         	call	___flge	;wreg free
  5372  0103A6  A0D8               	btfss	status,0,c
  5373  0103A8  EFD8  F081         	goto	u4851
  5374  0103AC  EFDA  F081         	goto	u4850
  5375  0103B0                     u4851:
  5376  0103B0  EFA3  F081         	goto	l5169
  5377  0103B4                     u4850:
  5378  0103B4                     l5175:
  5379                           
  5380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5381  0103B4  C03A  F007         	movff	efgtoa@c,tolower@c
  5382  0103B8  6A08               	clrf	(tolower@c+1)^0,c
  5383  0103BA  EC6E  F09C         	call	_tolower	;wreg free
  5384  0103BE  5007               	movf	?_tolower^0,w,c
  5385  0103C0  0100               	movlb	0	; () banked
  5386  0103C2  6F81               	movwf	efgtoa@mode& (0+255),b
  5387  0103C4                     
  5388                           ; BSR set to: 0
  5389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5390  0103C4  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  5391  0103C8                     
  5392                           ; BSR set to: 0
  5393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5394  0103C8  0E67               	movlw	103
  5395  0103CA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5396  0103CC  A4D8               	btfss	status,2,c
  5397  0103CE  EFEB  F081         	goto	u4861
  5398  0103D2  EFED  F081         	goto	u4860
  5399  0103D6                     u4861:
  5400  0103D6  EF13  F082         	goto	l5189
  5401  0103DA                     u4860:
  5402  0103DA                     
  5403                           ; BSR set to: 0
  5404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5405  0103DA  51D3               	movf	_prec& (0+255),w,b
  5406  0103DC  11D4               	iorwf	(_prec+1)& (0+255),w,b
  5407  0103DE  A4D8               	btfss	status,2,c
  5408  0103E0  EFF4  F081         	goto	u4871
  5409  0103E4  EFF6  F081         	goto	u4870
  5410  0103E8                     u4871:
  5411  0103E8  EFFA  F081         	goto	l5185
  5412  0103EC                     u4870:
  5413  0103EC                     
  5414                           ; BSR set to: 0
  5415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5416  0103EC  0E00               	movlw	0
  5417  0103EE  6FD4               	movwf	(_prec+1)& (0+255),b
  5418  0103F0  0E01               	movlw	1
  5419  0103F2  6FD3               	movwf	_prec& (0+255),b
  5420  0103F4                     l5185:
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5424  0103F4  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  5425  0103F6  EF07  F082         	goto	u4880
  5426  0103FA  51D4               	movf	(_prec+1)& (0+255),w,b
  5427  0103FC  E106               	bnz	u4881
  5428  0103FE  05D3               	decf	_prec& (0+255),w,b
  5429  010400  B0D8               	btfsc	status,0,c
  5430  010402  EF05  F082         	goto	u4881
  5431  010406  EF07  F082         	goto	u4880
  5432  01040A                     u4881:
  5433  01040A  EF0D  F082         	goto	l1850
  5434  01040E                     u4880:
  5435  01040E                     l5187:
  5436                           
  5437                           ; BSR set to: 0
  5438  01040E  0E00               	movlw	0
  5439  010410  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5440  010412  0E06               	movlw	6
  5441  010414  6F7C               	movwf	efgtoa@p& (0+255),b
  5442  010416  EF1C  F082         	goto	l5195
  5443  01041A                     l1850:
  5444                           
  5445                           ; BSR set to: 0
  5446  01041A  C0D3  F07C         	movff	_prec,efgtoa@p
  5447  01041E  C0D4  F07D         	movff	_prec+1,efgtoa@p+1
  5448  010422  EF1C  F082         	goto	l5195
  5449  010426                     l5189:
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5453  010426  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  5454  010428  EF18  F082         	goto	u4891
  5455  01042C  EF1A  F082         	goto	u4890
  5456  010430                     u4891:
  5457  010430  EF07  F082         	goto	l5187
  5458  010434                     u4890:
  5459  010434  EF0D  F082         	goto	l1850
  5460  010438                     l5195:
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5464  010438  0E67               	movlw	103
  5465  01043A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5466  01043C  A4D8               	btfss	status,2,c
  5467  01043E  EF23  F082         	goto	u4901
  5468  010442  EF25  F082         	goto	u4900
  5469  010446                     u4901:
  5470  010446  EF54  F082         	goto	l5205
  5471  01044A                     u4900:
  5472  01044A                     
  5473                           ; BSR set to: 0
  5474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5475  01044A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5476  01044C  EF33  F082         	goto	u4910
  5477  010450  0EFC               	movlw	252
  5478  010452  5D90               	subwf	efgtoa@e& (0+255),w,b
  5479  010454  0EFF               	movlw	255
  5480  010456  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5481  010458  A0D8               	btfss	status,0,c
  5482  01045A  EF31  F082         	goto	u4911
  5483  01045E  EF33  F082         	goto	u4910
  5484  010462                     u4911:
  5485  010462  EF52  F082         	goto	l5203
  5486  010466                     u4910:
  5487  010466                     
  5488                           ; BSR set to: 0
  5489  010466  0EFF               	movlw	255
  5490  010468  6E3B               	movwf	??_efgtoa^0,c
  5491  01046A  0EFF               	movlw	255
  5492  01046C  6E3C               	movwf	(??_efgtoa+1)^0,c
  5493  01046E  C07C  F03D         	movff	efgtoa@p,??_efgtoa+2
  5494  010472  C07D  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  5495  010476  503B               	movf	??_efgtoa^0,w,c
  5496  010478  263D               	addwf	(??_efgtoa+2)^0,f,c
  5497  01047A  503C               	movf	(??_efgtoa+1)^0,w,c
  5498  01047C  223E               	addwfc	(??_efgtoa+3)^0,f,c
  5499  01047E  5190               	movf	efgtoa@e& (0+255),w,b
  5500  010480  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  5501  010482  503E               	movf	(??_efgtoa+3)^0,w,c
  5502  010484  0A80               	xorlw	128
  5503  010486  6E3F               	movwf	(??_efgtoa+4)^0,c
  5504  010488  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5505  01048A  0A80               	xorlw	128
  5506  01048C  583F               	subwfb	(??_efgtoa+4)^0,w,c
  5507  01048E  A0D8               	btfss	status,0,c
  5508  010490  EF4C  F082         	goto	u4921
  5509  010494  EF4E  F082         	goto	u4920
  5510  010498                     u4921:
  5511  010498  EF52  F082         	goto	l5203
  5512  01049C                     u4920:
  5513  01049C                     
  5514                           ; BSR set to: 0
  5515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5516  01049C  0E66               	movlw	102
  5517  01049E  6F80               	movwf	efgtoa@nmode& (0+255),b
  5518                           
  5519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5520  0104A0  EF54  F082         	goto	l5205
  5521  0104A4                     l5203:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5525  0104A4  0E65               	movlw	101
  5526  0104A6  6F80               	movwf	efgtoa@nmode& (0+255),b
  5527  0104A8                     l5205:
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5531  0104A8  C07C  F072         	movff	efgtoa@p,efgtoa@m
  5532  0104AC  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  5533  0104B0                     
  5534                           ; BSR set to: 0
  5535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5536  0104B0  0E67               	movlw	103
  5537  0104B2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5538  0104B4  A4D8               	btfss	status,2,c
  5539  0104B6  EF5F  F082         	goto	u4931
  5540  0104BA  EF61  F082         	goto	u4930
  5541  0104BE                     u4931:
  5542  0104BE  EF71  F082         	goto	l5213
  5543  0104C2                     u4930:
  5544  0104C2                     
  5545                           ; BSR set to: 0
  5546  0104C2  0E66               	movlw	102
  5547  0104C4  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5548  0104C6  A4D8               	btfss	status,2,c
  5549  0104C8  EF68  F082         	goto	u4941
  5550  0104CC  EF6A  F082         	goto	u4940
  5551  0104D0                     u4941:
  5552  0104D0  EF73  F082         	goto	l5215
  5553  0104D4                     u4940:
  5554  0104D4                     
  5555                           ; BSR set to: 0
  5556  0104D4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5557  0104D6  EF71  F082         	goto	u4950
  5558  0104DA  EF6F  F082         	goto	u4951
  5559  0104DE                     u4951:
  5560  0104DE  EF73  F082         	goto	l5215
  5561  0104E2                     u4950:
  5562  0104E2                     l5213:
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5566  0104E2  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5567  0104E4  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5568  0104E6                     l5215:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5572  0104E6  0E66               	movlw	102
  5573  0104E8  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5574  0104EA  A4D8               	btfss	status,2,c
  5575  0104EC  EF7A  F082         	goto	u4961
  5576  0104F0  EF7C  F082         	goto	u4960
  5577  0104F4                     u4961:
  5578  0104F4  EF9C  F082         	goto	l5225
  5579  0104F8                     u4960:
  5580  0104F8                     
  5581                           ; BSR set to: 0
  5582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5583  0104F8  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5584  0104FA  EF83  F082         	goto	u4970
  5585  0104FE  EF81  F082         	goto	u4971
  5586  010502                     u4971:
  5587  010502  EF8F  F082         	goto	l5221
  5588  010506                     u4970:
  5589  010506                     
  5590                           ; BSR set to: 0
  5591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5592  010506  0E00               	movlw	0
  5593  010508  6F94               	movwf	efgtoa@u& (0+255),b
  5594  01050A  0E00               	movlw	0
  5595  01050C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5596  01050E  0E80               	movlw	128
  5597  010510  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5598  010512  0E3F               	movlw	63
  5599  010514  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5600                           
  5601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5602  010516  0E00               	movlw	0
  5603  010518  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5604  01051A  0E00               	movlw	0
  5605  01051C  6F90               	movwf	efgtoa@e& (0+255),b
  5606  01051E                     l5221:
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5610  01051E  0E67               	movlw	103
  5611  010520  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5612  010522  B4D8               	btfsc	status,2,c
  5613  010524  EF96  F082         	goto	u4981
  5614  010528  EF98  F082         	goto	u4980
  5615  01052C                     u4981:
  5616  01052C  EF9C  F082         	goto	l5225
  5617  010530                     u4980:
  5618  010530                     
  5619                           ; BSR set to: 0
  5620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5621  010530  5190               	movf	efgtoa@e& (0+255),w,b
  5622  010532  2772               	addwf	efgtoa@m& (0+255),f,b
  5623  010534  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5624  010536  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5625  010538                     l5225:
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5629  010538  0E00               	movlw	0
  5630  01053A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5631  01053C  0E00               	movlw	0
  5632  01053E  6F8A               	movwf	efgtoa@i& (0+255),b
  5633  010540                     
  5634                           ; BSR set to: 0
  5635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5636  010540  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5637  010544  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5638  010548  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5639  01054C  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5640  010550                     
  5641                           ; BSR set to: 0
  5642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5643  010550  C094  F074         	movff	efgtoa@u,efgtoa@ou
  5644  010554  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  5645  010558  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  5646  01055C  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  5647                           
  5648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5649  010560  EF2D  F083         	goto	l5239
  5650  010564                     l5231:
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5654  010564  C082  F001         	movff	efgtoa@h,___fldiv@b
  5655  010568  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5656  01056C  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5657  010570  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5658  010574  C094  F005         	movff	efgtoa@u,___fldiv@a
  5659  010578  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5660  01057C  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5661  010580  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5662  010584  EC91  F08D         	call	___fldiv	;wreg free
  5663  010588  C001  F01A         	movff	?___fldiv,floorf@x
  5664  01058C  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5665  010590  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5666  010594  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5667  010598  ECD0  F090         	call	_floorf	;wreg free
  5668  01059C  C01A  F086         	movff	?_floorf,efgtoa@l
  5669  0105A0  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5670  0105A4  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5671  0105A8  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5672                           
  5673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5674  0105AC  C086  F001         	movff	efgtoa@l,___fltol@f1
  5675  0105B0  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5676  0105B4  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5677  0105B8  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5678  0105BC  EC87  F097         	call	___fltol	;wreg free
  5679  0105C0  C001  F078         	movff	?___fltol,efgtoa@d
  5680  0105C4  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5681  0105C8                     
  5682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5683  0105C8  C082  F028         	movff	efgtoa@h,___flsub@b
  5684  0105CC  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  5685  0105D0  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  5686  0105D4  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  5687  0105D8  C094  F013         	movff	efgtoa@u,___flmul@a
  5688  0105DC  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  5689  0105E0  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  5690  0105E4  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  5691  0105E8  C086  F00F         	movff	efgtoa@l,___flmul@b
  5692  0105EC  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  5693  0105F0  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  5694  0105F4  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  5695  0105F8  EC7C  F08B         	call	___flmul	;wreg free
  5696  0105FC  C00F  F02C         	movff	?___flmul,___flsub@a
  5697  010600  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  5698  010604  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  5699  010608  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  5700  01060C  EC91  F09D         	call	___flsub	;wreg free
  5701  010610  C028  F082         	movff	?___flsub,efgtoa@h
  5702  010614  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  5703  010618  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  5704  01061C  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  5705  010620                     
  5706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5707  010620  C094  F001         	movff	efgtoa@u,___fldiv@b
  5708  010624  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5709  010628  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5710  01062C  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5711  010630  0E00               	movlw	0
  5712  010632  6E05               	movwf	___fldiv@a^0,c
  5713  010634  0E00               	movlw	0
  5714  010636  6E06               	movwf	(___fldiv@a+1)^0,c
  5715  010638  0E20               	movlw	32
  5716  01063A  6E07               	movwf	(___fldiv@a+2)^0,c
  5717  01063C  0E41               	movlw	65
  5718  01063E  6E08               	movwf	(___fldiv@a+3)^0,c
  5719  010640  EC91  F08D         	call	___fldiv	;wreg free
  5720  010644  C001  F094         	movff	?___fldiv,efgtoa@u
  5721  010648  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5722  01064C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5723  010650  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5724  010654                     
  5725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5726  010654  0100               	movlb	0	; () banked
  5727  010656  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5728  010658  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5729  01065A                     l5239:
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5733  01065A  5172               	movf	efgtoa@m& (0+255),w,b
  5734  01065C  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5735  01065E  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5736  010660  0A80               	xorlw	128
  5737  010662  6E3B               	movwf	??_efgtoa^0,c
  5738  010664  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5739  010666  0A80               	xorlw	128
  5740  010668  583B               	subwfb	??_efgtoa^0,w,c
  5741  01066A  A0D8               	btfss	status,0,c
  5742  01066C  EF3A  F083         	goto	u4991
  5743  010670  EF3C  F083         	goto	u4990
  5744  010674                     u4991:
  5745  010674  EFB2  F082         	goto	l5231
  5746  010678                     u4990:
  5747  010678                     
  5748                           ; BSR set to: 0
  5749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5750  010678  C094  F00F         	movff	efgtoa@u,___flmul@b
  5751  01067C  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  5752  010680  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  5753  010684  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  5754  010688  0E00               	movlw	0
  5755  01068A  6E13               	movwf	___flmul@a^0,c
  5756  01068C  0E00               	movlw	0
  5757  01068E  6E14               	movwf	(___flmul@a+1)^0,c
  5758  010690  0EA0               	movlw	160
  5759  010692  6E15               	movwf	(___flmul@a+2)^0,c
  5760  010694  0E40               	movlw	64
  5761  010696  6E16               	movwf	(___flmul@a+3)^0,c
  5762  010698  EC7C  F08B         	call	___flmul	;wreg free
  5763  01069C  C00F  F086         	movff	?___flmul,efgtoa@l
  5764  0106A0  C010  F087         	movff	?___flmul+1,efgtoa@l+1
  5765  0106A4  C011  F088         	movff	?___flmul+2,efgtoa@l+2
  5766  0106A8  C012  F089         	movff	?___flmul+3,efgtoa@l+3
  5767  0106AC                     
  5768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5769  0106AC  C082  F028         	movff	efgtoa@h,___flge@ff1
  5770  0106B0  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  5771  0106B4  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  5772  0106B8  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  5773  0106BC  C086  F02C         	movff	efgtoa@l,___flge@ff2
  5774  0106C0  C087  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  5775  0106C4  C088  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  5776  0106C8  C089  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  5777  0106CC  EC0A  F098         	call	___flge	;wreg free
  5778  0106D0  B0D8               	btfsc	status,0,c
  5779  0106D2  EF6D  F083         	goto	u5001
  5780  0106D6  EF6F  F083         	goto	u5000
  5781  0106DA                     u5001:
  5782  0106DA  EF7A  F083         	goto	l5247
  5783  0106DE                     u5000:
  5784  0106DE                     
  5785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5786  0106DE  0E00               	movlw	0
  5787  0106E0  0100               	movlb	0	; () banked
  5788  0106E2  6F86               	movwf	efgtoa@l& (0+255),b
  5789  0106E4  0E00               	movlw	0
  5790  0106E6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5791  0106E8  0E00               	movlw	0
  5792  0106EA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5793  0106EC  0E00               	movlw	0
  5794  0106EE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5795                           
  5796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5797  0106F0  EFA3  F083         	goto	l5253
  5798  0106F4                     l5247:
  5799                           
  5800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5801  0106F4  C082  F001         	movff	efgtoa@h,___fleq@ff1
  5802  0106F8  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5803  0106FC  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5804  010700  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5805  010704  C086  F005         	movff	efgtoa@l,___fleq@ff2
  5806  010708  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5807  01070C  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5808  010710  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5809  010714  ECFA  F09A         	call	___fleq	;wreg free
  5810  010718  A0D8               	btfss	status,0,c
  5811  01071A  EF91  F083         	goto	u5011
  5812  01071E  EF93  F083         	goto	u5010
  5813  010722                     u5011:
  5814  010722  EFA3  F083         	goto	l5253
  5815  010726                     u5010:
  5816  010726  0100               	movlb	0	; () banked
  5817  010728  B178               	btfsc	efgtoa@d& (0+255),0,b
  5818  01072A  EF99  F083         	goto	u5021
  5819  01072E  EF9B  F083         	goto	u5020
  5820  010732                     u5021:
  5821  010732  EFA3  F083         	goto	l5253
  5822  010736                     u5020:
  5823  010736                     
  5824                           ; BSR set to: 0
  5825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5826  010736  0E00               	movlw	0
  5827  010738  6F86               	movwf	efgtoa@l& (0+255),b
  5828  01073A  0E00               	movlw	0
  5829  01073C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5830  01073E  0E00               	movlw	0
  5831  010740  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5832  010742  0E00               	movlw	0
  5833  010744  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5834  010746                     l5253:
  5835                           
  5836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5837  010746  C08C  F001         	movff	efgtoa@g,___fladd@b
  5838  01074A  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  5839  01074E  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  5840  010752  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  5841  010756  C086  F005         	movff	efgtoa@l,___fladd@a
  5842  01075A  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  5843  01075E  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  5844  010762  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  5845  010766  EC1C  F089         	call	___fladd	;wreg free
  5846  01076A  C001  F082         	movff	?___fladd,efgtoa@h
  5847  01076E  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  5848  010772  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  5849  010776  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  5850  01077A                     
  5851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5852  01077A  C082  F028         	movff	efgtoa@h,___flge@ff1
  5853  01077E  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  5854  010782  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  5855  010786  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  5856  01078A  0E00               	movlw	0
  5857  01078C  6E13               	movwf	___flmul@a^0,c
  5858  01078E  0E00               	movlw	0
  5859  010790  6E14               	movwf	(___flmul@a+1)^0,c
  5860  010792  0E20               	movlw	32
  5861  010794  6E15               	movwf	(___flmul@a+2)^0,c
  5862  010796  0E41               	movlw	65
  5863  010798  6E16               	movwf	(___flmul@a+3)^0,c
  5864  01079A  C074  F00F         	movff	efgtoa@ou,___flmul@b
  5865  01079E  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  5866  0107A2  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  5867  0107A6  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  5868  0107AA  EC7C  F08B         	call	___flmul	;wreg free
  5869  0107AE  C00F  F02C         	movff	?___flmul,___flge@ff2
  5870  0107B2  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  5871  0107B6  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  5872  0107BA  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  5873  0107BE  EC0A  F098         	call	___flge	;wreg free
  5874  0107C2  A0D8               	btfss	status,0,c
  5875  0107C4  EFE6  F083         	goto	u5031
  5876  0107C8  EFE8  F083         	goto	u5030
  5877  0107CC                     u5031:
  5878  0107CC  EF11  F084         	goto	l5265
  5879  0107D0                     u5030:
  5880  0107D0                     
  5881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5882  0107D0  0100               	movlb	0	; () banked
  5883  0107D2  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5884  0107D4  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5885  0107D6                     
  5886                           ; BSR set to: 0
  5887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5888  0107D6  C074  F00F         	movff	efgtoa@ou,___flmul@b
  5889  0107DA  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  5890  0107DE  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  5891  0107E2  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  5892  0107E6  0E00               	movlw	0
  5893  0107E8  6E13               	movwf	___flmul@a^0,c
  5894  0107EA  0E00               	movlw	0
  5895  0107EC  6E14               	movwf	(___flmul@a+1)^0,c
  5896  0107EE  0E20               	movlw	32
  5897  0107F0  6E15               	movwf	(___flmul@a+2)^0,c
  5898  0107F2  0E41               	movlw	65
  5899  0107F4  6E16               	movwf	(___flmul@a+3)^0,c
  5900  0107F6  EC7C  F08B         	call	___flmul	;wreg free
  5901  0107FA  C00F  F074         	movff	?___flmul,efgtoa@ou
  5902  0107FE  C010  F075         	movff	?___flmul+1,efgtoa@ou+1
  5903  010802  C011  F076         	movff	?___flmul+2,efgtoa@ou+2
  5904  010806  C012  F077         	movff	?___flmul+3,efgtoa@ou+3
  5905  01080A                     
  5906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5907  01080A  0E66               	movlw	102
  5908  01080C  0100               	movlb	0	; () banked
  5909  01080E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5910  010810  A4D8               	btfss	status,2,c
  5911  010812  EF0D  F084         	goto	u5041
  5912  010816  EF0F  F084         	goto	u5040
  5913  01081A                     u5041:
  5914  01081A  EF11  F084         	goto	l5265
  5915  01081E                     u5040:
  5916  01081E                     
  5917                           ; BSR set to: 0
  5918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5919  01081E  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5920  010820  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5921  010822                     l5265:
  5922                           
  5923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5924  010822  C074  F094         	movff	efgtoa@ou,efgtoa@u
  5925  010826  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5926  01082A  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5927  01082E  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5928  010832                     
  5929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5930  010832  0E65               	movlw	101
  5931  010834  0100               	movlb	0	; () banked
  5932  010836  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5933  010838  B4D8               	btfsc	status,2,c
  5934  01083A  EF21  F084         	goto	u5051
  5935  01083E  EF23  F084         	goto	u5050
  5936  010842                     u5051:
  5937  010842  EF29  F084         	goto	l5271
  5938  010846                     u5050:
  5939  010846                     
  5940                           ; BSR set to: 0
  5941  010846  C090  F070         	movff	efgtoa@e,efgtoa@ne
  5942  01084A  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  5943  01084E  EF2D  F084         	goto	l1878
  5944  010852                     l5271:
  5945                           
  5946                           ; BSR set to: 0
  5947  010852  0E00               	movlw	0
  5948  010854  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  5949  010856  0E00               	movlw	0
  5950  010858  6F70               	movwf	efgtoa@ne& (0+255),b
  5951  01085A                     l1878:
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5955  01085A  0E00               	movlw	0
  5956  01085C  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5957  01085E  0E00               	movlw	0
  5958  010860  6F6E               	movwf	efgtoa@pp& (0+255),b
  5959                           
  5960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5961  010862  0E00               	movlw	0
  5962  010864  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  5963  010866  0E00               	movlw	0
  5964  010868  6F6C               	movwf	efgtoa@t& (0+255),b
  5965                           
  5966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5967  01086A  0E00               	movlw	0
  5968  01086C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5969  01086E  0E00               	movlw	0
  5970  010870  6F8A               	movwf	efgtoa@i& (0+255),b
  5971                           
  5972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5973  010872  EF28  F085         	goto	l5321
  5974  010876                     l5273:
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5978  010876  C082  F001         	movff	efgtoa@h,___fldiv@b
  5979  01087A  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5980  01087E  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5981  010882  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5982  010886  C094  F005         	movff	efgtoa@u,___fldiv@a
  5983  01088A  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5984  01088E  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5985  010892  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5986  010896  EC91  F08D         	call	___fldiv	;wreg free
  5987  01089A  C001  F01A         	movff	?___fldiv,floorf@x
  5988  01089E  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5989  0108A2  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5990  0108A6  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5991  0108AA  ECD0  F090         	call	_floorf	;wreg free
  5992  0108AE  C01A  F086         	movff	?_floorf,efgtoa@l
  5993  0108B2  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5994  0108B6  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5995  0108BA  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5996                           
  5997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5998  0108BE  C086  F001         	movff	efgtoa@l,___fltol@f1
  5999  0108C2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  6000  0108C6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  6001  0108CA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  6002  0108CE  EC87  F097         	call	___fltol	;wreg free
  6003  0108D2  C001  F078         	movff	?___fltol,efgtoa@d
  6004  0108D6  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  6005  0108DA                     
  6006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6007  0108DA  0100               	movlb	0	; () banked
  6008  0108DC  B9D5               	btfsc	_flags& (0+255),4,b
  6009  0108DE  EF73  F084         	goto	u5061
  6010  0108E2  EF75  F084         	goto	u5060
  6011  0108E6                     u5061:
  6012  0108E6  EF92  F084         	goto	l5285
  6013  0108EA                     u5060:
  6014  0108EA                     
  6015                           ; BSR set to: 0
  6016  0108EA  5178               	movf	efgtoa@d& (0+255),w,b
  6017  0108EC  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6018  0108EE  A4D8               	btfss	status,2,c
  6019  0108F0  EF7C  F084         	goto	u5071
  6020  0108F4  EF7E  F084         	goto	u5070
  6021  0108F8                     u5071:
  6022  0108F8  EF92  F084         	goto	l5285
  6023  0108FC                     u5070:
  6024  0108FC                     
  6025                           ; BSR set to: 0
  6026  0108FC  0E67               	movlw	103
  6027  0108FE  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6028  010900  A4D8               	btfss	status,2,c
  6029  010902  EF85  F084         	goto	u5081
  6030  010906  EF87  F084         	goto	u5080
  6031  01090A                     u5081:
  6032  01090A  EF92  F084         	goto	l5285
  6033  01090E                     u5080:
  6034  01090E                     
  6035                           ; BSR set to: 0
  6036  01090E  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6037  010910  EF8E  F084         	goto	u5090
  6038  010914  EF8C  F084         	goto	u5091
  6039  010918                     u5091:
  6040  010918  EF92  F084         	goto	l5285
  6041  01091C                     u5090:
  6042  01091C                     
  6043                           ; BSR set to: 0
  6044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  6045  01091C  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  6046  01091E  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  6047                           
  6048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  6049  010920  EFDC  F084         	goto	l5313
  6050  010924                     l5285:
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  6054  010924  516E               	movf	efgtoa@pp& (0+255),w,b
  6055  010926  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6056  010928  A4D8               	btfss	status,2,c
  6057  01092A  EF99  F084         	goto	u5101
  6058  01092E  EF9B  F084         	goto	u5100
  6059  010932                     u5101:
  6060  010932  EFC5  F084         	goto	l5305
  6061  010936                     u5100:
  6062  010936                     
  6063                           ; BSR set to: 0
  6064  010936  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6065  010938  EFA2  F084         	goto	u5110
  6066  01093C  EFA0  F084         	goto	u5111
  6067  010940                     u5111:
  6068  010940  EFC5  F084         	goto	l5305
  6069  010944                     u5110:
  6070  010944                     
  6071                           ; BSR set to: 0
  6072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  6073  010944  0E00               	movlw	low _dbuf
  6074  010946  2592               	addwf	efgtoa@n& (0+255),w,b
  6075  010948  6ED9               	movwf	fsr2l,c
  6076  01094A  0E01               	movlw	high _dbuf
  6077  01094C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6078  01094E  6EDA               	movwf	fsr2h,c
  6079  010950  0E2E               	movlw	46
  6080  010952  6EDF               	movwf	indf2,c
  6081  010954                     
  6082                           ; BSR set to: 0
  6083  010954  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6084  010956  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6085  010958                     
  6086                           ; BSR set to: 0
  6087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  6088  010958  077E               	decf	efgtoa@w& (0+255),f,b
  6089  01095A  A0D8               	btfss	status,0,c
  6090  01095C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6091  01095E                     
  6092                           ; BSR set to: 0
  6093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  6094  01095E  0E00               	movlw	0
  6095  010960  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  6096  010962  0E01               	movlw	1
  6097  010964  6F6E               	movwf	efgtoa@pp& (0+255),b
  6098  010966  EFC5  F084         	goto	l5305
  6099  01096A                     l5297:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  6103  01096A  0E00               	movlw	low _dbuf
  6104  01096C  2592               	addwf	efgtoa@n& (0+255),w,b
  6105  01096E  6ED9               	movwf	fsr2l,c
  6106  010970  0E01               	movlw	high _dbuf
  6107  010972  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6108  010974  6EDA               	movwf	fsr2h,c
  6109  010976  0E30               	movlw	48
  6110  010978  6EDF               	movwf	indf2,c
  6111  01097A                     
  6112                           ; BSR set to: 0
  6113  01097A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6114  01097C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6115  01097E                     
  6116                           ; BSR set to: 0
  6117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  6118  01097E  077E               	decf	efgtoa@w& (0+255),f,b
  6119  010980  A0D8               	btfss	status,0,c
  6120  010982  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6121  010984                     
  6122                           ; BSR set to: 0
  6123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  6124  010984  076C               	decf	efgtoa@t& (0+255),f,b
  6125  010986  A0D8               	btfss	status,0,c
  6126  010988  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  6127  01098A                     l5305:
  6128                           
  6129                           ; BSR set to: 0
  6130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  6131  01098A  516C               	movf	efgtoa@t& (0+255),w,b
  6132  01098C  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6133  01098E  A4D8               	btfss	status,2,c
  6134  010990  EFCC  F084         	goto	u5121
  6135  010994  EFCE  F084         	goto	u5120
  6136  010998                     u5121:
  6137  010998  EFB5  F084         	goto	l5297
  6138  01099C                     u5120:
  6139  01099C                     
  6140                           ; BSR set to: 0
  6141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6142  01099C  0E00               	movlw	low _dbuf
  6143  01099E  2592               	addwf	efgtoa@n& (0+255),w,b
  6144  0109A0  6ED9               	movwf	fsr2l,c
  6145  0109A2  0E01               	movlw	high _dbuf
  6146  0109A4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6147  0109A6  6EDA               	movwf	fsr2h,c
  6148  0109A8  5178               	movf	efgtoa@d& (0+255),w,b
  6149  0109AA  0F30               	addlw	48
  6150  0109AC  6EDF               	movwf	indf2,c
  6151  0109AE                     
  6152                           ; BSR set to: 0
  6153  0109AE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6154  0109B0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6155  0109B2                     
  6156                           ; BSR set to: 0
  6157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  6158  0109B2  077E               	decf	efgtoa@w& (0+255),f,b
  6159  0109B4  A0D8               	btfss	status,0,c
  6160  0109B6  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6161  0109B8                     l5313:
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  6165  0109B8  C082  F028         	movff	efgtoa@h,___flsub@b
  6166  0109BC  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  6167  0109C0  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  6168  0109C4  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  6169  0109C8  C094  F013         	movff	efgtoa@u,___flmul@a
  6170  0109CC  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  6171  0109D0  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  6172  0109D4  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  6173  0109D8  C086  F00F         	movff	efgtoa@l,___flmul@b
  6174  0109DC  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  6175  0109E0  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  6176  0109E4  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  6177  0109E8  EC7C  F08B         	call	___flmul	;wreg free
  6178  0109EC  C00F  F02C         	movff	?___flmul,___flsub@a
  6179  0109F0  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  6180  0109F4  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  6181  0109F8  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  6182  0109FC  EC91  F09D         	call	___flsub	;wreg free
  6183  010A00  C028  F082         	movff	?___flsub,efgtoa@h
  6184  010A04  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  6185  010A08  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  6186  010A0C  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  6187  010A10                     
  6188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  6189  010A10  C094  F001         	movff	efgtoa@u,___fldiv@b
  6190  010A14  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  6191  010A18  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  6192  010A1C  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  6193  010A20  0E00               	movlw	0
  6194  010A22  6E05               	movwf	___fldiv@a^0,c
  6195  010A24  0E00               	movlw	0
  6196  010A26  6E06               	movwf	(___fldiv@a+1)^0,c
  6197  010A28  0E20               	movlw	32
  6198  010A2A  6E07               	movwf	(___fldiv@a+2)^0,c
  6199  010A2C  0E41               	movlw	65
  6200  010A2E  6E08               	movwf	(___fldiv@a+3)^0,c
  6201  010A30  EC91  F08D         	call	___fldiv	;wreg free
  6202  010A34  C001  F094         	movff	?___fldiv,efgtoa@u
  6203  010A38  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  6204  010A3C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  6205  010A40  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  6206  010A44                     
  6207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  6208  010A44  0100               	movlb	0	; () banked
  6209  010A46  0770               	decf	efgtoa@ne& (0+255),f,b
  6210  010A48  A0D8               	btfss	status,0,c
  6211  010A4A  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  6212  010A4C                     
  6213                           ; BSR set to: 0
  6214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  6215  010A4C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  6216  010A4E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  6217  010A50                     l5321:
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6221  010A50  5172               	movf	efgtoa@m& (0+255),w,b
  6222  010A52  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6223  010A54  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6224  010A56  0A80               	xorlw	128
  6225  010A58  6E3B               	movwf	??_efgtoa^0,c
  6226  010A5A  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  6227  010A5C  0A80               	xorlw	128
  6228  010A5E  583B               	subwfb	??_efgtoa^0,w,c
  6229  010A60  B0D8               	btfsc	status,0,c
  6230  010A62  EF35  F085         	goto	u5131
  6231  010A66  EF37  F085         	goto	u5130
  6232  010A6A                     u5131:
  6233  010A6A  EF45  F085         	goto	l5325
  6234  010A6E                     u5130:
  6235  010A6E                     
  6236                           ; BSR set to: 0
  6237  010A6E  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6238  010A70  EF43  F085         	goto	u5141
  6239  010A74  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  6240  010A76  E109               	bnz	u5140
  6241  010A78  0E4B               	movlw	75
  6242  010A7A  5D92               	subwf	efgtoa@n& (0+255),w,b
  6243  010A7C  A0D8               	btfss	status,0,c
  6244  010A7E  EF43  F085         	goto	u5141
  6245  010A82  EF45  F085         	goto	u5140
  6246  010A86                     u5141:
  6247  010A86  EF3B  F084         	goto	l5273
  6248  010A8A                     u5140:
  6249  010A8A                     l5325:
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6253  010A8A  516E               	movf	efgtoa@pp& (0+255),w,b
  6254  010A8C  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6255  010A8E  A4D8               	btfss	status,2,c
  6256  010A90  EF4C  F085         	goto	u5151
  6257  010A94  EF4E  F085         	goto	u5150
  6258  010A98                     u5151:
  6259  010A98  EF5F  F085         	goto	l5333
  6260  010A9C                     u5150:
  6261  010A9C                     
  6262                           ; BSR set to: 0
  6263  010A9C  A9D5               	btfss	_flags& (0+255),4,b
  6264  010A9E  EF53  F085         	goto	u5161
  6265  010AA2  EF55  F085         	goto	u5160
  6266  010AA6                     u5161:
  6267  010AA6  EF5F  F085         	goto	l5333
  6268  010AAA                     u5160:
  6269  010AAA                     
  6270                           ; BSR set to: 0
  6271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6272  010AAA  0E00               	movlw	low _dbuf
  6273  010AAC  2592               	addwf	efgtoa@n& (0+255),w,b
  6274  010AAE  6ED9               	movwf	fsr2l,c
  6275  010AB0  0E01               	movlw	high _dbuf
  6276  010AB2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6277  010AB4  6EDA               	movwf	fsr2h,c
  6278  010AB6  0E2E               	movlw	46
  6279  010AB8  6EDF               	movwf	indf2,c
  6280  010ABA                     
  6281                           ; BSR set to: 0
  6282  010ABA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6283  010ABC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6284  010ABE                     l5333:
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6288  010ABE  0E00               	movlw	low _dbuf
  6289  010AC0  2592               	addwf	efgtoa@n& (0+255),w,b
  6290  010AC2  6ED9               	movwf	fsr2l,c
  6291  010AC4  0E01               	movlw	high _dbuf
  6292  010AC6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6293  010AC8  6EDA               	movwf	fsr2h,c
  6294  010ACA  0E00               	movlw	0
  6295  010ACC  6EDF               	movwf	indf2,c
  6296  010ACE                     
  6297                           ; BSR set to: 0
  6298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6299  010ACE  0E65               	movlw	101
  6300  010AD0  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  6301  010AD2  A4D8               	btfss	status,2,c
  6302  010AD4  EF6E  F085         	goto	u5171
  6303  010AD8  EF70  F085         	goto	u5170
  6304  010ADC                     u5171:
  6305  010ADC  EF40  F086         	goto	l5395
  6306  010AE0                     u5170:
  6307  010AE0                     
  6308                           ; BSR set to: 0
  6309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6310  010AE0  0E00               	movlw	0
  6311  010AE2  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6312  010AE4  0E4F               	movlw	79
  6313  010AE6  6F8A               	movwf	efgtoa@i& (0+255),b
  6314  010AE8                     
  6315                           ; BSR set to: 0
  6316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6317  010AE8  0E00               	movlw	low _dbuf
  6318  010AEA  258A               	addwf	efgtoa@i& (0+255),w,b
  6319  010AEC  6ED9               	movwf	fsr2l,c
  6320  010AEE  0E01               	movlw	high _dbuf
  6321  010AF0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6322  010AF2  6EDA               	movwf	fsr2h,c
  6323  010AF4  0E00               	movlw	0
  6324  010AF6  6EDF               	movwf	indf2,c
  6325  010AF8                     
  6326                           ; BSR set to: 0
  6327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6328  010AF8  0E00               	movlw	0
  6329  010AFA  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6330  010AFC  0E00               	movlw	0
  6331  010AFE  6F7A               	movwf	efgtoa@sign& (0+255),b
  6332  010B00                     
  6333                           ; BSR set to: 0
  6334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6335  010B00  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6336  010B02  EF87  F085         	goto	u5180
  6337  010B06  EF85  F085         	goto	u5181
  6338  010B0A                     u5181:
  6339  010B0A  EF8F  F085         	goto	l5349
  6340  010B0E                     u5180:
  6341  010B0E                     
  6342                           ; BSR set to: 0
  6343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6344  010B0E  0E00               	movlw	0
  6345  010B10  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6346  010B12  0E01               	movlw	1
  6347  010B14  6F7A               	movwf	efgtoa@sign& (0+255),b
  6348  010B16                     
  6349                           ; BSR set to: 0
  6350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6351  010B16  6D90               	negf	efgtoa@e& (0+255),b
  6352  010B18  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  6353  010B1A  B0D8               	btfsc	status,0,c
  6354  010B1C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6355  010B1E                     l5349:
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6359  010B1E  0E00               	movlw	0
  6360  010B20  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  6361  010B22  0E02               	movlw	2
  6362  010B24  6F7C               	movwf	efgtoa@p& (0+255),b
  6363                           
  6364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6365  010B26  EFC0  F085         	goto	l5361
  6366  010B2A                     l5351:
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6370  010B2A  078A               	decf	efgtoa@i& (0+255),f,b
  6371  010B2C  A0D8               	btfss	status,0,c
  6372  010B2E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6373  010B30                     
  6374                           ; BSR set to: 0
  6375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6376  010B30  0E00               	movlw	low _dbuf
  6377  010B32  258A               	addwf	efgtoa@i& (0+255),w,b
  6378  010B34  6ED9               	movwf	fsr2l,c
  6379  010B36  0E01               	movlw	high _dbuf
  6380  010B38  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6381  010B3A  6EDA               	movwf	fsr2h,c
  6382  010B3C  C090  F001         	movff	efgtoa@e,___awmod@dividend
  6383  010B40  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6384  010B44  0E00               	movlw	0
  6385  010B46  6E04               	movwf	(___awmod@divisor+1)^0,c
  6386  010B48  0E0A               	movlw	10
  6387  010B4A  6E03               	movwf	___awmod@divisor^0,c
  6388  010B4C  ECA2  F09A         	call	___awmod	;wreg free
  6389  010B50  5001               	movf	?___awmod^0,w,c
  6390  010B52  0F30               	addlw	48
  6391  010B54  6EDF               	movwf	indf2,c
  6392  010B56                     
  6393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6394  010B56  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  6395  010B5A  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  6396  010B5E  0E00               	movlw	0
  6397  010B60  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6398  010B62  0E0A               	movlw	10
  6399  010B64  6E03               	movwf	___awdiv@divisor^0,c
  6400  010B66  ECDF  F099         	call	___awdiv	;wreg free
  6401  010B6A  C001  F090         	movff	?___awdiv,efgtoa@e
  6402  010B6E  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  6403  010B72                     
  6404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6405  010B72  0100               	movlb	0	; () banked
  6406  010B74  077C               	decf	efgtoa@p& (0+255),f,b
  6407  010B76  A0D8               	btfss	status,0,c
  6408  010B78  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  6409  010B7A                     
  6410                           ; BSR set to: 0
  6411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6412  010B7A  077E               	decf	efgtoa@w& (0+255),f,b
  6413  010B7C  A0D8               	btfss	status,0,c
  6414  010B7E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6415  010B80                     l5361:
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6419  010B80  5190               	movf	efgtoa@e& (0+255),w,b
  6420  010B82  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6421  010B84  A4D8               	btfss	status,2,c
  6422  010B86  EFC7  F085         	goto	u5191
  6423  010B8A  EFC9  F085         	goto	u5190
  6424  010B8E                     u5191:
  6425  010B8E  EF95  F085         	goto	l5351
  6426  010B92                     u5190:
  6427  010B92                     
  6428                           ; BSR set to: 0
  6429  010B92  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6430  010B94  EFD6  F085         	goto	u5200
  6431  010B98  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  6432  010B9A  E106               	bnz	u5201
  6433  010B9C  057C               	decf	efgtoa@p& (0+255),w,b
  6434  010B9E  B0D8               	btfsc	status,0,c
  6435  010BA0  EFD4  F085         	goto	u5201
  6436  010BA4  EFD6  F085         	goto	u5200
  6437  010BA8                     u5201:
  6438  010BA8  EF95  F085         	goto	l5351
  6439  010BAC                     u5200:
  6440  010BAC                     
  6441                           ; BSR set to: 0
  6442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6443  010BAC  078A               	decf	efgtoa@i& (0+255),f,b
  6444  010BAE  A0D8               	btfss	status,0,c
  6445  010BB0  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6446  010BB2                     
  6447                           ; BSR set to: 0
  6448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6449  010BB2  517A               	movf	efgtoa@sign& (0+255),w,b
  6450  010BB4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6451  010BB6  A4D8               	btfss	status,2,c
  6452  010BB8  EFE0  F085         	goto	u5211
  6453  010BBC  EFE2  F085         	goto	u5210
  6454  010BC0                     u5211:
  6455  010BC0  EFE8  F085         	goto	l5371
  6456  010BC4                     u5210:
  6457  010BC4                     
  6458                           ; BSR set to: 0
  6459  010BC4  0E00               	movlw	0
  6460  010BC6  6F67               	movwf	(_efgtoa$2005+1)& (0+255),b
  6461  010BC8  0E2B               	movlw	43
  6462  010BCA  6F66               	movwf	_efgtoa$2005& (0+255),b
  6463  010BCC  EFEC  F085         	goto	l5373
  6464  010BD0                     l5371:
  6465                           
  6466                           ; BSR set to: 0
  6467  010BD0  0E00               	movlw	0
  6468  010BD2  6F67               	movwf	(_efgtoa$2005+1)& (0+255),b
  6469  010BD4  0E2D               	movlw	45
  6470  010BD6  6F66               	movwf	_efgtoa$2005& (0+255),b
  6471  010BD8                     l5373:
  6472                           
  6473                           ; BSR set to: 0
  6474  010BD8  0E00               	movlw	low _dbuf
  6475  010BDA  258A               	addwf	efgtoa@i& (0+255),w,b
  6476  010BDC  6ED9               	movwf	fsr2l,c
  6477  010BDE  0E01               	movlw	high _dbuf
  6478  010BE0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6479  010BE2  6EDA               	movwf	fsr2h,c
  6480  010BE4  C066  FFDF         	movff	_efgtoa$2005,indf2
  6481  010BE8                     
  6482                           ; BSR set to: 0
  6483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6484  010BE8  077E               	decf	efgtoa@w& (0+255),f,b
  6485  010BEA  A0D8               	btfss	status,0,c
  6486  010BEC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6487  010BEE                     
  6488                           ; BSR set to: 0
  6489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6490  010BEE  078A               	decf	efgtoa@i& (0+255),f,b
  6491  010BF0  A0D8               	btfss	status,0,c
  6492  010BF2  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6493  010BF4                     
  6494                           ; BSR set to: 0
  6495  010BF4  0EBF               	movlw	191
  6496  010BF6  6E3B               	movwf	??_efgtoa^0,c
  6497  010BF8  0EFF               	movlw	255
  6498  010BFA  6E3C               	movwf	(??_efgtoa+1)^0,c
  6499  010BFC  503A               	movf	efgtoa@c^0,w,c
  6500  010BFE  6E3D               	movwf	(??_efgtoa+2)^0,c
  6501  010C00  6A3E               	clrf	(??_efgtoa+3)^0,c
  6502  010C02  503B               	movf	??_efgtoa^0,w,c
  6503  010C04  263D               	addwf	(??_efgtoa+2)^0,f,c
  6504  010C06  503C               	movf	(??_efgtoa+1)^0,w,c
  6505  010C08  223E               	addwfc	(??_efgtoa+3)^0,f,c
  6506  010C0A  503E               	movf	(??_efgtoa+3)^0,w,c
  6507  010C0C  E10A               	bnz	u5220
  6508  010C0E  0E1A               	movlw	26
  6509  010C10  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  6510  010C12  A0D8               	btfss	status,0,c
  6511  010C14  EF0E  F086         	goto	u5221
  6512  010C18  EF11  F086         	goto	u5220
  6513  010C1C                     u5221:
  6514  010C1C  0E01               	movlw	1
  6515  010C1E  EF12  F086         	goto	u5230
  6516  010C22                     u5220:
  6517  010C22  0E00               	movlw	0
  6518  010C24                     u5230:
  6519  010C24  6F6A               	movwf	_efgtoa$2007& (0+255),b
  6520  010C26  6B6B               	clrf	(_efgtoa$2007+1)& (0+255),b
  6521  010C28                     
  6522                           ; BSR set to: 0
  6523  010C28  516A               	movf	_efgtoa$2007& (0+255),w,b
  6524  010C2A  116B               	iorwf	(_efgtoa$2007+1)& (0+255),w,b
  6525  010C2C  A4D8               	btfss	status,2,c
  6526  010C2E  EF1B  F086         	goto	u5241
  6527  010C32  EF1D  F086         	goto	u5240
  6528  010C36                     u5241:
  6529  010C36  EF23  F086         	goto	l5387
  6530  010C3A                     u5240:
  6531  010C3A                     
  6532                           ; BSR set to: 0
  6533  010C3A  0E00               	movlw	0
  6534  010C3C  6F69               	movwf	(_efgtoa$2006+1)& (0+255),b
  6535  010C3E  0E65               	movlw	101
  6536  010C40  6F68               	movwf	_efgtoa$2006& (0+255),b
  6537  010C42  EF27  F086         	goto	l5389
  6538  010C46                     l5387:
  6539                           
  6540                           ; BSR set to: 0
  6541  010C46  0E00               	movlw	0
  6542  010C48  6F69               	movwf	(_efgtoa$2006+1)& (0+255),b
  6543  010C4A  0E45               	movlw	69
  6544  010C4C  6F68               	movwf	_efgtoa$2006& (0+255),b
  6545  010C4E                     l5389:
  6546                           
  6547                           ; BSR set to: 0
  6548  010C4E  0E00               	movlw	low _dbuf
  6549  010C50  258A               	addwf	efgtoa@i& (0+255),w,b
  6550  010C52  6ED9               	movwf	fsr2l,c
  6551  010C54  0E01               	movlw	high _dbuf
  6552  010C56  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6553  010C58  6EDA               	movwf	fsr2h,c
  6554  010C5A  C068  FFDF         	movff	_efgtoa$2006,indf2
  6555  010C5E                     
  6556                           ; BSR set to: 0
  6557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6558  010C5E  077E               	decf	efgtoa@w& (0+255),f,b
  6559  010C60  A0D8               	btfss	status,0,c
  6560  010C62  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6561  010C64                     
  6562                           ; BSR set to: 0
  6563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6564  010C64  0E00               	movlw	low _dbuf
  6565  010C66  2592               	addwf	efgtoa@n& (0+255),w,b
  6566  010C68  6E01               	movwf	strcpy@dest^0,c
  6567  010C6A  0E01               	movlw	high _dbuf
  6568  010C6C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6569  010C6E  6E02               	movwf	(strcpy@dest+1)^0,c
  6570  010C70  0E00               	movlw	low _dbuf
  6571  010C72  258A               	addwf	efgtoa@i& (0+255),w,b
  6572  010C74  6E03               	movwf	strcpy@src^0,c
  6573  010C76  0E01               	movlw	high _dbuf
  6574  010C78  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6575  010C7A  6E04               	movwf	(strcpy@src+1)^0,c
  6576  010C7C  EC9E  F09C         	call	_strcpy	;wreg free
  6577  010C80                     l5395:
  6578                           
  6579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  6580  010C80  C034  F013         	movff	efgtoa@fp,pad@fp
  6581  010C84  C035  F014         	movff	efgtoa@fp+1,pad@fp+1
  6582  010C88  0E00               	movlw	low _dbuf
  6583  010C8A  6E15               	movwf	pad@buf^0,c
  6584  010C8C  0E01               	movlw	high _dbuf
  6585  010C8E  6E16               	movwf	(pad@buf+1)^0,c
  6586  010C90  C07E  F017         	movff	efgtoa@w,pad@p
  6587  010C94  C07F  F018         	movff	efgtoa@w+1,pad@p+1
  6588  010C98  EC7C  F099         	call	_pad	;wreg free
  6589  010C9C  C013  F034         	movff	?_pad,?_efgtoa
  6590  010CA0  C014  F035         	movff	?_pad+1,?_efgtoa+1
  6591  010CA4                     l1832:
  6592  010CA4  0012               	return		;funcret
  6593  010CA6                     __end_of_efgtoa:
  6594                           	callstack 0
  6595                           
  6596 ;; *************** function _tolower *****************
  6597 ;; Defined at:
  6598 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  c               2    6[COMRAM] int 
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;		None
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  2    6[COMRAM] int 
  6605 ;; Registers used:
  6606 ;;		wreg, status,2, status,0
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6613 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6614 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6615 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6616 ;;Total ram usage:        8 bytes
  6617 ;; Hardware stack levels used: 1
  6618 ;; Hardware stack levels required when called: 3
  6619 ;; This function calls:
  6620 ;;		_isupper
  6621 ;; This function is called by:
  6622 ;;		_efgtoa
  6623 ;;		_vfpfcnvrt
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text18
  6628  0138DC                     __ptext18:
  6629                           	callstack 0
  6630  0138DC                     _tolower:
  6631                           	callstack 23
  6632  0138DC  0EBF               	movlw	191
  6633  0138DE  6E09               	movwf	??_tolower^0,c
  6634  0138E0  0EFF               	movlw	255
  6635  0138E2  6E0A               	movwf	(??_tolower+1)^0,c
  6636  0138E4  C007  F00B         	movff	tolower@c,??_tolower+2
  6637  0138E8  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6638  0138EC  5009               	movf	??_tolower^0,w,c
  6639  0138EE  260B               	addwf	(??_tolower+2)^0,f,c
  6640  0138F0  500A               	movf	(??_tolower+1)^0,w,c
  6641  0138F2  220C               	addwfc	(??_tolower+3)^0,f,c
  6642  0138F4  500C               	movf	(??_tolower+3)^0,w,c
  6643  0138F6  E10A               	bnz	u4390
  6644  0138F8  0E1A               	movlw	26
  6645  0138FA  5C0B               	subwf	(??_tolower+2)^0,w,c
  6646  0138FC  A0D8               	btfss	status,0,c
  6647  0138FE  EF83  F09C         	goto	u4391
  6648  013902  EF86  F09C         	goto	u4390
  6649  013906                     u4391:
  6650  013906  0E01               	movlw	1
  6651  013908  EF87  F09C         	goto	u4400
  6652  01390C                     u4390:
  6653  01390C  0E00               	movlw	0
  6654  01390E                     u4400:
  6655  01390E  6E0D               	movwf	_tolower$2154^0,c
  6656  013910  6A0E               	clrf	(_tolower$2154+1)^0,c
  6657  013912  500D               	movf	_tolower$2154^0,w,c
  6658  013914  100E               	iorwf	(_tolower$2154+1)^0,w,c
  6659  013916  B4D8               	btfsc	status,2,c
  6660  013918  EF90  F09C         	goto	u4411
  6661  01391C  EF92  F09C         	goto	u4410
  6662  013920                     u4411:
  6663  013920  EF99  F09C         	goto	l2077
  6664  013924                     u4410:
  6665  013924  0E20               	movlw	32
  6666  013926  1007               	iorwf	tolower@c^0,w,c
  6667  013928  6E07               	movwf	?_tolower^0,c
  6668  01392A  5008               	movf	(tolower@c+1)^0,w,c
  6669  01392C  6E08               	movwf	(?_tolower+1)^0,c
  6670  01392E  EF9D  F09C         	goto	l2082
  6671  013932                     l2077:
  6672  013932  C007  F007         	movff	tolower@c,?_tolower
  6673  013936  C008  F008         	movff	tolower@c+1,?_tolower+1
  6674  01393A                     l2082:
  6675  01393A  0012               	return		;funcret
  6676  01393C                     __end_of_tolower:
  6677                           	callstack 0
  6678                           
  6679 ;; *************** function _isupper *****************
  6680 ;; Defined at:
  6681 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  c               2    0[COMRAM] int 
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  2    0[COMRAM] int 
  6688 ;; Registers used:
  6689 ;;		wreg, status,2, status,0
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6697 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;Total ram usage:        6 bytes
  6700 ;; Hardware stack levels used: 1
  6701 ;; Hardware stack levels required when called: 2
  6702 ;; This function calls:
  6703 ;;		Nothing
  6704 ;; This function is called by:
  6705 ;;		_efgtoa
  6706 ;;		_vfpfcnvrt
  6707 ;;		_tolower
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text19
  6712  013C30                     __ptext19:
  6713                           	callstack 0
  6714  013C30                     _isupper:
  6715                           	callstack 23
  6716  013C30  0EBF               	movlw	191
  6717  013C32  6E03               	movwf	??_isupper^0,c
  6718  013C34  0EFF               	movlw	255
  6719  013C36  6E04               	movwf	(??_isupper+1)^0,c
  6720  013C38  C001  F005         	movff	isupper@c,??_isupper+2
  6721  013C3C  C002  F006         	movff	isupper@c+1,??_isupper+3
  6722  013C40  5003               	movf	??_isupper^0,w,c
  6723  013C42  2605               	addwf	(??_isupper+2)^0,f,c
  6724  013C44  5004               	movf	(??_isupper+1)^0,w,c
  6725  013C46  2206               	addwfc	(??_isupper+3)^0,f,c
  6726  013C48  5006               	movf	(??_isupper+3)^0,w,c
  6727  013C4A  E10A               	bnz	u3400
  6728  013C4C  0E1A               	movlw	26
  6729  013C4E  5C05               	subwf	(??_isupper+2)^0,w,c
  6730  013C50  A0D8               	btfss	status,0,c
  6731  013C52  EF2D  F09E         	goto	u3401
  6732  013C56  EF30  F09E         	goto	u3400
  6733  013C5A                     u3401:
  6734  013C5A  0E01               	movlw	1
  6735  013C5C  EF31  F09E         	goto	u3410
  6736  013C60                     u3400:
  6737  013C60  0E00               	movlw	0
  6738  013C62                     u3410:
  6739  013C62  6E01               	movwf	?_isupper^0,c
  6740  013C64  6A02               	clrf	(?_isupper+1)^0,c
  6741  013C66  0012               	return		;funcret
  6742  013C68                     __end_of_isupper:
  6743                           	callstack 0
  6744                           
  6745 ;; *************** function _strcpy *****************
  6746 ;; Defined at:
  6747 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6750 ;;		 -> dbuf(80), 
  6751 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6752 ;;		 -> STR_30(4), STR_29(4), STR_26(4), STR_25(4), 
  6753 ;;		 -> dbuf(80), 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  d               2    8[COMRAM] PTR unsigned char 
  6756 ;;		 -> dbuf(80), 
  6757 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6758 ;;		 -> STR_30(4), STR_29(4), STR_26(4), STR_25(4), 
  6759 ;;		 -> dbuf(80), 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  2    0[COMRAM] PTR unsigned char 
  6762 ;; Registers used:
  6763 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6770 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6771 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6772 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6773 ;;Total ram usage:       10 bytes
  6774 ;; Hardware stack levels used: 1
  6775 ;; Hardware stack levels required when called: 2
  6776 ;; This function calls:
  6777 ;;		Nothing
  6778 ;; This function is called by:
  6779 ;;		_efgtoa
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text20
  6784  01393C                     __ptext20:
  6785                           	callstack 0
  6786  01393C                     _strcpy:
  6787                           	callstack 23
  6788  01393C  C003  F007         	movff	strcpy@src,strcpy@s
  6789  013940  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6790  013944  C001  F009         	movff	strcpy@dest,strcpy@d
  6791  013948  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6792  01394C                     l4973:
  6793  01394C  5007               	movf	strcpy@s^0,w,c
  6794  01394E  6E05               	movwf	??_strcpy^0,c
  6795  013950  5008               	movf	(strcpy@s+1)^0,w,c
  6796  013952  6E06               	movwf	(??_strcpy+1)^0,c
  6797  013954  4A07               	infsnz	strcpy@s^0,f,c
  6798  013956  2A08               	incf	(strcpy@s+1)^0,f,c
  6799  013958  C005  FFF6         	movff	??_strcpy,tblptrl
  6800  01395C  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6801  013960  0E00               	movlw	low (__mediumconst shr (0+16))
  6802  013962  6EF8               	movwf	tblptru,c
  6803  013964  C009  FFD9         	movff	strcpy@d,fsr2l
  6804  013968  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6805  01396C  4A09               	infsnz	strcpy@d^0,f,c
  6806  01396E  2A0A               	incf	(strcpy@d+1)^0,f,c
  6807  013970  0E0D               	movlw	(high __ramtop+-1)
  6808  013972  64F7               	cpfsgt	tblptrh,c
  6809  013974  D003               	bra	u4377
  6810  013976  0008               	tblrd		*
  6811  013978  50F5               	movf	tablat,w,c
  6812  01397A  D005               	bra	u4370
  6813  01397C                     u4377:
  6814  01397C  CFF6 FFE9          	movff	tblptrl,fsr0l
  6815  013980  CFF7 FFEA          	movff	tblptrh,fsr0h
  6816  013984  50EF               	movf	indf0,w,c
  6817  013986                     u4370:
  6818  013986  6EDF               	movwf	indf2,c
  6819  013988  50DF               	movf	indf2,w,c
  6820  01398A  A4D8               	btfss	status,2,c
  6821  01398C  EFCA  F09C         	goto	u4381
  6822  013990  EFCC  F09C         	goto	u4380
  6823  013994                     u4381:
  6824  013994  EFA6  F09C         	goto	l4973
  6825  013998                     u4380:
  6826  013998  0012               	return		;funcret
  6827  01399A                     __end_of_strcpy:
  6828                           	callstack 0
  6829                           
  6830 ;; *************** function _floorf *****************
  6831 ;; Defined at:
  6832 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  x               4   25[COMRAM] float 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  u               4   41[COMRAM] struct .
  6837 ;;  m               4   35[COMRAM] unsigned long 
  6838 ;;  e               2   39[COMRAM] int 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  4   25[COMRAM] float 
  6841 ;; Registers used:
  6842 ;;		wreg, status,2, status,0
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6849 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6850 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;Total ram usage:       20 bytes
  6853 ;; Hardware stack levels used: 1
  6854 ;; Hardware stack levels required when called: 2
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_efgtoa
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text21
  6863  0121A0                     __ptext21:
  6864                           	callstack 0
  6865  0121A0                     _floorf:
  6866                           	callstack 23
  6867  0121A0  C0B4  F02A         	movff	floorf@F527,floorf@u
  6868  0121A4  C0B5  F02B         	movff	floorf@F527+1,floorf@u+1
  6869  0121A8  C0B6  F02C         	movff	floorf@F527+2,floorf@u+2
  6870  0121AC  C0B7  F02D         	movff	floorf@F527+3,floorf@u+3
  6871  0121B0  C01A  F02A         	movff	floorf@x,floorf@u
  6872  0121B4  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6873  0121B8  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6874  0121BC  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6875  0121C0  0E81               	movlw	129
  6876  0121C2  6E1E               	movwf	??_floorf^0,c
  6877  0121C4  0EFF               	movlw	255
  6878  0121C6  6E1F               	movwf	(??_floorf+1)^0,c
  6879  0121C8  C02A  F020         	movff	floorf@u,??_floorf+2
  6880  0121CC  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6881  0121D0  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6882  0121D4  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6883  0121D8  0E18               	movlw	24
  6884  0121DA  EFF4  F090         	goto	u4420
  6885  0121DE                     u4425:
  6886  0121DE  90D8               	bcf	status,0,c
  6887  0121E0  3223               	rrcf	(??_floorf+5)^0,f,c
  6888  0121E2  3222               	rrcf	(??_floorf+4)^0,f,c
  6889  0121E4  3221               	rrcf	(??_floorf+3)^0,f,c
  6890  0121E6  3220               	rrcf	(??_floorf+2)^0,f,c
  6891  0121E8                     u4420:
  6892  0121E8  2EE8               	decfsz	wreg,f,c
  6893  0121EA  EFEF  F090         	goto	u4425
  6894  0121EE  5020               	movf	(??_floorf+2)^0,w,c
  6895  0121F0  241E               	addwf	??_floorf^0,w,c
  6896  0121F2  6E28               	movwf	floorf@e^0,c
  6897  0121F4  0E00               	movlw	0
  6898  0121F6  201F               	addwfc	(??_floorf+1)^0,w,c
  6899  0121F8  6E29               	movwf	(floorf@e+1)^0,c
  6900  0121FA  BE29               	btfsc	(floorf@e+1)^0,7,c
  6901  0121FC  EF09  F091         	goto	u4431
  6902  012200  5029               	movf	(floorf@e+1)^0,w,c
  6903  012202  E109               	bnz	u4430
  6904  012204  0E17               	movlw	23
  6905  012206  5C28               	subwf	floorf@e^0,w,c
  6906  012208  A0D8               	btfss	status,0,c
  6907  01220A  EF09  F091         	goto	u4431
  6908  01220E  EF0B  F091         	goto	u4430
  6909  012212                     u4431:
  6910  012212  EF15  F091         	goto	l4991
  6911  012216                     u4430:
  6912  012216                     l4989:
  6913  012216  C01A  F01A         	movff	floorf@x,?_floorf
  6914  01221A  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6915  01221E  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6916  012222  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6917  012226  EFD8  F091         	goto	l1996
  6918  01222A                     l4991:
  6919  01222A  BE29               	btfsc	(floorf@e+1)^0,7,c
  6920  01222C  EF1A  F091         	goto	u4441
  6921  012230  EF1C  F091         	goto	u4440
  6922  012234                     u4441:
  6923  012234  EF8C  F091         	goto	l5001
  6924  012238                     u4440:
  6925  012238  C028  F01E         	movff	floorf@e,??_floorf
  6926  01223C  0EFF               	movlw	255
  6927  01223E  6E1F               	movwf	(??_floorf+1)^0,c
  6928  012240  0EFF               	movlw	255
  6929  012242  6E20               	movwf	(??_floorf+2)^0,c
  6930  012244  0E7F               	movlw	127
  6931  012246  6E21               	movwf	(??_floorf+3)^0,c
  6932  012248  0E00               	movlw	0
  6933  01224A  6E22               	movwf	(??_floorf+4)^0,c
  6934  01224C                     u4455:
  6935  01224C  661E               	tstfsz	??_floorf^0,c
  6936  01224E  EF2B  F091         	goto	u4456
  6937  012252  EF33  F091         	goto	u4457
  6938  012256                     u4456:
  6939  012256  3422               	rlcf	(??_floorf+4)^0,w,c
  6940  012258  3222               	rrcf	(??_floorf+4)^0,f,c
  6941  01225A  3221               	rrcf	(??_floorf+3)^0,f,c
  6942  01225C  3220               	rrcf	(??_floorf+2)^0,f,c
  6943  01225E  321F               	rrcf	(??_floorf+1)^0,f,c
  6944  012260  2E1E               	decfsz	??_floorf^0,f,c
  6945  012262  EF26  F091         	goto	u4455
  6946  012266                     u4457:
  6947  012266  C01F  F024         	movff	??_floorf+1,floorf@m
  6948  01226A  C020  F025         	movff	??_floorf+2,floorf@m+1
  6949  01226E  C021  F026         	movff	??_floorf+3,floorf@m+2
  6950  012272  C022  F027         	movff	??_floorf+4,floorf@m+3
  6951  012276  5024               	movf	floorf@m^0,w,c
  6952  012278  142A               	andwf	floorf@u^0,w,c
  6953  01227A  6E1E               	movwf	??_floorf^0,c
  6954  01227C  5025               	movf	(floorf@m+1)^0,w,c
  6955  01227E  142B               	andwf	(floorf@u+1)^0,w,c
  6956  012280  6E1F               	movwf	(??_floorf+1)^0,c
  6957  012282  5026               	movf	(floorf@m+2)^0,w,c
  6958  012284  142C               	andwf	(floorf@u+2)^0,w,c
  6959  012286  6E20               	movwf	(??_floorf+2)^0,c
  6960  012288  5027               	movf	(floorf@m+3)^0,w,c
  6961  01228A  142D               	andwf	(floorf@u+3)^0,w,c
  6962  01228C  6E21               	movwf	(??_floorf+3)^0,c
  6963  01228E  501E               	movf	??_floorf^0,w,c
  6964  012290  101F               	iorwf	(??_floorf+1)^0,w,c
  6965  012292  1020               	iorwf	(??_floorf+2)^0,w,c
  6966  012294  1021               	iorwf	(??_floorf+3)^0,w,c
  6967  012296  A4D8               	btfss	status,2,c
  6968  012298  EF50  F091         	goto	u4461
  6969  01229C  EF52  F091         	goto	u4460
  6970  0122A0                     u4461:
  6971  0122A0  EF54  F091         	goto	l4997
  6972  0122A4                     u4460:
  6973  0122A4  EF0B  F091         	goto	l4989
  6974  0122A8                     l4997:
  6975  0122A8  C02A  F01E         	movff	floorf@u,??_floorf
  6976  0122AC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6977  0122B0  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6978  0122B4  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6979  0122B8  0E20               	movlw	32
  6980  0122BA  EF64  F091         	goto	u4470
  6981  0122BE                     u4475:
  6982  0122BE  90D8               	bcf	status,0,c
  6983  0122C0  3221               	rrcf	(??_floorf+3)^0,f,c
  6984  0122C2  3220               	rrcf	(??_floorf+2)^0,f,c
  6985  0122C4  321F               	rrcf	(??_floorf+1)^0,f,c
  6986  0122C6  321E               	rrcf	??_floorf^0,f,c
  6987  0122C8                     u4470:
  6988  0122C8  2EE8               	decfsz	wreg,f,c
  6989  0122CA  EF5F  F091         	goto	u4475
  6990  0122CE  501E               	movf	??_floorf^0,w,c
  6991  0122D0  101F               	iorwf	(??_floorf+1)^0,w,c
  6992  0122D2  1020               	iorwf	(??_floorf+2)^0,w,c
  6993  0122D4  1021               	iorwf	(??_floorf+3)^0,w,c
  6994  0122D6  B4D8               	btfsc	status,2,c
  6995  0122D8  EF70  F091         	goto	u4481
  6996  0122DC  EF72  F091         	goto	u4480
  6997  0122E0                     u4481:
  6998  0122E0  EF7A  F091         	goto	l1999
  6999  0122E4                     u4480:
  7000  0122E4  5024               	movf	floorf@m^0,w,c
  7001  0122E6  262A               	addwf	floorf@u^0,f,c
  7002  0122E8  5025               	movf	(floorf@m+1)^0,w,c
  7003  0122EA  222B               	addwfc	(floorf@u+1)^0,f,c
  7004  0122EC  5026               	movf	(floorf@m+2)^0,w,c
  7005  0122EE  222C               	addwfc	(floorf@u+2)^0,f,c
  7006  0122F0  5027               	movf	(floorf@m+3)^0,w,c
  7007  0122F2  222D               	addwfc	(floorf@u+3)^0,f,c
  7008  0122F4                     l1999:
  7009  0122F4  1C24               	comf	floorf@m^0,w,c
  7010  0122F6  6E1E               	movwf	??_floorf^0,c
  7011  0122F8  1C25               	comf	(floorf@m+1)^0,w,c
  7012  0122FA  6E1F               	movwf	(??_floorf+1)^0,c
  7013  0122FC  1C26               	comf	(floorf@m+2)^0,w,c
  7014  0122FE  6E20               	movwf	(??_floorf+2)^0,c
  7015  012300  1C27               	comf	(floorf@m+3)^0,w,c
  7016  012302  6E21               	movwf	(??_floorf+3)^0,c
  7017  012304  501E               	movf	??_floorf^0,w,c
  7018  012306  162A               	andwf	floorf@u^0,f,c
  7019  012308  501F               	movf	(??_floorf+1)^0,w,c
  7020  01230A  162B               	andwf	(floorf@u+1)^0,f,c
  7021  01230C  5020               	movf	(??_floorf+2)^0,w,c
  7022  01230E  162C               	andwf	(floorf@u+2)^0,f,c
  7023  012310  5021               	movf	(??_floorf+3)^0,w,c
  7024  012312  162D               	andwf	(floorf@u+3)^0,f,c
  7025  012314  EFD0  F091         	goto	l5009
  7026  012318                     l5001:
  7027  012318  C02A  F01E         	movff	floorf@u,??_floorf
  7028  01231C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  7029  012320  C02C  F020         	movff	floorf@u+2,??_floorf+2
  7030  012324  C02D  F021         	movff	floorf@u+3,??_floorf+3
  7031  012328  0E20               	movlw	32
  7032  01232A  EF9C  F091         	goto	u4490
  7033  01232E                     u4495:
  7034  01232E  90D8               	bcf	status,0,c
  7035  012330  3221               	rrcf	(??_floorf+3)^0,f,c
  7036  012332  3220               	rrcf	(??_floorf+2)^0,f,c
  7037  012334  321F               	rrcf	(??_floorf+1)^0,f,c
  7038  012336  321E               	rrcf	??_floorf^0,f,c
  7039  012338                     u4490:
  7040  012338  2EE8               	decfsz	wreg,f,c
  7041  01233A  EF97  F091         	goto	u4495
  7042  01233E  501E               	movf	??_floorf^0,w,c
  7043  012340  101F               	iorwf	(??_floorf+1)^0,w,c
  7044  012342  1020               	iorwf	(??_floorf+2)^0,w,c
  7045  012344  1021               	iorwf	(??_floorf+3)^0,w,c
  7046  012346  A4D8               	btfss	status,2,c
  7047  012348  EFA8  F091         	goto	u4501
  7048  01234C  EFAA  F091         	goto	u4500
  7049  012350                     u4501:
  7050  012350  EFB4  F091         	goto	l5005
  7051  012354                     u4500:
  7052  012354  0E00               	movlw	0
  7053  012356  6E2A               	movwf	floorf@u^0,c
  7054  012358  0E00               	movlw	0
  7055  01235A  6E2B               	movwf	(floorf@u+1)^0,c
  7056  01235C  0E00               	movlw	0
  7057  01235E  6E2C               	movwf	(floorf@u+2)^0,c
  7058  012360  0E00               	movlw	0
  7059  012362  6E2D               	movwf	(floorf@u+3)^0,c
  7060  012364  EFD0  F091         	goto	l5009
  7061  012368                     l5005:
  7062  012368  90D8               	bcf	status,0,c
  7063  01236A  342A               	rlcf	floorf@u^0,w,c
  7064  01236C  6E1E               	movwf	??_floorf^0,c
  7065  01236E  342B               	rlcf	(floorf@u+1)^0,w,c
  7066  012370  6E1F               	movwf	(??_floorf+1)^0,c
  7067  012372  342C               	rlcf	(floorf@u+2)^0,w,c
  7068  012374  6E20               	movwf	(??_floorf+2)^0,c
  7069  012376  342D               	rlcf	(floorf@u+3)^0,w,c
  7070  012378  6E21               	movwf	(??_floorf+3)^0,c
  7071  01237A  501E               	movf	??_floorf^0,w,c
  7072  01237C  101F               	iorwf	(??_floorf+1)^0,w,c
  7073  01237E  1020               	iorwf	(??_floorf+2)^0,w,c
  7074  012380  1021               	iorwf	(??_floorf+3)^0,w,c
  7075  012382  B4D8               	btfsc	status,2,c
  7076  012384  EFC6  F091         	goto	u4511
  7077  012388  EFC8  F091         	goto	u4510
  7078  01238C                     u4511:
  7079  01238C  EFD0  F091         	goto	l5009
  7080  012390                     u4510:
  7081  012390  0E00               	movlw	0
  7082  012392  6E2A               	movwf	floorf@u^0,c
  7083  012394  0E00               	movlw	0
  7084  012396  6E2B               	movwf	(floorf@u+1)^0,c
  7085  012398  0E80               	movlw	128
  7086  01239A  6E2C               	movwf	(floorf@u+2)^0,c
  7087  01239C  0EBF               	movlw	191
  7088  01239E  6E2D               	movwf	(floorf@u+3)^0,c
  7089  0123A0                     l5009:
  7090  0123A0  C02A  F01A         	movff	floorf@u,?_floorf
  7091  0123A4  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  7092  0123A8  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  7093  0123AC  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  7094  0123B0                     l1996:
  7095  0123B0  0012               	return		;funcret
  7096  0123B2                     __end_of_floorf:
  7097                           	callstack 0
  7098                           
  7099 ;; *************** function ___fpclassifyf *****************
  7100 ;; Defined at:
  7101 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  x               4    0[COMRAM] float 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  u               4   10[COMRAM] struct .
  7106 ;;  e               2    8[COMRAM] int 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  2    0[COMRAM] int 
  7109 ;; Registers used:
  7110 ;;		wreg, status,2, status,0
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7116 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7117 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7118 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7119 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7120 ;;Total ram usage:       14 bytes
  7121 ;; Hardware stack levels used: 1
  7122 ;; Hardware stack levels required when called: 2
  7123 ;; This function calls:
  7124 ;;		Nothing
  7125 ;; This function is called by:
  7126 ;;		_efgtoa
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text22
  7131  013118                     __ptext22:
  7132                           	callstack 0
  7133  013118                     ___fpclassifyf:
  7134                           	callstack 23
  7135  013118  C0B8  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7136  01311C  C0B9  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7137  013120  C0BA  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7138  013124  C0BB  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7139  013128  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7140  01312C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7141  013130  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7142  013134  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7143  013138  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7144  01313C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7145  013140  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7146  013144  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7147  013148  0E18               	movlw	24
  7148  01314A  EFAC  F098         	goto	u4300
  7149  01314E                     u4305:
  7150  01314E  90D8               	bcf	status,0,c
  7151  013150  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7152  013152  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7153  013154  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7154  013156  3205               	rrcf	??___fpclassifyf^0,f,c
  7155  013158                     u4300:
  7156  013158  2EE8               	decfsz	wreg,f,c
  7157  01315A  EFA7  F098         	goto	u4305
  7158  01315E  5005               	movf	??___fpclassifyf^0,w,c
  7159  013160  6E09               	movwf	___fpclassifyf@e^0,c
  7160  013162  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7161  013164  5009               	movf	___fpclassifyf@e^0,w,c
  7162  013166  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7163  013168  A4D8               	btfss	status,2,c
  7164  01316A  EFB9  F098         	goto	u4311
  7165  01316E  EFBB  F098         	goto	u4310
  7166  013172                     u4311:
  7167  013172  EFDB  F098         	goto	l4961
  7168  013176                     u4310:
  7169  013176  90D8               	bcf	status,0,c
  7170  013178  340B               	rlcf	___fpclassifyf@u^0,w,c
  7171  01317A  6E05               	movwf	??___fpclassifyf^0,c
  7172  01317C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7173  01317E  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7174  013180  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7175  013182  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7176  013184  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7177  013186  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7178  013188  5005               	movf	??___fpclassifyf^0,w,c
  7179  01318A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7180  01318C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7181  01318E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7182  013190  A4D8               	btfss	status,2,c
  7183  013192  EFCD  F098         	goto	u4321
  7184  013196  EFCF  F098         	goto	u4320
  7185  01319A                     u4321:
  7186  01319A  EFD5  F098         	goto	l4957
  7187  01319E                     u4320:
  7188  01319E  0E00               	movlw	0
  7189  0131A0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7190  0131A2  0E02               	movlw	2
  7191  0131A4  6E01               	movwf	?___fpclassifyf^0,c
  7192  0131A6  EF0A  F099         	goto	l1951
  7193  0131AA                     l4957:
  7194  0131AA  0E00               	movlw	0
  7195  0131AC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7196  0131AE  0E03               	movlw	3
  7197  0131B0  6E01               	movwf	?___fpclassifyf^0,c
  7198  0131B2  EF0A  F099         	goto	l1951
  7199  0131B6                     l4961:
  7200  0131B6  2809               	incf	___fpclassifyf@e^0,w,c
  7201  0131B8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7202  0131BA  A4D8               	btfss	status,2,c
  7203  0131BC  EFE2  F098         	goto	u4331
  7204  0131C0  EFE4  F098         	goto	u4330
  7205  0131C4                     u4331:
  7206  0131C4  EF06  F099         	goto	l4967
  7207  0131C8                     u4330:
  7208  0131C8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7209  0131CC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7210  0131D0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7211  0131D4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7212  0131D8  0E09               	movlw	9
  7213  0131DA                     u4345:
  7214  0131DA  90D8               	bcf	status,0,c
  7215  0131DC  3605               	rlcf	??___fpclassifyf^0,f,c
  7216  0131DE  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7217  0131E0  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7218  0131E2  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7219  0131E4  2EE8               	decfsz	wreg,f,c
  7220  0131E6  EFED  F098         	goto	u4345
  7221  0131EA  5005               	movf	??___fpclassifyf^0,w,c
  7222  0131EC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7223  0131EE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7224  0131F0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7225  0131F2  B4D8               	btfsc	status,2,c
  7226  0131F4  EFFE  F098         	goto	u4351
  7227  0131F8  EF01  F099         	goto	u4350
  7228  0131FC                     u4351:
  7229  0131FC  0E01               	movlw	1
  7230  0131FE  EF02  F099         	goto	u4360
  7231  013202                     u4350:
  7232  013202  0E00               	movlw	0
  7233  013204                     u4360:
  7234  013204  6E01               	movwf	?___fpclassifyf^0,c
  7235  013206  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7236  013208  EF0A  F099         	goto	l1951
  7237  01320C                     l4967:
  7238  01320C  0E00               	movlw	0
  7239  01320E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7240  013210  0E04               	movlw	4
  7241  013212  6E01               	movwf	?___fpclassifyf^0,c
  7242  013214                     l1951:
  7243  013214  0012               	return		;funcret
  7244  013216                     __end_of___fpclassifyf:
  7245                           	callstack 0
  7246                           
  7247 ;; *************** function ___fltol *****************
  7248 ;; Defined at:
  7249 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  f1              4    0[COMRAM] int 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  exp1            1    9[COMRAM] unsigned char 
  7254 ;;  sign1           1    8[COMRAM] unsigned char 
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  4    0[COMRAM] long 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7266 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7267 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7268 ;;Total ram usage:       10 bytes
  7269 ;; Hardware stack levels used: 1
  7270 ;; Hardware stack levels required when called: 2
  7271 ;; This function calls:
  7272 ;;		Nothing
  7273 ;; This function is called by:
  7274 ;;		_efgtoa
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text23
  7279  012F0E                     __ptext23:
  7280                           	callstack 0
  7281  012F0E                     ___fltol:
  7282                           	callstack 23
  7283  012F0E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7284  012F10  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7285  012F12  6E0A               	movwf	___fltol@exp1^0,c
  7286  012F14  500A               	movf	___fltol@exp1^0,w,c
  7287  012F16  A4D8               	btfss	status,2,c
  7288  012F18  EF90  F097         	goto	u4181
  7289  012F1C  EF92  F097         	goto	u4180
  7290  012F20                     u4181:
  7291  012F20  EF9C  F097         	goto	l4885
  7292  012F24                     u4180:
  7293  012F24                     l4881:
  7294  012F24  0E00               	movlw	0
  7295  012F26  6E01               	movwf	?___fltol^0,c
  7296  012F28  0E00               	movlw	0
  7297  012F2A  6E02               	movwf	(?___fltol+1)^0,c
  7298  012F2C  0E00               	movlw	0
  7299  012F2E  6E03               	movwf	(?___fltol+2)^0,c
  7300  012F30  0E00               	movlw	0
  7301  012F32  6E04               	movwf	(?___fltol+3)^0,c
  7302  012F34  EF09  F098         	goto	l1347
  7303  012F38                     l4885:
  7304  012F38  C001  F005         	movff	___fltol@f1,??___fltol
  7305  012F3C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7306  012F40  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7307  012F44  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7308  012F48  0E20               	movlw	32
  7309  012F4A  EFAC  F097         	goto	u4190
  7310  012F4E                     u4195:
  7311  012F4E  90D8               	bcf	status,0,c
  7312  012F50  3208               	rrcf	(??___fltol+3)^0,f,c
  7313  012F52  3207               	rrcf	(??___fltol+2)^0,f,c
  7314  012F54  3206               	rrcf	(??___fltol+1)^0,f,c
  7315  012F56  3205               	rrcf	??___fltol^0,f,c
  7316  012F58                     u4190:
  7317  012F58  2EE8               	decfsz	wreg,f,c
  7318  012F5A  EFA7  F097         	goto	u4195
  7319  012F5E  5005               	movf	??___fltol^0,w,c
  7320  012F60  6E09               	movwf	___fltol@sign1^0,c
  7321  012F62  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7322  012F64  0EFF               	movlw	255
  7323  012F66  1601               	andwf	___fltol@f1^0,f,c
  7324  012F68  0EFF               	movlw	255
  7325  012F6A  1602               	andwf	(___fltol@f1+1)^0,f,c
  7326  012F6C  0EFF               	movlw	255
  7327  012F6E  1603               	andwf	(___fltol@f1+2)^0,f,c
  7328  012F70  0E00               	movlw	0
  7329  012F72  1604               	andwf	(___fltol@f1+3)^0,f,c
  7330  012F74  0E96               	movlw	150
  7331  012F76  5E0A               	subwf	___fltol@exp1^0,f,c
  7332  012F78  BE0A               	btfsc	___fltol@exp1^0,7,c
  7333  012F7A  EFC3  F097         	goto	u4200
  7334  012F7E  EFC1  F097         	goto	u4201
  7335  012F82                     u4201:
  7336  012F82  EFD9  F097         	goto	l4905
  7337  012F86                     u4200:
  7338  012F86  500A               	movf	___fltol@exp1^0,w,c
  7339  012F88  0A80               	xorlw	128
  7340  012F8A  0F97               	addlw	151
  7341  012F8C  B0D8               	btfsc	status,0,c
  7342  012F8E  EFCB  F097         	goto	u4211
  7343  012F92  EFCD  F097         	goto	u4210
  7344  012F96                     u4211:
  7345  012F96  EFCF  F097         	goto	l4901
  7346  012F9A                     u4210:
  7347  012F9A  EF92  F097         	goto	l4881
  7348  012F9E                     l4901:
  7349  012F9E  90D8               	bcf	status,0,c
  7350  012FA0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7351  012FA2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7352  012FA4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7353  012FA6  3201               	rrcf	___fltol@f1^0,f,c
  7354  012FA8  3E0A               	incfsz	___fltol@exp1^0,f,c
  7355  012FAA  EFCF  F097         	goto	l4901
  7356  012FAE  EFF1  F097         	goto	l4915
  7357  012FB2                     l4905:
  7358  012FB2  0E1F               	movlw	31
  7359  012FB4  640A               	cpfsgt	___fltol@exp1^0,c
  7360  012FB6  EFDF  F097         	goto	u4221
  7361  012FBA  EFE1  F097         	goto	u4220
  7362  012FBE                     u4221:
  7363  012FBE  EFE9  F097         	goto	l4913
  7364  012FC2                     u4220:
  7365  012FC2  EF92  F097         	goto	l4881
  7366  012FC6                     l4911:
  7367  012FC6  90D8               	bcf	status,0,c
  7368  012FC8  3601               	rlcf	___fltol@f1^0,f,c
  7369  012FCA  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7370  012FCC  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7371  012FCE  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7372  012FD0  060A               	decf	___fltol@exp1^0,f,c
  7373  012FD2                     l4913:
  7374  012FD2  500A               	movf	___fltol@exp1^0,w,c
  7375  012FD4  A4D8               	btfss	status,2,c
  7376  012FD6  EFEF  F097         	goto	u4231
  7377  012FDA  EFF1  F097         	goto	u4230
  7378  012FDE                     u4231:
  7379  012FDE  EFE3  F097         	goto	l4911
  7380  012FE2                     u4230:
  7381  012FE2                     l4915:
  7382  012FE2  5009               	movf	___fltol@sign1^0,w,c
  7383  012FE4  B4D8               	btfsc	status,2,c
  7384  012FE6  EFF7  F097         	goto	u4241
  7385  012FEA  EFF9  F097         	goto	u4240
  7386  012FEE                     u4241:
  7387  012FEE  EF01  F098         	goto	l4919
  7388  012FF2                     u4240:
  7389  012FF2  1E04               	comf	(___fltol@f1+3)^0,f,c
  7390  012FF4  1E03               	comf	(___fltol@f1+2)^0,f,c
  7391  012FF6  1E02               	comf	(___fltol@f1+1)^0,f,c
  7392  012FF8  6C01               	negf	___fltol@f1^0,c
  7393  012FFA  0E00               	movlw	0
  7394  012FFC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7395  012FFE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7396  013000  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7397  013002                     l4919:
  7398  013002  C001  F001         	movff	___fltol@f1,?___fltol
  7399  013006  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7400  01300A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7401  01300E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7402  013012                     l1347:
  7403  013012  0012               	return		;funcret
  7404  013014                     __end_of___fltol:
  7405                           	callstack 0
  7406                           
  7407 ;; *************** function ___flsub *****************
  7408 ;; Defined at:
  7409 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  b               4   39[COMRAM] long 
  7412 ;;  a               4   43[COMRAM] long 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;		None
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  4   39[COMRAM] long 
  7417 ;; Registers used:
  7418 ;;		wreg, status,2, status,0, cstack
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7424 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7428 ;;Total ram usage:        8 bytes
  7429 ;; Hardware stack levels used: 1
  7430 ;; Hardware stack levels required when called: 3
  7431 ;; This function calls:
  7432 ;;		___fladd
  7433 ;; This function is called by:
  7434 ;;		_efgtoa
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           	psect	text24
  7439  013B22                     __ptext24:
  7440                           	callstack 0
  7441  013B22                     ___flsub:
  7442                           	callstack 22
  7443  013B22  0E00               	movlw	0
  7444  013B24  1A2C               	xorwf	___flsub@a^0,f,c
  7445  013B26  0E00               	movlw	0
  7446  013B28  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  7447  013B2A  0E00               	movlw	0
  7448  013B2C  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  7449  013B2E  0E80               	movlw	128
  7450  013B30  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  7451  013B32  C028  F001         	movff	___flsub@b,___fladd@b
  7452  013B36  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  7453  013B3A  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  7454  013B3E  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  7455  013B42  C02C  F005         	movff	___flsub@a,___fladd@a
  7456  013B46  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  7457  013B4A  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  7458  013B4E  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  7459  013B52  EC1C  F089         	call	___fladd	;wreg free
  7460  013B56  C001  F028         	movff	?___fladd,?___flsub
  7461  013B5A  C002  F029         	movff	?___fladd+1,?___flsub+1
  7462  013B5E  C003  F02A         	movff	?___fladd+2,?___flsub+2
  7463  013B62  C004  F02B         	movff	?___fladd+3,?___flsub+3
  7464  013B66  0012               	return		;funcret
  7465  013B68                     __end_of___flsub:
  7466                           	callstack 0
  7467                           
  7468 ;; *************** function ___fladd *****************
  7469 ;; Defined at:
  7470 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  b               4    0[COMRAM] long 
  7473 ;;  a               4    4[COMRAM] long 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;  grs             1   15[COMRAM] unsigned char 
  7476 ;;  bexp            1   14[COMRAM] unsigned char 
  7477 ;;  aexp            1   13[COMRAM] unsigned char 
  7478 ;;  signs           1   12[COMRAM] unsigned char 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  4    0[COMRAM] unsigned char 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7488 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7489 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7490 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7491 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7492 ;;Total ram usage:       16 bytes
  7493 ;; Hardware stack levels used: 1
  7494 ;; Hardware stack levels required when called: 2
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		___flsub
  7499 ;;		_efgtoa
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           	psect	text25
  7504  011238                     __ptext25:
  7505                           	callstack 0
  7506  011238                     ___fladd:
  7507                           	callstack 22
  7508  011238  5004               	movf	(___fladd@b+3)^0,w,c
  7509  01123A  0B80               	andlw	128
  7510  01123C  6E0D               	movwf	___fladd@signs^0,c
  7511  01123E  5004               	movf	(___fladd@b+3)^0,w,c
  7512  011240  2404               	addwf	(___fladd@b+3)^0,w,c
  7513  011242  6E0F               	movwf	___fladd@bexp^0,c
  7514  011244  AE03               	btfss	(___fladd@b+2)^0,7,c
  7515  011246  EF27  F089         	goto	u3001
  7516  01124A  EF29  F089         	goto	u3000
  7517  01124E                     u3001:
  7518  01124E  EF2A  F089         	goto	l4185
  7519  011252                     u3000:
  7520  011252  800F               	bsf	___fladd@bexp^0,0,c
  7521  011254                     l4185:
  7522  011254  500F               	movf	___fladd@bexp^0,w,c
  7523  011256  B4D8               	btfsc	status,2,c
  7524  011258  EF30  F089         	goto	u3011
  7525  01125C  EF32  F089         	goto	u3010
  7526  011260                     u3011:
  7527  011260  EF47  F089         	goto	l4195
  7528  011264                     u3010:
  7529  011264  280F               	incf	___fladd@bexp^0,w,c
  7530  011266  A4D8               	btfss	status,2,c
  7531  011268  EF38  F089         	goto	u3021
  7532  01126C  EF3A  F089         	goto	u3020
  7533  011270                     u3021:
  7534  011270  EF42  F089         	goto	l4191
  7535  011274                     u3020:
  7536  011274  0E00               	movlw	0
  7537  011276  6E01               	movwf	___fladd@b^0,c
  7538  011278  0E00               	movlw	0
  7539  01127A  6E02               	movwf	(___fladd@b+1)^0,c
  7540  01127C  0E00               	movlw	0
  7541  01127E  6E03               	movwf	(___fladd@b+2)^0,c
  7542  011280  0E00               	movlw	0
  7543  011282  6E04               	movwf	(___fladd@b+3)^0,c
  7544  011284                     l4191:
  7545  011284  8E03               	bsf	(___fladd@b+2)^0,7,c
  7546  011286  0E00               	movlw	0
  7547  011288  6E04               	movwf	(___fladd@b+3)^0,c
  7548  01128A  EF4F  F089         	goto	l4197
  7549  01128E                     l4195:
  7550  01128E  0E00               	movlw	0
  7551  011290  6E01               	movwf	___fladd@b^0,c
  7552  011292  0E00               	movlw	0
  7553  011294  6E02               	movwf	(___fladd@b+1)^0,c
  7554  011296  0E00               	movlw	0
  7555  011298  6E03               	movwf	(___fladd@b+2)^0,c
  7556  01129A  0E00               	movlw	0
  7557  01129C  6E04               	movwf	(___fladd@b+3)^0,c
  7558  01129E                     l4197:
  7559  01129E  5008               	movf	(___fladd@a+3)^0,w,c
  7560  0112A0  0B80               	andlw	128
  7561  0112A2  6E0E               	movwf	___fladd@aexp^0,c
  7562  0112A4  500D               	movf	___fladd@signs^0,w,c
  7563  0112A6  180E               	xorwf	___fladd@aexp^0,w,c
  7564  0112A8  B4D8               	btfsc	status,2,c
  7565  0112AA  EF59  F089         	goto	u3031
  7566  0112AE  EF5B  F089         	goto	u3030
  7567  0112B2                     u3031:
  7568  0112B2  EF5C  F089         	goto	l4203
  7569  0112B6                     u3030:
  7570  0112B6  8C0D               	bsf	___fladd@signs^0,6,c
  7571  0112B8                     l4203:
  7572  0112B8  5008               	movf	(___fladd@a+3)^0,w,c
  7573  0112BA  2408               	addwf	(___fladd@a+3)^0,w,c
  7574  0112BC  6E0E               	movwf	___fladd@aexp^0,c
  7575  0112BE  AE07               	btfss	(___fladd@a+2)^0,7,c
  7576  0112C0  EF64  F089         	goto	u3041
  7577  0112C4  EF66  F089         	goto	u3040
  7578  0112C8                     u3041:
  7579  0112C8  EF67  F089         	goto	l4209
  7580  0112CC                     u3040:
  7581  0112CC  800E               	bsf	___fladd@aexp^0,0,c
  7582  0112CE                     l4209:
  7583  0112CE  500E               	movf	___fladd@aexp^0,w,c
  7584  0112D0  B4D8               	btfsc	status,2,c
  7585  0112D2  EF6D  F089         	goto	u3051
  7586  0112D6  EF6F  F089         	goto	u3050
  7587  0112DA                     u3051:
  7588  0112DA  EF84  F089         	goto	l4219
  7589  0112DE                     u3050:
  7590  0112DE  280E               	incf	___fladd@aexp^0,w,c
  7591  0112E0  A4D8               	btfss	status,2,c
  7592  0112E2  EF75  F089         	goto	u3061
  7593  0112E6  EF77  F089         	goto	u3060
  7594  0112EA                     u3061:
  7595  0112EA  EF7F  F089         	goto	l4215
  7596  0112EE                     u3060:
  7597  0112EE  0E00               	movlw	0
  7598  0112F0  6E05               	movwf	___fladd@a^0,c
  7599  0112F2  0E00               	movlw	0
  7600  0112F4  6E06               	movwf	(___fladd@a+1)^0,c
  7601  0112F6  0E00               	movlw	0
  7602  0112F8  6E07               	movwf	(___fladd@a+2)^0,c
  7603  0112FA  0E00               	movlw	0
  7604  0112FC  6E08               	movwf	(___fladd@a+3)^0,c
  7605  0112FE                     l4215:
  7606  0112FE  8E07               	bsf	(___fladd@a+2)^0,7,c
  7607  011300  0E00               	movlw	0
  7608  011302  6E08               	movwf	(___fladd@a+3)^0,c
  7609  011304  EF8C  F089         	goto	l4221
  7610  011308                     l4219:
  7611  011308  0E00               	movlw	0
  7612  01130A  6E05               	movwf	___fladd@a^0,c
  7613  01130C  0E00               	movlw	0
  7614  01130E  6E06               	movwf	(___fladd@a+1)^0,c
  7615  011310  0E00               	movlw	0
  7616  011312  6E07               	movwf	(___fladd@a+2)^0,c
  7617  011314  0E00               	movlw	0
  7618  011316  6E08               	movwf	(___fladd@a+3)^0,c
  7619  011318                     l4221:
  7620  011318  500F               	movf	___fladd@bexp^0,w,c
  7621  01131A  5C0E               	subwf	___fladd@aexp^0,w,c
  7622  01131C  B0D8               	btfsc	status,0,c
  7623  01131E  EF93  F089         	goto	u3071
  7624  011322  EF95  F089         	goto	u3070
  7625  011326                     u3071:
  7626  011326  EFBC  F089         	goto	l4257
  7627  01132A                     u3070:
  7628  01132A  AC0D               	btfss	___fladd@signs^0,6,c
  7629  01132C  EF9A  F089         	goto	u3081
  7630  011330  EF9C  F089         	goto	u3080
  7631  011334                     u3081:
  7632  011334  EF9E  F089         	goto	l4227
  7633  011338                     u3080:
  7634  011338  0E80               	movlw	128
  7635  01133A  1A0D               	xorwf	___fladd@signs^0,f,c
  7636  01133C                     l4227:
  7637  01133C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7638  011340  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7639  011344  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7640  011348  C001  F010         	movff	___fladd@b,___fladd@grs
  7641  01134C  C005  F001         	movff	___fladd@a,___fladd@b
  7642  011350  C010  F005         	movff	___fladd@grs,___fladd@a
  7643  011354  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7644  011358  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7645  01135C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7646  011360  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7647  011364  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7648  011368  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7649  01136C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7650  011370  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7651  011374  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7652  011378                     l4257:
  7653  011378  0E00               	movlw	0
  7654  01137A  6E10               	movwf	___fladd@grs^0,c
  7655  01137C  500F               	movf	___fladd@bexp^0,w,c
  7656  01137E  C00E  F009         	movff	___fladd@aexp,??___fladd
  7657  011382  6A0A               	clrf	(??___fladd+1)^0,c
  7658  011384  5E09               	subwf	??___fladd^0,f,c
  7659  011386  0E00               	movlw	0
  7660  011388  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7661  01138A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7662  01138C  EFD1  F089         	goto	u3091
  7663  011390  500A               	movf	(??___fladd+1)^0,w,c
  7664  011392  E109               	bnz	u3090
  7665  011394  0E1A               	movlw	26
  7666  011396  5C09               	subwf	??___fladd^0,w,c
  7667  011398  A0D8               	btfss	status,0,c
  7668  01139A  EFD1  F089         	goto	u3091
  7669  01139E  EFD3  F089         	goto	u3090
  7670  0113A2                     u3091:
  7671  0113A2  EF0A  F08A         	goto	l1579
  7672  0113A6                     u3090:
  7673  0113A6  5001               	movf	___fladd@b^0,w,c
  7674  0113A8  1002               	iorwf	(___fladd@b+1)^0,w,c
  7675  0113AA  1003               	iorwf	(___fladd@b+2)^0,w,c
  7676  0113AC  1004               	iorwf	(___fladd@b+3)^0,w,c
  7677  0113AE  A4D8               	btfss	status,2,c
  7678  0113B0  EFDC  F089         	goto	u3101
  7679  0113B4  EFDF  F089         	goto	u3100
  7680  0113B8                     u3101:
  7681  0113B8  0E01               	movlw	1
  7682  0113BA  EFE0  F089         	goto	u3110
  7683  0113BE                     u3100:
  7684  0113BE  0E00               	movlw	0
  7685  0113C0                     u3110:
  7686  0113C0  6E10               	movwf	___fladd@grs^0,c
  7687  0113C2  0E00               	movlw	0
  7688  0113C4  6E01               	movwf	___fladd@b^0,c
  7689  0113C6  0E00               	movlw	0
  7690  0113C8  6E02               	movwf	(___fladd@b+1)^0,c
  7691  0113CA  0E00               	movlw	0
  7692  0113CC  6E03               	movwf	(___fladd@b+2)^0,c
  7693  0113CE  0E00               	movlw	0
  7694  0113D0  6E04               	movwf	(___fladd@b+3)^0,c
  7695  0113D2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7696  0113D6  EF13  F08A         	goto	l1578
  7697  0113DA                     l1580:
  7698  0113DA  A010               	btfss	___fladd@grs^0,0,c
  7699  0113DC  EFF2  F089         	goto	u3121
  7700  0113E0  EFF4  F089         	goto	u3120
  7701  0113E4                     u3121:
  7702  0113E4  EFFA  F089         	goto	l4269
  7703  0113E8                     u3120:
  7704  0113E8  90D8               	bcf	status,0,c
  7705  0113EA  3010               	rrcf	___fladd@grs^0,w,c
  7706  0113EC  0901               	iorlw	1
  7707  0113EE  6E10               	movwf	___fladd@grs^0,c
  7708  0113F0  EFFC  F089         	goto	l4271
  7709  0113F4                     l4269:
  7710  0113F4  90D8               	bcf	status,0,c
  7711  0113F6  3210               	rrcf	___fladd@grs^0,f,c
  7712  0113F8                     l4271:
  7713  0113F8  A001               	btfss	___fladd@b^0,0,c
  7714  0113FA  EF01  F08A         	goto	u3131
  7715  0113FE  EF03  F08A         	goto	u3130
  7716  011402                     u3131:
  7717  011402  EF04  F08A         	goto	l4275
  7718  011406                     u3130:
  7719  011406  8E10               	bsf	___fladd@grs^0,7,c
  7720  011408                     l4275:
  7721  011408  3404               	rlcf	(___fladd@b+3)^0,w,c
  7722  01140A  3204               	rrcf	(___fladd@b+3)^0,f,c
  7723  01140C  3203               	rrcf	(___fladd@b+2)^0,f,c
  7724  01140E  3202               	rrcf	(___fladd@b+1)^0,f,c
  7725  011410  3201               	rrcf	___fladd@b^0,f,c
  7726  011412  2A0F               	incf	___fladd@bexp^0,f,c
  7727  011414                     l1579:
  7728  011414  500E               	movf	___fladd@aexp^0,w,c
  7729  011416  5C0F               	subwf	___fladd@bexp^0,w,c
  7730  011418  A0D8               	btfss	status,0,c
  7731  01141A  EF11  F08A         	goto	u3141
  7732  01141E  EF13  F08A         	goto	u3140
  7733  011422                     u3141:
  7734  011422  EFED  F089         	goto	l1580
  7735  011426                     u3140:
  7736  011426                     l1578:
  7737  011426  BC0D               	btfsc	___fladd@signs^0,6,c
  7738  011428  EF18  F08A         	goto	u3151
  7739  01142C  EF1A  F08A         	goto	u3150
  7740  011430                     u3151:
  7741  011430  EF5A  F08A         	goto	l4303
  7742  011434                     u3150:
  7743  011434  500F               	movf	___fladd@bexp^0,w,c
  7744  011436  A4D8               	btfss	status,2,c
  7745  011438  EF20  F08A         	goto	u3161
  7746  01143C  EF22  F08A         	goto	u3160
  7747  011440                     u3161:
  7748  011440  EF2C  F08A         	goto	l4285
  7749  011444                     u3160:
  7750  011444  0E00               	movlw	0
  7751  011446  6E01               	movwf	?___fladd^0,c
  7752  011448  0E00               	movlw	0
  7753  01144A  6E02               	movwf	(?___fladd+1)^0,c
  7754  01144C  0E00               	movlw	0
  7755  01144E  6E03               	movwf	(?___fladd+2)^0,c
  7756  011450  0E00               	movlw	0
  7757  011452  6E04               	movwf	(?___fladd+3)^0,c
  7758  011454  EF7B  F08B         	goto	l1587
  7759  011458                     l4285:
  7760  011458  5005               	movf	___fladd@a^0,w,c
  7761  01145A  2601               	addwf	___fladd@b^0,f,c
  7762  01145C  5006               	movf	(___fladd@a+1)^0,w,c
  7763  01145E  2202               	addwfc	(___fladd@b+1)^0,f,c
  7764  011460  5007               	movf	(___fladd@a+2)^0,w,c
  7765  011462  2203               	addwfc	(___fladd@b+2)^0,f,c
  7766  011464  5008               	movf	(___fladd@a+3)^0,w,c
  7767  011466  2204               	addwfc	(___fladd@b+3)^0,f,c
  7768  011468  A004               	btfss	(___fladd@b+3)^0,0,c
  7769  01146A  EF39  F08A         	goto	u3171
  7770  01146E  EF3B  F08A         	goto	u3170
  7771  011472                     u3171:
  7772  011472  EFE7  F08A         	goto	l4339
  7773  011476                     u3170:
  7774  011476  A010               	btfss	___fladd@grs^0,0,c
  7775  011478  EF40  F08A         	goto	u3181
  7776  01147C  EF42  F08A         	goto	u3180
  7777  011480                     u3181:
  7778  011480  EF48  F08A         	goto	l4293
  7779  011484                     u3180:
  7780  011484  90D8               	bcf	status,0,c
  7781  011486  3010               	rrcf	___fladd@grs^0,w,c
  7782  011488  0901               	iorlw	1
  7783  01148A  6E10               	movwf	___fladd@grs^0,c
  7784  01148C  EF4A  F08A         	goto	l4295
  7785  011490                     l4293:
  7786  011490  90D8               	bcf	status,0,c
  7787  011492  3210               	rrcf	___fladd@grs^0,f,c
  7788  011494                     l4295:
  7789  011494  A001               	btfss	___fladd@b^0,0,c
  7790  011496  EF4F  F08A         	goto	u3191
  7791  01149A  EF51  F08A         	goto	u3190
  7792  01149E                     u3191:
  7793  01149E  EF52  F08A         	goto	l4299
  7794  0114A2                     u3190:
  7795  0114A2  8E10               	bsf	___fladd@grs^0,7,c
  7796  0114A4                     l4299:
  7797  0114A4  3404               	rlcf	(___fladd@b+3)^0,w,c
  7798  0114A6  3204               	rrcf	(___fladd@b+3)^0,f,c
  7799  0114A8  3203               	rrcf	(___fladd@b+2)^0,f,c
  7800  0114AA  3202               	rrcf	(___fladd@b+1)^0,f,c
  7801  0114AC  3201               	rrcf	___fladd@b^0,f,c
  7802  0114AE  2A0F               	incf	___fladd@bexp^0,f,c
  7803  0114B0  EFE7  F08A         	goto	l4339
  7804  0114B4                     l4303:
  7805  0114B4  5005               	movf	___fladd@a^0,w,c
  7806  0114B6  5C01               	subwf	___fladd@b^0,w,c
  7807  0114B8  5006               	movf	(___fladd@a+1)^0,w,c
  7808  0114BA  5802               	subwfb	(___fladd@b+1)^0,w,c
  7809  0114BC  5007               	movf	(___fladd@a+2)^0,w,c
  7810  0114BE  5803               	subwfb	(___fladd@b+2)^0,w,c
  7811  0114C0  5004               	movf	(___fladd@b+3)^0,w,c
  7812  0114C2  0A80               	xorlw	128
  7813  0114C4  6E09               	movwf	??___fladd^0,c
  7814  0114C6  5008               	movf	(___fladd@a+3)^0,w,c
  7815  0114C8  0A80               	xorlw	128
  7816  0114CA  5809               	subwfb	??___fladd^0,w,c
  7817  0114CC  B0D8               	btfsc	status,0,c
  7818  0114CE  EF6B  F08A         	goto	u3201
  7819  0114D2  EF6D  F08A         	goto	u3200
  7820  0114D6                     u3201:
  7821  0114D6  EF98  F08A         	goto	l4313
  7822  0114DA                     u3200:
  7823  0114DA  5001               	movf	___fladd@b^0,w,c
  7824  0114DC  5C05               	subwf	___fladd@a^0,w,c
  7825  0114DE  6E09               	movwf	??___fladd^0,c
  7826  0114E0  5002               	movf	(___fladd@b+1)^0,w,c
  7827  0114E2  5806               	subwfb	(___fladd@a+1)^0,w,c
  7828  0114E4  6E0A               	movwf	(??___fladd+1)^0,c
  7829  0114E6  5003               	movf	(___fladd@b+2)^0,w,c
  7830  0114E8  5807               	subwfb	(___fladd@a+2)^0,w,c
  7831  0114EA  6E0B               	movwf	(??___fladd+2)^0,c
  7832  0114EC  5004               	movf	(___fladd@b+3)^0,w,c
  7833  0114EE  5808               	subwfb	(___fladd@a+3)^0,w,c
  7834  0114F0  6E0C               	movwf	(??___fladd+3)^0,c
  7835  0114F2  0EFF               	movlw	255
  7836  0114F4  2409               	addwf	??___fladd^0,w,c
  7837  0114F6  6E01               	movwf	___fladd@b^0,c
  7838  0114F8  0EFF               	movlw	255
  7839  0114FA  200A               	addwfc	(??___fladd+1)^0,w,c
  7840  0114FC  6E02               	movwf	(___fladd@b+1)^0,c
  7841  0114FE  0EFF               	movlw	255
  7842  011500  200B               	addwfc	(??___fladd+2)^0,w,c
  7843  011502  6E03               	movwf	(___fladd@b+2)^0,c
  7844  011504  0EFF               	movlw	255
  7845  011506  200C               	addwfc	(??___fladd+3)^0,w,c
  7846  011508  6E04               	movwf	(___fladd@b+3)^0,c
  7847  01150A  0E80               	movlw	128
  7848  01150C  1A0D               	xorwf	___fladd@signs^0,f,c
  7849  01150E  6C10               	negf	___fladd@grs^0,c
  7850  011510  5010               	movf	___fladd@grs^0,w,c
  7851  011512  A4D8               	btfss	status,2,c
  7852  011514  EF8E  F08A         	goto	u3211
  7853  011518  EF90  F08A         	goto	u3210
  7854  01151C                     u3211:
  7855  01151C  EFA0  F08A         	goto	l1595
  7856  011520                     u3210:
  7857  011520  0E01               	movlw	1
  7858  011522  2601               	addwf	___fladd@b^0,f,c
  7859  011524  0E00               	movlw	0
  7860  011526  2202               	addwfc	(___fladd@b+1)^0,f,c
  7861  011528  2203               	addwfc	(___fladd@b+2)^0,f,c
  7862  01152A  2204               	addwfc	(___fladd@b+3)^0,f,c
  7863  01152C  EFA0  F08A         	goto	l1595
  7864  011530                     l4313:
  7865  011530  5005               	movf	___fladd@a^0,w,c
  7866  011532  5E01               	subwf	___fladd@b^0,f,c
  7867  011534  5006               	movf	(___fladd@a+1)^0,w,c
  7868  011536  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7869  011538  5007               	movf	(___fladd@a+2)^0,w,c
  7870  01153A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7871  01153C  5008               	movf	(___fladd@a+3)^0,w,c
  7872  01153E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7873  011540                     l1595:
  7874  011540  5001               	movf	___fladd@b^0,w,c
  7875  011542  1002               	iorwf	(___fladd@b+1)^0,w,c
  7876  011544  1003               	iorwf	(___fladd@b+2)^0,w,c
  7877  011546  1004               	iorwf	(___fladd@b+3)^0,w,c
  7878  011548  A4D8               	btfss	status,2,c
  7879  01154A  EFA9  F08A         	goto	u3221
  7880  01154E  EFAB  F08A         	goto	u3220
  7881  011552                     u3221:
  7882  011552  EFE0  F08A         	goto	l4337
  7883  011556                     u3220:
  7884  011556  5010               	movf	___fladd@grs^0,w,c
  7885  011558  A4D8               	btfss	status,2,c
  7886  01155A  EFB1  F08A         	goto	u3231
  7887  01155E  EFB3  F08A         	goto	u3230
  7888  011562                     u3231:
  7889  011562  EFE0  F08A         	goto	l4337
  7890  011566                     u3230:
  7891  011566  0E00               	movlw	0
  7892  011568  6E01               	movwf	?___fladd^0,c
  7893  01156A  0E00               	movlw	0
  7894  01156C  6E02               	movwf	(?___fladd+1)^0,c
  7895  01156E  0E00               	movlw	0
  7896  011570  6E03               	movwf	(?___fladd+2)^0,c
  7897  011572  0E00               	movlw	0
  7898  011574  6E04               	movwf	(?___fladd+3)^0,c
  7899  011576  EF7B  F08B         	goto	l1587
  7900  01157A                     l4321:
  7901  01157A  90D8               	bcf	status,0,c
  7902  01157C  3601               	rlcf	___fladd@b^0,f,c
  7903  01157E  3602               	rlcf	(___fladd@b+1)^0,f,c
  7904  011580  3603               	rlcf	(___fladd@b+2)^0,f,c
  7905  011582  3604               	rlcf	(___fladd@b+3)^0,f,c
  7906  011584  AE10               	btfss	___fladd@grs^0,7,c
  7907  011586  EFC7  F08A         	goto	u3241
  7908  01158A  EFC9  F08A         	goto	u3240
  7909  01158E                     u3241:
  7910  01158E  EFCA  F08A         	goto	l4327
  7911  011592                     u3240:
  7912  011592  8001               	bsf	___fladd@b^0,0,c
  7913  011594                     l4327:
  7914  011594  A010               	btfss	___fladd@grs^0,0,c
  7915  011596  EFCF  F08A         	goto	u3251
  7916  01159A  EFD1  F08A         	goto	u3250
  7917  01159E                     u3251:
  7918  01159E  EFD5  F08A         	goto	l4331
  7919  0115A2                     u3250:
  7920  0115A2  80D8               	bsf	status,0,c
  7921  0115A4  3610               	rlcf	___fladd@grs^0,f,c
  7922  0115A6  EFD7  F08A         	goto	l4333
  7923  0115AA                     l4331:
  7924  0115AA  90D8               	bcf	status,0,c
  7925  0115AC  3610               	rlcf	___fladd@grs^0,f,c
  7926  0115AE                     l4333:
  7927  0115AE  500F               	movf	___fladd@bexp^0,w,c
  7928  0115B0  B4D8               	btfsc	status,2,c
  7929  0115B2  EFDD  F08A         	goto	u3261
  7930  0115B6  EFDF  F08A         	goto	u3260
  7931  0115BA                     u3261:
  7932  0115BA  EFE0  F08A         	goto	l4337
  7933  0115BE                     u3260:
  7934  0115BE  060F               	decf	___fladd@bexp^0,f,c
  7935  0115C0                     l4337:
  7936  0115C0  AE03               	btfss	(___fladd@b+2)^0,7,c
  7937  0115C2  EFE5  F08A         	goto	u3271
  7938  0115C6  EFE7  F08A         	goto	u3270
  7939  0115CA                     u3271:
  7940  0115CA  EFBD  F08A         	goto	l4321
  7941  0115CE                     u3270:
  7942  0115CE                     l4339:
  7943  0115CE  0E00               	movlw	0
  7944  0115D0  6E0E               	movwf	___fladd@aexp^0,c
  7945  0115D2  AE10               	btfss	___fladd@grs^0,7,c
  7946  0115D4  EFEE  F08A         	goto	u3281
  7947  0115D8  EFF0  F08A         	goto	u3280
  7948  0115DC                     u3281:
  7949  0115DC  EF08  F08B         	goto	l1604
  7950  0115E0                     u3280:
  7951  0115E0  C010  F009         	movff	___fladd@grs,??___fladd
  7952  0115E4  0E7F               	movlw	127
  7953  0115E6  1609               	andwf	??___fladd^0,f,c
  7954  0115E8  B4D8               	btfsc	status,2,c
  7955  0115EA  EFF9  F08A         	goto	u3291
  7956  0115EE  EFFB  F08A         	goto	u3290
  7957  0115F2                     u3291:
  7958  0115F2  EFFF  F08A         	goto	l1605
  7959  0115F6                     u3290:
  7960  0115F6                     l4345:
  7961  0115F6  0E01               	movlw	1
  7962  0115F8  6E0E               	movwf	___fladd@aexp^0,c
  7963  0115FA  EF08  F08B         	goto	l1604
  7964  0115FE                     l1605:
  7965  0115FE  A001               	btfss	___fladd@b^0,0,c
  7966  011600  EF04  F08B         	goto	u3301
  7967  011604  EF06  F08B         	goto	u3300
  7968  011608                     u3301:
  7969  011608  EF08  F08B         	goto	l1604
  7970  01160C                     u3300:
  7971  01160C  EFFB  F08A         	goto	l4345
  7972  011610                     l1604:
  7973  011610  500E               	movf	___fladd@aexp^0,w,c
  7974  011612  B4D8               	btfsc	status,2,c
  7975  011614  EF0E  F08B         	goto	u3311
  7976  011618  EF10  F08B         	goto	u3310
  7977  01161C                     u3311:
  7978  01161C  EF3B  F08B         	goto	l4357
  7979  011620                     u3310:
  7980  011620  0E01               	movlw	1
  7981  011622  2601               	addwf	___fladd@b^0,f,c
  7982  011624  0E00               	movlw	0
  7983  011626  2202               	addwfc	(___fladd@b+1)^0,f,c
  7984  011628  2203               	addwfc	(___fladd@b+2)^0,f,c
  7985  01162A  2204               	addwfc	(___fladd@b+3)^0,f,c
  7986  01162C  A004               	btfss	(___fladd@b+3)^0,0,c
  7987  01162E  EF1B  F08B         	goto	u3321
  7988  011632  EF1D  F08B         	goto	u3320
  7989  011636                     u3321:
  7990  011636  EF3B  F08B         	goto	l4357
  7991  01163A                     u3320:
  7992  01163A  C001  F009         	movff	___fladd@b,??___fladd
  7993  01163E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7994  011642  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7995  011646  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7996  01164A  340C               	rlcf	(??___fladd+3)^0,w,c
  7997  01164C  320C               	rrcf	(??___fladd+3)^0,f,c
  7998  01164E  320B               	rrcf	(??___fladd+2)^0,f,c
  7999  011650  320A               	rrcf	(??___fladd+1)^0,f,c
  8000  011652  3209               	rrcf	??___fladd^0,f,c
  8001  011654  C009  F001         	movff	??___fladd,___fladd@b
  8002  011658  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8003  01165C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8004  011660  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8005  011664  280F               	incf	___fladd@bexp^0,w,c
  8006  011666  B4D8               	btfsc	status,2,c
  8007  011668  EF38  F08B         	goto	u3331
  8008  01166C  EF3A  F08B         	goto	u3330
  8009  011670                     u3331:
  8010  011670  EF3B  F08B         	goto	l4357
  8011  011674                     u3330:
  8012  011674  2A0F               	incf	___fladd@bexp^0,f,c
  8013  011676                     l4357:
  8014  011676  280F               	incf	___fladd@bexp^0,w,c
  8015  011678  B4D8               	btfsc	status,2,c
  8016  01167A  EF41  F08B         	goto	u3341
  8017  01167E  EF43  F08B         	goto	u3340
  8018  011682                     u3341:
  8019  011682  EF4B  F08B         	goto	l4361
  8020  011686                     u3340:
  8021  011686  500F               	movf	___fladd@bexp^0,w,c
  8022  011688  A4D8               	btfss	status,2,c
  8023  01168A  EF49  F08B         	goto	u3351
  8024  01168E  EF4B  F08B         	goto	u3350
  8025  011692                     u3351:
  8026  011692  EF5D  F08B         	goto	l4365
  8027  011696                     u3350:
  8028  011696                     l4361:
  8029  011696  0E00               	movlw	0
  8030  011698  6E01               	movwf	___fladd@b^0,c
  8031  01169A  0E00               	movlw	0
  8032  01169C  6E02               	movwf	(___fladd@b+1)^0,c
  8033  01169E  0E00               	movlw	0
  8034  0116A0  6E03               	movwf	(___fladd@b+2)^0,c
  8035  0116A2  0E00               	movlw	0
  8036  0116A4  6E04               	movwf	(___fladd@b+3)^0,c
  8037  0116A6  500F               	movf	___fladd@bexp^0,w,c
  8038  0116A8  A4D8               	btfss	status,2,c
  8039  0116AA  EF59  F08B         	goto	u3361
  8040  0116AE  EF5B  F08B         	goto	u3360
  8041  0116B2                     u3361:
  8042  0116B2  EF5D  F08B         	goto	l4365
  8043  0116B6                     u3360:
  8044  0116B6  0E00               	movlw	0
  8045  0116B8  6E0D               	movwf	___fladd@signs^0,c
  8046  0116BA                     l4365:
  8047  0116BA  A00F               	btfss	___fladd@bexp^0,0,c
  8048  0116BC  EF62  F08B         	goto	u3371
  8049  0116C0  EF64  F08B         	goto	u3370
  8050  0116C4                     u3371:
  8051  0116C4  EF67  F08B         	goto	l4369
  8052  0116C8                     u3370:
  8053  0116C8  8E03               	bsf	(___fladd@b+2)^0,7,c
  8054  0116CA  EF68  F08B         	goto	l4371
  8055  0116CE                     l4369:
  8056  0116CE  9E03               	bcf	(___fladd@b+2)^0,7,c
  8057  0116D0                     l4371:
  8058  0116D0  90D8               	bcf	status,0,c
  8059  0116D2  300F               	rrcf	___fladd@bexp^0,w,c
  8060  0116D4  6E04               	movwf	(___fladd@b+3)^0,c
  8061  0116D6  AE0D               	btfss	___fladd@signs^0,7,c
  8062  0116D8  EF70  F08B         	goto	u3381
  8063  0116DC  EF72  F08B         	goto	u3380
  8064  0116E0                     u3381:
  8065  0116E0  EF73  F08B         	goto	l4377
  8066  0116E4                     u3380:
  8067  0116E4  8E04               	bsf	(___fladd@b+3)^0,7,c
  8068  0116E6                     l4377:
  8069  0116E6  C001  F001         	movff	___fladd@b,?___fladd
  8070  0116EA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8071  0116EE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8072  0116F2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8073  0116F6                     l1587:
  8074  0116F6  0012               	return		;funcret
  8075  0116F8                     __end_of___fladd:
  8076                           	callstack 0
  8077                           
  8078 ;; *************** function ___flneg *****************
  8079 ;; Defined at:
  8080 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  f1              4    0[COMRAM] unsigned char 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;		None
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  4    0[COMRAM] unsigned char 
  8087 ;; Registers used:
  8088 ;;		wreg, status,2, status,0
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8098 ;;Total ram usage:        4 bytes
  8099 ;; Hardware stack levels used: 1
  8100 ;; Hardware stack levels required when called: 2
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		_efgtoa
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text26
  8109  013C68                     __ptext26:
  8110                           	callstack 0
  8111  013C68                     ___flneg:
  8112                           	callstack 23
  8113  013C68  5001               	movf	___flneg@f1^0,w,c
  8114  013C6A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8115  013C6C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8116  013C6E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8117  013C70  B4D8               	btfsc	status,2,c
  8118  013C72  EF3D  F09E         	goto	u4171
  8119  013C76  EF3F  F09E         	goto	u4170
  8120  013C7A                     u4171:
  8121  013C7A  EF47  F09E         	goto	l4875
  8122  013C7E                     u4170:
  8123  013C7E  0E00               	movlw	0
  8124  013C80  1A01               	xorwf	___flneg@f1^0,f,c
  8125  013C82  0E00               	movlw	0
  8126  013C84  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8127  013C86  0E00               	movlw	0
  8128  013C88  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8129  013C8A  0E80               	movlw	128
  8130  013C8C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8131  013C8E                     l4875:
  8132  013C8E  C001  F001         	movff	___flneg@f1,?___flneg
  8133  013C92  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8134  013C96  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8135  013C9A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8136  013C9E  0012               	return		;funcret
  8137  013CA0                     __end_of___flneg:
  8138                           	callstack 0
  8139                           
  8140 ;; *************** function ___flmul *****************
  8141 ;; Defined at:
  8142 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;  b               4   14[COMRAM] unsigned char 
  8145 ;;  a               4   18[COMRAM] unsigned char 
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;  prod            4   33[COMRAM] struct .
  8148 ;;  grs             4   27[COMRAM] unsigned long 
  8149 ;;  temp            2   37[COMRAM] struct .
  8150 ;;  bexp            1   32[COMRAM] unsigned char 
  8151 ;;  aexp            1   31[COMRAM] unsigned char 
  8152 ;;  sign            1   26[COMRAM] unsigned char 
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  4   14[COMRAM] unsigned char 
  8155 ;; Registers used:
  8156 ;;		wreg, status,2, status,0, prodl, prodh
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8162 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8163 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8164 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;Total ram usage:       25 bytes
  8167 ;; Hardware stack levels used: 1
  8168 ;; Hardware stack levels required when called: 2
  8169 ;; This function calls:
  8170 ;;		Nothing
  8171 ;; This function is called by:
  8172 ;;		_getADCValue
  8173 ;;		_fastChargingcaps
  8174 ;;		_efgtoa
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text27
  8179  0116F8                     __ptext27:
  8180                           	callstack 0
  8181  0116F8                     ___flmul:
  8182                           	callstack 25
  8183  0116F8  5012               	movf	(___flmul@b+3)^0,w,c
  8184  0116FA  0B80               	andlw	128
  8185  0116FC  6E1B               	movwf	___flmul@sign^0,c
  8186  0116FE  5012               	movf	(___flmul@b+3)^0,w,c
  8187  011700  2412               	addwf	(___flmul@b+3)^0,w,c
  8188  011702  6E21               	movwf	___flmul@bexp^0,c
  8189  011704  AE11               	btfss	(___flmul@b+2)^0,7,c
  8190  011706  EF87  F08B         	goto	u3781
  8191  01170A  EF89  F08B         	goto	u3780
  8192  01170E                     u3781:
  8193  01170E  EF8A  F08B         	goto	l4623
  8194  011712                     u3780:
  8195  011712  8021               	bsf	___flmul@bexp^0,0,c
  8196  011714                     l4623:
  8197  011714  5021               	movf	___flmul@bexp^0,w,c
  8198  011716  B4D8               	btfsc	status,2,c
  8199  011718  EF90  F08B         	goto	u3791
  8200  01171C  EF92  F08B         	goto	u3790
  8201  011720                     u3791:
  8202  011720  EFA5  F08B         	goto	l4631
  8203  011724                     u3790:
  8204  011724  2821               	incf	___flmul@bexp^0,w,c
  8205  011726  A4D8               	btfss	status,2,c
  8206  011728  EF98  F08B         	goto	u3801
  8207  01172C  EF9A  F08B         	goto	u3800
  8208  011730                     u3801:
  8209  011730  EFA2  F08B         	goto	l4629
  8210  011734                     u3800:
  8211  011734  0E00               	movlw	0
  8212  011736  6E0F               	movwf	___flmul@b^0,c
  8213  011738  0E00               	movlw	0
  8214  01173A  6E10               	movwf	(___flmul@b+1)^0,c
  8215  01173C  0E00               	movlw	0
  8216  01173E  6E11               	movwf	(___flmul@b+2)^0,c
  8217  011740  0E00               	movlw	0
  8218  011742  6E12               	movwf	(___flmul@b+3)^0,c
  8219  011744                     l4629:
  8220  011744  8E11               	bsf	(___flmul@b+2)^0,7,c
  8221  011746  EFAD  F08B         	goto	l4633
  8222  01174A                     l4631:
  8223  01174A  0E00               	movlw	0
  8224  01174C  6E0F               	movwf	___flmul@b^0,c
  8225  01174E  0E00               	movlw	0
  8226  011750  6E10               	movwf	(___flmul@b+1)^0,c
  8227  011752  0E00               	movlw	0
  8228  011754  6E11               	movwf	(___flmul@b+2)^0,c
  8229  011756  0E00               	movlw	0
  8230  011758  6E12               	movwf	(___flmul@b+3)^0,c
  8231  01175A                     l4633:
  8232  01175A  5016               	movf	(___flmul@a+3)^0,w,c
  8233  01175C  0B80               	andlw	128
  8234  01175E  1A1B               	xorwf	___flmul@sign^0,f,c
  8235  011760  5016               	movf	(___flmul@a+3)^0,w,c
  8236  011762  2416               	addwf	(___flmul@a+3)^0,w,c
  8237  011764  6E20               	movwf	___flmul@aexp^0,c
  8238  011766  AE15               	btfss	(___flmul@a+2)^0,7,c
  8239  011768  EFB8  F08B         	goto	u3811
  8240  01176C  EFBA  F08B         	goto	u3810
  8241  011770                     u3811:
  8242  011770  EFBB  F08B         	goto	l4641
  8243  011774                     u3810:
  8244  011774  8020               	bsf	___flmul@aexp^0,0,c
  8245  011776                     l4641:
  8246  011776  5020               	movf	___flmul@aexp^0,w,c
  8247  011778  B4D8               	btfsc	status,2,c
  8248  01177A  EFC1  F08B         	goto	u3821
  8249  01177E  EFC3  F08B         	goto	u3820
  8250  011782                     u3821:
  8251  011782  EFD6  F08B         	goto	l4649
  8252  011786                     u3820:
  8253  011786  2820               	incf	___flmul@aexp^0,w,c
  8254  011788  A4D8               	btfss	status,2,c
  8255  01178A  EFC9  F08B         	goto	u3831
  8256  01178E  EFCB  F08B         	goto	u3830
  8257  011792                     u3831:
  8258  011792  EFD3  F08B         	goto	l4647
  8259  011796                     u3830:
  8260  011796  0E00               	movlw	0
  8261  011798  6E13               	movwf	___flmul@a^0,c
  8262  01179A  0E00               	movlw	0
  8263  01179C  6E14               	movwf	(___flmul@a+1)^0,c
  8264  01179E  0E00               	movlw	0
  8265  0117A0  6E15               	movwf	(___flmul@a+2)^0,c
  8266  0117A2  0E00               	movlw	0
  8267  0117A4  6E16               	movwf	(___flmul@a+3)^0,c
  8268  0117A6                     l4647:
  8269  0117A6  8E15               	bsf	(___flmul@a+2)^0,7,c
  8270  0117A8  EFDE  F08B         	goto	l1664
  8271  0117AC                     l4649:
  8272  0117AC  0E00               	movlw	0
  8273  0117AE  6E13               	movwf	___flmul@a^0,c
  8274  0117B0  0E00               	movlw	0
  8275  0117B2  6E14               	movwf	(___flmul@a+1)^0,c
  8276  0117B4  0E00               	movlw	0
  8277  0117B6  6E15               	movwf	(___flmul@a+2)^0,c
  8278  0117B8  0E00               	movlw	0
  8279  0117BA  6E16               	movwf	(___flmul@a+3)^0,c
  8280  0117BC                     l1664:
  8281  0117BC  5020               	movf	___flmul@aexp^0,w,c
  8282  0117BE  B4D8               	btfsc	status,2,c
  8283  0117C0  EFE4  F08B         	goto	u3841
  8284  0117C4  EFE6  F08B         	goto	u3840
  8285  0117C8                     u3841:
  8286  0117C8  EFEE  F08B         	goto	l4653
  8287  0117CC                     u3840:
  8288  0117CC  5021               	movf	___flmul@bexp^0,w,c
  8289  0117CE  A4D8               	btfss	status,2,c
  8290  0117D0  EFEC  F08B         	goto	u3851
  8291  0117D4  EFEE  F08B         	goto	u3850
  8292  0117D8                     u3851:
  8293  0117D8  EFF8  F08B         	goto	l4657
  8294  0117DC                     u3850:
  8295  0117DC                     l4653:
  8296  0117DC  0E00               	movlw	0
  8297  0117DE  6E0F               	movwf	?___flmul^0,c
  8298  0117E0  0E00               	movlw	0
  8299  0117E2  6E10               	movwf	(?___flmul+1)^0,c
  8300  0117E4  0E00               	movlw	0
  8301  0117E6  6E11               	movwf	(?___flmul+2)^0,c
  8302  0117E8  0E00               	movlw	0
  8303  0117EA  6E12               	movwf	(?___flmul+3)^0,c
  8304  0117EC  EF90  F08D         	goto	l1668
  8305  0117F0                     l4657:
  8306  0117F0  5015               	movf	(___flmul@a+2)^0,w,c
  8307  0117F2  020F               	mulwf	___flmul@b^0,c
  8308  0117F4  CFF3 F026          	movff	prodl,___flmul@temp
  8309  0117F8  CFF4 F027          	movff	prodh,___flmul@temp+1
  8310  0117FC  5026               	movf	___flmul@temp^0,w,c
  8311  0117FE  6E1C               	movwf	___flmul@grs^0,c
  8312  011800  6A1D               	clrf	(___flmul@grs+1)^0,c
  8313  011802  6A1E               	clrf	(___flmul@grs+2)^0,c
  8314  011804  6A1F               	clrf	(___flmul@grs+3)^0,c
  8315  011806  5027               	movf	(___flmul@temp+1)^0,w,c
  8316  011808  6E22               	movwf	___flmul@prod^0,c
  8317  01180A  6A23               	clrf	(___flmul@prod+1)^0,c
  8318  01180C  6A24               	clrf	(___flmul@prod+2)^0,c
  8319  01180E  6A25               	clrf	(___flmul@prod+3)^0,c
  8320  011810  5014               	movf	(___flmul@a+1)^0,w,c
  8321  011812  0210               	mulwf	(___flmul@b+1)^0,c
  8322  011814  CFF3 F026          	movff	prodl,___flmul@temp
  8323  011818  CFF4 F027          	movff	prodh,___flmul@temp+1
  8324  01181C  5026               	movf	___flmul@temp^0,w,c
  8325  01181E  261C               	addwf	___flmul@grs^0,f,c
  8326  011820  0E00               	movlw	0
  8327  011822  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8328  011824  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8329  011826  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8330  011828  5027               	movf	(___flmul@temp+1)^0,w,c
  8331  01182A  2622               	addwf	___flmul@prod^0,f,c
  8332  01182C  0E00               	movlw	0
  8333  01182E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8334  011830  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8335  011832  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8336  011834  5013               	movf	___flmul@a^0,w,c
  8337  011836  0211               	mulwf	(___flmul@b+2)^0,c
  8338  011838  CFF3 F026          	movff	prodl,___flmul@temp
  8339  01183C  CFF4 F027          	movff	prodh,___flmul@temp+1
  8340  011840  5026               	movf	___flmul@temp^0,w,c
  8341  011842  261C               	addwf	___flmul@grs^0,f,c
  8342  011844  0E00               	movlw	0
  8343  011846  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8344  011848  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8345  01184A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8346  01184C  5027               	movf	(___flmul@temp+1)^0,w,c
  8347  01184E  2622               	addwf	___flmul@prod^0,f,c
  8348  011850  0E00               	movlw	0
  8349  011852  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8350  011854  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8351  011856  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8352  011858  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8353  01185C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8354  011860  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8355  011864  6A1C               	clrf	___flmul@grs^0,c
  8356  011866  5013               	movf	___flmul@a^0,w,c
  8357  011868  0210               	mulwf	(___flmul@b+1)^0,c
  8358  01186A  CFF3 F026          	movff	prodl,___flmul@temp
  8359  01186E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8360  011872  5026               	movf	___flmul@temp^0,w,c
  8361  011874  261C               	addwf	___flmul@grs^0,f,c
  8362  011876  5027               	movf	(___flmul@temp+1)^0,w,c
  8363  011878  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8364  01187A  0E00               	movlw	0
  8365  01187C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8366  01187E  0E00               	movlw	0
  8367  011880  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8368  011882  5014               	movf	(___flmul@a+1)^0,w,c
  8369  011884  020F               	mulwf	___flmul@b^0,c
  8370  011886  CFF3 F026          	movff	prodl,___flmul@temp
  8371  01188A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8372  01188E  5026               	movf	___flmul@temp^0,w,c
  8373  011890  261C               	addwf	___flmul@grs^0,f,c
  8374  011892  5027               	movf	(___flmul@temp+1)^0,w,c
  8375  011894  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8376  011896  0E00               	movlw	0
  8377  011898  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8378  01189A  0E00               	movlw	0
  8379  01189C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8380  01189E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8381  0118A2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8382  0118A6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8383  0118AA  6A1C               	clrf	___flmul@grs^0,c
  8384  0118AC  5013               	movf	___flmul@a^0,w,c
  8385  0118AE  020F               	mulwf	___flmul@b^0,c
  8386  0118B0  CFF3 F026          	movff	prodl,___flmul@temp
  8387  0118B4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8388  0118B8  5026               	movf	___flmul@temp^0,w,c
  8389  0118BA  261C               	addwf	___flmul@grs^0,f,c
  8390  0118BC  5027               	movf	(___flmul@temp+1)^0,w,c
  8391  0118BE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8392  0118C0  0E00               	movlw	0
  8393  0118C2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8394  0118C4  0E00               	movlw	0
  8395  0118C6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8396  0118C8  5015               	movf	(___flmul@a+2)^0,w,c
  8397  0118CA  0210               	mulwf	(___flmul@b+1)^0,c
  8398  0118CC  CFF3 F026          	movff	prodl,___flmul@temp
  8399  0118D0  CFF4 F027          	movff	prodh,___flmul@temp+1
  8400  0118D4  5026               	movf	___flmul@temp^0,w,c
  8401  0118D6  2622               	addwf	___flmul@prod^0,f,c
  8402  0118D8  5027               	movf	(___flmul@temp+1)^0,w,c
  8403  0118DA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8404  0118DC  0E00               	movlw	0
  8405  0118DE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8406  0118E0  0E00               	movlw	0
  8407  0118E2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8408  0118E4  5014               	movf	(___flmul@a+1)^0,w,c
  8409  0118E6  0211               	mulwf	(___flmul@b+2)^0,c
  8410  0118E8  CFF3 F026          	movff	prodl,___flmul@temp
  8411  0118EC  CFF4 F027          	movff	prodh,___flmul@temp+1
  8412  0118F0  5026               	movf	___flmul@temp^0,w,c
  8413  0118F2  2622               	addwf	___flmul@prod^0,f,c
  8414  0118F4  5027               	movf	(___flmul@temp+1)^0,w,c
  8415  0118F6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8416  0118F8  0E00               	movlw	0
  8417  0118FA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8418  0118FC  0E00               	movlw	0
  8419  0118FE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8420  011900  5015               	movf	(___flmul@a+2)^0,w,c
  8421  011902  0211               	mulwf	(___flmul@b+2)^0,c
  8422  011904  CFF3 F026          	movff	prodl,___flmul@temp
  8423  011908  CFF4 F027          	movff	prodh,___flmul@temp+1
  8424  01190C  5026               	movf	___flmul@temp^0,w,c
  8425  01190E  6E17               	movwf	??___flmul^0,c
  8426  011910  5027               	movf	(___flmul@temp+1)^0,w,c
  8427  011912  6E18               	movwf	(??___flmul+1)^0,c
  8428  011914  6A19               	clrf	(??___flmul+2)^0,c
  8429  011916  6A1A               	clrf	(??___flmul+3)^0,c
  8430  011918  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8431  01191C  C018  F019         	movff	??___flmul+1,??___flmul+2
  8432  011920  C017  F018         	movff	??___flmul,??___flmul+1
  8433  011924  6A17               	clrf	??___flmul^0,c
  8434  011926  5017               	movf	??___flmul^0,w,c
  8435  011928  2622               	addwf	___flmul@prod^0,f,c
  8436  01192A  5018               	movf	(??___flmul+1)^0,w,c
  8437  01192C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8438  01192E  5019               	movf	(??___flmul+2)^0,w,c
  8439  011930  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8440  011932  501A               	movf	(??___flmul+3)^0,w,c
  8441  011934  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8442  011936  C01C  F017         	movff	___flmul@grs,??___flmul
  8443  01193A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8444  01193E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8445  011942  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8446  011946  0E19               	movlw	25
  8447  011948  EFAB  F08C         	goto	u3860
  8448  01194C                     u3865:
  8449  01194C  90D8               	bcf	status,0,c
  8450  01194E  321A               	rrcf	(??___flmul+3)^0,f,c
  8451  011950  3219               	rrcf	(??___flmul+2)^0,f,c
  8452  011952  3218               	rrcf	(??___flmul+1)^0,f,c
  8453  011954  3217               	rrcf	??___flmul^0,f,c
  8454  011956                     u3860:
  8455  011956  2EE8               	decfsz	wreg,f,c
  8456  011958  EFA6  F08C         	goto	u3865
  8457  01195C  5017               	movf	??___flmul^0,w,c
  8458  01195E  2622               	addwf	___flmul@prod^0,f,c
  8459  011960  5018               	movf	(??___flmul+1)^0,w,c
  8460  011962  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8461  011964  5019               	movf	(??___flmul+2)^0,w,c
  8462  011966  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8463  011968  501A               	movf	(??___flmul+3)^0,w,c
  8464  01196A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8465  01196C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8466  011970  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8467  011974  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8468  011978  6A1C               	clrf	___flmul@grs^0,c
  8469  01197A  5020               	movf	___flmul@aexp^0,w,c
  8470  01197C  C021  F017         	movff	___flmul@bexp,??___flmul
  8471  011980  6A18               	clrf	(??___flmul+1)^0,c
  8472  011982  2617               	addwf	??___flmul^0,f,c
  8473  011984  0E00               	movlw	0
  8474  011986  2218               	addwfc	(??___flmul+1)^0,f,c
  8475  011988  0E82               	movlw	130
  8476  01198A  2417               	addwf	??___flmul^0,w,c
  8477  01198C  6E26               	movwf	___flmul@temp^0,c
  8478  01198E  0EFF               	movlw	255
  8479  011990  2018               	addwfc	(??___flmul+1)^0,w,c
  8480  011992  6E27               	movwf	(___flmul@temp+1)^0,c
  8481  011994  EFE1  F08C         	goto	l4705
  8482  011998                     l4699:
  8483  011998  90D8               	bcf	status,0,c
  8484  01199A  3622               	rlcf	___flmul@prod^0,f,c
  8485  01199C  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8486  01199E  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8487  0119A0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8488  0119A2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8489  0119A4  EFD6  F08C         	goto	u3871
  8490  0119A8  EFD8  F08C         	goto	u3870
  8491  0119AC                     u3871:
  8492  0119AC  EFD9  F08C         	goto	l1671
  8493  0119B0                     u3870:
  8494  0119B0  8022               	bsf	___flmul@prod^0,0,c
  8495  0119B2                     l1671:
  8496  0119B2  90D8               	bcf	status,0,c
  8497  0119B4  361C               	rlcf	___flmul@grs^0,f,c
  8498  0119B6  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8499  0119B8  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8500  0119BA  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8501  0119BC  0626               	decf	___flmul@temp^0,f,c
  8502  0119BE  A0D8               	btfss	status,0,c
  8503  0119C0  0627               	decf	(___flmul@temp+1)^0,f,c
  8504  0119C2                     l4705:
  8505  0119C2  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8506  0119C4  EFE6  F08C         	goto	u3881
  8507  0119C8  EFE8  F08C         	goto	u3880
  8508  0119CC                     u3881:
  8509  0119CC  EFCC  F08C         	goto	l4699
  8510  0119D0                     u3880:
  8511  0119D0  0E00               	movlw	0
  8512  0119D2  6E20               	movwf	___flmul@aexp^0,c
  8513  0119D4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8514  0119D6  EFEF  F08C         	goto	u3891
  8515  0119DA  EFF1  F08C         	goto	u3890
  8516  0119DE                     u3891:
  8517  0119DE  EF15  F08D         	goto	l1673
  8518  0119E2                     u3890:
  8519  0119E2  0EFF               	movlw	255
  8520  0119E4  141C               	andwf	___flmul@grs^0,w,c
  8521  0119E6  6E17               	movwf	??___flmul^0,c
  8522  0119E8  0EFF               	movlw	255
  8523  0119EA  141D               	andwf	(___flmul@grs+1)^0,w,c
  8524  0119EC  6E18               	movwf	(??___flmul+1)^0,c
  8525  0119EE  0EFF               	movlw	255
  8526  0119F0  141E               	andwf	(___flmul@grs+2)^0,w,c
  8527  0119F2  6E19               	movwf	(??___flmul+2)^0,c
  8528  0119F4  0E7F               	movlw	127
  8529  0119F6  141F               	andwf	(___flmul@grs+3)^0,w,c
  8530  0119F8  6E1A               	movwf	(??___flmul+3)^0,c
  8531  0119FA  5017               	movf	??___flmul^0,w,c
  8532  0119FC  1018               	iorwf	(??___flmul+1)^0,w,c
  8533  0119FE  1019               	iorwf	(??___flmul+2)^0,w,c
  8534  011A00  101A               	iorwf	(??___flmul+3)^0,w,c
  8535  011A02  B4D8               	btfsc	status,2,c
  8536  011A04  EF06  F08D         	goto	u3901
  8537  011A08  EF08  F08D         	goto	u3900
  8538  011A0C                     u3901:
  8539  011A0C  EF0C  F08D         	goto	l1674
  8540  011A10                     u3900:
  8541  011A10                     l4713:
  8542  011A10  0E01               	movlw	1
  8543  011A12  6E20               	movwf	___flmul@aexp^0,c
  8544  011A14  EF15  F08D         	goto	l1673
  8545  011A18                     l1674:
  8546  011A18  A022               	btfss	___flmul@prod^0,0,c
  8547  011A1A  EF11  F08D         	goto	u3911
  8548  011A1E  EF13  F08D         	goto	u3910
  8549  011A22                     u3911:
  8550  011A22  EF15  F08D         	goto	l1673
  8551  011A26                     u3910:
  8552  011A26  EF08  F08D         	goto	l4713
  8553  011A2A                     l1673:
  8554  011A2A  5020               	movf	___flmul@aexp^0,w,c
  8555  011A2C  B4D8               	btfsc	status,2,c
  8556  011A2E  EF1B  F08D         	goto	u3921
  8557  011A32  EF1D  F08D         	goto	u3920
  8558  011A36                     u3921:
  8559  011A36  EF41  F08D         	goto	l4725
  8560  011A3A                     u3920:
  8561  011A3A  0E01               	movlw	1
  8562  011A3C  2622               	addwf	___flmul@prod^0,f,c
  8563  011A3E  0E00               	movlw	0
  8564  011A40  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8565  011A42  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8566  011A44  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8567  011A46  A025               	btfss	(___flmul@prod+3)^0,0,c
  8568  011A48  EF28  F08D         	goto	u3931
  8569  011A4C  EF2A  F08D         	goto	u3930
  8570  011A50                     u3931:
  8571  011A50  EF41  F08D         	goto	l4725
  8572  011A54                     u3930:
  8573  011A54  C022  F017         	movff	___flmul@prod,??___flmul
  8574  011A58  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8575  011A5C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8576  011A60  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8577  011A64  341A               	rlcf	(??___flmul+3)^0,w,c
  8578  011A66  321A               	rrcf	(??___flmul+3)^0,f,c
  8579  011A68  3219               	rrcf	(??___flmul+2)^0,f,c
  8580  011A6A  3218               	rrcf	(??___flmul+1)^0,f,c
  8581  011A6C  3217               	rrcf	??___flmul^0,f,c
  8582  011A6E  C017  F022         	movff	??___flmul,___flmul@prod
  8583  011A72  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8584  011A76  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8585  011A7A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8586  011A7E  4A26               	infsnz	___flmul@temp^0,f,c
  8587  011A80  2A27               	incf	(___flmul@temp+1)^0,f,c
  8588  011A82                     l4725:
  8589  011A82  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8590  011A84  EF4C  F08D         	goto	u3941
  8591  011A88  5027               	movf	(___flmul@temp+1)^0,w,c
  8592  011A8A  E108               	bnz	u3940
  8593  011A8C  2826               	incf	___flmul@temp^0,w,c
  8594  011A8E  A0D8               	btfss	status,0,c
  8595  011A90  EF4C  F08D         	goto	u3941
  8596  011A94  EF4E  F08D         	goto	u3940
  8597  011A98                     u3941:
  8598  011A98  EF58  F08D         	goto	l4729
  8599  011A9C                     u3940:
  8600  011A9C  0E00               	movlw	0
  8601  011A9E  6E22               	movwf	___flmul@prod^0,c
  8602  011AA0  0E00               	movlw	0
  8603  011AA2  6E23               	movwf	(___flmul@prod+1)^0,c
  8604  011AA4  0E80               	movlw	128
  8605  011AA6  6E24               	movwf	(___flmul@prod+2)^0,c
  8606  011AA8  0E7F               	movlw	127
  8607  011AAA  6E25               	movwf	(___flmul@prod+3)^0,c
  8608  011AAC  EF86  F08D         	goto	l4741
  8609  011AB0                     l4729:
  8610  011AB0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8611  011AB2  EF65  F08D         	goto	u3950
  8612  011AB6  5027               	movf	(___flmul@temp+1)^0,w,c
  8613  011AB8  E106               	bnz	u3951
  8614  011ABA  0426               	decf	___flmul@temp^0,w,c
  8615  011ABC  B0D8               	btfsc	status,0,c
  8616  011ABE  EF63  F08D         	goto	u3951
  8617  011AC2  EF65  F08D         	goto	u3950
  8618  011AC6                     u3951:
  8619  011AC6  EF71  F08D         	goto	l1681
  8620  011ACA                     u3950:
  8621  011ACA  0E00               	movlw	0
  8622  011ACC  6E22               	movwf	___flmul@prod^0,c
  8623  011ACE  0E00               	movlw	0
  8624  011AD0  6E23               	movwf	(___flmul@prod+1)^0,c
  8625  011AD2  0E00               	movlw	0
  8626  011AD4  6E24               	movwf	(___flmul@prod+2)^0,c
  8627  011AD6  0E00               	movlw	0
  8628  011AD8  6E25               	movwf	(___flmul@prod+3)^0,c
  8629  011ADA  0E00               	movlw	0
  8630  011ADC  6E1B               	movwf	___flmul@sign^0,c
  8631  011ADE  EF86  F08D         	goto	l4741
  8632  011AE2                     l1681:
  8633  011AE2  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8634  011AE6  0EFF               	movlw	255
  8635  011AE8  1622               	andwf	___flmul@prod^0,f,c
  8636  011AEA  0EFF               	movlw	255
  8637  011AEC  1623               	andwf	(___flmul@prod+1)^0,f,c
  8638  011AEE  0E7F               	movlw	127
  8639  011AF0  1624               	andwf	(___flmul@prod+2)^0,f,c
  8640  011AF2  0E00               	movlw	0
  8641  011AF4  1625               	andwf	(___flmul@prod+3)^0,f,c
  8642  011AF6  A021               	btfss	___flmul@bexp^0,0,c
  8643  011AF8  EF80  F08D         	goto	u3961
  8644  011AFC  EF82  F08D         	goto	u3960
  8645  011B00                     u3961:
  8646  011B00  EF83  F08D         	goto	l4739
  8647  011B04                     u3960:
  8648  011B04  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8649  011B06                     l4739:
  8650  011B06  90D8               	bcf	status,0,c
  8651  011B08  3021               	rrcf	___flmul@bexp^0,w,c
  8652  011B0A  6E25               	movwf	(___flmul@prod+3)^0,c
  8653  011B0C                     l4741:
  8654  011B0C  501B               	movf	___flmul@sign^0,w,c
  8655  011B0E  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8656  011B10  C022  F00F         	movff	___flmul@prod,?___flmul
  8657  011B14  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8658  011B18  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8659  011B1C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8660  011B20                     l1668:
  8661  011B20  0012               	return		;funcret
  8662  011B22                     __end_of___flmul:
  8663                           	callstack 0
  8664                           
  8665 ;; *************** function ___flge *****************
  8666 ;; Defined at:
  8667 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;  ff1             4   39[COMRAM] unsigned char 
  8670 ;;  ff2             4   43[COMRAM] unsigned char 
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;		None
  8673 ;; Return value:  Size  Location     Type
  8674 ;;		None               void
  8675 ;; Registers used:
  8676 ;;		wreg, status,2, status,0
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8682 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8685 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8686 ;;Total ram usage:       12 bytes
  8687 ;; Hardware stack levels used: 1
  8688 ;; Hardware stack levels required when called: 2
  8689 ;; This function calls:
  8690 ;;		Nothing
  8691 ;; This function is called by:
  8692 ;;		_delayedBrownOut
  8693 ;;		_fastChargingcaps
  8694 ;;		_efgtoa
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text28
  8699  013014                     __ptext28:
  8700                           	callstack 0
  8701  013014                     ___flge:
  8702                           	callstack 23
  8703  013014  0E00               	movlw	0
  8704  013016  1428               	andwf	___flge@ff1^0,w,c
  8705  013018  6E30               	movwf	??___flge^0,c
  8706  01301A  0E00               	movlw	0
  8707  01301C  1429               	andwf	(___flge@ff1+1)^0,w,c
  8708  01301E  6E31               	movwf	(??___flge+1)^0,c
  8709  013020  0E80               	movlw	128
  8710  013022  142A               	andwf	(___flge@ff1+2)^0,w,c
  8711  013024  6E32               	movwf	(??___flge+2)^0,c
  8712  013026  0E7F               	movlw	127
  8713  013028  142B               	andwf	(___flge@ff1+3)^0,w,c
  8714  01302A  6E33               	movwf	(??___flge+3)^0,c
  8715  01302C  5030               	movf	??___flge^0,w,c
  8716  01302E  1031               	iorwf	(??___flge+1)^0,w,c
  8717  013030  1032               	iorwf	(??___flge+2)^0,w,c
  8718  013032  1033               	iorwf	(??___flge+3)^0,w,c
  8719  013034  A4D8               	btfss	status,2,c
  8720  013036  EF1F  F098         	goto	u4121
  8721  01303A  EF21  F098         	goto	u4120
  8722  01303E                     u4121:
  8723  01303E  EF29  F098         	goto	l4853
  8724  013042                     u4120:
  8725  013042  0E00               	movlw	0
  8726  013044  6E28               	movwf	___flge@ff1^0,c
  8727  013046  0E00               	movlw	0
  8728  013048  6E29               	movwf	(___flge@ff1+1)^0,c
  8729  01304A  0E00               	movlw	0
  8730  01304C  6E2A               	movwf	(___flge@ff1+2)^0,c
  8731  01304E  0E00               	movlw	0
  8732  013050  6E2B               	movwf	(___flge@ff1+3)^0,c
  8733  013052                     l4853:
  8734  013052  0E00               	movlw	0
  8735  013054  142C               	andwf	___flge@ff2^0,w,c
  8736  013056  6E30               	movwf	??___flge^0,c
  8737  013058  0E00               	movlw	0
  8738  01305A  142D               	andwf	(___flge@ff2+1)^0,w,c
  8739  01305C  6E31               	movwf	(??___flge+1)^0,c
  8740  01305E  0E80               	movlw	128
  8741  013060  142E               	andwf	(___flge@ff2+2)^0,w,c
  8742  013062  6E32               	movwf	(??___flge+2)^0,c
  8743  013064  0E7F               	movlw	127
  8744  013066  142F               	andwf	(___flge@ff2+3)^0,w,c
  8745  013068  6E33               	movwf	(??___flge+3)^0,c
  8746  01306A  5030               	movf	??___flge^0,w,c
  8747  01306C  1031               	iorwf	(??___flge+1)^0,w,c
  8748  01306E  1032               	iorwf	(??___flge+2)^0,w,c
  8749  013070  1033               	iorwf	(??___flge+3)^0,w,c
  8750  013072  A4D8               	btfss	status,2,c
  8751  013074  EF3E  F098         	goto	u4131
  8752  013078  EF40  F098         	goto	u4130
  8753  01307C                     u4131:
  8754  01307C  EF48  F098         	goto	l4857
  8755  013080                     u4130:
  8756  013080  0E00               	movlw	0
  8757  013082  6E2C               	movwf	___flge@ff2^0,c
  8758  013084  0E00               	movlw	0
  8759  013086  6E2D               	movwf	(___flge@ff2+1)^0,c
  8760  013088  0E00               	movlw	0
  8761  01308A  6E2E               	movwf	(___flge@ff2+2)^0,c
  8762  01308C  0E00               	movlw	0
  8763  01308E  6E2F               	movwf	(___flge@ff2+3)^0,c
  8764  013090                     l4857:
  8765  013090  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  8766  013092  EF4D  F098         	goto	u4141
  8767  013096  EF4F  F098         	goto	u4140
  8768  01309A                     u4141:
  8769  01309A  EF58  F098         	goto	l4861
  8770  01309E                     u4140:
  8771  01309E  6C28               	negf	___flge@ff1^0,c
  8772  0130A0  1E29               	comf	(___flge@ff1+1)^0,f,c
  8773  0130A2  B0D8               	btfsc	status,0,c
  8774  0130A4  2A29               	incf	(___flge@ff1+1)^0,f,c
  8775  0130A6  1E2A               	comf	(___flge@ff1+2)^0,f,c
  8776  0130A8  B0D8               	btfsc	status,0,c
  8777  0130AA  2A2A               	incf	(___flge@ff1+2)^0,f,c
  8778  0130AC  0E80               	movlw	128
  8779  0130AE  562B               	subfwb	(___flge@ff1+3)^0,f,c
  8780  0130B0                     l4861:
  8781  0130B0  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  8782  0130B2  EF5D  F098         	goto	u4151
  8783  0130B6  EF5F  F098         	goto	u4150
  8784  0130BA                     u4151:
  8785  0130BA  EF68  F098         	goto	l1315
  8786  0130BE                     u4150:
  8787  0130BE  6C2C               	negf	___flge@ff2^0,c
  8788  0130C0  1E2D               	comf	(___flge@ff2+1)^0,f,c
  8789  0130C2  B0D8               	btfsc	status,0,c
  8790  0130C4  2A2D               	incf	(___flge@ff2+1)^0,f,c
  8791  0130C6  1E2E               	comf	(___flge@ff2+2)^0,f,c
  8792  0130C8  B0D8               	btfsc	status,0,c
  8793  0130CA  2A2E               	incf	(___flge@ff2+2)^0,f,c
  8794  0130CC  0E80               	movlw	128
  8795  0130CE  562F               	subfwb	(___flge@ff2+3)^0,f,c
  8796  0130D0                     l1315:
  8797  0130D0  0E00               	movlw	0
  8798  0130D2  1A28               	xorwf	___flge@ff1^0,f,c
  8799  0130D4  0E00               	movlw	0
  8800  0130D6  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  8801  0130D8  0E00               	movlw	0
  8802  0130DA  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  8803  0130DC  0E80               	movlw	128
  8804  0130DE  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  8805  0130E0  0E00               	movlw	0
  8806  0130E2  1A2C               	xorwf	___flge@ff2^0,f,c
  8807  0130E4  0E00               	movlw	0
  8808  0130E6  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  8809  0130E8  0E00               	movlw	0
  8810  0130EA  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  8811  0130EC  0E80               	movlw	128
  8812  0130EE  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  8813  0130F0  502C               	movf	___flge@ff2^0,w,c
  8814  0130F2  5C28               	subwf	___flge@ff1^0,w,c
  8815  0130F4  502D               	movf	(___flge@ff2+1)^0,w,c
  8816  0130F6  5829               	subwfb	(___flge@ff1+1)^0,w,c
  8817  0130F8  502E               	movf	(___flge@ff2+2)^0,w,c
  8818  0130FA  582A               	subwfb	(___flge@ff1+2)^0,w,c
  8819  0130FC  502F               	movf	(___flge@ff2+3)^0,w,c
  8820  0130FE  582B               	subwfb	(___flge@ff1+3)^0,w,c
  8821  013100  B0D8               	btfsc	status,0,c
  8822  013102  EF85  F098         	goto	u4161
  8823  013106  EF87  F098         	goto	u4160
  8824  01310A                     u4161:
  8825  01310A  EF8A  F098         	goto	l4867
  8826  01310E                     u4160:
  8827  01310E  90D8               	bcf	status,0,c
  8828  013110  EF8B  F098         	goto	l1320
  8829  013114                     l4867:
  8830  013114  80D8               	bsf	status,0,c
  8831  013116                     l1320:
  8832  013116  0012               	return		;funcret
  8833  013118                     __end_of___flge:
  8834                           	callstack 0
  8835                           
  8836 ;; *************** function ___fleq *****************
  8837 ;; Defined at:
  8838 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  ff1             4    0[COMRAM] unsigned char 
  8841 ;;  ff2             4    4[COMRAM] unsigned char 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;		None               void
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8853 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;Total ram usage:       12 bytes
  8858 ;; Hardware stack levels used: 1
  8859 ;; Hardware stack levels required when called: 2
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_efgtoa
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text29
  8868  0135F4                     __ptext29:
  8869                           	callstack 0
  8870  0135F4                     ___fleq:
  8871                           	callstack 23
  8872  0135F4  0E00               	movlw	0
  8873  0135F6  1401               	andwf	___fleq@ff1^0,w,c
  8874  0135F8  6E09               	movwf	??___fleq^0,c
  8875  0135FA  0E00               	movlw	0
  8876  0135FC  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8877  0135FE  6E0A               	movwf	(??___fleq+1)^0,c
  8878  013600  0E80               	movlw	128
  8879  013602  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8880  013604  6E0B               	movwf	(??___fleq+2)^0,c
  8881  013606  0E7F               	movlw	127
  8882  013608  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8883  01360A  6E0C               	movwf	(??___fleq+3)^0,c
  8884  01360C  5009               	movf	??___fleq^0,w,c
  8885  01360E  100A               	iorwf	(??___fleq+1)^0,w,c
  8886  013610  100B               	iorwf	(??___fleq+2)^0,w,c
  8887  013612  100C               	iorwf	(??___fleq+3)^0,w,c
  8888  013614  A4D8               	btfss	status,2,c
  8889  013616  EF0F  F09B         	goto	u4091
  8890  01361A  EF11  F09B         	goto	u4090
  8891  01361E                     u4091:
  8892  01361E  EF19  F09B         	goto	l4837
  8893  013622                     u4090:
  8894  013622  0E00               	movlw	0
  8895  013624  6E01               	movwf	___fleq@ff1^0,c
  8896  013626  0E00               	movlw	0
  8897  013628  6E02               	movwf	(___fleq@ff1+1)^0,c
  8898  01362A  0E00               	movlw	0
  8899  01362C  6E03               	movwf	(___fleq@ff1+2)^0,c
  8900  01362E  0E00               	movlw	0
  8901  013630  6E04               	movwf	(___fleq@ff1+3)^0,c
  8902  013632                     l4837:
  8903  013632  0E00               	movlw	0
  8904  013634  1405               	andwf	___fleq@ff2^0,w,c
  8905  013636  6E09               	movwf	??___fleq^0,c
  8906  013638  0E00               	movlw	0
  8907  01363A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8908  01363C  6E0A               	movwf	(??___fleq+1)^0,c
  8909  01363E  0E80               	movlw	128
  8910  013640  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8911  013642  6E0B               	movwf	(??___fleq+2)^0,c
  8912  013644  0E7F               	movlw	127
  8913  013646  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8914  013648  6E0C               	movwf	(??___fleq+3)^0,c
  8915  01364A  5009               	movf	??___fleq^0,w,c
  8916  01364C  100A               	iorwf	(??___fleq+1)^0,w,c
  8917  01364E  100B               	iorwf	(??___fleq+2)^0,w,c
  8918  013650  100C               	iorwf	(??___fleq+3)^0,w,c
  8919  013652  A4D8               	btfss	status,2,c
  8920  013654  EF2E  F09B         	goto	u4101
  8921  013658  EF30  F09B         	goto	u4100
  8922  01365C                     u4101:
  8923  01365C  EF38  F09B         	goto	l4841
  8924  013660                     u4100:
  8925  013660  0E00               	movlw	0
  8926  013662  6E05               	movwf	___fleq@ff2^0,c
  8927  013664  0E00               	movlw	0
  8928  013666  6E06               	movwf	(___fleq@ff2+1)^0,c
  8929  013668  0E00               	movlw	0
  8930  01366A  6E07               	movwf	(___fleq@ff2+2)^0,c
  8931  01366C  0E00               	movlw	0
  8932  01366E  6E08               	movwf	(___fleq@ff2+3)^0,c
  8933  013670                     l4841:
  8934  013670  5005               	movf	___fleq@ff2^0,w,c
  8935  013672  1801               	xorwf	___fleq@ff1^0,w,c
  8936  013674  E10F               	bnz	u4110
  8937  013676  5006               	movf	(___fleq@ff2+1)^0,w,c
  8938  013678  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8939  01367A  E10C               	bnz	u4110
  8940  01367C  5007               	movf	(___fleq@ff2+2)^0,w,c
  8941  01367E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8942  013680  E109               	bnz	u4110
  8943  013682  5008               	movf	(___fleq@ff2+3)^0,w,c
  8944  013684  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8945  013686  B4D8               	btfsc	status,2,c
  8946  013688  EF48  F09B         	goto	u4111
  8947  01368C  EF4A  F09B         	goto	u4110
  8948  013690                     u4111:
  8949  013690  EF4D  F09B         	goto	l4845
  8950  013694                     u4110:
  8951  013694  90D8               	bcf	status,0,c
  8952  013696  EF4E  F09B         	goto	l1309
  8953  01369A                     l4845:
  8954  01369A  80D8               	bsf	status,0,c
  8955  01369C                     l1309:
  8956  01369C  0012               	return		;funcret
  8957  01369E                     __end_of___fleq:
  8958                           	callstack 0
  8959                           
  8960 ;; *************** function ___fldiv *****************
  8961 ;; Defined at:
  8962 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;  b               4    0[COMRAM] unsigned char 
  8965 ;;  a               4    4[COMRAM] unsigned char 
  8966 ;; Auto vars:     Size  Location     Type
  8967 ;;  grs             4   19[COMRAM] unsigned long 
  8968 ;;  rem             4   12[COMRAM] unsigned long 
  8969 ;;  new_exp         2   17[COMRAM] short 
  8970 ;;  aexp            1   24[COMRAM] unsigned char 
  8971 ;;  bexp            1   23[COMRAM] unsigned char 
  8972 ;;  sign            1   16[COMRAM] unsigned char 
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  4    0[COMRAM] unsigned char 
  8975 ;; Registers used:
  8976 ;;		wreg, status,2, status,0
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8982 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8983 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8984 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8985 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8986 ;;Total ram usage:       25 bytes
  8987 ;; Hardware stack levels used: 1
  8988 ;; Hardware stack levels required when called: 2
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_efgtoa
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text30
  8997  011B22                     __ptext30:
  8998                           	callstack 0
  8999  011B22                     ___fldiv:
  9000                           	callstack 23
  9001  011B22  5004               	movf	(___fldiv@b+3)^0,w,c
  9002  011B24  0B80               	andlw	128
  9003  011B26  6E11               	movwf	___fldiv@sign^0,c
  9004  011B28  5004               	movf	(___fldiv@b+3)^0,w,c
  9005  011B2A  2404               	addwf	(___fldiv@b+3)^0,w,c
  9006  011B2C  6E18               	movwf	___fldiv@bexp^0,c
  9007  011B2E  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9008  011B30  EF9C  F08D         	goto	u3551
  9009  011B34  EF9E  F08D         	goto	u3550
  9010  011B38                     u3551:
  9011  011B38  EF9F  F08D         	goto	l4485
  9012  011B3C                     u3550:
  9013  011B3C  8018               	bsf	___fldiv@bexp^0,0,c
  9014  011B3E                     l4485:
  9015  011B3E  5018               	movf	___fldiv@bexp^0,w,c
  9016  011B40  B4D8               	btfsc	status,2,c
  9017  011B42  EFA5  F08D         	goto	u3561
  9018  011B46  EFA7  F08D         	goto	u3560
  9019  011B4A                     u3561:
  9020  011B4A  EFBC  F08D         	goto	l4495
  9021  011B4E                     u3560:
  9022  011B4E  2818               	incf	___fldiv@bexp^0,w,c
  9023  011B50  A4D8               	btfss	status,2,c
  9024  011B52  EFAD  F08D         	goto	u3571
  9025  011B56  EFAF  F08D         	goto	u3570
  9026  011B5A                     u3571:
  9027  011B5A  EFB7  F08D         	goto	l4491
  9028  011B5E                     u3570:
  9029  011B5E  0E00               	movlw	0
  9030  011B60  6E01               	movwf	___fldiv@b^0,c
  9031  011B62  0E00               	movlw	0
  9032  011B64  6E02               	movwf	(___fldiv@b+1)^0,c
  9033  011B66  0E00               	movlw	0
  9034  011B68  6E03               	movwf	(___fldiv@b+2)^0,c
  9035  011B6A  0E00               	movlw	0
  9036  011B6C  6E04               	movwf	(___fldiv@b+3)^0,c
  9037  011B6E                     l4491:
  9038  011B6E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9039  011B70  0E00               	movlw	0
  9040  011B72  6E04               	movwf	(___fldiv@b+3)^0,c
  9041  011B74  EFC4  F08D         	goto	l4497
  9042  011B78                     l4495:
  9043  011B78  0E00               	movlw	0
  9044  011B7A  6E01               	movwf	___fldiv@b^0,c
  9045  011B7C  0E00               	movlw	0
  9046  011B7E  6E02               	movwf	(___fldiv@b+1)^0,c
  9047  011B80  0E00               	movlw	0
  9048  011B82  6E03               	movwf	(___fldiv@b+2)^0,c
  9049  011B84  0E00               	movlw	0
  9050  011B86  6E04               	movwf	(___fldiv@b+3)^0,c
  9051  011B88                     l4497:
  9052  011B88  5008               	movf	(___fldiv@a+3)^0,w,c
  9053  011B8A  0B80               	andlw	128
  9054  011B8C  1A11               	xorwf	___fldiv@sign^0,f,c
  9055  011B8E  5008               	movf	(___fldiv@a+3)^0,w,c
  9056  011B90  2408               	addwf	(___fldiv@a+3)^0,w,c
  9057  011B92  6E19               	movwf	___fldiv@aexp^0,c
  9058  011B94  AE07               	btfss	(___fldiv@a+2)^0,7,c
  9059  011B96  EFCF  F08D         	goto	u3581
  9060  011B9A  EFD1  F08D         	goto	u3580
  9061  011B9E                     u3581:
  9062  011B9E  EFD2  F08D         	goto	l4505
  9063  011BA2                     u3580:
  9064  011BA2  8019               	bsf	___fldiv@aexp^0,0,c
  9065  011BA4                     l4505:
  9066  011BA4  5019               	movf	___fldiv@aexp^0,w,c
  9067  011BA6  B4D8               	btfsc	status,2,c
  9068  011BA8  EFD8  F08D         	goto	u3591
  9069  011BAC  EFDA  F08D         	goto	u3590
  9070  011BB0                     u3591:
  9071  011BB0  EFEF  F08D         	goto	l4515
  9072  011BB4                     u3590:
  9073  011BB4  2819               	incf	___fldiv@aexp^0,w,c
  9074  011BB6  A4D8               	btfss	status,2,c
  9075  011BB8  EFE0  F08D         	goto	u3601
  9076  011BBC  EFE2  F08D         	goto	u3600
  9077  011BC0                     u3601:
  9078  011BC0  EFEA  F08D         	goto	l4511
  9079  011BC4                     u3600:
  9080  011BC4  0E00               	movlw	0
  9081  011BC6  6E05               	movwf	___fldiv@a^0,c
  9082  011BC8  0E00               	movlw	0
  9083  011BCA  6E06               	movwf	(___fldiv@a+1)^0,c
  9084  011BCC  0E00               	movlw	0
  9085  011BCE  6E07               	movwf	(___fldiv@a+2)^0,c
  9086  011BD0  0E00               	movlw	0
  9087  011BD2  6E08               	movwf	(___fldiv@a+3)^0,c
  9088  011BD4                     l4511:
  9089  011BD4  8E07               	bsf	(___fldiv@a+2)^0,7,c
  9090  011BD6  0E00               	movlw	0
  9091  011BD8  6E08               	movwf	(___fldiv@a+3)^0,c
  9092  011BDA  EFF7  F08D         	goto	l4517
  9093  011BDE                     l4515:
  9094  011BDE  0E00               	movlw	0
  9095  011BE0  6E05               	movwf	___fldiv@a^0,c
  9096  011BE2  0E00               	movlw	0
  9097  011BE4  6E06               	movwf	(___fldiv@a+1)^0,c
  9098  011BE6  0E00               	movlw	0
  9099  011BE8  6E07               	movwf	(___fldiv@a+2)^0,c
  9100  011BEA  0E00               	movlw	0
  9101  011BEC  6E08               	movwf	(___fldiv@a+3)^0,c
  9102  011BEE                     l4517:
  9103  011BEE  5005               	movf	___fldiv@a^0,w,c
  9104  011BF0  1006               	iorwf	(___fldiv@a+1)^0,w,c
  9105  011BF2  1007               	iorwf	(___fldiv@a+2)^0,w,c
  9106  011BF4  1008               	iorwf	(___fldiv@a+3)^0,w,c
  9107  011BF6  A4D8               	btfss	status,2,c
  9108  011BF8  EF00  F08E         	goto	u3611
  9109  011BFC  EF02  F08E         	goto	u3610
  9110  011C00                     u3611:
  9111  011C00  EF1A  F08E         	goto	l4529
  9112  011C04                     u3610:
  9113  011C04  0E00               	movlw	0
  9114  011C06  6E01               	movwf	___fldiv@b^0,c
  9115  011C08  0E00               	movlw	0
  9116  011C0A  6E02               	movwf	(___fldiv@b+1)^0,c
  9117  011C0C  0E00               	movlw	0
  9118  011C0E  6E03               	movwf	(___fldiv@b+2)^0,c
  9119  011C10  0E00               	movlw	0
  9120  011C12  6E04               	movwf	(___fldiv@b+3)^0,c
  9121  011C14  0E80               	movlw	128
  9122  011C16  1203               	iorwf	(___fldiv@b+2)^0,f,c
  9123  011C18  0E7F               	movlw	127
  9124  011C1A  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9125  011C1C                     l4523:
  9126  011C1C  5011               	movf	___fldiv@sign^0,w,c
  9127  011C1E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9128  011C20  C001  F001         	movff	___fldiv@b,?___fldiv
  9129  011C24  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  9130  011C28  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  9131  011C2C  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  9132  011C30  EF5D  F08F         	goto	l1632
  9133  011C34                     l4529:
  9134  011C34  5018               	movf	___fldiv@bexp^0,w,c
  9135  011C36  A4D8               	btfss	status,2,c
  9136  011C38  EF20  F08E         	goto	u3621
  9137  011C3C  EF22  F08E         	goto	u3620
  9138  011C40                     u3621:
  9139  011C40  EF2C  F08E         	goto	l4537
  9140  011C44                     u3620:
  9141  011C44  0E00               	movlw	0
  9142  011C46  6E01               	movwf	?___fldiv^0,c
  9143  011C48  0E00               	movlw	0
  9144  011C4A  6E02               	movwf	(?___fldiv+1)^0,c
  9145  011C4C  0E00               	movlw	0
  9146  011C4E  6E03               	movwf	(?___fldiv+2)^0,c
  9147  011C50  0E00               	movlw	0
  9148  011C52  6E04               	movwf	(?___fldiv+3)^0,c
  9149  011C54  EF5D  F08F         	goto	l1632
  9150  011C58                     l4537:
  9151  011C58  5019               	movf	___fldiv@aexp^0,w,c
  9152  011C5A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  9153  011C5E  6A0A               	clrf	(??___fldiv+1)^0,c
  9154  011C60  5E09               	subwf	??___fldiv^0,f,c
  9155  011C62  0E00               	movlw	0
  9156  011C64  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  9157  011C66  0E7F               	movlw	127
  9158  011C68  2409               	addwf	??___fldiv^0,w,c
  9159  011C6A  6E12               	movwf	___fldiv@new_exp^0,c
  9160  011C6C  0E00               	movlw	0
  9161  011C6E  200A               	addwfc	(??___fldiv+1)^0,w,c
  9162  011C70  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9163  011C72  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  9164  011C76  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  9165  011C7A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  9166  011C7E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  9167  011C82  0E00               	movlw	0
  9168  011C84  6E01               	movwf	___fldiv@b^0,c
  9169  011C86  0E00               	movlw	0
  9170  011C88  6E02               	movwf	(___fldiv@b+1)^0,c
  9171  011C8A  0E00               	movlw	0
  9172  011C8C  6E03               	movwf	(___fldiv@b+2)^0,c
  9173  011C8E  0E00               	movlw	0
  9174  011C90  6E04               	movwf	(___fldiv@b+3)^0,c
  9175  011C92  0E00               	movlw	0
  9176  011C94  6E14               	movwf	___fldiv@grs^0,c
  9177  011C96  0E00               	movlw	0
  9178  011C98  6E15               	movwf	(___fldiv@grs+1)^0,c
  9179  011C9A  0E00               	movlw	0
  9180  011C9C  6E16               	movwf	(___fldiv@grs+2)^0,c
  9181  011C9E  0E00               	movlw	0
  9182  011CA0  6E17               	movwf	(___fldiv@grs+3)^0,c
  9183  011CA2  0E00               	movlw	0
  9184  011CA4  6E19               	movwf	___fldiv@aexp^0,c
  9185  011CA6  EF8D  F08E         	goto	l1634
  9186  011CAA                     l4547:
  9187  011CAA  5019               	movf	___fldiv@aexp^0,w,c
  9188  011CAC  B4D8               	btfsc	status,2,c
  9189  011CAE  EF5B  F08E         	goto	u3631
  9190  011CB2  EF5D  F08E         	goto	u3630
  9191  011CB6                     u3631:
  9192  011CB6  EF74  F08E         	goto	l4555
  9193  011CBA                     u3630:
  9194  011CBA  90D8               	bcf	status,0,c
  9195  011CBC  360D               	rlcf	___fldiv@rem^0,f,c
  9196  011CBE  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  9197  011CC0  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  9198  011CC2  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  9199  011CC4  90D8               	bcf	status,0,c
  9200  011CC6  3601               	rlcf	___fldiv@b^0,f,c
  9201  011CC8  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9202  011CCA  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9203  011CCC  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9204  011CCE  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9205  011CD0  EF6C  F08E         	goto	u3641
  9206  011CD4  EF6E  F08E         	goto	u3640
  9207  011CD8                     u3641:
  9208  011CD8  EF6F  F08E         	goto	l1637
  9209  011CDC                     u3640:
  9210  011CDC  8001               	bsf	___fldiv@b^0,0,c
  9211  011CDE                     l1637:
  9212  011CDE  90D8               	bcf	status,0,c
  9213  011CE0  3614               	rlcf	___fldiv@grs^0,f,c
  9214  011CE2  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9215  011CE4  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9216  011CE6  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9217  011CE8                     l4555:
  9218  011CE8  5005               	movf	___fldiv@a^0,w,c
  9219  011CEA  5C0D               	subwf	___fldiv@rem^0,w,c
  9220  011CEC  5006               	movf	(___fldiv@a+1)^0,w,c
  9221  011CEE  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  9222  011CF0  5007               	movf	(___fldiv@a+2)^0,w,c
  9223  011CF2  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  9224  011CF4  5008               	movf	(___fldiv@a+3)^0,w,c
  9225  011CF6  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  9226  011CF8  A0D8               	btfss	status,0,c
  9227  011CFA  EF81  F08E         	goto	u3651
  9228  011CFE  EF83  F08E         	goto	u3650
  9229  011D02                     u3651:
  9230  011D02  EF8C  F08E         	goto	l4561
  9231  011D06                     u3650:
  9232  011D06  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  9233  011D08  5005               	movf	___fldiv@a^0,w,c
  9234  011D0A  5E0D               	subwf	___fldiv@rem^0,f,c
  9235  011D0C  5006               	movf	(___fldiv@a+1)^0,w,c
  9236  011D0E  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  9237  011D10  5007               	movf	(___fldiv@a+2)^0,w,c
  9238  011D12  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  9239  011D14  5008               	movf	(___fldiv@a+3)^0,w,c
  9240  011D16  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  9241  011D18                     l4561:
  9242  011D18  2A19               	incf	___fldiv@aexp^0,f,c
  9243  011D1A                     l1634:
  9244  011D1A  0E19               	movlw	25
  9245  011D1C  6419               	cpfsgt	___fldiv@aexp^0,c
  9246  011D1E  EF93  F08E         	goto	u3661
  9247  011D22  EF95  F08E         	goto	u3660
  9248  011D26                     u3661:
  9249  011D26  EF55  F08E         	goto	l4547
  9250  011D2A                     u3660:
  9251  011D2A  500D               	movf	___fldiv@rem^0,w,c
  9252  011D2C  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  9253  011D2E  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  9254  011D30  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  9255  011D32  B4D8               	btfsc	status,2,c
  9256  011D34  EF9E  F08E         	goto	u3671
  9257  011D38  EFA0  F08E         	goto	u3670
  9258  011D3C                     u3671:
  9259  011D3C  EFB8  F08E         	goto	l4573
  9260  011D40                     u3670:
  9261  011D40  8014               	bsf	___fldiv@grs^0,0,c
  9262  011D42  EFB8  F08E         	goto	l4573
  9263  011D46                     l4567:
  9264  011D46  90D8               	bcf	status,0,c
  9265  011D48  3601               	rlcf	___fldiv@b^0,f,c
  9266  011D4A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9267  011D4C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9268  011D4E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9269  011D50  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9270  011D52  EFAD  F08E         	goto	u3681
  9271  011D56  EFAF  F08E         	goto	u3680
  9272  011D5A                     u3681:
  9273  011D5A  EFB0  F08E         	goto	l1643
  9274  011D5E                     u3680:
  9275  011D5E  8001               	bsf	___fldiv@b^0,0,c
  9276  011D60                     l1643:
  9277  011D60  90D8               	bcf	status,0,c
  9278  011D62  3614               	rlcf	___fldiv@grs^0,f,c
  9279  011D64  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9280  011D66  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9281  011D68  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9282  011D6A  0612               	decf	___fldiv@new_exp^0,f,c
  9283  011D6C  A0D8               	btfss	status,0,c
  9284  011D6E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  9285  011D70                     l4573:
  9286  011D70  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9287  011D72  EFBD  F08E         	goto	u3691
  9288  011D76  EFBF  F08E         	goto	u3690
  9289  011D7A                     u3691:
  9290  011D7A  EFA3  F08E         	goto	l4567
  9291  011D7E                     u3690:
  9292  011D7E  0E00               	movlw	0
  9293  011D80  6E19               	movwf	___fldiv@aexp^0,c
  9294  011D82  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9295  011D84  EFC6  F08E         	goto	u3701
  9296  011D88  EFC8  F08E         	goto	u3700
  9297  011D8C                     u3701:
  9298  011D8C  EFEC  F08E         	goto	l1645
  9299  011D90                     u3700:
  9300  011D90  0EFF               	movlw	255
  9301  011D92  1414               	andwf	___fldiv@grs^0,w,c
  9302  011D94  6E09               	movwf	??___fldiv^0,c
  9303  011D96  0EFF               	movlw	255
  9304  011D98  1415               	andwf	(___fldiv@grs+1)^0,w,c
  9305  011D9A  6E0A               	movwf	(??___fldiv+1)^0,c
  9306  011D9C  0EFF               	movlw	255
  9307  011D9E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  9308  011DA0  6E0B               	movwf	(??___fldiv+2)^0,c
  9309  011DA2  0E7F               	movlw	127
  9310  011DA4  1417               	andwf	(___fldiv@grs+3)^0,w,c
  9311  011DA6  6E0C               	movwf	(??___fldiv+3)^0,c
  9312  011DA8  5009               	movf	??___fldiv^0,w,c
  9313  011DAA  100A               	iorwf	(??___fldiv+1)^0,w,c
  9314  011DAC  100B               	iorwf	(??___fldiv+2)^0,w,c
  9315  011DAE  100C               	iorwf	(??___fldiv+3)^0,w,c
  9316  011DB0  B4D8               	btfsc	status,2,c
  9317  011DB2  EFDD  F08E         	goto	u3711
  9318  011DB6  EFDF  F08E         	goto	u3710
  9319  011DBA                     u3711:
  9320  011DBA  EFE3  F08E         	goto	l1646
  9321  011DBE                     u3710:
  9322  011DBE                     l4581:
  9323  011DBE  0E01               	movlw	1
  9324  011DC0  6E19               	movwf	___fldiv@aexp^0,c
  9325  011DC2  EFEC  F08E         	goto	l1645
  9326  011DC6                     l1646:
  9327  011DC6  A001               	btfss	___fldiv@b^0,0,c
  9328  011DC8  EFE8  F08E         	goto	u3721
  9329  011DCC  EFEA  F08E         	goto	u3720
  9330  011DD0                     u3721:
  9331  011DD0  EFEC  F08E         	goto	l1645
  9332  011DD4                     u3720:
  9333  011DD4  EFDF  F08E         	goto	l4581
  9334  011DD8                     l1645:
  9335  011DD8  5019               	movf	___fldiv@aexp^0,w,c
  9336  011DDA  B4D8               	btfsc	status,2,c
  9337  011DDC  EFF2  F08E         	goto	u3731
  9338  011DE0  EFF4  F08E         	goto	u3730
  9339  011DE4                     u3731:
  9340  011DE4  EF18  F08F         	goto	l4593
  9341  011DE8                     u3730:
  9342  011DE8  0E01               	movlw	1
  9343  011DEA  2601               	addwf	___fldiv@b^0,f,c
  9344  011DEC  0E00               	movlw	0
  9345  011DEE  2202               	addwfc	(___fldiv@b+1)^0,f,c
  9346  011DF0  2203               	addwfc	(___fldiv@b+2)^0,f,c
  9347  011DF2  2204               	addwfc	(___fldiv@b+3)^0,f,c
  9348  011DF4  A004               	btfss	(___fldiv@b+3)^0,0,c
  9349  011DF6  EFFF  F08E         	goto	u3741
  9350  011DFA  EF01  F08F         	goto	u3740
  9351  011DFE                     u3741:
  9352  011DFE  EF18  F08F         	goto	l4593
  9353  011E02                     u3740:
  9354  011E02  C001  F009         	movff	___fldiv@b,??___fldiv
  9355  011E06  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  9356  011E0A  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  9357  011E0E  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  9358  011E12  340C               	rlcf	(??___fldiv+3)^0,w,c
  9359  011E14  320C               	rrcf	(??___fldiv+3)^0,f,c
  9360  011E16  320B               	rrcf	(??___fldiv+2)^0,f,c
  9361  011E18  320A               	rrcf	(??___fldiv+1)^0,f,c
  9362  011E1A  3209               	rrcf	??___fldiv^0,f,c
  9363  011E1C  C009  F001         	movff	??___fldiv,___fldiv@b
  9364  011E20  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  9365  011E24  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  9366  011E28  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  9367  011E2C  4A12               	infsnz	___fldiv@new_exp^0,f,c
  9368  011E2E  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  9369  011E30                     l4593:
  9370  011E30  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9371  011E32  EF23  F08F         	goto	u3751
  9372  011E36  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9373  011E38  E108               	bnz	u3750
  9374  011E3A  2812               	incf	___fldiv@new_exp^0,w,c
  9375  011E3C  A0D8               	btfss	status,0,c
  9376  011E3E  EF23  F08F         	goto	u3751
  9377  011E42  EF25  F08F         	goto	u3750
  9378  011E46                     u3751:
  9379  011E46  EF30  F08F         	goto	l4597
  9380  011E4A                     u3750:
  9381  011E4A  0E00               	movlw	0
  9382  011E4C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9383  011E4E  6812               	setf	___fldiv@new_exp^0,c
  9384  011E50  0E00               	movlw	0
  9385  011E52  6E01               	movwf	___fldiv@b^0,c
  9386  011E54  0E00               	movlw	0
  9387  011E56  6E02               	movwf	(___fldiv@b+1)^0,c
  9388  011E58  0E00               	movlw	0
  9389  011E5A  6E03               	movwf	(___fldiv@b+2)^0,c
  9390  011E5C  0E00               	movlw	0
  9391  011E5E  6E04               	movwf	(___fldiv@b+3)^0,c
  9392  011E60                     l4597:
  9393  011E60  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9394  011E62  EF3D  F08F         	goto	u3760
  9395  011E66  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9396  011E68  E106               	bnz	u3761
  9397  011E6A  0412               	decf	___fldiv@new_exp^0,w,c
  9398  011E6C  B0D8               	btfsc	status,0,c
  9399  011E6E  EF3B  F08F         	goto	u3761
  9400  011E72  EF3D  F08F         	goto	u3760
  9401  011E76                     u3761:
  9402  011E76  EF4B  F08F         	goto	l4601
  9403  011E7A                     u3760:
  9404  011E7A  0E00               	movlw	0
  9405  011E7C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9406  011E7E  0E00               	movlw	0
  9407  011E80  6E12               	movwf	___fldiv@new_exp^0,c
  9408  011E82  0E00               	movlw	0
  9409  011E84  6E01               	movwf	___fldiv@b^0,c
  9410  011E86  0E00               	movlw	0
  9411  011E88  6E02               	movwf	(___fldiv@b+1)^0,c
  9412  011E8A  0E00               	movlw	0
  9413  011E8C  6E03               	movwf	(___fldiv@b+2)^0,c
  9414  011E8E  0E00               	movlw	0
  9415  011E90  6E04               	movwf	(___fldiv@b+3)^0,c
  9416  011E92  0E00               	movlw	0
  9417  011E94  6E11               	movwf	___fldiv@sign^0,c
  9418  011E96                     l4601:
  9419  011E96  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  9420  011E9A  A018               	btfss	___fldiv@bexp^0,0,c
  9421  011E9C  EF52  F08F         	goto	u3771
  9422  011EA0  EF54  F08F         	goto	u3770
  9423  011EA4                     u3771:
  9424  011EA4  EF57  F08F         	goto	l4607
  9425  011EA8                     u3770:
  9426  011EA8  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9427  011EAA  EF58  F08F         	goto	l4609
  9428  011EAE                     l4607:
  9429  011EAE  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9430  011EB0                     l4609:
  9431  011EB0  90D8               	bcf	status,0,c
  9432  011EB2  3018               	rrcf	___fldiv@bexp^0,w,c
  9433  011EB4  6E04               	movwf	(___fldiv@b+3)^0,c
  9434  011EB6  EF0E  F08E         	goto	l4523
  9435  011EBA                     l1632:
  9436  011EBA  0012               	return		;funcret
  9437  011EBC                     __end_of___fldiv:
  9438                           	callstack 0
  9439                           
  9440 ;; *************** function ___awmod *****************
  9441 ;; Defined at:
  9442 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  dividend        2    0[COMRAM] int 
  9445 ;;  divisor         2    2[COMRAM] int 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  sign            1    5[COMRAM] unsigned char 
  9448 ;;  counter         1    4[COMRAM] unsigned char 
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  2    0[COMRAM] int 
  9451 ;; Registers used:
  9452 ;;		wreg, status,2, status,0
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9462 ;;Total ram usage:        6 bytes
  9463 ;; Hardware stack levels used: 1
  9464 ;; Hardware stack levels required when called: 2
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_efgtoa
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text31
  9473  013544                     __ptext31:
  9474                           	callstack 0
  9475  013544                     ___awmod:
  9476                           	callstack 23
  9477  013544  0E00               	movlw	0
  9478  013546  6E06               	movwf	___awmod@sign^0,c
  9479  013548  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9480  01354A  EFAB  F09A         	goto	u4030
  9481  01354E  EFA9  F09A         	goto	u4031
  9482  013552                     u4031:
  9483  013552  EFB1  F09A         	goto	l4805
  9484  013556                     u4030:
  9485  013556  6C01               	negf	___awmod@dividend^0,c
  9486  013558  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9487  01355A  B0D8               	btfsc	status,0,c
  9488  01355C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9489  01355E  0E01               	movlw	1
  9490  013560  6E06               	movwf	___awmod@sign^0,c
  9491  013562                     l4805:
  9492  013562  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9493  013564  EFB8  F09A         	goto	u4040
  9494  013568  EFB6  F09A         	goto	u4041
  9495  01356C                     u4041:
  9496  01356C  EFBC  F09A         	goto	l4809
  9497  013570                     u4040:
  9498  013570  6C03               	negf	___awmod@divisor^0,c
  9499  013572  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9500  013574  B0D8               	btfsc	status,0,c
  9501  013576  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9502  013578                     l4809:
  9503  013578  5003               	movf	___awmod@divisor^0,w,c
  9504  01357A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9505  01357C  B4D8               	btfsc	status,2,c
  9506  01357E  EFC3  F09A         	goto	u4051
  9507  013582  EFC5  F09A         	goto	u4050
  9508  013586                     u4051:
  9509  013586  EFE9  F09A         	goto	l4825
  9510  01358A                     u4050:
  9511  01358A  0E01               	movlw	1
  9512  01358C  6E05               	movwf	___awmod@counter^0,c
  9513  01358E  EFCD  F09A         	goto	l4815
  9514  013592                     l4813:
  9515  013592  90D8               	bcf	status,0,c
  9516  013594  3603               	rlcf	___awmod@divisor^0,f,c
  9517  013596  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9518  013598  2A05               	incf	___awmod@counter^0,f,c
  9519  01359A                     l4815:
  9520  01359A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9521  01359C  EFD2  F09A         	goto	u4061
  9522  0135A0  EFD4  F09A         	goto	u4060
  9523  0135A4                     u4061:
  9524  0135A4  EFC9  F09A         	goto	l4813
  9525  0135A8                     u4060:
  9526  0135A8                     l4817:
  9527  0135A8  5003               	movf	___awmod@divisor^0,w,c
  9528  0135AA  5C01               	subwf	___awmod@dividend^0,w,c
  9529  0135AC  5004               	movf	(___awmod@divisor+1)^0,w,c
  9530  0135AE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9531  0135B0  A0D8               	btfss	status,0,c
  9532  0135B2  EFDD  F09A         	goto	u4071
  9533  0135B6  EFDF  F09A         	goto	u4070
  9534  0135BA                     u4071:
  9535  0135BA  EFE3  F09A         	goto	l4821
  9536  0135BE                     u4070:
  9537  0135BE  5003               	movf	___awmod@divisor^0,w,c
  9538  0135C0  5E01               	subwf	___awmod@dividend^0,f,c
  9539  0135C2  5004               	movf	(___awmod@divisor+1)^0,w,c
  9540  0135C4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9541  0135C6                     l4821:
  9542  0135C6  90D8               	bcf	status,0,c
  9543  0135C8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9544  0135CA  3203               	rrcf	___awmod@divisor^0,f,c
  9545  0135CC  2E05               	decfsz	___awmod@counter^0,f,c
  9546  0135CE  EFD4  F09A         	goto	l4817
  9547  0135D2                     l4825:
  9548  0135D2  5006               	movf	___awmod@sign^0,w,c
  9549  0135D4  B4D8               	btfsc	status,2,c
  9550  0135D6  EFEF  F09A         	goto	u4081
  9551  0135DA  EFF1  F09A         	goto	u4080
  9552  0135DE                     u4081:
  9553  0135DE  EFF5  F09A         	goto	l4829
  9554  0135E2                     u4080:
  9555  0135E2  6C01               	negf	___awmod@dividend^0,c
  9556  0135E4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9557  0135E6  B0D8               	btfsc	status,0,c
  9558  0135E8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9559  0135EA                     l4829:
  9560  0135EA  C001  F001         	movff	___awmod@dividend,?___awmod
  9561  0135EE  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9562  0135F2  0012               	return		;funcret
  9563  0135F4                     __end_of___awmod:
  9564                           	callstack 0
  9565                           
  9566 ;; *************** function ___awdiv *****************
  9567 ;; Defined at:
  9568 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9569 ;; Parameters:    Size  Location     Type
  9570 ;;  dividend        2    0[COMRAM] int 
  9571 ;;  divisor         2    2[COMRAM] int 
  9572 ;; Auto vars:     Size  Location     Type
  9573 ;;  quotient        2    6[COMRAM] int 
  9574 ;;  sign            1    5[COMRAM] unsigned char 
  9575 ;;  counter         1    4[COMRAM] unsigned char 
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  2    0[COMRAM] int 
  9578 ;; Registers used:
  9579 ;;		wreg, status,2, status,0
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9586 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9588 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9589 ;;Total ram usage:        8 bytes
  9590 ;; Hardware stack levels used: 1
  9591 ;; Hardware stack levels required when called: 2
  9592 ;; This function calls:
  9593 ;;		Nothing
  9594 ;; This function is called by:
  9595 ;;		_efgtoa
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           
  9599                           	psect	text32
  9600  0133BE                     __ptext32:
  9601                           	callstack 0
  9602  0133BE                     ___awdiv:
  9603                           	callstack 23
  9604  0133BE  0E00               	movlw	0
  9605  0133C0  6E06               	movwf	___awdiv@sign^0,c
  9606  0133C2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9607  0133C4  EFE8  F099         	goto	u3970
  9608  0133C8  EFE6  F099         	goto	u3971
  9609  0133CC                     u3971:
  9610  0133CC  EFEE  F099         	goto	l4761
  9611  0133D0                     u3970:
  9612  0133D0  6C03               	negf	___awdiv@divisor^0,c
  9613  0133D2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9614  0133D4  B0D8               	btfsc	status,0,c
  9615  0133D6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9616  0133D8  0E01               	movlw	1
  9617  0133DA  6E06               	movwf	___awdiv@sign^0,c
  9618  0133DC                     l4761:
  9619  0133DC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9620  0133DE  EFF5  F099         	goto	u3980
  9621  0133E2  EFF3  F099         	goto	u3981
  9622  0133E6                     u3981:
  9623  0133E6  EFFB  F099         	goto	l4767
  9624  0133EA                     u3980:
  9625  0133EA  6C01               	negf	___awdiv@dividend^0,c
  9626  0133EC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9627  0133EE  B0D8               	btfsc	status,0,c
  9628  0133F0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9629  0133F2  0E01               	movlw	1
  9630  0133F4  1A06               	xorwf	___awdiv@sign^0,f,c
  9631  0133F6                     l4767:
  9632  0133F6  0E00               	movlw	0
  9633  0133F8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9634  0133FA  0E00               	movlw	0
  9635  0133FC  6E07               	movwf	___awdiv@quotient^0,c
  9636  0133FE  5003               	movf	___awdiv@divisor^0,w,c
  9637  013400  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9638  013402  B4D8               	btfsc	status,2,c
  9639  013404  EF06  F09A         	goto	u3991
  9640  013408  EF08  F09A         	goto	u3990
  9641  01340C                     u3991:
  9642  01340C  EF30  F09A         	goto	l4789
  9643  013410                     u3990:
  9644  013410  0E01               	movlw	1
  9645  013412  6E05               	movwf	___awdiv@counter^0,c
  9646  013414  EF10  F09A         	goto	l4775
  9647  013418                     l4773:
  9648  013418  90D8               	bcf	status,0,c
  9649  01341A  3603               	rlcf	___awdiv@divisor^0,f,c
  9650  01341C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9651  01341E  2A05               	incf	___awdiv@counter^0,f,c
  9652  013420                     l4775:
  9653  013420  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9654  013422  EF15  F09A         	goto	u4001
  9655  013426  EF17  F09A         	goto	u4000
  9656  01342A                     u4001:
  9657  01342A  EF0C  F09A         	goto	l4773
  9658  01342E                     u4000:
  9659  01342E                     l4777:
  9660  01342E  90D8               	bcf	status,0,c
  9661  013430  3607               	rlcf	___awdiv@quotient^0,f,c
  9662  013432  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9663  013434  5003               	movf	___awdiv@divisor^0,w,c
  9664  013436  5C01               	subwf	___awdiv@dividend^0,w,c
  9665  013438  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9666  01343A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9667  01343C  A0D8               	btfss	status,0,c
  9668  01343E  EF23  F09A         	goto	u4011
  9669  013442  EF25  F09A         	goto	u4010
  9670  013446                     u4011:
  9671  013446  EF2A  F09A         	goto	l4785
  9672  01344A                     u4010:
  9673  01344A  5003               	movf	___awdiv@divisor^0,w,c
  9674  01344C  5E01               	subwf	___awdiv@dividend^0,f,c
  9675  01344E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9676  013450  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9677  013452  8007               	bsf	___awdiv@quotient^0,0,c
  9678  013454                     l4785:
  9679  013454  90D8               	bcf	status,0,c
  9680  013456  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9681  013458  3203               	rrcf	___awdiv@divisor^0,f,c
  9682  01345A  2E05               	decfsz	___awdiv@counter^0,f,c
  9683  01345C  EF17  F09A         	goto	l4777
  9684  013460                     l4789:
  9685  013460  5006               	movf	___awdiv@sign^0,w,c
  9686  013462  B4D8               	btfsc	status,2,c
  9687  013464  EF36  F09A         	goto	u4021
  9688  013468  EF38  F09A         	goto	u4020
  9689  01346C                     u4021:
  9690  01346C  EF3C  F09A         	goto	l4793
  9691  013470                     u4020:
  9692  013470  6C07               	negf	___awdiv@quotient^0,c
  9693  013472  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9694  013474  B0D8               	btfsc	status,0,c
  9695  013476  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9696  013478                     l4793:
  9697  013478  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9698  01347C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9699  013480  0012               	return		;funcret
  9700  013482                     __end_of___awdiv:
  9701                           	callstack 0
  9702                           
  9703 ;; *************** function _dtoa *****************
  9704 ;; Defined at:
  9705 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  9708 ;;		 -> NULL(0), 
  9709 ;;  d               8   31[COMRAM] long long 
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;  n               8   55[COMRAM] long long 
  9712 ;;  i               2   63[COMRAM] int 
  9713 ;;  s               2   53[COMRAM] int 
  9714 ;;  w               2   51[COMRAM] int 
  9715 ;;  p               2   49[COMRAM] int 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  2   29[COMRAM] int 
  9718 ;; Registers used:
  9719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9725 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9726 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9727 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9728 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9729 ;;Total ram usage:       36 bytes
  9730 ;; Hardware stack levels used: 1
  9731 ;; Hardware stack levels required when called: 7
  9732 ;; This function calls:
  9733 ;;		___aodiv
  9734 ;;		___aomod
  9735 ;;		_abs
  9736 ;;		_pad
  9737 ;; This function is called by:
  9738 ;;		_vfpfcnvrt
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text33
  9743  011EBC                     __ptext33:
  9744                           	callstack 0
  9745  011EBC                     _dtoa:
  9746                           	callstack 19
  9747  011EBC                     
  9748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9749  011EBC  C020  F038         	movff	dtoa@d,dtoa@n
  9750  011EC0  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  9751  011EC4  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  9752  011EC8  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  9753  011ECC  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  9754  011ED0  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  9755  011ED4  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  9756  011ED8  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  9757  011EDC                     
  9758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9759  011EDC  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  9760  011EDE  EF73  F08F         	goto	u4561
  9761  011EE2  EF76  F08F         	goto	u4560
  9762  011EE6                     u4561:
  9763  011EE6  0E01               	movlw	1
  9764  011EE8  EF77  F08F         	goto	u4570
  9765  011EEC                     u4560:
  9766  011EEC  0E00               	movlw	0
  9767  011EEE                     u4570:
  9768  011EEE  6E36               	movwf	dtoa@s^0,c
  9769  011EF0  6A37               	clrf	(dtoa@s+1)^0,c
  9770                           
  9771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  9772  011EF2  5036               	movf	dtoa@s^0,w,c
  9773  011EF4  1037               	iorwf	(dtoa@s+1)^0,w,c
  9774  011EF6  B4D8               	btfsc	status,2,c
  9775  011EF8  EF80  F08F         	goto	u4581
  9776  011EFC  EF82  F08F         	goto	u4580
  9777  011F00                     u4581:
  9778  011F00  EF92  F08F         	goto	l5035
  9779  011F04                     u4580:
  9780  011F04                     
  9781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9782  011F04  1E3F               	comf	(dtoa@n+7)^0,f,c
  9783  011F06  1E3E               	comf	(dtoa@n+6)^0,f,c
  9784  011F08  1E3D               	comf	(dtoa@n+5)^0,f,c
  9785  011F0A  1E3C               	comf	(dtoa@n+4)^0,f,c
  9786  011F0C  1E3B               	comf	(dtoa@n+3)^0,f,c
  9787  011F0E  1E3A               	comf	(dtoa@n+2)^0,f,c
  9788  011F10  1E39               	comf	(dtoa@n+1)^0,f,c
  9789  011F12  6C38               	negf	dtoa@n^0,c
  9790  011F14  0E00               	movlw	0
  9791  011F16  2239               	addwfc	(dtoa@n+1)^0,f,c
  9792  011F18  223A               	addwfc	(dtoa@n+2)^0,f,c
  9793  011F1A  223B               	addwfc	(dtoa@n+3)^0,f,c
  9794  011F1C  223C               	addwfc	(dtoa@n+4)^0,f,c
  9795  011F1E  223D               	addwfc	(dtoa@n+5)^0,f,c
  9796  011F20  223E               	addwfc	(dtoa@n+6)^0,f,c
  9797  011F22  223F               	addwfc	(dtoa@n+7)^0,f,c
  9798  011F24                     l5035:
  9799                           
  9800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9801  011F24  0100               	movlb	0	; () banked
  9802  011F26  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  9803  011F28  EF98  F08F         	goto	u4591
  9804  011F2C  EF9A  F08F         	goto	u4590
  9805  011F30                     u4591:
  9806  011F30  EF9B  F08F         	goto	l5039
  9807  011F34                     u4590:
  9808  011F34                     
  9809                           ; BSR set to: 0
  9810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9811  011F34  93D5               	bcf	_flags& (0+255),1,b
  9812  011F36                     l5039:
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9816  011F36  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  9817  011F38  EFA8  F08F         	goto	u4600
  9818  011F3C  51D4               	movf	(_prec+1)& (0+255),w,b
  9819  011F3E  E106               	bnz	u4601
  9820  011F40  05D3               	decf	_prec& (0+255),w,b
  9821  011F42  B0D8               	btfsc	status,0,c
  9822  011F44  EFA6  F08F         	goto	u4601
  9823  011F48  EFA8  F08F         	goto	u4600
  9824  011F4C                     u4601:
  9825  011F4C  EFAE  F08F         	goto	l1794
  9826  011F50                     u4600:
  9827  011F50                     
  9828                           ; BSR set to: 0
  9829  011F50  0E00               	movlw	0
  9830  011F52  6E33               	movwf	(dtoa@p+1)^0,c
  9831  011F54  0E01               	movlw	1
  9832  011F56  6E32               	movwf	dtoa@p^0,c
  9833  011F58  EFB2  F08F         	goto	l1796
  9834  011F5C                     l1794:
  9835                           
  9836                           ; BSR set to: 0
  9837  011F5C  C0D3  F032         	movff	_prec,dtoa@p
  9838  011F60  C0D4  F033         	movff	_prec+1,dtoa@p+1
  9839  011F64                     l1796:
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9843  011F64  C0D1  F034         	movff	_width,dtoa@w
  9844  011F68  C0D2  F035         	movff	_width+1,dtoa@w+1
  9845  011F6C                     
  9846                           ; BSR set to: 0
  9847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9848  011F6C  5036               	movf	dtoa@s^0,w,c
  9849  011F6E  1037               	iorwf	(dtoa@s+1)^0,w,c
  9850  011F70  A4D8               	btfss	status,2,c
  9851  011F72  EFBD  F08F         	goto	u4611
  9852  011F76  EFBF  F08F         	goto	u4610
  9853  011F7A                     u4611:
  9854  011F7A  EFC6  F08F         	goto	l5047
  9855  011F7E                     u4610:
  9856  011F7E                     
  9857                           ; BSR set to: 0
  9858  011F7E  A5D5               	btfss	_flags& (0+255),2,b
  9859  011F80  EFC4  F08F         	goto	u4621
  9860  011F84  EFC6  F08F         	goto	u4620
  9861  011F88                     u4621:
  9862  011F88  EFC9  F08F         	goto	l5049
  9863  011F8C                     u4620:
  9864  011F8C                     l5047:
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  9868  011F8C  0634               	decf	dtoa@w^0,f,c
  9869  011F8E  A0D8               	btfss	status,0,c
  9870  011F90  0635               	decf	(dtoa@w+1)^0,f,c
  9871  011F92                     l5049:
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9875  011F92  0E00               	movlw	0
  9876  011F94  6E41               	movwf	(dtoa@i+1)^0,c
  9877  011F96  0E4F               	movlw	79
  9878  011F98  6E40               	movwf	dtoa@i^0,c
  9879  011F9A                     
  9880                           ; BSR set to: 0
  9881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9882  011F9A  0E00               	movlw	0
  9883  011F9C  0101               	movlb	1	; () banked
  9884  011F9E  6F4F               	movwf	(_dbuf+79)& (0+255),b
  9885                           
  9886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9887  011FA0  EF4E  F090         	goto	l5063
  9888  011FA4                     l5053:
  9889                           
  9890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  9891  011FA4  0640               	decf	dtoa@i^0,f,c
  9892  011FA6  A0D8               	btfss	status,0,c
  9893  011FA8  0641               	decf	(dtoa@i+1)^0,f,c
  9894  011FAA                     
  9895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9896  011FAA  0E00               	movlw	low _dbuf
  9897  011FAC  2440               	addwf	dtoa@i^0,w,c
  9898  011FAE  6ED9               	movwf	fsr2l,c
  9899  011FB0  0E01               	movlw	high _dbuf
  9900  011FB2  2041               	addwfc	(dtoa@i+1)^0,w,c
  9901  011FB4  6EDA               	movwf	fsr2h,c
  9902  011FB6  C038  F001         	movff	dtoa@n,___aomod@dividend
  9903  011FBA  C039  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9904  011FBE  C03A  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9905  011FC2  C03B  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9906  011FC6  C03C  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9907  011FCA  C03D  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9908  011FCE  C03E  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9909  011FD2  C03F  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9910  011FD6  0E0A               	movlw	10
  9911  011FD8  6E09               	movwf	___aomod@divisor^0,c
  9912  011FDA  0E00               	movlw	0
  9913  011FDC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9914  011FDE  0E00               	movlw	0
  9915  011FE0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9916  011FE2  0E00               	movlw	0
  9917  011FE4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9918  011FE6  0E00               	movlw	0
  9919  011FE8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9920  011FEA  0E00               	movlw	0
  9921  011FEC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9922  011FEE  0E00               	movlw	0
  9923  011FF0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9924  011FF2  0E00               	movlw	0
  9925  011FF4  6E10               	movwf	(___aomod@divisor+7)^0,c
  9926  011FF6  ECD5  F096         	call	___aomod	;wreg free
  9927  011FFA  C001  F028         	movff	?___aomod,??_dtoa
  9928  011FFE  C002  F029         	movff	?___aomod+1,??_dtoa+1
  9929  012002  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  9930  012006  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  9931  01200A  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  9932  01200E  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  9933  012012  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  9934  012016  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  9935  01201A  C028  F013         	movff	??_dtoa,abs@a
  9936  01201E  C02A  F014         	movff	??_dtoa+2,abs@a+1
  9937  012022  ECF8  F09D         	call	_abs	;wreg free
  9938  012026  5013               	movf	?_abs^0,w,c
  9939  012028  0F30               	addlw	48
  9940  01202A  6EDF               	movwf	indf2,c
  9941  01202C                     
  9942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  9943  01202C  0632               	decf	dtoa@p^0,f,c
  9944  01202E  A0D8               	btfss	status,0,c
  9945  012030  0633               	decf	(dtoa@p+1)^0,f,c
  9946  012032                     
  9947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  9948  012032  0634               	decf	dtoa@w^0,f,c
  9949  012034  A0D8               	btfss	status,0,c
  9950  012036  0635               	decf	(dtoa@w+1)^0,f,c
  9951  012038                     
  9952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9953  012038  C038  F001         	movff	dtoa@n,___aodiv@dividend
  9954  01203C  C039  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9955  012040  C03A  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9956  012044  C03B  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9957  012048  C03C  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9958  01204C  C03D  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9959  012050  C03E  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9960  012054  C03F  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9961  012058  0E0A               	movlw	10
  9962  01205A  6E09               	movwf	___aodiv@divisor^0,c
  9963  01205C  0E00               	movlw	0
  9964  01205E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9965  012060  0E00               	movlw	0
  9966  012062  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9967  012064  0E00               	movlw	0
  9968  012066  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9969  012068  0E00               	movlw	0
  9970  01206A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9971  01206C  0E00               	movlw	0
  9972  01206E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9973  012070  0E00               	movlw	0
  9974  012072  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9975  012074  0E00               	movlw	0
  9976  012076  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9977  012078  EC11  F096         	call	___aodiv	;wreg free
  9978  01207C  C001  F038         	movff	?___aodiv,dtoa@n
  9979  012080  C002  F039         	movff	?___aodiv+1,dtoa@n+1
  9980  012084  C003  F03A         	movff	?___aodiv+2,dtoa@n+2
  9981  012088  C004  F03B         	movff	?___aodiv+3,dtoa@n+3
  9982  01208C  C005  F03C         	movff	?___aodiv+4,dtoa@n+4
  9983  012090  C006  F03D         	movff	?___aodiv+5,dtoa@n+5
  9984  012094  C007  F03E         	movff	?___aodiv+6,dtoa@n+6
  9985  012098  C008  F03F         	movff	?___aodiv+7,dtoa@n+7
  9986  01209C                     l5063:
  9987                           
  9988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9989  01209C  BE41               	btfsc	(dtoa@i+1)^0,7,c
  9990  01209E  EF59  F090         	goto	u4631
  9991  0120A2  5041               	movf	(dtoa@i+1)^0,w,c
  9992  0120A4  E108               	bnz	u4630
  9993  0120A6  0440               	decf	dtoa@i^0,w,c
  9994  0120A8  A0D8               	btfss	status,0,c
  9995  0120AA  EF59  F090         	goto	u4631
  9996  0120AE  EF5B  F090         	goto	u4630
  9997  0120B2                     u4631:
  9998  0120B2  EF8C  F090         	goto	l5073
  9999  0120B6                     u4630:
 10000  0120B6  5038               	movf	dtoa@n^0,w,c
 10001  0120B8  1039               	iorwf	(dtoa@n+1)^0,w,c
 10002  0120BA  103A               	iorwf	(dtoa@n+2)^0,w,c
 10003  0120BC  103B               	iorwf	(dtoa@n+3)^0,w,c
 10004  0120BE  103C               	iorwf	(dtoa@n+4)^0,w,c
 10005  0120C0  103D               	iorwf	(dtoa@n+5)^0,w,c
 10006  0120C2  103E               	iorwf	(dtoa@n+6)^0,w,c
 10007  0120C4  103F               	iorwf	(dtoa@n+7)^0,w,c
 10008  0120C6  A4D8               	btfss	status,2,c
 10009  0120C8  EF68  F090         	goto	u4641
 10010  0120CC  EF6A  F090         	goto	u4640
 10011  0120D0                     u4641:
 10012  0120D0  EFD2  F08F         	goto	l5053
 10013  0120D4                     u4640:
 10014  0120D4  BE33               	btfsc	(dtoa@p+1)^0,7,c
 10015  0120D6  EF77  F090         	goto	u4650
 10016  0120DA  5033               	movf	(dtoa@p+1)^0,w,c
 10017  0120DC  E106               	bnz	u4651
 10018  0120DE  0432               	decf	dtoa@p^0,w,c
 10019  0120E0  B0D8               	btfsc	status,0,c
 10020  0120E2  EF75  F090         	goto	u4651
 10021  0120E6  EF77  F090         	goto	u4650
 10022  0120EA                     u4651:
 10023  0120EA  EFD2  F08F         	goto	l5053
 10024  0120EE                     u4650:
 10025  0120EE  BE35               	btfsc	(dtoa@w+1)^0,7,c
 10026  0120F0  EF82  F090         	goto	u4661
 10027  0120F4  5035               	movf	(dtoa@w+1)^0,w,c
 10028  0120F6  E108               	bnz	u4660
 10029  0120F8  0434               	decf	dtoa@w^0,w,c
 10030  0120FA  A0D8               	btfss	status,0,c
 10031  0120FC  EF82  F090         	goto	u4661
 10032  012100  EF84  F090         	goto	u4660
 10033  012104                     u4661:
 10034  012104  EF8C  F090         	goto	l5073
 10035  012108                     u4660:
 10036  012108  0100               	movlb	0	; () banked
 10037  01210A  B3D5               	btfsc	_flags& (0+255),1,b
 10038  01210C  EF8A  F090         	goto	u4671
 10039  012110  EF8C  F090         	goto	u4670
 10040  012114                     u4671:
 10041  012114  EFD2  F08F         	goto	l5053
 10042  012118                     u4670:
 10043  012118                     l5073:
 10044                           
 10045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 10046  012118  5036               	movf	dtoa@s^0,w,c
 10047  01211A  1037               	iorwf	(dtoa@s+1)^0,w,c
 10048  01211C  A4D8               	btfss	status,2,c
 10049  01211E  EF93  F090         	goto	u4681
 10050  012122  EF95  F090         	goto	u4680
 10051  012126                     u4681:
 10052  012126  EF9D  F090         	goto	l5077
 10053  01212A                     u4680:
 10054  01212A  0100               	movlb	0	; () banked
 10055  01212C  A5D5               	btfss	_flags& (0+255),2,b
 10056  01212E  EF9B  F090         	goto	u4691
 10057  012132  EF9D  F090         	goto	u4690
 10058  012136                     u4691:
 10059  012136  EFBB  F090         	goto	l5087
 10060  01213A                     u4690:
 10061  01213A                     l5077:
 10062                           
 10063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 10064  01213A  0640               	decf	dtoa@i^0,f,c
 10065  01213C  A0D8               	btfss	status,0,c
 10066  01213E  0641               	decf	(dtoa@i+1)^0,f,c
 10067  012140                     
 10068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 10069  012140  5036               	movf	dtoa@s^0,w,c
 10070  012142  1037               	iorwf	(dtoa@s+1)^0,w,c
 10071  012144  A4D8               	btfss	status,2,c
 10072  012146  EFA7  F090         	goto	u4701
 10073  01214A  EFA9  F090         	goto	u4700
 10074  01214E                     u4701:
 10075  01214E  EFAF  F090         	goto	l5083
 10076  012152                     u4700:
 10077  012152  0E00               	movlw	0
 10078  012154  6E31               	movwf	(_dtoa$1972+1)^0,c
 10079  012156  0E2B               	movlw	43
 10080  012158  6E30               	movwf	_dtoa$1972^0,c
 10081  01215A  EFB3  F090         	goto	l5085
 10082  01215E                     l5083:
 10083  01215E  0E00               	movlw	0
 10084  012160  6E31               	movwf	(_dtoa$1972+1)^0,c
 10085  012162  0E2D               	movlw	45
 10086  012164  6E30               	movwf	_dtoa$1972^0,c
 10087  012166                     l5085:
 10088  012166  0E00               	movlw	low _dbuf
 10089  012168  2440               	addwf	dtoa@i^0,w,c
 10090  01216A  6ED9               	movwf	fsr2l,c
 10091  01216C  0E01               	movlw	high _dbuf
 10092  01216E  2041               	addwfc	(dtoa@i+1)^0,w,c
 10093  012170  6EDA               	movwf	fsr2h,c
 10094  012172  C030  FFDF         	movff	_dtoa$1972,indf2
 10095  012176                     l5087:
 10096                           
 10097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 10098  012176  C01E  F013         	movff	dtoa@fp,pad@fp
 10099  01217A  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
 10100  01217E  0E00               	movlw	low _dbuf
 10101  012180  2440               	addwf	dtoa@i^0,w,c
 10102  012182  6E15               	movwf	pad@buf^0,c
 10103  012184  0E01               	movlw	high _dbuf
 10104  012186  2041               	addwfc	(dtoa@i+1)^0,w,c
 10105  012188  6E16               	movwf	(pad@buf+1)^0,c
 10106  01218A  C034  F017         	movff	dtoa@w,pad@p
 10107  01218E  C035  F018         	movff	dtoa@w+1,pad@p+1
 10108  012192  EC7C  F099         	call	_pad	;wreg free
 10109  012196  C013  F01E         	movff	?_pad,?_dtoa
 10110  01219A  C014  F01F         	movff	?_pad+1,?_dtoa+1
 10111  01219E  0012               	return		;funcret
 10112  0121A0                     __end_of_dtoa:
 10113                           	callstack 0
 10114                           
 10115 ;; *************** function _pad *****************
 10116 ;; Defined at:
 10117 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 10118 ;; Parameters:    Size  Location     Type
 10119 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 10120 ;;		 -> NULL(0), 
 10121 ;;  buf             2   20[COMRAM] PTR unsigned char 
 10122 ;;		 -> dbuf(80), 
 10123 ;;  p               2   22[COMRAM] int 
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;  w               2   27[COMRAM] int 
 10126 ;;  i               2   25[COMRAM] int 
 10127 ;; Return value:  Size  Location     Type
 10128 ;;                  2   18[COMRAM] int 
 10129 ;; Registers used:
 10130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10131 ;; Tracked objects:
 10132 ;;		On entry : 0/0
 10133 ;;		On exit  : 0/0
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10136 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10137 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10139 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10140 ;;Total ram usage:       11 bytes
 10141 ;; Hardware stack levels used: 1
 10142 ;; Hardware stack levels required when called: 6
 10143 ;; This function calls:
 10144 ;;		_fputc
 10145 ;;		_fputs
 10146 ;;		_strlen
 10147 ;; This function is called by:
 10148 ;;		_dtoa
 10149 ;;		_efgtoa
 10150 ;; This function uses a non-reentrant model
 10151 ;;
 10152                           
 10153                           	psect	text34
 10154  0132F8                     __ptext34:
 10155                           	callstack 0
 10156  0132F8                     _pad:
 10157                           	callstack 19
 10158  0132F8                     
 10159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 10160  0132F8  0100               	movlb	0	; () banked
 10161  0132FA  A1D5               	btfss	_flags& (0+255),0,b
 10162  0132FC  EF82  F099         	goto	u4251
 10163  013300  EF84  F099         	goto	u4250
 10164  013304                     u4251:
 10165  013304  EF8E  F099         	goto	l4927
 10166  013308                     u4250:
 10167  013308                     
 10168                           ; BSR set to: 0
 10169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 10170  013308  C015  F00C         	movff	pad@buf,fputs@s
 10171  01330C  C016  F00D         	movff	pad@buf+1,fputs@s+1
 10172  013310  C013  F00E         	movff	pad@fp,fputs@fp
 10173  013314  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 10174  013318  ECD6  F09D         	call	_fputs	;wreg free
 10175  01331C                     l4927:
 10176                           
 10177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 10178  01331C  BE18               	btfsc	(pad@p+1)^0,7,c
 10179  01331E  EF93  F099         	goto	u4261
 10180  013322  EF95  F099         	goto	u4260
 10181  013326                     u4261:
 10182  013326  EF9B  F099         	goto	l4931
 10183  01332A                     u4260:
 10184  01332A  C017  F01C         	movff	pad@p,pad@w
 10185  01332E  C018  F01D         	movff	pad@p+1,pad@w+1
 10186  013332  EF9F  F099         	goto	l1783
 10187  013336                     l4931:
 10188  013336  0E00               	movlw	0
 10189  013338  6E1D               	movwf	(pad@w+1)^0,c
 10190  01333A  0E00               	movlw	0
 10191  01333C  6E1C               	movwf	pad@w^0,c
 10192  01333E                     l1783:
 10193                           
 10194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 10195  01333E  0E00               	movlw	0
 10196  013340  6E1B               	movwf	(pad@i+1)^0,c
 10197  013342  0E00               	movlw	0
 10198  013344  6E1A               	movwf	pad@i^0,c
 10199                           
 10200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10201  013346  EFB1  F099         	goto	l4937
 10202  01334A                     l4933:
 10203                           
 10204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 10205  01334A  0E00               	movlw	0
 10206  01334C  6E04               	movwf	(fputc@c+1)^0,c
 10207  01334E  0E20               	movlw	32
 10208  013350  6E03               	movwf	fputc@c^0,c
 10209  013352  C013  F005         	movff	pad@fp,fputc@fp
 10210  013356  C014  F006         	movff	pad@fp+1,fputc@fp+1
 10211  01335A  EC4F  F09B         	call	_fputc	;wreg free
 10212  01335E                     
 10213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 10214  01335E  4A1A               	infsnz	pad@i^0,f,c
 10215  013360  2A1B               	incf	(pad@i+1)^0,f,c
 10216  013362                     l4937:
 10217                           
 10218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10219  013362  501C               	movf	pad@w^0,w,c
 10220  013364  5C1A               	subwf	pad@i^0,w,c
 10221  013366  501B               	movf	(pad@i+1)^0,w,c
 10222  013368  0A80               	xorlw	128
 10223  01336A  6E19               	movwf	??_pad^0,c
 10224  01336C  501D               	movf	(pad@w+1)^0,w,c
 10225  01336E  0A80               	xorlw	128
 10226  013370  5819               	subwfb	??_pad^0,w,c
 10227  013372  A0D8               	btfss	status,0,c
 10228  013374  EFBE  F099         	goto	u4271
 10229  013378  EFC0  F099         	goto	u4270
 10230  01337C                     u4271:
 10231  01337C  EFA5  F099         	goto	l4933
 10232  013380                     u4270:
 10233  013380                     
 10234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 10235  013380  0100               	movlb	0	; () banked
 10236  013382  B1D5               	btfsc	_flags& (0+255),0,b
 10237  013384  EFC6  F099         	goto	u4281
 10238  013388  EFC8  F099         	goto	u4280
 10239  01338C                     u4281:
 10240  01338C  EFD2  F099         	goto	l4941
 10241  013390                     u4280:
 10242  013390                     
 10243                           ; BSR set to: 0
 10244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 10245  013390  C015  F00C         	movff	pad@buf,fputs@s
 10246  013394  C016  F00D         	movff	pad@buf+1,fputs@s+1
 10247  013398  C013  F00E         	movff	pad@fp,fputs@fp
 10248  01339C  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 10249  0133A0  ECD6  F09D         	call	_fputs	;wreg free
 10250  0133A4                     l4941:
 10251                           
 10252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 10253  0133A4  C015  F001         	movff	pad@buf,strlen@s
 10254  0133A8  C016  F002         	movff	pad@buf+1,strlen@s+1
 10255  0133AC  EC6C  F09E         	call	_strlen	;wreg free
 10256  0133B0  501C               	movf	pad@w^0,w,c
 10257  0133B2  2401               	addwf	?_strlen^0,w,c
 10258  0133B4  6E13               	movwf	?_pad^0,c
 10259  0133B6  501D               	movf	(pad@w+1)^0,w,c
 10260  0133B8  2002               	addwfc	(?_strlen+1)^0,w,c
 10261  0133BA  6E14               	movwf	(?_pad+1)^0,c
 10262  0133BC  0012               	return		;funcret
 10263  0133BE                     __end_of_pad:
 10264                           	callstack 0
 10265                           
 10266 ;; *************** function _strlen *****************
 10267 ;; Defined at:
 10268 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 10269 ;; Parameters:    Size  Location     Type
 10270 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10271 ;;		 -> dbuf(80), msgOK(3), 
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10274 ;;		 -> dbuf(80), msgOK(3), 
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  2    0[COMRAM] unsigned int 
 10277 ;; Registers used:
 10278 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10287 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10288 ;;Total ram usage:        4 bytes
 10289 ;; Hardware stack levels used: 1
 10290 ;; Hardware stack levels required when called: 2
 10291 ;; This function calls:
 10292 ;;		Nothing
 10293 ;; This function is called by:
 10294 ;;		_pad
 10295 ;;		_executeCommand
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           	psect	text35
 10300  013CD8                     __ptext35:
 10301                           	callstack 0
 10302  013CD8                     _strlen:
 10303                           	callstack 22
 10304  013CD8  C001  F003         	movff	strlen@s,strlen@a
 10305  013CDC  C002  F004         	movff	strlen@s+1,strlen@a+1
 10306  013CE0  EF74  F09E         	goto	l4173
 10307  013CE4                     l4171:
 10308  013CE4  4A01               	infsnz	strlen@s^0,f,c
 10309  013CE6  2A02               	incf	(strlen@s+1)^0,f,c
 10310  013CE8                     l4173:
 10311  013CE8  C001  FFD9         	movff	strlen@s,fsr2l
 10312  013CEC  C002  FFDA         	movff	strlen@s+1,fsr2h
 10313  013CF0  50DF               	movf	indf2,w,c
 10314  013CF2  A4D8               	btfss	status,2,c
 10315  013CF4  EF7E  F09E         	goto	u2991
 10316  013CF8  EF80  F09E         	goto	u2990
 10317  013CFC                     u2991:
 10318  013CFC  EF72  F09E         	goto	l4171
 10319  013D00                     u2990:
 10320  013D00  5003               	movf	strlen@a^0,w,c
 10321  013D02  5C01               	subwf	strlen@s^0,w,c
 10322  013D04  6E01               	movwf	?_strlen^0,c
 10323  013D06  5004               	movf	(strlen@a+1)^0,w,c
 10324  013D08  5802               	subwfb	(strlen@s+1)^0,w,c
 10325  013D0A  6E02               	movwf	(?_strlen+1)^0,c
 10326  013D0C  0012               	return		;funcret
 10327  013D0E                     __end_of_strlen:
 10328                           	callstack 0
 10329                           
 10330 ;; *************** function _fputs *****************
 10331 ;; Defined at:
 10332 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;  s               2   11[COMRAM] PTR const unsigned char 
 10335 ;;		 -> dbuf(80), 
 10336 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 10337 ;;		 -> NULL(0), 
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;  i               2   16[COMRAM] int 
 10340 ;;  c               1   15[COMRAM] unsigned char 
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  2   11[COMRAM] int 
 10343 ;; Registers used:
 10344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/0
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10351 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10353 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10354 ;;Total ram usage:        7 bytes
 10355 ;; Hardware stack levels used: 1
 10356 ;; Hardware stack levels required when called: 5
 10357 ;; This function calls:
 10358 ;;		_fputc
 10359 ;; This function is called by:
 10360 ;;		_pad
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364                           	psect	text36
 10365  013BAC                     __ptext36:
 10366                           	callstack 0
 10367  013BAC                     _fputs:
 10368                           	callstack 19
 10369  013BAC  0E00               	movlw	0
 10370  013BAE  6E12               	movwf	(fputs@i+1)^0,c
 10371  013BB0  0E00               	movlw	0
 10372  013BB2  6E11               	movwf	fputs@i^0,c
 10373  013BB4  EFE7  F09D         	goto	l4387
 10374  013BB8                     l4383:
 10375  013BB8  C010  F003         	movff	fputs@c,fputc@c
 10376  013BBC  6A04               	clrf	(fputc@c+1)^0,c
 10377  013BBE  C00E  F005         	movff	fputs@fp,fputc@fp
 10378  013BC2  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
 10379  013BC6  EC4F  F09B         	call	_fputc	;wreg free
 10380  013BCA  4A11               	infsnz	fputs@i^0,f,c
 10381  013BCC  2A12               	incf	(fputs@i+1)^0,f,c
 10382  013BCE                     l4387:
 10383  013BCE  5011               	movf	fputs@i^0,w,c
 10384  013BD0  240C               	addwf	fputs@s^0,w,c
 10385  013BD2  6ED9               	movwf	fsr2l,c
 10386  013BD4  5012               	movf	(fputs@i+1)^0,w,c
 10387  013BD6  200D               	addwfc	(fputs@s+1)^0,w,c
 10388  013BD8  6EDA               	movwf	fsr2h,c
 10389  013BDA  50DF               	movf	indf2,w,c
 10390  013BDC  6E10               	movwf	fputs@c^0,c
 10391  013BDE  5010               	movf	fputs@c^0,w,c
 10392  013BE0  A4D8               	btfss	status,2,c
 10393  013BE2  EFF5  F09D         	goto	u3391
 10394  013BE6  EFF7  F09D         	goto	u3390
 10395  013BEA                     u3391:
 10396  013BEA  EFDC  F09D         	goto	l4383
 10397  013BEE                     u3390:
 10398  013BEE  0012               	return		;funcret
 10399  013BF0                     __end_of_fputs:
 10400                           	callstack 0
 10401                           
 10402 ;; *************** function _fputc *****************
 10403 ;; Defined at:
 10404 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  c               2    2[COMRAM] int 
 10407 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 10408 ;;		 -> NULL(0), 
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;		None
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  2    2[COMRAM] int 
 10413 ;; Registers used:
 10414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10422 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10423 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10424 ;;Total ram usage:        9 bytes
 10425 ;; Hardware stack levels used: 1
 10426 ;; Hardware stack levels required when called: 4
 10427 ;; This function calls:
 10428 ;;		_putch
 10429 ;; This function is called by:
 10430 ;;		_pad
 10431 ;;		_vfpfcnvrt
 10432 ;;		_fputs
 10433 ;; This function uses a non-reentrant model
 10434 ;;
 10435                           
 10436                           	psect	text37
 10437  01369E                     __ptext37:
 10438                           	callstack 0
 10439  01369E                     _fputc:
 10440                           	callstack 22
 10441  01369E  5005               	movf	fputc@fp^0,w,c
 10442  0136A0  1006               	iorwf	(fputc@fp+1)^0,w,c
 10443  0136A2  B4D8               	btfsc	status,2,c
 10444  0136A4  EF56  F09B         	goto	u2951
 10445  0136A8  EF58  F09B         	goto	u2950
 10446  0136AC                     u2951:
 10447  0136AC  EF61  F09B         	goto	l4159
 10448  0136B0                     u2950:
 10449  0136B0  5005               	movf	fputc@fp^0,w,c
 10450  0136B2  1006               	iorwf	(fputc@fp+1)^0,w,c
 10451  0136B4  A4D8               	btfss	status,2,c
 10452  0136B6  EF5F  F09B         	goto	u2961
 10453  0136BA  EF61  F09B         	goto	u2960
 10454  0136BE                     u2961:
 10455  0136BE  EF66  F09B         	goto	l4161
 10456  0136C2                     u2960:
 10457  0136C2                     l4159:
 10458  0136C2  5003               	movf	fputc@c^0,w,c
 10459  0136C4  EC8F  F09F         	call	_putch
 10460  0136C8  EF99  F09B         	goto	l2035
 10461  0136CC                     l4161:
 10462  0136CC  EE20 F004          	lfsr	2,4
 10463  0136D0  5005               	movf	fputc@fp^0,w,c
 10464  0136D2  26D9               	addwf	fsr2l,f,c
 10465  0136D4  5006               	movf	(fputc@fp+1)^0,w,c
 10466  0136D6  22DA               	addwfc	fsr2h,f,c
 10467  0136D8  50DE               	movf	postinc2,w,c
 10468  0136DA  10DE               	iorwf	postinc2,w,c
 10469  0136DC  B4D8               	btfsc	status,2,c
 10470  0136DE  EF73  F09B         	goto	u2971
 10471  0136E2  EF75  F09B         	goto	u2970
 10472  0136E6                     u2971:
 10473  0136E6  EF90  F09B         	goto	l4165
 10474  0136EA                     u2970:
 10475  0136EA  EE20 F004          	lfsr	2,4
 10476  0136EE  5005               	movf	fputc@fp^0,w,c
 10477  0136F0  26D9               	addwf	fsr2l,f,c
 10478  0136F2  5006               	movf	(fputc@fp+1)^0,w,c
 10479  0136F4  22DA               	addwfc	fsr2h,f,c
 10480  0136F6  EE10 F002          	lfsr	1,2
 10481  0136FA  5005               	movf	fputc@fp^0,w,c
 10482  0136FC  26E1               	addwf	fsr1l,f,c
 10483  0136FE  5006               	movf	(fputc@fp+1)^0,w,c
 10484  013700  22E2               	addwfc	fsr1h,f,c
 10485  013702  50DE               	movf	postinc2,w,c
 10486  013704  5CE6               	subwf	postinc1,w,c
 10487  013706  50E6               	movf	postinc1,w,c
 10488  013708  0A80               	xorlw	128
 10489  01370A  6E0B               	movwf	(??_fputc+4)^0,c
 10490  01370C  50DE               	movf	postinc2,w,c
 10491  01370E  0A80               	xorlw	128
 10492  013710  580B               	subwfb	(??_fputc+4)^0,w,c
 10493  013712  B0D8               	btfsc	status,0,c
 10494  013714  EF8E  F09B         	goto	u2981
 10495  013718  EF90  F09B         	goto	u2980
 10496  01371C                     u2981:
 10497  01371C  EF99  F09B         	goto	l2035
 10498  013720                     u2980:
 10499  013720                     l4165:
 10500  013720  EE20 F002          	lfsr	2,2
 10501  013724  5005               	movf	fputc@fp^0,w,c
 10502  013726  26D9               	addwf	fsr2l,f,c
 10503  013728  5006               	movf	(fputc@fp+1)^0,w,c
 10504  01372A  22DA               	addwfc	fsr2h,f,c
 10505  01372C  2ADE               	incf	postinc2,f,c
 10506  01372E  0E00               	movlw	0
 10507  013730  22DD               	addwfc	postdec2,f,c
 10508  013732                     l2035:
 10509  013732  0012               	return		;funcret
 10510  013734                     __end_of_fputc:
 10511                           	callstack 0
 10512                           
 10513 ;; *************** function _putch *****************
 10514 ;; Defined at:
 10515 ;;		line 146 in file "mcc_generated_files/eusart5.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  txData          1    wreg     unsigned char 
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;  txData          1    1[COMRAM] unsigned char 
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  1    wreg      void 
 10522 ;; Registers used:
 10523 ;;		wreg, status,2, cstack
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10533 ;;Total ram usage:        1 bytes
 10534 ;; Hardware stack levels used: 1
 10535 ;; Hardware stack levels required when called: 3
 10536 ;; This function calls:
 10537 ;;		_EUSART5_Write
 10538 ;; This function is called by:
 10539 ;;		_fputc
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text38
 10544  013F1E                     __ptext38:
 10545                           	callstack 0
 10546  013F1E                     _putch:
 10547                           	callstack 22
 10548                           
 10549                           ;incstack = 0
 10550                           ;putch@txData stored from wreg
 10551  013F1E  6E02               	movwf	putch@txData^0,c
 10552  013F20                     
 10553                           ;mcc_generated_files/eusart5.c: 146: void putch(char txData);mcc_generated_files/eusart5
      +                          .c: 147: {;mcc_generated_files/eusart5.c: 148:     EUSART5_Write(txData);
 10554  013F20  5002               	movf	putch@txData^0,w,c
 10555  013F22  EC53  F09F         	call	_EUSART5_Write
 10556  013F26  0012               	return		;funcret
 10557  013F28                     __end_of_putch:
 10558                           	callstack 0
 10559                           
 10560 ;; *************** function _EUSART5_Write *****************
 10561 ;; Defined at:
 10562 ;;		line 132 in file "mcc_generated_files/eusart5.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  txData          1    wreg     unsigned char 
 10565 ;; Auto vars:     Size  Location     Type
 10566 ;;  txData          1    0[COMRAM] unsigned char 
 10567 ;; Return value:  Size  Location     Type
 10568 ;;                  1    wreg      void 
 10569 ;; Registers used:
 10570 ;;		wreg
 10571 ;; Tracked objects:
 10572 ;;		On entry : 0/0
 10573 ;;		On exit  : 0/0
 10574 ;;		Unchanged: 0/0
 10575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10580 ;;Total ram usage:        1 bytes
 10581 ;; Hardware stack levels used: 1
 10582 ;; Hardware stack levels required when called: 2
 10583 ;; This function calls:
 10584 ;;		Nothing
 10585 ;; This function is called by:
 10586 ;;		_putch
 10587 ;;		_executeCommand
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591                           	psect	text39
 10592  013EA6                     __ptext39:
 10593                           	callstack 0
 10594  013EA6                     _EUSART5_Write:
 10595                           	callstack 22
 10596                           
 10597                           ;incstack = 0
 10598                           ;EUSART5_Write@txData stored from wreg
 10599  013EA6  6E01               	movwf	EUSART5_Write@txData^0,c
 10600  013EA8                     l232:
 10601                           
 10602                           ;mcc_generated_files/eusart5.c: 134:     while(0 == PIR4bits.TX5IF)
 10603  013EA8  010E               	movlb	14	; () banked
 10604  013EAA  A937               	btfss	55,4,b	;volatile
 10605  013EAC  EF5A  F09F         	goto	u2941
 10606  013EB0  EF5C  F09F         	goto	u2940
 10607  013EB4                     u2941:
 10608  013EB4  EF54  F09F         	goto	l232
 10609  013EB8                     u2940:
 10610  013EB8                     
 10611                           ; BSR set to: 14
 10612                           ;mcc_generated_files/eusart5.c: 138:     TX5REG = txData;
 10613  013EB8  C001  FEDD         	movff	EUSART5_Write@txData,3805	;volatile
 10614  013EBC                     
 10615                           ; BSR set to: 14
 10616  013EBC  0012               	return		;funcret
 10617  013EBE                     __end_of_EUSART5_Write:
 10618                           	callstack 0
 10619                           
 10620 ;; *************** function _abs *****************
 10621 ;; Defined at:
 10622 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;  a               2   18[COMRAM] int 
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;		None
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  2   18[COMRAM] int 
 10629 ;; Registers used:
 10630 ;;		wreg, status,2, status,0
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10640 ;;Total ram usage:        4 bytes
 10641 ;; Hardware stack levels used: 1
 10642 ;; Hardware stack levels required when called: 2
 10643 ;; This function calls:
 10644 ;;		Nothing
 10645 ;; This function is called by:
 10646 ;;		_dtoa
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           	psect	text40
 10651  013BF0                     __ptext40:
 10652                           	callstack 0
 10653  013BF0                     _abs:
 10654                           	callstack 23
 10655  013BF0  BE14               	btfsc	(abs@a+1)^0,7,c
 10656  013BF2  EF05  F09E         	goto	u4290
 10657  013BF6  5014               	movf	(abs@a+1)^0,w,c
 10658  013BF8  E106               	bnz	u4291
 10659  013BFA  0413               	decf	abs@a^0,w,c
 10660  013BFC  B0D8               	btfsc	status,0,c
 10661  013BFE  EF03  F09E         	goto	u4291
 10662  013C02  EF05  F09E         	goto	u4290
 10663  013C06                     u4291:
 10664  013C06  EF13  F09E         	goto	l1956
 10665  013C0A                     u4290:
 10666  013C0A  C013  F015         	movff	abs@a,??_abs
 10667  013C0E  C014  F016         	movff	abs@a+1,??_abs+1
 10668  013C12  1E15               	comf	??_abs^0,f,c
 10669  013C14  1E16               	comf	(??_abs+1)^0,f,c
 10670  013C16  4A15               	infsnz	??_abs^0,f,c
 10671  013C18  2A16               	incf	(??_abs+1)^0,f,c
 10672  013C1A  C015  F013         	movff	??_abs,?_abs
 10673  013C1E  C016  F014         	movff	??_abs+1,?_abs+1
 10674  013C22  EF17  F09E         	goto	l1959
 10675  013C26                     l1956:
 10676  013C26  C013  F013         	movff	abs@a,?_abs
 10677  013C2A  C014  F014         	movff	abs@a+1,?_abs+1
 10678  013C2E                     l1959:
 10679  013C2E  0012               	return		;funcret
 10680  013C30                     __end_of_abs:
 10681                           	callstack 0
 10682                           
 10683 ;; *************** function ___aomod *****************
 10684 ;; Defined at:
 10685 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;  dividend        8    0[COMRAM] long long 
 10688 ;;  divisor         8    8[COMRAM] long long 
 10689 ;; Auto vars:     Size  Location     Type
 10690 ;;  sign            1   17[COMRAM] unsigned char 
 10691 ;;  counter         1   16[COMRAM] unsigned char 
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  8    0[COMRAM] long long 
 10694 ;; Registers used:
 10695 ;;		wreg, status,2, status,0
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10701 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10704 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10705 ;;Total ram usage:       18 bytes
 10706 ;; Hardware stack levels used: 1
 10707 ;; Hardware stack levels required when called: 2
 10708 ;; This function calls:
 10709 ;;		Nothing
 10710 ;; This function is called by:
 10711 ;;		_dtoa
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           	psect	text41
 10716  012DAA                     __ptext41:
 10717                           	callstack 0
 10718  012DAA                     ___aomod:
 10719                           	callstack 23
 10720  012DAA  0E00               	movlw	0
 10721  012DAC  6E12               	movwf	___aomod@sign^0,c
 10722  012DAE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 10723  012DB0  EFDE  F096         	goto	u3490
 10724  012DB4  EFDC  F096         	goto	u3491
 10725  012DB8                     u3491:
 10726  012DB8  EFF0  F096         	goto	l4451
 10727  012DBC                     u3490:
 10728  012DBC  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10729  012DBE  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10730  012DC0  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10731  012DC2  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10732  012DC4  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10733  012DC6  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10734  012DC8  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10735  012DCA  6C01               	negf	___aomod@dividend^0,c
 10736  012DCC  0E00               	movlw	0
 10737  012DCE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10738  012DD0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10739  012DD2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10740  012DD4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10741  012DD6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10742  012DD8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10743  012DDA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10744  012DDC  0E01               	movlw	1
 10745  012DDE  6E12               	movwf	___aomod@sign^0,c
 10746  012DE0                     l4451:
 10747  012DE0  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 10748  012DE2  EFF7  F096         	goto	u3500
 10749  012DE6  EFF5  F096         	goto	u3501
 10750  012DEA                     u3501:
 10751  012DEA  EF07  F097         	goto	l4455
 10752  012DEE                     u3500:
 10753  012DEE  1E10               	comf	(___aomod@divisor+7)^0,f,c
 10754  012DF0  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 10755  012DF2  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 10756  012DF4  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 10757  012DF6  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 10758  012DF8  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 10759  012DFA  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 10760  012DFC  6C09               	negf	___aomod@divisor^0,c
 10761  012DFE  0E00               	movlw	0
 10762  012E00  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 10763  012E02  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 10764  012E04  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 10765  012E06  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 10766  012E08  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 10767  012E0A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 10768  012E0C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 10769  012E0E                     l4455:
 10770  012E0E  5009               	movf	___aomod@divisor^0,w,c
 10771  012E10  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 10772  012E12  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 10773  012E14  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 10774  012E16  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 10775  012E18  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 10776  012E1A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 10777  012E1C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 10778  012E1E  B4D8               	btfsc	status,2,c
 10779  012E20  EF14  F097         	goto	u3511
 10780  012E24  EF16  F097         	goto	u3510
 10781  012E28                     u3511:
 10782  012E28  EF5E  F097         	goto	l4471
 10783  012E2C                     u3510:
 10784  012E2C  0E01               	movlw	1
 10785  012E2E  6E11               	movwf	___aomod@counter^0,c
 10786  012E30  EF24  F097         	goto	l4461
 10787  012E34                     l4459:
 10788  012E34  90D8               	bcf	status,0,c
 10789  012E36  3609               	rlcf	___aomod@divisor^0,f,c
 10790  012E38  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 10791  012E3A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 10792  012E3C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 10793  012E3E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 10794  012E40  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 10795  012E42  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 10796  012E44  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 10797  012E46  2A11               	incf	___aomod@counter^0,f,c
 10798  012E48                     l4461:
 10799  012E48  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 10800  012E4A  EF29  F097         	goto	u3521
 10801  012E4E  EF2B  F097         	goto	u3520
 10802  012E52                     u3521:
 10803  012E52  EF1A  F097         	goto	l4459
 10804  012E56                     u3520:
 10805  012E56                     l4463:
 10806  012E56  5009               	movf	___aomod@divisor^0,w,c
 10807  012E58  5C01               	subwf	___aomod@dividend^0,w,c
 10808  012E5A  500A               	movf	(___aomod@divisor+1)^0,w,c
 10809  012E5C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 10810  012E5E  500B               	movf	(___aomod@divisor+2)^0,w,c
 10811  012E60  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 10812  012E62  500C               	movf	(___aomod@divisor+3)^0,w,c
 10813  012E64  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10814  012E66  500D               	movf	(___aomod@divisor+4)^0,w,c
 10815  012E68  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10816  012E6A  500E               	movf	(___aomod@divisor+5)^0,w,c
 10817  012E6C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10818  012E6E  500F               	movf	(___aomod@divisor+6)^0,w,c
 10819  012E70  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10820  012E72  5010               	movf	(___aomod@divisor+7)^0,w,c
 10821  012E74  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10822  012E76  A0D8               	btfss	status,0,c
 10823  012E78  EF40  F097         	goto	u3531
 10824  012E7C  EF42  F097         	goto	u3530
 10825  012E80                     u3531:
 10826  012E80  EF52  F097         	goto	l4467
 10827  012E84                     u3530:
 10828  012E84  5009               	movf	___aomod@divisor^0,w,c
 10829  012E86  5E01               	subwf	___aomod@dividend^0,f,c
 10830  012E88  500A               	movf	(___aomod@divisor+1)^0,w,c
 10831  012E8A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10832  012E8C  500B               	movf	(___aomod@divisor+2)^0,w,c
 10833  012E8E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10834  012E90  500C               	movf	(___aomod@divisor+3)^0,w,c
 10835  012E92  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10836  012E94  500D               	movf	(___aomod@divisor+4)^0,w,c
 10837  012E96  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10838  012E98  500E               	movf	(___aomod@divisor+5)^0,w,c
 10839  012E9A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10840  012E9C  500F               	movf	(___aomod@divisor+6)^0,w,c
 10841  012E9E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10842  012EA0  5010               	movf	(___aomod@divisor+7)^0,w,c
 10843  012EA2  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10844  012EA4                     l4467:
 10845  012EA4  90D8               	bcf	status,0,c
 10846  012EA6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10847  012EA8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10848  012EAA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10849  012EAC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10850  012EAE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10851  012EB0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10852  012EB2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10853  012EB4  3209               	rrcf	___aomod@divisor^0,f,c
 10854  012EB6  2E11               	decfsz	___aomod@counter^0,f,c
 10855  012EB8  EF2B  F097         	goto	l4463
 10856  012EBC                     l4471:
 10857  012EBC  5012               	movf	___aomod@sign^0,w,c
 10858  012EBE  B4D8               	btfsc	status,2,c
 10859  012EC0  EF64  F097         	goto	u3541
 10860  012EC4  EF66  F097         	goto	u3540
 10861  012EC8                     u3541:
 10862  012EC8  EF76  F097         	goto	l4475
 10863  012ECC                     u3540:
 10864  012ECC  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10865  012ECE  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10866  012ED0  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10867  012ED2  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10868  012ED4  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10869  012ED6  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10870  012ED8  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10871  012EDA  6C01               	negf	___aomod@dividend^0,c
 10872  012EDC  0E00               	movlw	0
 10873  012EDE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10874  012EE0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10875  012EE2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10876  012EE4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10877  012EE6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10878  012EE8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10879  012EEA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10880  012EEC                     l4475:
 10881  012EEC  C001  F001         	movff	___aomod@dividend,?___aomod
 10882  012EF0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10883  012EF4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10884  012EF8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10885  012EFC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10886  012F00  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10887  012F04  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10888  012F08  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10889  012F0C  0012               	return		;funcret
 10890  012F0E                     __end_of___aomod:
 10891                           	callstack 0
 10892                           
 10893 ;; *************** function ___aodiv *****************
 10894 ;; Defined at:
 10895 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;  dividend        8    0[COMRAM] long long 
 10898 ;;  divisor         8    8[COMRAM] long long 
 10899 ;; Auto vars:     Size  Location     Type
 10900 ;;  quotient        8   18[COMRAM] long long 
 10901 ;;  sign            1   17[COMRAM] unsigned char 
 10902 ;;  counter         1   16[COMRAM] unsigned char 
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  8    0[COMRAM] long long 
 10905 ;; Registers used:
 10906 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10912 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10913 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10915 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10916 ;;Total ram usage:       26 bytes
 10917 ;; Hardware stack levels used: 1
 10918 ;; Hardware stack levels required when called: 2
 10919 ;; This function calls:
 10920 ;;		Nothing
 10921 ;; This function is called by:
 10922 ;;		_dtoa
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926                           	psect	text42
 10927  012C22                     __ptext42:
 10928                           	callstack 0
 10929  012C22                     ___aodiv:
 10930                           	callstack 23
 10931  012C22  0E00               	movlw	0
 10932  012C24  6E12               	movwf	___aodiv@sign^0,c
 10933  012C26  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10934  012C28  EF1A  F096         	goto	u3420
 10935  012C2C  EF18  F096         	goto	u3421
 10936  012C30                     u3421:
 10937  012C30  EF2C  F096         	goto	l4407
 10938  012C34                     u3420:
 10939  012C34  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10940  012C36  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10941  012C38  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10942  012C3A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10943  012C3C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10944  012C3E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10945  012C40  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10946  012C42  6C09               	negf	___aodiv@divisor^0,c
 10947  012C44  0E00               	movlw	0
 10948  012C46  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10949  012C48  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10950  012C4A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10951  012C4C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10952  012C4E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10953  012C50  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10954  012C52  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10955  012C54  0E01               	movlw	1
 10956  012C56  6E12               	movwf	___aodiv@sign^0,c
 10957  012C58                     l4407:
 10958  012C58  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10959  012C5A  EF33  F096         	goto	u3430
 10960  012C5E  EF31  F096         	goto	u3431
 10961  012C62                     u3431:
 10962  012C62  EF45  F096         	goto	l4413
 10963  012C66                     u3430:
 10964  012C66  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10965  012C68  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10966  012C6A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10967  012C6C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10968  012C6E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10969  012C70  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10970  012C72  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10971  012C74  6C01               	negf	___aodiv@dividend^0,c
 10972  012C76  0E00               	movlw	0
 10973  012C78  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10974  012C7A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10975  012C7C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 10976  012C7E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 10977  012C80  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 10978  012C82  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 10979  012C84  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 10980  012C86  0E01               	movlw	1
 10981  012C88  1A12               	xorwf	___aodiv@sign^0,f,c
 10982  012C8A                     l4413:
 10983  012C8A  EE20  F013         	lfsr	2,___aodiv@quotient
 10984  012C8E  0E07               	movlw	7
 10985  012C90                     u3441:
 10986  012C90  6ADE               	clrf	postinc2,c
 10987  012C92  06E8               	decf	wreg,f,c
 10988  012C94  E2FD               	bc	u3441
 10989  012C96  5009               	movf	___aodiv@divisor^0,w,c
 10990  012C98  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 10991  012C9A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 10992  012C9C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 10993  012C9E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 10994  012CA0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 10995  012CA2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 10996  012CA4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 10997  012CA6  B4D8               	btfsc	status,2,c
 10998  012CA8  EF58  F096         	goto	u3451
 10999  012CAC  EF5A  F096         	goto	u3450
 11000  012CB0                     u3451:
 11001  012CB0  EFAC  F096         	goto	l4435
 11002  012CB4                     u3450:
 11003  012CB4  0E01               	movlw	1
 11004  012CB6  6E11               	movwf	___aodiv@counter^0,c
 11005  012CB8  EF68  F096         	goto	l4421
 11006  012CBC                     l4419:
 11007  012CBC  90D8               	bcf	status,0,c
 11008  012CBE  3609               	rlcf	___aodiv@divisor^0,f,c
 11009  012CC0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 11010  012CC2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 11011  012CC4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 11012  012CC6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 11013  012CC8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 11014  012CCA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 11015  012CCC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 11016  012CCE  2A11               	incf	___aodiv@counter^0,f,c
 11017  012CD0                     l4421:
 11018  012CD0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 11019  012CD2  EF6D  F096         	goto	u3461
 11020  012CD6  EF6F  F096         	goto	u3460
 11021  012CDA                     u3461:
 11022  012CDA  EF5E  F096         	goto	l4419
 11023  012CDE                     u3460:
 11024  012CDE                     l4423:
 11025  012CDE  90D8               	bcf	status,0,c
 11026  012CE0  3613               	rlcf	___aodiv@quotient^0,f,c
 11027  012CE2  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 11028  012CE4  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 11029  012CE6  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 11030  012CE8  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 11031  012CEA  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 11032  012CEC  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 11033  012CEE  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 11034  012CF0  5009               	movf	___aodiv@divisor^0,w,c
 11035  012CF2  5C01               	subwf	___aodiv@dividend^0,w,c
 11036  012CF4  500A               	movf	(___aodiv@divisor+1)^0,w,c
 11037  012CF6  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 11038  012CF8  500B               	movf	(___aodiv@divisor+2)^0,w,c
 11039  012CFA  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 11040  012CFC  500C               	movf	(___aodiv@divisor+3)^0,w,c
 11041  012CFE  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 11042  012D00  500D               	movf	(___aodiv@divisor+4)^0,w,c
 11043  012D02  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 11044  012D04  500E               	movf	(___aodiv@divisor+5)^0,w,c
 11045  012D06  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 11046  012D08  500F               	movf	(___aodiv@divisor+6)^0,w,c
 11047  012D0A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 11048  012D0C  5010               	movf	(___aodiv@divisor+7)^0,w,c
 11049  012D0E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 11050  012D10  A0D8               	btfss	status,0,c
 11051  012D12  EF8D  F096         	goto	u3471
 11052  012D16  EF8F  F096         	goto	u3470
 11053  012D1A                     u3471:
 11054  012D1A  EFA0  F096         	goto	l4431
 11055  012D1E                     u3470:
 11056  012D1E  5009               	movf	___aodiv@divisor^0,w,c
 11057  012D20  5E01               	subwf	___aodiv@dividend^0,f,c
 11058  012D22  500A               	movf	(___aodiv@divisor+1)^0,w,c
 11059  012D24  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 11060  012D26  500B               	movf	(___aodiv@divisor+2)^0,w,c
 11061  012D28  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 11062  012D2A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 11063  012D2C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 11064  012D2E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 11065  012D30  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 11066  012D32  500E               	movf	(___aodiv@divisor+5)^0,w,c
 11067  012D34  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 11068  012D36  500F               	movf	(___aodiv@divisor+6)^0,w,c
 11069  012D38  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 11070  012D3A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 11071  012D3C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 11072  012D3E  8013               	bsf	___aodiv@quotient^0,0,c
 11073  012D40                     l4431:
 11074  012D40  90D8               	bcf	status,0,c
 11075  012D42  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 11076  012D44  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 11077  012D46  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 11078  012D48  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 11079  012D4A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 11080  012D4C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 11081  012D4E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 11082  012D50  3209               	rrcf	___aodiv@divisor^0,f,c
 11083  012D52  2E11               	decfsz	___aodiv@counter^0,f,c
 11084  012D54  EF6F  F096         	goto	l4423
 11085  012D58                     l4435:
 11086  012D58  5012               	movf	___aodiv@sign^0,w,c
 11087  012D5A  B4D8               	btfsc	status,2,c
 11088  012D5C  EFB2  F096         	goto	u3481
 11089  012D60  EFB4  F096         	goto	u3480
 11090  012D64                     u3481:
 11091  012D64  EFC4  F096         	goto	l4439
 11092  012D68                     u3480:
 11093  012D68  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 11094  012D6A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 11095  012D6C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 11096  012D6E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 11097  012D70  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 11098  012D72  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 11099  012D74  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 11100  012D76  6C13               	negf	___aodiv@quotient^0,c
 11101  012D78  0E00               	movlw	0
 11102  012D7A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 11103  012D7C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 11104  012D7E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 11105  012D80  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 11106  012D82  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 11107  012D84  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 11108  012D86  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 11109  012D88                     l4439:
 11110  012D88  C013  F001         	movff	___aodiv@quotient,?___aodiv
 11111  012D8C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 11112  012D90  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 11113  012D94  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 11114  012D98  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 11115  012D9C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 11116  012DA0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 11117  012DA4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 11118  012DA8  0012               	return		;funcret
 11119  012DAA                     __end_of___aodiv:
 11120                           	callstack 0
 11121                           
 11122 ;; *************** function _atoi *****************
 11123 ;; Defined at:
 11124 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 11125 ;; Parameters:    Size  Location     Type
 11126 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11127 ;;		 -> STR_24(57), STR_23(21), STR_22(16), STR_21(20), 
 11128 ;;		 -> STR_20(15), STR_19(11), STR_18(21), STR_17(28), 
 11129 ;;		 -> STR_16(27), STR_15(26), STR_14(25), STR_13(24), 
 11130 ;;		 -> STR_12(23), STR_11(22), STR_10(8), STR_9(30), 
 11131 ;;		 -> STR_8(29), STR_7(28), STR_6(27), STR_5(26), 
 11132 ;;		 -> STR_4(25), STR_3(24), 
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;  n               2   20[COMRAM] int 
 11135 ;;  neg             2   13[COMRAM] int 
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  2    7[COMRAM] int 
 11138 ;; Registers used:
 11139 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/0
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11146 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11147 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11148 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11149 ;;Total ram usage:       15 bytes
 11150 ;; Hardware stack levels used: 1
 11151 ;; Hardware stack levels required when called: 3
 11152 ;; This function calls:
 11153 ;;		___wmul
 11154 ;;		_isdigit
 11155 ;;		_isspace
 11156 ;; This function is called by:
 11157 ;;		_vfpfcnvrt
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           
 11161                           	psect	text43
 11162  0128DC                     __ptext43:
 11163                           	callstack 0
 11164  0128DC                     _atoi:
 11165                           	callstack 23
 11166  0128DC  0E00               	movlw	0
 11167  0128DE  6E16               	movwf	(atoi@n+1)^0,c
 11168  0128E0  0E00               	movlw	0
 11169  0128E2  6E15               	movwf	atoi@n^0,c
 11170  0128E4  0E00               	movlw	0
 11171  0128E6  6E0F               	movwf	(atoi@neg+1)^0,c
 11172  0128E8  0E00               	movlw	0
 11173  0128EA  6E0E               	movwf	atoi@neg^0,c
 11174  0128EC  EF7A  F094         	goto	l5403
 11175  0128F0                     l5401:
 11176  0128F0  4A08               	infsnz	atoi@s^0,f,c
 11177  0128F2  2A09               	incf	(atoi@s+1)^0,f,c
 11178  0128F4                     l5403:
 11179  0128F4  0E01               	movlw	1
 11180  0128F6  6E14               	movwf	_atoi$2063^0,c
 11181  0128F8  C008  FFF6         	movff	atoi@s,tblptrl
 11182  0128FC  C009  FFF7         	movff	atoi@s+1,tblptrh
 11183  012900                     	if	0	;tblptru may be non-zero
 11184  012900                     	endif
 11185  012900                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11186  012900  0E00               	movlw	low (__mediumconst shr (0+16))
 11187  012902  6EF8               	movwf	tblptru,c
 11188  012904                     	endif
 11189  012904  0008               	tblrd		*
 11190  012906  50F5               	movf	tablat,w,c
 11191  012908  0A20               	xorlw	32
 11192  01290A  B4D8               	btfsc	status,2,c
 11193  01290C  EF8A  F094         	goto	u5251
 11194  012910  EF8C  F094         	goto	u5250
 11195  012914                     u5251:
 11196  012914  EFAB  F094         	goto	l5411
 11197  012918                     u5250:
 11198  012918  0EF7               	movlw	247
 11199  01291A  6E0A               	movwf	??_atoi^0,c
 11200  01291C  0EFF               	movlw	255
 11201  01291E  6E0B               	movwf	(??_atoi+1)^0,c
 11202  012920  C008  FFF6         	movff	atoi@s,tblptrl
 11203  012924  C009  FFF7         	movff	atoi@s+1,tblptrh
 11204  012928                     	if	0	;tblptru may be non-zero
 11205  012928                     	endif
 11206  012928                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11207  012928  0E00               	movlw	low (__mediumconst shr (0+16))
 11208  01292A  6EF8               	movwf	tblptru,c
 11209  01292C                     	endif
 11210  01292C  0008               	tblrd		*
 11211  01292E  50F5               	movf	tablat,w,c
 11212  012930  6E0C               	movwf	(??_atoi+2)^0,c
 11213  012932  6A0D               	clrf	(??_atoi+3)^0,c
 11214  012934  500A               	movf	??_atoi^0,w,c
 11215  012936  260C               	addwf	(??_atoi+2)^0,f,c
 11216  012938  500B               	movf	(??_atoi+1)^0,w,c
 11217  01293A  220D               	addwfc	(??_atoi+3)^0,f,c
 11218  01293C  500D               	movf	(??_atoi+3)^0,w,c
 11219  01293E  E109               	bnz	u5260
 11220  012940  0E05               	movlw	5
 11221  012942  5C0C               	subwf	(??_atoi+2)^0,w,c
 11222  012944  A0D8               	btfss	status,0,c
 11223  012946  EFA7  F094         	goto	u5261
 11224  01294A  EFA9  F094         	goto	u5260
 11225  01294E                     u5261:
 11226  01294E  EFAB  F094         	goto	l5411
 11227  012952                     u5260:
 11228  012952  0E00               	movlw	0
 11229  012954  6E14               	movwf	_atoi$2063^0,c
 11230  012956                     l5411:
 11231  012956  C014  F010         	movff	_atoi$2063,_atoi$2062
 11232  01295A  6A11               	clrf	(_atoi$2062+1)^0,c
 11233  01295C  5010               	movf	_atoi$2062^0,w,c
 11234  01295E  1011               	iorwf	(_atoi$2062+1)^0,w,c
 11235  012960  A4D8               	btfss	status,2,c
 11236  012962  EFB5  F094         	goto	u5271
 11237  012966  EFB7  F094         	goto	u5270
 11238  01296A                     u5271:
 11239  01296A  EF78  F094         	goto	l5401
 11240  01296E                     u5270:
 11241  01296E  EFC1  F094         	goto	l5421
 11242  012972                     l5417:
 11243  012972  0E00               	movlw	0
 11244  012974  6E0F               	movwf	(atoi@neg+1)^0,c
 11245  012976  0E01               	movlw	1
 11246  012978  6E0E               	movwf	atoi@neg^0,c
 11247  01297A                     l5419:
 11248  01297A  4A08               	infsnz	atoi@s^0,f,c
 11249  01297C  2A09               	incf	(atoi@s+1)^0,f,c
 11250  01297E  EFFA  F094         	goto	l5427
 11251  012982                     l5421:
 11252  012982  C008  FFF6         	movff	atoi@s,tblptrl
 11253  012986  C009  FFF7         	movff	atoi@s+1,tblptrh
 11254  01298A                     	if	0	;tblptru may be non-zero
 11255  01298A                     	endif
 11256  01298A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11257  01298A  0E00               	movlw	low (__mediumconst shr (0+16))
 11258  01298C  6EF8               	movwf	tblptru,c
 11259  01298E                     	endif
 11260  01298E  0008               	tblrd		*
 11261  012990  50F5               	movf	tablat,w,c
 11262  012992  6E0A               	movwf	??_atoi^0,c
 11263  012994  6A0B               	clrf	(??_atoi+1)^0,c
 11264                           
 11265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11266                           ; Switch size 1, requested type "simple"
 11267                           ; Number of cases is 1, Range of values is 0 to 0
 11268                           ; switch strategies available:
 11269                           ; Name         Instructions Cycles
 11270                           ; simple_byte            4     3 (average)
 11271                           ;	Chosen strategy is simple_byte
 11272  012996  500B               	movf	(??_atoi+1)^0,w,c
 11273  012998  0A00               	xorlw	0	; case 0
 11274  01299A  B4D8               	btfsc	status,2,c
 11275  01299C  EFD2  F094         	goto	l6123
 11276  0129A0  EFFA  F094         	goto	l5427
 11277  0129A4                     l6123:
 11278                           
 11279                           ; Switch size 1, requested type "simple"
 11280                           ; Number of cases is 2, Range of values is 43 to 45
 11281                           ; switch strategies available:
 11282                           ; Name         Instructions Cycles
 11283                           ; simple_byte            7     4 (average)
 11284                           ;	Chosen strategy is simple_byte
 11285  0129A4  500A               	movf	??_atoi^0,w,c
 11286  0129A6  0A2B               	xorlw	43	; case 43
 11287  0129A8  B4D8               	btfsc	status,2,c
 11288  0129AA  EFBD  F094         	goto	l5419
 11289  0129AE  0A06               	xorlw	6	; case 45
 11290  0129B0  B4D8               	btfsc	status,2,c
 11291  0129B2  EFB9  F094         	goto	l5417
 11292  0129B6  EFFA  F094         	goto	l5427
 11293  0129BA                     l5423:
 11294  0129BA  C015  F001         	movff	atoi@n,___wmul@multiplier
 11295  0129BE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11296  0129C2  0E00               	movlw	0
 11297  0129C4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11298  0129C6  0E0A               	movlw	10
 11299  0129C8  6E03               	movwf	___wmul@multiplicand^0,c
 11300  0129CA  ECE1  F09E         	call	___wmul	;wreg free
 11301  0129CE  C008  FFF6         	movff	atoi@s,tblptrl
 11302  0129D2  C009  FFF7         	movff	atoi@s+1,tblptrh
 11303  0129D6                     	if	0	;tblptru may be non-zero
 11304  0129D6                     	endif
 11305  0129D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11306  0129D6  0E00               	movlw	low (__mediumconst shr (0+16))
 11307  0129D8  6EF8               	movwf	tblptru,c
 11308  0129DA                     	endif
 11309  0129DA  0008               	tblrd		*
 11310  0129DC  50F5               	movf	tablat,w,c
 11311  0129DE  5E01               	subwf	?___wmul^0,f,c
 11312  0129E0  0E00               	movlw	0
 11313  0129E2  5A02               	subwfb	(?___wmul+1)^0,f,c
 11314  0129E4  0E30               	movlw	48
 11315  0129E6  2401               	addwf	?___wmul^0,w,c
 11316  0129E8  6E15               	movwf	atoi@n^0,c
 11317  0129EA  0E00               	movlw	0
 11318  0129EC  2002               	addwfc	(?___wmul+1)^0,w,c
 11319  0129EE  6E16               	movwf	(atoi@n+1)^0,c
 11320  0129F0  EFBD  F094         	goto	l5419
 11321  0129F4                     l5427:
 11322  0129F4  0ED0               	movlw	208
 11323  0129F6  6E0A               	movwf	??_atoi^0,c
 11324  0129F8  0EFF               	movlw	255
 11325  0129FA  6E0B               	movwf	(??_atoi+1)^0,c
 11326  0129FC  C008  FFF6         	movff	atoi@s,tblptrl
 11327  012A00  C009  FFF7         	movff	atoi@s+1,tblptrh
 11328  012A04                     	if	0	;tblptru may be non-zero
 11329  012A04                     	endif
 11330  012A04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11331  012A04  0E00               	movlw	low (__mediumconst shr (0+16))
 11332  012A06  6EF8               	movwf	tblptru,c
 11333  012A08                     	endif
 11334  012A08  0008               	tblrd		*
 11335  012A0A  50F5               	movf	tablat,w,c
 11336  012A0C  6E0C               	movwf	(??_atoi+2)^0,c
 11337  012A0E  6A0D               	clrf	(??_atoi+3)^0,c
 11338  012A10  500A               	movf	??_atoi^0,w,c
 11339  012A12  260C               	addwf	(??_atoi+2)^0,f,c
 11340  012A14  500B               	movf	(??_atoi+1)^0,w,c
 11341  012A16  220D               	addwfc	(??_atoi+3)^0,f,c
 11342  012A18  500D               	movf	(??_atoi+3)^0,w,c
 11343  012A1A  E10A               	bnz	u5280
 11344  012A1C  0E0A               	movlw	10
 11345  012A1E  5C0C               	subwf	(??_atoi+2)^0,w,c
 11346  012A20  A0D8               	btfss	status,0,c
 11347  012A22  EF15  F095         	goto	u5281
 11348  012A26  EF18  F095         	goto	u5280
 11349  012A2A                     u5281:
 11350  012A2A  0E01               	movlw	1
 11351  012A2C  EF19  F095         	goto	u5290
 11352  012A30                     u5280:
 11353  012A30  0E00               	movlw	0
 11354  012A32                     u5290:
 11355  012A32  6E12               	movwf	_atoi$2064^0,c
 11356  012A34  6A13               	clrf	(_atoi$2064+1)^0,c
 11357  012A36  5012               	movf	_atoi$2064^0,w,c
 11358  012A38  1013               	iorwf	(_atoi$2064+1)^0,w,c
 11359  012A3A  A4D8               	btfss	status,2,c
 11360  012A3C  EF22  F095         	goto	u5301
 11361  012A40  EF24  F095         	goto	u5300
 11362  012A44                     u5301:
 11363  012A44  EFDD  F094         	goto	l5423
 11364  012A48                     u5300:
 11365  012A48  500E               	movf	atoi@neg^0,w,c
 11366  012A4A  100F               	iorwf	(atoi@neg+1)^0,w,c
 11367  012A4C  A4D8               	btfss	status,2,c
 11368  012A4E  EF2B  F095         	goto	u5311
 11369  012A52  EF2D  F095         	goto	u5310
 11370  012A56                     u5311:
 11371  012A56  EF3B  F095         	goto	l1987
 11372  012A5A                     u5310:
 11373  012A5A  C015  F00A         	movff	atoi@n,??_atoi
 11374  012A5E  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11375  012A62  1E0A               	comf	??_atoi^0,f,c
 11376  012A64  1E0B               	comf	(??_atoi+1)^0,f,c
 11377  012A66  4A0A               	infsnz	??_atoi^0,f,c
 11378  012A68  2A0B               	incf	(??_atoi+1)^0,f,c
 11379  012A6A  C00A  F008         	movff	??_atoi,?_atoi
 11380  012A6E  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11381  012A72  EF3F  F095         	goto	l1990
 11382  012A76                     l1987:
 11383  012A76  C015  F008         	movff	atoi@n,?_atoi
 11384  012A7A  C016  F009         	movff	atoi@n+1,?_atoi+1
 11385  012A7E                     l1990:
 11386  012A7E  0012               	return		;funcret
 11387  012A80                     __end_of_atoi:
 11388                           	callstack 0
 11389                           
 11390 ;; *************** function _isspace *****************
 11391 ;; Defined at:
 11392 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 11393 ;; Parameters:    Size  Location     Type
 11394 ;;  c               2    0[COMRAM] int 
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;		None
 11397 ;; Return value:  Size  Location     Type
 11398 ;;                  2    0[COMRAM] int 
 11399 ;; Registers used:
 11400 ;;		wreg, status,2, status,0
 11401 ;; Tracked objects:
 11402 ;;		On entry : 0/0
 11403 ;;		On exit  : 0/0
 11404 ;;		Unchanged: 0/0
 11405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11407 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11408 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11409 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11410 ;;Total ram usage:        7 bytes
 11411 ;; Hardware stack levels used: 1
 11412 ;; Hardware stack levels required when called: 2
 11413 ;; This function calls:
 11414 ;;		Nothing
 11415 ;; This function is called by:
 11416 ;;		_atoi
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text44
 11421  01399A                     __ptext44:
 11422                           	callstack 0
 11423  01399A                     _isspace:
 11424                           	callstack 23
 11425  01399A  0E01               	movlw	1
 11426  01399C  6E07               	movwf	_isspace$2093^0,c
 11427  01399E  0E20               	movlw	32
 11428  0139A0  1801               	xorwf	isspace@c^0,w,c
 11429  0139A2  1002               	iorwf	(isspace@c+1)^0,w,c
 11430  0139A4  B4D8               	btfsc	status,2,c
 11431  0139A6  EFD7  F09C         	goto	u4541
 11432  0139AA  EFD9  F09C         	goto	u4540
 11433  0139AE                     u4541:
 11434  0139AE  EFF2  F09C         	goto	l5025
 11435  0139B2                     u4540:
 11436  0139B2  0EF7               	movlw	247
 11437  0139B4  6E03               	movwf	??_isspace^0,c
 11438  0139B6  0EFF               	movlw	255
 11439  0139B8  6E04               	movwf	(??_isspace+1)^0,c
 11440  0139BA  C001  F005         	movff	isspace@c,??_isspace+2
 11441  0139BE  C002  F006         	movff	isspace@c+1,??_isspace+3
 11442  0139C2  5003               	movf	??_isspace^0,w,c
 11443  0139C4  2605               	addwf	(??_isspace+2)^0,f,c
 11444  0139C6  5004               	movf	(??_isspace+1)^0,w,c
 11445  0139C8  2206               	addwfc	(??_isspace+3)^0,f,c
 11446  0139CA  5006               	movf	(??_isspace+3)^0,w,c
 11447  0139CC  E109               	bnz	u4550
 11448  0139CE  0E05               	movlw	5
 11449  0139D0  5C05               	subwf	(??_isspace+2)^0,w,c
 11450  0139D2  A0D8               	btfss	status,0,c
 11451  0139D4  EFEE  F09C         	goto	u4551
 11452  0139D8  EFF0  F09C         	goto	u4550
 11453  0139DC                     u4551:
 11454  0139DC  EFF2  F09C         	goto	l5025
 11455  0139E0                     u4550:
 11456  0139E0  0E00               	movlw	0
 11457  0139E2  6E07               	movwf	_isspace$2093^0,c
 11458  0139E4                     l5025:
 11459  0139E4  C007  F001         	movff	_isspace$2093,?_isspace
 11460  0139E8  6A02               	clrf	(?_isspace+1)^0,c
 11461  0139EA  0012               	return		;funcret
 11462  0139EC                     __end_of_isspace:
 11463                           	callstack 0
 11464                           
 11465 ;; *************** function _isdigit *****************
 11466 ;; Defined at:
 11467 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 11468 ;; Parameters:    Size  Location     Type
 11469 ;;  c               2    0[COMRAM] int 
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;		None
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  2    0[COMRAM] int 
 11474 ;; Registers used:
 11475 ;;		wreg, status,2, status,0
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11483 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11484 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11485 ;;Total ram usage:        6 bytes
 11486 ;; Hardware stack levels used: 1
 11487 ;; Hardware stack levels required when called: 2
 11488 ;; This function calls:
 11489 ;;		Nothing
 11490 ;; This function is called by:
 11491 ;;		_vfpfcnvrt
 11492 ;;		_atoi
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496                           	psect	text45
 11497  013CA0                     __ptext45:
 11498                           	callstack 0
 11499  013CA0                     _isdigit:
 11500                           	callstack 24
 11501  013CA0  0ED0               	movlw	208
 11502  013CA2  6E03               	movwf	??_isdigit^0,c
 11503  013CA4  0EFF               	movlw	255
 11504  013CA6  6E04               	movwf	(??_isdigit+1)^0,c
 11505  013CA8  C001  F005         	movff	isdigit@c,??_isdigit+2
 11506  013CAC  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11507  013CB0  5003               	movf	??_isdigit^0,w,c
 11508  013CB2  2605               	addwf	(??_isdigit+2)^0,f,c
 11509  013CB4  5004               	movf	(??_isdigit+1)^0,w,c
 11510  013CB6  2206               	addwfc	(??_isdigit+3)^0,f,c
 11511  013CB8  5006               	movf	(??_isdigit+3)^0,w,c
 11512  013CBA  E10A               	bnz	u4520
 11513  013CBC  0E0A               	movlw	10
 11514  013CBE  5C05               	subwf	(??_isdigit+2)^0,w,c
 11515  013CC0  A0D8               	btfss	status,0,c
 11516  013CC2  EF65  F09E         	goto	u4521
 11517  013CC6  EF68  F09E         	goto	u4520
 11518  013CCA                     u4521:
 11519  013CCA  0E01               	movlw	1
 11520  013CCC  EF69  F09E         	goto	u4530
 11521  013CD0                     u4520:
 11522  013CD0  0E00               	movlw	0
 11523  013CD2                     u4530:
 11524  013CD2  6E01               	movwf	?_isdigit^0,c
 11525  013CD4  6A02               	clrf	(?_isdigit+1)^0,c
 11526  013CD6  0012               	return		;funcret
 11527  013CD8                     __end_of_isdigit:
 11528                           	callstack 0
 11529                           
 11530 ;; *************** function ___wmul *****************
 11531 ;; Defined at:
 11532 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;  multiplier      2    0[COMRAM] unsigned int 
 11535 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11536 ;; Auto vars:     Size  Location     Type
 11537 ;;  product         2    4[COMRAM] unsigned int 
 11538 ;; Return value:  Size  Location     Type
 11539 ;;                  2    0[COMRAM] unsigned int 
 11540 ;; Registers used:
 11541 ;;		wreg, status,2, status,0, prodl, prodh
 11542 ;; Tracked objects:
 11543 ;;		On entry : 0/0
 11544 ;;		On exit  : 0/0
 11545 ;;		Unchanged: 0/0
 11546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11547 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11548 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11550 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11551 ;;Total ram usage:        6 bytes
 11552 ;; Hardware stack levels used: 1
 11553 ;; Hardware stack levels required when called: 2
 11554 ;; This function calls:
 11555 ;;		Nothing
 11556 ;; This function is called by:
 11557 ;;		_atoi
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           	psect	text46
 11562  013DC2                     __ptext46:
 11563                           	callstack 0
 11564  013DC2                     ___wmul:
 11565                           	callstack 23
 11566  013DC2  5001               	movf	___wmul@multiplier^0,w,c
 11567  013DC4  0203               	mulwf	___wmul@multiplicand^0,c
 11568  013DC6  CFF3 F005          	movff	prodl,___wmul@product
 11569  013DCA  CFF4 F006          	movff	prodh,___wmul@product+1
 11570  013DCE  5001               	movf	___wmul@multiplier^0,w,c
 11571  013DD0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11572  013DD2  50F3               	movf	243,w,c
 11573  013DD4  2606               	addwf	(___wmul@product+1)^0,f,c
 11574  013DD6  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11575  013DD8  0203               	mulwf	___wmul@multiplicand^0,c
 11576  013DDA  50F3               	movf	243,w,c
 11577  013DDC  2606               	addwf	(___wmul@product+1)^0,f,c
 11578  013DDE  C005  F001         	movff	___wmul@product,?___wmul
 11579  013DE2  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11580  013DE6  0012               	return		;funcret
 11581  013DE8                     __end_of___wmul:
 11582                           	callstack 0
 11583                           
 11584 ;; *************** function _SYSTEM_Initialize *****************
 11585 ;; Defined at:
 11586 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11587 ;; Parameters:    Size  Location     Type
 11588 ;;		None
 11589 ;; Auto vars:     Size  Location     Type
 11590 ;;		None
 11591 ;; Return value:  Size  Location     Type
 11592 ;;                  1    wreg      void 
 11593 ;; Registers used:
 11594 ;;		wreg, status,2, status,0, cstack
 11595 ;; Tracked objects:
 11596 ;;		On entry : 0/0
 11597 ;;		On exit  : 0/0
 11598 ;;		Unchanged: 0/0
 11599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11604 ;;Total ram usage:        0 bytes
 11605 ;; Hardware stack levels used: 1
 11606 ;; Hardware stack levels required when called: 4
 11607 ;; This function calls:
 11608 ;;		_ADCC_Initialize
 11609 ;;		_EUSART5_Initialize
 11610 ;;		_INTERRUPT_Initialize
 11611 ;;		_OSCILLATOR_Initialize
 11612 ;;		_PIN_MANAGER_Initialize
 11613 ;;		_PMD_Initialize
 11614 ;;		_TMR6_Initialize
 11615 ;; This function is called by:
 11616 ;;		_main
 11617 ;; This function uses a non-reentrant model
 11618 ;;
 11619                           
 11620                           	psect	text47
 11621  013E6C                     __ptext47:
 11622                           	callstack 0
 11623  013E6C                     _SYSTEM_Initialize:
 11624                           	callstack 26
 11625  013E6C                     
 11626                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 11627  013E6C  EC94  F09F         	call	_INTERRUPT_Initialize	;wreg free
 11628  013E70                     
 11629                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 11630  013E70  EC45  F09F         	call	_PMD_Initialize	;wreg free
 11631  013E74                     
 11632                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 11633  013E74  EC41  F09A         	call	_PIN_MANAGER_Initialize	;wreg free
 11634  013E78                     
 11635                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 11636  013E78  EC5F  F09F         	call	_OSCILLATOR_Initialize	;wreg free
 11637  013E7C                     
 11638                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 11639  013E7C  ECF6  F09C         	call	_ADCC_Initialize	;wreg free
 11640  013E80                     
 11641                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
 11642  013E80  EC17  F09F         	call	_TMR6_Initialize	;wreg free
 11643  013E84                     
 11644                           ;mcc_generated_files/mcc.c: 58:     EUSART5_Initialize();
 11645  013E84  EC1E  F09D         	call	_EUSART5_Initialize	;wreg free
 11646  013E88  0012               	return		;funcret
 11647  013E8A                     __end_of_SYSTEM_Initialize:
 11648                           	callstack 0
 11649                           
 11650 ;; *************** function _TMR6_Initialize *****************
 11651 ;; Defined at:
 11652 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 11653 ;; Parameters:    Size  Location     Type
 11654 ;;		None
 11655 ;; Auto vars:     Size  Location     Type
 11656 ;;		None
 11657 ;; Return value:  Size  Location     Type
 11658 ;;                  1    wreg      void 
 11659 ;; Registers used:
 11660 ;;		wreg, status,2
 11661 ;; Tracked objects:
 11662 ;;		On entry : 0/0
 11663 ;;		On exit  : 0/0
 11664 ;;		Unchanged: 0/0
 11665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11670 ;;Total ram usage:        0 bytes
 11671 ;; Hardware stack levels used: 1
 11672 ;; Hardware stack levels required when called: 2
 11673 ;; This function calls:
 11674 ;;		Nothing
 11675 ;; This function is called by:
 11676 ;;		_SYSTEM_Initialize
 11677 ;; This function uses a non-reentrant model
 11678 ;;
 11679                           
 11680                           	psect	text48
 11681  013E2E                     __ptext48:
 11682                           	callstack 0
 11683  013E2E                     _TMR6_Initialize:
 11684                           	callstack 27
 11685  013E2E                     
 11686                           ;mcc_generated_files/tmr6.c: 69:     T6CLKCON = 0x04;
 11687  013E2E  0E04               	movlw	4
 11688  013E30  6EB3               	movwf	179,c	;volatile
 11689                           
 11690                           ;mcc_generated_files/tmr6.c: 72:     T6HLT = 0x00;
 11691  013E32  0E00               	movlw	0
 11692  013E34  6EB2               	movwf	178,c	;volatile
 11693                           
 11694                           ;mcc_generated_files/tmr6.c: 75:     T6RST = 0x00;
 11695  013E36  0E00               	movlw	0
 11696  013E38  6EB4               	movwf	180,c	;volatile
 11697                           
 11698                           ;mcc_generated_files/tmr6.c: 78:     T6PR = 0xF1;
 11699  013E3A  0EF1               	movlw	241
 11700  013E3C  6EB0               	movwf	176,c	;volatile
 11701                           
 11702                           ;mcc_generated_files/tmr6.c: 81:     T6TMR = 0x00;
 11703  013E3E  0E00               	movlw	0
 11704  013E40  6EAF               	movwf	175,c	;volatile
 11705  013E42                     
 11706                           ;mcc_generated_files/tmr6.c: 84:     PIR5bits.TMR6IF = 0;
 11707  013E42  010E               	movlb	14	; () banked
 11708  013E44  9B38               	bcf	56,5,b	;volatile
 11709  013E46                     
 11710                           ; BSR set to: 14
 11711                           ;mcc_generated_files/tmr6.c: 87:     PIE5bits.TMR6IE = 1;
 11712  013E46  8B2E               	bsf	46,5,b	;volatile
 11713                           
 11714                           ;mcc_generated_files/tmr6.c: 93:     T6CON = 0xE9;
 11715  013E48  0EE9               	movlw	233
 11716  013E4A  6EB1               	movwf	177,c	;volatile
 11717  013E4C                     
 11718                           ; BSR set to: 14
 11719  013E4C  0012               	return		;funcret
 11720  013E4E                     __end_of_TMR6_Initialize:
 11721                           	callstack 0
 11722                           
 11723 ;; *************** function _PMD_Initialize *****************
 11724 ;; Defined at:
 11725 ;;		line 75 in file "mcc_generated_files/mcc.c"
 11726 ;; Parameters:    Size  Location     Type
 11727 ;;		None
 11728 ;; Auto vars:     Size  Location     Type
 11729 ;;		None
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  1    wreg      void 
 11732 ;; Registers used:
 11733 ;;		wreg, status,2
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11743 ;;Total ram usage:        0 bytes
 11744 ;; Hardware stack levels used: 1
 11745 ;; Hardware stack levels required when called: 2
 11746 ;; This function calls:
 11747 ;;		Nothing
 11748 ;; This function is called by:
 11749 ;;		_SYSTEM_Initialize
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           	psect	text49
 11754  013E8A                     __ptext49:
 11755                           	callstack 0
 11756  013E8A                     _PMD_Initialize:
 11757                           	callstack 27
 11758  013E8A                     
 11759                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
 11760  013E8A  0E00               	movlw	0
 11761  013E8C  010E               	movlb	14	; () banked
 11762  013E8E  6F4C               	movwf	76,b	;volatile
 11763                           
 11764                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
 11765  013E90  0E00               	movlw	0
 11766  013E92  6F4D               	movwf	77,b	;volatile
 11767                           
 11768                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
 11769  013E94  0E00               	movlw	0
 11770  013E96  6F4E               	movwf	78,b	;volatile
 11771                           
 11772                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
 11773  013E98  0E00               	movlw	0
 11774  013E9A  6F4F               	movwf	79,b	;volatile
 11775                           
 11776                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
 11777  013E9C  0E00               	movlw	0
 11778  013E9E  6F50               	movwf	80,b	;volatile
 11779                           
 11780                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
 11781  013EA0  0E00               	movlw	0
 11782  013EA2  6F51               	movwf	81,b	;volatile
 11783  013EA4                     
 11784                           ; BSR set to: 14
 11785  013EA4  0012               	return		;funcret
 11786  013EA6                     __end_of_PMD_Initialize:
 11787                           	callstack 0
 11788                           
 11789 ;; *************** function _PIN_MANAGER_Initialize *****************
 11790 ;; Defined at:
 11791 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 11792 ;; Parameters:    Size  Location     Type
 11793 ;;		None
 11794 ;; Auto vars:     Size  Location     Type
 11795 ;;		None
 11796 ;; Return value:  Size  Location     Type
 11797 ;;                  1    wreg      void 
 11798 ;; Registers used:
 11799 ;;		wreg, status,2
 11800 ;; Tracked objects:
 11801 ;;		On entry : 0/0
 11802 ;;		On exit  : 0/0
 11803 ;;		Unchanged: 0/0
 11804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11809 ;;Total ram usage:        0 bytes
 11810 ;; Hardware stack levels used: 1
 11811 ;; Hardware stack levels required when called: 2
 11812 ;; This function calls:
 11813 ;;		Nothing
 11814 ;; This function is called by:
 11815 ;;		_SYSTEM_Initialize
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819                           	psect	text50
 11820  013482                     __ptext50:
 11821                           	callstack 0
 11822  013482                     _PIN_MANAGER_Initialize:
 11823                           	callstack 27
 11824  013482                     
 11825                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 11826  013482  0E00               	movlw	0
 11827  013484  6E7D               	movwf	125,c	;volatile
 11828                           
 11829                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 11830  013486  0E00               	movlw	0
 11831  013488  6E7C               	movwf	124,c	;volatile
 11832                           
 11833                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 11834  01348A  0E00               	movlw	0
 11835  01348C  6E79               	movwf	121,c	;volatile
 11836                           
 11837                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 11838  01348E  0E00               	movlw	0
 11839  013490  6E7E               	movwf	126,c	;volatile
 11840                           
 11841                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 11842  013492  0E00               	movlw	0
 11843  013494  6E7A               	movwf	122,c	;volatile
 11844                           
 11845                           ;mcc_generated_files/pin_manager.c: 65:     LATG = 0x00;
 11846  013496  0E00               	movlw	0
 11847  013498  6E7F               	movwf	127,c	;volatile
 11848                           
 11849                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 11850  01349A  0E00               	movlw	0
 11851  01349C  6E7B               	movwf	123,c	;volatile
 11852                           
 11853                           ;mcc_generated_files/pin_manager.c: 67:     LATH = 0x00;
 11854  01349E  0E00               	movlw	0
 11855  0134A0  6E80               	movwf	128,c	;volatile
 11856                           
 11857                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x08;
 11858  0134A2  0E08               	movlw	8
 11859  0134A4  6E85               	movwf	133,c	;volatile
 11860                           
 11861                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x01;
 11862  0134A6  0E01               	movlw	1
 11863  0134A8  6E86               	movwf	134,c	;volatile
 11864                           
 11865                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xF5;
 11866  0134AA  0EF5               	movlw	245
 11867  0134AC  6E81               	movwf	129,c	;volatile
 11868                           
 11869                           ;mcc_generated_files/pin_manager.c: 75:     TRISG = 0x50;
 11870  0134AE  0E50               	movlw	80
 11871  0134B0  6E87               	movwf	135,c	;volatile
 11872                           
 11873                           ;mcc_generated_files/pin_manager.c: 76:     TRISB = 0xFE;
 11874  0134B2  0EFE               	movlw	254
 11875  0134B4  6E82               	movwf	130,c	;volatile
 11876                           
 11877                           ;mcc_generated_files/pin_manager.c: 77:     TRISH = 0x01;
 11878  0134B6  0E01               	movlw	1
 11879  0134B8  6E88               	movwf	136,c	;volatile
 11880  0134BA                     
 11881                           ;mcc_generated_files/pin_manager.c: 78:     TRISC = 0xFF;
 11882  0134BA  6883               	setf	131,c	;volatile
 11883                           
 11884                           ;mcc_generated_files/pin_manager.c: 79:     TRISD = 0xB9;
 11885  0134BC  0EB9               	movlw	185
 11886  0134BE  6E84               	movwf	132,c	;volatile
 11887                           
 11888                           ;mcc_generated_files/pin_manager.c: 84:     ANSELD = 0xF9;
 11889  0134C0  0EF9               	movlw	249
 11890  0134C2  010E               	movlb	14	; () banked
 11891  0134C4  6FA7               	movwf	167,b	;volatile
 11892                           
 11893                           ;mcc_generated_files/pin_manager.c: 85:     ANSELB = 0xBE;
 11894  0134C6  0EBE               	movlw	190
 11895  0134C8  6F9A               	movwf	154,b	;volatile
 11896                           
 11897                           ;mcc_generated_files/pin_manager.c: 86:     ANSELE = 0x00;
 11898  0134CA  0E00               	movlw	0
 11899  0134CC  6FAF               	movwf	175,b	;volatile
 11900                           
 11901                           ;mcc_generated_files/pin_manager.c: 87:     ANSELG = 0x70;
 11902  0134CE  0E70               	movlw	112
 11903  0134D0  6FBC               	movwf	188,b	;volatile
 11904                           
 11905                           ;mcc_generated_files/pin_manager.c: 88:     ANSELF = 0x01;
 11906  0134D2  0E01               	movlw	1
 11907  0134D4  6FB4               	movwf	180,b	;volatile
 11908                           
 11909                           ;mcc_generated_files/pin_manager.c: 89:     ANSELA = 0xA5;
 11910  0134D6  0EA5               	movlw	165
 11911  0134D8  6F92               	movwf	146,b	;volatile
 11912                           
 11913                           ;mcc_generated_files/pin_manager.c: 94:     WPUD = 0x00;
 11914  0134DA  0E00               	movlw	0
 11915  0134DC  6FA6               	movwf	166,b	;volatile
 11916                           
 11917                           ;mcc_generated_files/pin_manager.c: 95:     WPUF = 0x00;
 11918  0134DE  0E00               	movlw	0
 11919  0134E0  6FB3               	movwf	179,b	;volatile
 11920                           
 11921                           ;mcc_generated_files/pin_manager.c: 96:     WPUE = 0x00;
 11922  0134E2  0E00               	movlw	0
 11923  0134E4  6FAE               	movwf	174,b	;volatile
 11924                           
 11925                           ;mcc_generated_files/pin_manager.c: 97:     WPUB = 0x00;
 11926  0134E6  0E00               	movlw	0
 11927  0134E8  6F99               	movwf	153,b	;volatile
 11928                           
 11929                           ;mcc_generated_files/pin_manager.c: 98:     WPUG = 0x00;
 11930  0134EA  0E00               	movlw	0
 11931  0134EC  6FBB               	movwf	187,b	;volatile
 11932                           
 11933                           ;mcc_generated_files/pin_manager.c: 99:     WPUA = 0x00;
 11934  0134EE  0E00               	movlw	0
 11935  0134F0  6F91               	movwf	145,b	;volatile
 11936                           
 11937                           ;mcc_generated_files/pin_manager.c: 100:     WPUC = 0x00;
 11938  0134F2  0E00               	movlw	0
 11939  0134F4  6FA1               	movwf	161,b	;volatile
 11940                           
 11941                           ;mcc_generated_files/pin_manager.c: 101:     WPUH = 0x00;
 11942  0134F6  0E00               	movlw	0
 11943  0134F8  6FC0               	movwf	192,b	;volatile
 11944                           
 11945                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 11946  0134FA  0E00               	movlw	0
 11947  0134FC  6FAD               	movwf	173,b	;volatile
 11948                           
 11949                           ;mcc_generated_files/pin_manager.c: 107:     ODCONF = 0x00;
 11950  0134FE  0E00               	movlw	0
 11951  013500  6FB2               	movwf	178,b	;volatile
 11952                           
 11953                           ;mcc_generated_files/pin_manager.c: 108:     ODCONA = 0x00;
 11954  013502  0E00               	movlw	0
 11955  013504  6F90               	movwf	144,b	;volatile
 11956                           
 11957                           ;mcc_generated_files/pin_manager.c: 109:     ODCONG = 0x00;
 11958  013506  0E00               	movlw	0
 11959  013508  6FBA               	movwf	186,b	;volatile
 11960                           
 11961                           ;mcc_generated_files/pin_manager.c: 110:     ODCONB = 0x00;
 11962  01350A  0E00               	movlw	0
 11963  01350C  6F98               	movwf	152,b	;volatile
 11964                           
 11965                           ;mcc_generated_files/pin_manager.c: 111:     ODCONH = 0x00;
 11966  01350E  0E00               	movlw	0
 11967  013510  6FBF               	movwf	191,b	;volatile
 11968                           
 11969                           ;mcc_generated_files/pin_manager.c: 112:     ODCONC = 0x00;
 11970  013512  0E00               	movlw	0
 11971  013514  6FA0               	movwf	160,b	;volatile
 11972                           
 11973                           ;mcc_generated_files/pin_manager.c: 113:     ODCOND = 0x00;
 11974  013516  0E00               	movlw	0
 11975  013518  6FA5               	movwf	165,b	;volatile
 11976  01351A                     
 11977                           ; BSR set to: 14
 11978                           ;mcc_generated_files/pin_manager.c: 118:     SLRCONA = 0xFF;
 11979  01351A  698F               	setf	143,b	;volatile
 11980  01351C                     
 11981                           ; BSR set to: 14
 11982                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONB = 0xFF;
 11983  01351C  6997               	setf	151,b	;volatile
 11984  01351E                     
 11985                           ; BSR set to: 14
 11986                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONC = 0xFF;
 11987  01351E  699F               	setf	159,b	;volatile
 11988  013520                     
 11989                           ; BSR set to: 14
 11990                           ;mcc_generated_files/pin_manager.c: 121:     SLRCOND = 0xFF;
 11991  013520  69A4               	setf	164,b	;volatile
 11992  013522                     
 11993                           ; BSR set to: 14
 11994                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONE = 0xFF;
 11995  013522  69AC               	setf	172,b	;volatile
 11996  013524                     
 11997                           ; BSR set to: 14
 11998                           ;mcc_generated_files/pin_manager.c: 123:     SLRCONF = 0xFF;
 11999  013524  69B1               	setf	177,b	;volatile
 12000  013526                     
 12001                           ; BSR set to: 14
 12002                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONG = 0xFF;
 12003  013526  69B9               	setf	185,b	;volatile
 12004  013528                     
 12005                           ; BSR set to: 14
 12006                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONH = 0xFF;
 12007  013528  69BE               	setf	190,b	;volatile
 12008  01352A                     
 12009                           ; BSR set to: 14
 12010                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 12011  01352A  698E               	setf	142,b	;volatile
 12012  01352C                     
 12013                           ; BSR set to: 14
 12014                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 12015  01352C  6996               	setf	150,b	;volatile
 12016  01352E                     
 12017                           ; BSR set to: 14
 12018                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 12019  01352E  699E               	setf	158,b	;volatile
 12020  013530                     
 12021                           ; BSR set to: 14
 12022                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 12023  013530  69A3               	setf	163,b	;volatile
 12024  013532                     
 12025                           ; BSR set to: 14
 12026                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0xFF;
 12027  013532  69AB               	setf	171,b	;volatile
 12028  013534                     
 12029                           ; BSR set to: 14
 12030                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 12031  013534  69B0               	setf	176,b	;volatile
 12032  013536                     
 12033                           ; BSR set to: 14
 12034                           ;mcc_generated_files/pin_manager.c: 136:     INLVLG = 0xFF;
 12035  013536  69B8               	setf	184,b	;volatile
 12036  013538                     
 12037                           ; BSR set to: 14
 12038                           ;mcc_generated_files/pin_manager.c: 137:     INLVLH = 0xFF;
 12039  013538  69BD               	setf	189,b	;volatile
 12040                           
 12041                           ;mcc_generated_files/pin_manager.c: 146:     RE2PPS = 0x14;
 12042  01353A  0E14               	movlw	20
 12043  01353C  6F74               	movwf	116,b	;volatile
 12044                           
 12045                           ;mcc_generated_files/pin_manager.c: 147:     RX5PPS = 0x23;
 12046  01353E  0E23               	movlw	35
 12047  013540  6F17               	movwf	23,b	;volatile
 12048  013542                     
 12049                           ; BSR set to: 14
 12050  013542  0012               	return		;funcret
 12051  013544                     __end_of_PIN_MANAGER_Initialize:
 12052                           	callstack 0
 12053                           
 12054 ;; *************** function _OSCILLATOR_Initialize *****************
 12055 ;; Defined at:
 12056 ;;		line 61 in file "mcc_generated_files/mcc.c"
 12057 ;; Parameters:    Size  Location     Type
 12058 ;;		None
 12059 ;; Auto vars:     Size  Location     Type
 12060 ;;		None
 12061 ;; Return value:  Size  Location     Type
 12062 ;;                  1    wreg      void 
 12063 ;; Registers used:
 12064 ;;		wreg, status,2
 12065 ;; Tracked objects:
 12066 ;;		On entry : 0/0
 12067 ;;		On exit  : 0/0
 12068 ;;		Unchanged: 0/0
 12069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12074 ;;Total ram usage:        0 bytes
 12075 ;; Hardware stack levels used: 1
 12076 ;; Hardware stack levels required when called: 2
 12077 ;; This function calls:
 12078 ;;		Nothing
 12079 ;; This function is called by:
 12080 ;;		_SYSTEM_Initialize
 12081 ;; This function uses a non-reentrant model
 12082 ;;
 12083                           
 12084                           	psect	text51
 12085  013EBE                     __ptext51:
 12086                           	callstack 0
 12087  013EBE                     _OSCILLATOR_Initialize:
 12088                           	callstack 27
 12089  013EBE                     
 12090                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x62;
 12091  013EBE  0E62               	movlw	98
 12092  013EC0  010E               	movlb	14	; () banked
 12093  013EC2  6F43               	movwf	67,b	;volatile
 12094                           
 12095                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 12096  013EC4  0E00               	movlw	0
 12097  013EC6  6F45               	movwf	69,b	;volatile
 12098                           
 12099                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 12100  013EC8  0E00               	movlw	0
 12101  013ECA  6F47               	movwf	71,b	;volatile
 12102                           
 12103                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x02;
 12104  013ECC  0E02               	movlw	2
 12105  013ECE  6F49               	movwf	73,b	;volatile
 12106                           
 12107                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
 12108  013ED0  0E00               	movlw	0
 12109  013ED2  6F48               	movwf	72,b	;volatile
 12110  013ED4                     
 12111                           ; BSR set to: 14
 12112  013ED4  0012               	return		;funcret
 12113  013ED6                     __end_of_OSCILLATOR_Initialize:
 12114                           	callstack 0
 12115                           
 12116 ;; *************** function _INTERRUPT_Initialize *****************
 12117 ;; Defined at:
 12118 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12119 ;; Parameters:    Size  Location     Type
 12120 ;;		None
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;		None
 12123 ;; Return value:  Size  Location     Type
 12124 ;;                  1    wreg      void 
 12125 ;; Registers used:
 12126 ;;		None
 12127 ;; Tracked objects:
 12128 ;;		On entry : 0/0
 12129 ;;		On exit  : 0/0
 12130 ;;		Unchanged: 0/0
 12131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12136 ;;Total ram usage:        0 bytes
 12137 ;; Hardware stack levels used: 1
 12138 ;; Hardware stack levels required when called: 2
 12139 ;; This function calls:
 12140 ;;		Nothing
 12141 ;; This function is called by:
 12142 ;;		_SYSTEM_Initialize
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           	psect	text52
 12147  013F28                     __ptext52:
 12148                           	callstack 0
 12149  013F28                     _INTERRUPT_Initialize:
 12150                           	callstack 27
 12151  013F28                     
 12152                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 12153  013F28  9AF2               	bcf	242,5,c	;volatile
 12154  013F2A  0012               	return		;funcret
 12155  013F2C                     __end_of_INTERRUPT_Initialize:
 12156                           	callstack 0
 12157                           
 12158 ;; *************** function _EUSART5_Initialize *****************
 12159 ;; Defined at:
 12160 ;;		line 66 in file "mcc_generated_files/eusart5.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;		None
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;		None
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  1    wreg      void 
 12167 ;; Registers used:
 12168 ;;		wreg, status,2, status,0, cstack
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/0
 12171 ;;		On exit  : 0/0
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12178 ;;Total ram usage:        0 bytes
 12179 ;; Hardware stack levels used: 1
 12180 ;; Hardware stack levels required when called: 3
 12181 ;; This function calls:
 12182 ;;		_EUSART5_SetErrorHandler
 12183 ;;		_EUSART5_SetFramingErrorHandler
 12184 ;;		_EUSART5_SetOverrunErrorHandler
 12185 ;; This function is called by:
 12186 ;;		_SYSTEM_Initialize
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190                           	psect	text53
 12191  013A3C                     __ptext53:
 12192                           	callstack 0
 12193  013A3C                     _EUSART5_Initialize:
 12194                           	callstack 26
 12195  013A3C                     
 12196                           ;mcc_generated_files/eusart5.c: 71:     BAUD5CON = 0x08;
 12197  013A3C  0E08               	movlw	8
 12198  013A3E  010E               	movlb	14	; () banked
 12199  013A40  6FE2               	movwf	226,b	;volatile
 12200                           
 12201                           ;mcc_generated_files/eusart5.c: 74:     RC5STA = 0x90;
 12202  013A42  0E90               	movlw	144
 12203  013A44  6FE0               	movwf	224,b	;volatile
 12204                           
 12205                           ;mcc_generated_files/eusart5.c: 77:     TX5STA = 0x24;
 12206  013A46  0E24               	movlw	36
 12207  013A48  6FE1               	movwf	225,b	;volatile
 12208                           
 12209                           ;mcc_generated_files/eusart5.c: 80:     SP5BRGL = 0x19;
 12210  013A4A  0E19               	movlw	25
 12211  013A4C  6FDE               	movwf	222,b	;volatile
 12212                           
 12213                           ;mcc_generated_files/eusart5.c: 83:     SP5BRGH = 0x00;
 12214  013A4E  0E00               	movlw	0
 12215  013A50  6FDF               	movwf	223,b	;volatile
 12216  013A52                     
 12217                           ; BSR set to: 14
 12218                           ;mcc_generated_files/eusart5.c: 86:     EUSART5_SetFramingErrorHandler(EUSART5_DefaultFr
      +                          amingErrorHandler);
 12219  013A52  0E00               	movlw	0
 12220  013A54  6E01               	movwf	EUSART5_SetFramingErrorHandler@interruptHandler^0,c
 12221  013A56  0E00               	movlw	0
 12222  013A58  6E02               	movwf	(EUSART5_SetFramingErrorHandler@interruptHandler+1)^0,c
 12223  013A5A  0E00               	movlw	0
 12224  013A5C  6E03               	movwf	(EUSART5_SetFramingErrorHandler@interruptHandler+2)^0,c
 12225  013A5E  EC7B  F09F         	call	_EUSART5_SetFramingErrorHandler	;wreg free
 12226  013A62                     
 12227                           ;mcc_generated_files/eusart5.c: 87:     EUSART5_SetOverrunErrorHandler(EUSART5_DefaultOv
      +                          errunErrorHandler);
 12228  013A62  0E00               	movlw	0
 12229  013A64  6E01               	movwf	EUSART5_SetOverrunErrorHandler@interruptHandler^0,c
 12230  013A66  0E00               	movlw	0
 12231  013A68  6E02               	movwf	(EUSART5_SetOverrunErrorHandler@interruptHandler+1)^0,c
 12232  013A6A  0E00               	movlw	0
 12233  013A6C  6E03               	movwf	(EUSART5_SetOverrunErrorHandler@interruptHandler+2)^0,c
 12234  013A6E  EC74  F09F         	call	_EUSART5_SetOverrunErrorHandler	;wreg free
 12235  013A72                     
 12236                           ;mcc_generated_files/eusart5.c: 88:     EUSART5_SetErrorHandler(EUSART5_DefaultErrorHand
      +                          ler);
 12237  013A72  0E00               	movlw	0
 12238  013A74  6E01               	movwf	EUSART5_SetErrorHandler@interruptHandler^0,c
 12239  013A76  0E00               	movlw	0
 12240  013A78  6E02               	movwf	(EUSART5_SetErrorHandler@interruptHandler+1)^0,c
 12241  013A7A  0E00               	movlw	0
 12242  013A7C  6E03               	movwf	(EUSART5_SetErrorHandler@interruptHandler+2)^0,c
 12243  013A7E  EC82  F09F         	call	_EUSART5_SetErrorHandler	;wreg free
 12244  013A82                     
 12245                           ;mcc_generated_files/eusart5.c: 90:     eusart5RxLastError.status = 0;
 12246  013A82  0E00               	movlw	0
 12247  013A84  0100               	movlb	0	; () banked
 12248  013A86  6FDA               	movwf	_eusart5RxLastError& (0+255),b	;volatile
 12249  013A88                     
 12250                           ; BSR set to: 0
 12251  013A88  0012               	return		;funcret
 12252  013A8A                     __end_of_EUSART5_Initialize:
 12253                           	callstack 0
 12254                           
 12255 ;; *************** function _EUSART5_SetOverrunErrorHandler *****************
 12256 ;; Defined at:
 12257 ;;		line 170 in file "mcc_generated_files/eusart5.c"
 12258 ;; Parameters:    Size  Location     Type
 12259 ;;  interruptHan    3    0[COMRAM] PTR FTN()void 
 12260 ;;		 -> EUSART5_DefaultOverrunErrorHandler(1), 
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;		None
 12263 ;; Return value:  Size  Location     Type
 12264 ;;                  1    wreg      void 
 12265 ;; Registers used:
 12266 ;;		wreg, status,2, status,0
 12267 ;; Tracked objects:
 12268 ;;		On entry : 0/0
 12269 ;;		On exit  : 0/0
 12270 ;;		Unchanged: 0/0
 12271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12272 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12275 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12276 ;;Total ram usage:        3 bytes
 12277 ;; Hardware stack levels used: 1
 12278 ;; Hardware stack levels required when called: 2
 12279 ;; This function calls:
 12280 ;;		Nothing
 12281 ;; This function is called by:
 12282 ;;		_EUSART5_Initialize
 12283 ;; This function uses a non-reentrant model
 12284 ;;
 12285                           
 12286                           	psect	text54
 12287  013EE8                     __ptext54:
 12288                           	callstack 0
 12289  013EE8                     _EUSART5_SetOverrunErrorHandler:
 12290                           	callstack 26
 12291  013EE8                     
 12292                           ;mcc_generated_files/eusart5.c: 171:     EUSART5_OverrunErrorHandler = interruptHandler;
 12293  013EE8  C001  F153         	movff	EUSART5_SetOverrunErrorHandler@interruptHandler,_EUSART5_OverrunErrorHandler
 12294  013EEC  C002  F154         	movff	EUSART5_SetOverrunErrorHandler@interruptHandler+1,_EUSART5_OverrunErrorHandler+1
 12295  013EF0  C003  F155         	movff	EUSART5_SetOverrunErrorHandler@interruptHandler+2,_EUSART5_OverrunErrorHandler+2
 12296  013EF4  0012               	return		;funcret
 12297  013EF6                     __end_of_EUSART5_SetOverrunErrorHandler:
 12298                           	callstack 0
 12299                           
 12300 ;; *************** function _EUSART5_SetFramingErrorHandler *****************
 12301 ;; Defined at:
 12302 ;;		line 166 in file "mcc_generated_files/eusart5.c"
 12303 ;; Parameters:    Size  Location     Type
 12304 ;;  interruptHan    3    0[COMRAM] PTR FTN()void 
 12305 ;;		 -> EUSART5_DefaultFramingErrorHandler(1), 
 12306 ;; Auto vars:     Size  Location     Type
 12307 ;;		None
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  1    wreg      void 
 12310 ;; Registers used:
 12311 ;;		wreg, status,2, status,0
 12312 ;; Tracked objects:
 12313 ;;		On entry : 0/0
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12317 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12320 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12321 ;;Total ram usage:        3 bytes
 12322 ;; Hardware stack levels used: 1
 12323 ;; Hardware stack levels required when called: 2
 12324 ;; This function calls:
 12325 ;;		Nothing
 12326 ;; This function is called by:
 12327 ;;		_EUSART5_Initialize
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           	psect	text55
 12332  013EF6                     __ptext55:
 12333                           	callstack 0
 12334  013EF6                     _EUSART5_SetFramingErrorHandler:
 12335                           	callstack 26
 12336  013EF6                     
 12337                           ;mcc_generated_files/eusart5.c: 167:     EUSART5_FramingErrorHandler = interruptHandler;
 12338  013EF6  C001  F156         	movff	EUSART5_SetFramingErrorHandler@interruptHandler,_EUSART5_FramingErrorHandler
 12339  013EFA  C002  F157         	movff	EUSART5_SetFramingErrorHandler@interruptHandler+1,_EUSART5_FramingErrorHandler+1
 12340  013EFE  C003  F158         	movff	EUSART5_SetFramingErrorHandler@interruptHandler+2,_EUSART5_FramingErrorHandler+2
 12341  013F02  0012               	return		;funcret
 12342  013F04                     __end_of_EUSART5_SetFramingErrorHandler:
 12343                           	callstack 0
 12344                           
 12345 ;; *************** function _EUSART5_SetErrorHandler *****************
 12346 ;; Defined at:
 12347 ;;		line 174 in file "mcc_generated_files/eusart5.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;  interruptHan    3    0[COMRAM] PTR FTN()void 
 12350 ;;		 -> EUSART5_DefaultErrorHandler(1), 
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;		None
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1    wreg      void 
 12355 ;; Registers used:
 12356 ;;		wreg, status,2, status,0
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/0
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12362 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12365 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12366 ;;Total ram usage:        3 bytes
 12367 ;; Hardware stack levels used: 1
 12368 ;; Hardware stack levels required when called: 2
 12369 ;; This function calls:
 12370 ;;		Nothing
 12371 ;; This function is called by:
 12372 ;;		_EUSART5_Initialize
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376                           	psect	text56
 12377  013F04                     __ptext56:
 12378                           	callstack 0
 12379  013F04                     _EUSART5_SetErrorHandler:
 12380                           	callstack 26
 12381  013F04                     
 12382                           ;mcc_generated_files/eusart5.c: 175:     EUSART5_ErrorHandler = interruptHandler;
 12383  013F04  C001  F150         	movff	EUSART5_SetErrorHandler@interruptHandler,_EUSART5_ErrorHandler
 12384  013F08  C002  F151         	movff	EUSART5_SetErrorHandler@interruptHandler+1,_EUSART5_ErrorHandler+1
 12385  013F0C  C003  F152         	movff	EUSART5_SetErrorHandler@interruptHandler+2,_EUSART5_ErrorHandler+2
 12386  013F10  0012               	return		;funcret
 12387  013F12                     __end_of_EUSART5_SetErrorHandler:
 12388                           	callstack 0
 12389                           
 12390 ;; *************** function _ADCC_Initialize *****************
 12391 ;; Defined at:
 12392 ;;		line 62 in file "mcc_generated_files/adcc.c"
 12393 ;; Parameters:    Size  Location     Type
 12394 ;;		None
 12395 ;; Auto vars:     Size  Location     Type
 12396 ;;		None
 12397 ;; Return value:  Size  Location     Type
 12398 ;;                  1    wreg      void 
 12399 ;; Registers used:
 12400 ;;		wreg, status,2
 12401 ;; Tracked objects:
 12402 ;;		On entry : 0/0
 12403 ;;		On exit  : 0/0
 12404 ;;		Unchanged: 0/0
 12405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12410 ;;Total ram usage:        0 bytes
 12411 ;; Hardware stack levels used: 1
 12412 ;; Hardware stack levels required when called: 2
 12413 ;; This function calls:
 12414 ;;		Nothing
 12415 ;; This function is called by:
 12416 ;;		_SYSTEM_Initialize
 12417 ;; This function uses a non-reentrant model
 12418 ;;
 12419                           
 12420                           	psect	text57
 12421  0139EC                     __ptext57:
 12422                           	callstack 0
 12423  0139EC                     _ADCC_Initialize:
 12424                           	callstack 27
 12425  0139EC                     
 12426                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 12427  0139EC  0E00               	movlw	0
 12428  0139EE  6E6A               	movwf	106,c	;volatile
 12429                           
 12430                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 12431  0139F0  0E00               	movlw	0
 12432  0139F2  6E6B               	movwf	107,c	;volatile
 12433                           
 12434                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 12435  0139F4  0E00               	movlw	0
 12436  0139F6  6E6C               	movwf	108,c	;volatile
 12437                           
 12438                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 12439  0139F8  0E00               	movlw	0
 12440  0139FA  6E6D               	movwf	109,c	;volatile
 12441                           
 12442                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 12443  0139FC  0E00               	movlw	0
 12444  0139FE  6E68               	movwf	104,c	;volatile
 12445                           
 12446                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 12447  013A00  0E00               	movlw	0
 12448  013A02  6E69               	movwf	105,c	;volatile
 12449                           
 12450                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 12451  013A04  0E00               	movlw	0
 12452  013A06  6E66               	movwf	102,c	;volatile
 12453                           
 12454                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 12455  013A08  0E00               	movlw	0
 12456  013A0A  010F               	movlb	15	; () banked
 12457  013A0C  6F5F               	movwf	95,b	;volatile
 12458                           
 12459                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 12460  013A0E  0E00               	movlw	0
 12461  013A10  6F5D               	movwf	93,b	;volatile
 12462                           
 12463                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 12464  013A12  0E00               	movlw	0
 12465  013A14  6F5E               	movwf	94,b	;volatile
 12466                           
 12467                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 12468  013A16  0E00               	movlw	0
 12469  013A18  6F59               	movwf	89,b	;volatile
 12470                           
 12471                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 12472  013A1A  0E00               	movlw	0
 12473  013A1C  6F5A               	movwf	90,b	;volatile
 12474                           
 12475                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 12476  013A1E  0E00               	movlw	0
 12477  013A20  6F5B               	movwf	91,b	;volatile
 12478                           
 12479                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 12480  013A22  0E00               	movlw	0
 12481  013A24  6E65               	movwf	101,c	;volatile
 12482                           
 12483                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 12484  013A26  0E00               	movlw	0
 12485  013A28  6F58               	movwf	88,b	;volatile
 12486                           
 12487                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 12488  013A2A  0E00               	movlw	0
 12489  013A2C  6F56               	movwf	86,b	;volatile
 12490                           
 12491                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x00;
 12492  013A2E  0E00               	movlw	0
 12493  013A30  6F57               	movwf	87,b	;volatile
 12494                           
 12495                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x84;
 12496  013A32  0E84               	movlw	132
 12497  013A34  6E60               	movwf	96,c	;volatile
 12498                           
 12499                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 12500  013A36  0E00               	movlw	0
 12501  013A38  6F5C               	movwf	92,b	;volatile
 12502  013A3A                     
 12503                           ; BSR set to: 15
 12504  013A3A  0012               	return		;funcret
 12505  013A3C                     __end_of_ADCC_Initialize:
 12506                           	callstack 0
 12507                           
 12508 ;; *************** function _Caps8seriesConnection *****************
 12509 ;; Defined at:
 12510 ;;		line 64 in file "ConfigureCaps.c"
 12511 ;; Parameters:    Size  Location     Type
 12512 ;;		None
 12513 ;; Auto vars:     Size  Location     Type
 12514 ;;		None
 12515 ;; Return value:  Size  Location     Type
 12516 ;;                  1    wreg      void 
 12517 ;; Registers used:
 12518 ;;		wreg, status,2, cstack
 12519 ;; Tracked objects:
 12520 ;;		On entry : 0/0
 12521 ;;		On exit  : 0/0
 12522 ;;		Unchanged: 0/0
 12523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12528 ;;Total ram usage:        0 bytes
 12529 ;; Hardware stack levels used: 1
 12530 ;; Hardware stack levels required when called: 3
 12531 ;; This function calls:
 12532 ;;		_C_N_SWALLconnectGND
 12533 ;; This function is called by:
 12534 ;;		_main
 12535 ;; This function uses a non-reentrant model
 12536 ;;
 12537                           
 12538                           	psect	text58
 12539  013D0E                     __ptext58:
 12540                           	callstack 0
 12541  013D0E                     _Caps8seriesConnection:
 12542                           	callstack 27
 12543  013D0E  847C               	bsf	124,2,c	;volatile
 12544  013D10  927C               	bcf	124,1,c	;volatile
 12545  013D12  8480               	bsf	128,2,c	;volatile
 12546  013D14  9C7D               	bcf	125,6,c	;volatile
 12547  013D16  987D               	bcf	125,4,c	;volatile
 12548  013D18  907D               	bcf	125,0,c	;volatile
 12549  013D1A  927F               	bcf	127,1,c	;volatile
 12550  013D1C  967F               	bcf	127,3,c	;volatile
 12551  013D1E  9C7E               	bcf	126,6,c	;volatile
 12552  013D20  987E               	bcf	126,4,c	;volatile
 12553  013D22  947E               	bcf	126,2,c	;volatile
 12554  013D24                     
 12555                           ;ConfigureCaps.c: 80:     C_N_SWALLconnectGND();
 12556  013D24  EC06  F09F         	call	_C_N_SWALLconnectGND	;wreg free
 12557  013D28  8680               	bsf	128,3,c	;volatile
 12558  013D2A  8E7D               	bsf	125,7,c	;volatile
 12559  013D2C  8A7D               	bsf	125,5,c	;volatile
 12560  013D2E  827D               	bsf	125,1,c	;volatile
 12561  013D30  807F               	bsf	127,0,c	;volatile
 12562  013D32  847F               	bsf	127,2,c	;volatile
 12563  013D34  8E7E               	bsf	126,7,c	;volatile
 12564  013D36                     
 12565                           ;ConfigureCaps.c: 88:     capSeries_count=8;
 12566  013D36  0E08               	movlw	8
 12567  013D38  0101               	movlb	1	; () banked
 12568  013D3A  6F59               	movwf	_capSeries_count& (0+255),b
 12569  013D3C                     
 12570                           ; BSR set to: 1
 12571                           ;ConfigureCaps.c: 89:     capParalle_count =0;
 12572  013D3C  0E00               	movlw	0
 12573  013D3E  0100               	movlb	0	; () banked
 12574  013D40  6FFF               	movwf	_capParalle_count& (0+255),b
 12575  013D42                     
 12576                           ; BSR set to: 0
 12577  013D42  0012               	return		;funcret
 12578  013D44                     __end_of_Caps8seriesConnection:
 12579                           	callstack 0
 12580                           
 12581 ;; *************** function _C_N_SWALLconnectGND *****************
 12582 ;; Defined at:
 12583 ;;		line 43 in file "ConfigureCaps.c"
 12584 ;; Parameters:    Size  Location     Type
 12585 ;;		None
 12586 ;; Auto vars:     Size  Location     Type
 12587 ;;		None
 12588 ;; Return value:  Size  Location     Type
 12589 ;;                  1    wreg      void 
 12590 ;; Registers used:
 12591 ;;		None
 12592 ;; Tracked objects:
 12593 ;;		On entry : 0/0
 12594 ;;		On exit  : 0/0
 12595 ;;		Unchanged: 0/0
 12596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12601 ;;Total ram usage:        0 bytes
 12602 ;; Hardware stack levels used: 1
 12603 ;; Hardware stack levels required when called: 2
 12604 ;; This function calls:
 12605 ;;		Nothing
 12606 ;; This function is called by:
 12607 ;;		_Caps8seriesConnection
 12608 ;; This function uses a non-reentrant model
 12609 ;;
 12610                           
 12611                           	psect	text59
 12612  013E0C                     __ptext59:
 12613                           	callstack 0
 12614  013E0C                     _C_N_SWALLconnectGND:
 12615                           	callstack 27
 12616  013E0C  9680               	bcf	128,3,c	;volatile
 12617  013E0E  9E7D               	bcf	125,7,c	;volatile
 12618  013E10  9A7D               	bcf	125,5,c	;volatile
 12619  013E12  927D               	bcf	125,1,c	;volatile
 12620  013E14  907F               	bcf	127,0,c	;volatile
 12621  013E16  947F               	bcf	127,2,c	;volatile
 12622  013E18  9E7E               	bcf	126,7,c	;volatile
 12623  013E1A  9A7E               	bcf	126,5,c	;volatile
 12624  013E1C  967E               	bcf	126,3,c	;volatile
 12625  013E1E  927E               	bcf	126,1,c	;volatile
 12626  013E20  9E7F               	bcf	127,7,c	;volatile
 12627  013E22  9679               	bcf	121,3,c	;volatile
 12628  013E24  9279               	bcf	121,1,c	;volatile
 12629  013E26  9280               	bcf	128,1,c	;volatile
 12630  013E28  907A               	bcf	122,0,c	;volatile
 12631  013E2A  9C7C               	bcf	124,6,c	;volatile
 12632  013E2C  0012               	return		;funcret
 12633  013E2E                     __end_of_C_N_SWALLconnectGND:
 12634                           	callstack 0
 12635                           
 12636 ;; *************** function _INTERRUPT_InterruptManager *****************
 12637 ;; Defined at:
 12638 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 12639 ;; Parameters:    Size  Location     Type
 12640 ;;		None
 12641 ;; Auto vars:     Size  Location     Type
 12642 ;;		None
 12643 ;; Return value:  Size  Location     Type
 12644 ;;                  1    wreg      void 
 12645 ;; Registers used:
 12646 ;;		wreg, status,2, cstack
 12647 ;; Tracked objects:
 12648 ;;		On entry : 0/0
 12649 ;;		On exit  : 0/0
 12650 ;;		Unchanged: 0/0
 12651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12656 ;;Total ram usage:        0 bytes
 12657 ;; Hardware stack levels used: 1
 12658 ;; Hardware stack levels required when called: 1
 12659 ;; This function calls:
 12660 ;;		_TMR6_ISR
 12661 ;; This function is called by:
 12662 ;;		Interrupt level 2
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           	psect	intcode
 12667  000008                     __pintcode:
 12668                           	callstack 0
 12669  000008                     _INTERRUPT_InterruptManager:
 12670                           	callstack 18
 12671                           
 12672                           ;incstack = 0
 12673  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12674  00000A                     
 12675                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 12676  00000A  ACF2               	btfss	242,6,c	;volatile
 12677  00000C  EF0A  F000         	goto	i2u573_41
 12678  000010  EF0C  F000         	goto	i2u573_40
 12679  000014                     i2u573_41:
 12680  000014  EF1D  F000         	goto	i2l433
 12681  000018                     i2u573_40:
 12682  000018                     
 12683                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 12684  000018  010E               	movlb	14	; () banked
 12685  00001A  AB2E               	btfss	46,5,b	;volatile
 12686  00001C  EF12  F000         	goto	i2u574_41
 12687  000020  EF14  F000         	goto	i2u574_40
 12688  000024                     i2u574_41:
 12689  000024  EF1D  F000         	goto	i2l433
 12690  000028                     i2u574_40:
 12691  000028                     
 12692                           ; BSR set to: 14
 12693  000028  AB38               	btfss	56,5,b	;volatile
 12694  00002A  EF19  F000         	goto	i2u575_41
 12695  00002E  EF1B  F000         	goto	i2u575_40
 12696  000032                     i2u575_41:
 12697  000032  EF1D  F000         	goto	i2l433
 12698  000036                     i2u575_40:
 12699  000036                     
 12700                           ; BSR set to: 14
 12701                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR6_ISR();
 12702  000036  EC89  F09F         	call	_TMR6_ISR	;wreg free
 12703  00003A                     i2l433:
 12704  00003A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12705  00003C  0011               	retfie		f
 12706  00003E                     __end_of_INTERRUPT_InterruptManager:
 12707                           	callstack 0
 12708                           
 12709 ;; *************** function _TMR6_ISR *****************
 12710 ;; Defined at:
 12711 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 12712 ;; Parameters:    Size  Location     Type
 12713 ;;		None
 12714 ;; Auto vars:     Size  Location     Type
 12715 ;;		None
 12716 ;; Return value:  Size  Location     Type
 12717 ;;                  1    wreg      void 
 12718 ;; Registers used:
 12719 ;;		wreg, status,2
 12720 ;; Tracked objects:
 12721 ;;		On entry : 0/0
 12722 ;;		On exit  : 0/0
 12723 ;;		Unchanged: 0/0
 12724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12729 ;;Total ram usage:        0 bytes
 12730 ;; Hardware stack levels used: 1
 12731 ;; This function calls:
 12732 ;;		Nothing
 12733 ;; This function is called by:
 12734 ;;		_INTERRUPT_InterruptManager
 12735 ;; This function uses a non-reentrant model
 12736 ;;
 12737                           
 12738                           	psect	text61
 12739  013F12                     __ptext61:
 12740                           	callstack 0
 12741  013F12                     _TMR6_ISR:
 12742                           	callstack 18
 12743  013F12                     
 12744                           ;mcc_generated_files/tmr6.c: 169:     PIR5bits.TMR6IF = 0;
 12745  013F12  010E               	movlb	14	; () banked
 12746  013F14  9B38               	bcf	56,5,b	;volatile
 12747  013F16                     
 12748                           ; BSR set to: 14
 12749                           ;mcc_generated_files/tmr6.c: 170:     Flag5sfastcharing=1;
 12750  013F16  0E01               	movlw	1
 12751  013F18  0100               	movlb	0	; () banked
 12752  013F1A  6FDB               	movwf	_Flag5sfastcharing& (0+255),b	;volatile
 12753  013F1C                     
 12754                           ; BSR set to: 0
 12755  013F1C  0012               	return		;funcret
 12756  013F1E                     __end_of_TMR6_ISR:
 12757                           	callstack 0
 12758                           
 12759                           	psect	rparam
 12760  0000                     
 12761                           	psect	temp
 12762  00005F                     btemp:
 12763                           	callstack 0
 12764  00005F                     	ds	1
 12765  0000                     int$flags	set	btemp
 12766  0000                     wtemp8	set	btemp+1
 12767  0000                     ttemp5	set	btemp+1
 12768  0000                     ttemp6	set	btemp+4
 12769  0000                     ttemp7	set	btemp+8
 12770                           
 12771                           	psect	idloc
 12772                           
 12773                           ;Config register IDLOC0 @ 0x200000
 12774                           ;	unspecified, using default values
 12775  200000                     	org	2097152
 12776  200000  0FFF               	dw	4095
 12777                           
 12778                           ;Config register IDLOC1 @ 0x200002
 12779                           ;	unspecified, using default values
 12780  200002                     	org	2097154
 12781  200002  0FFF               	dw	4095
 12782                           
 12783                           ;Config register IDLOC2 @ 0x200004
 12784                           ;	unspecified, using default values
 12785  200004                     	org	2097156
 12786  200004  0FFF               	dw	4095
 12787                           
 12788                           ;Config register IDLOC3 @ 0x200006
 12789                           ;	unspecified, using default values
 12790  200006                     	org	2097158
 12791  200006  0FFF               	dw	4095
 12792                           
 12793                           ;Config register IDLOC4 @ 0x200008
 12794                           ;	unspecified, using default values
 12795  200008                     	org	2097160
 12796  200008  0FFF               	dw	4095
 12797                           
 12798                           ;Config register IDLOC5 @ 0x20000A
 12799                           ;	unspecified, using default values
 12800  20000A                     	org	2097162
 12801  20000A  0FFF               	dw	4095
 12802                           
 12803                           ;Config register IDLOC6 @ 0x20000C
 12804                           ;	unspecified, using default values
 12805  20000C                     	org	2097164
 12806  20000C  0FFF               	dw	4095
 12807                           
 12808                           ;Config register IDLOC7 @ 0x20000E
 12809                           ;	unspecified, using default values
 12810  20000E                     	org	2097166
 12811  20000E  0FFF               	dw	4095
 12812                           
 12813                           	psect	config
 12814                           
 12815                           ;Config register CONFIG1L @ 0x300000
 12816                           ;	External Oscillator mode Selection bits
 12817                           ;	FEXTOSC = OFF, Oscillator not enabled
 12818                           ;	Power-up default value for COSC bits
 12819                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
 12820  300000                     	org	3145728
 12821  300000  EC                 	db	236
 12822                           
 12823                           ;Config register CONFIG1H @ 0x300001
 12824                           ;	Clock Out Enable bit
 12825                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 12826                           ;	Clock Switch Enable bit
 12827                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12828                           ;	Fail-Safe Clock Monitor Enable bit
 12829                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12830  300001                     	org	3145729
 12831  300001  FF                 	db	255
 12832                           
 12833                           ;Config register CONFIG2L @ 0x300002
 12834                           ;	Master Clear Enable bit
 12835                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RG5 pin function is MCLR
 12836                           ;	Power-up Timer Enable bit
 12837                           ;	PWRTE = OFF, Power up timer disabled
 12838                           ;	Low-power BOR enable bit
 12839                           ;	LPBOREN = OFF, ULPBOR disabled
 12840                           ;	Brown-out Reset Enable bits
 12841                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 12842  300002                     	org	3145730
 12843  300002  FF                 	db	255
 12844                           
 12845                           ;Config register CONFIG2H @ 0x300003
 12846                           ;	Brown Out Reset Voltage selection bits
 12847                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
 12848                           ;	ZCD Disable bit
 12849                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 12850                           ;	PPSLOCK bit One-Way Set Enable bit
 12851                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 12852                           ;	Stack Full/Underflow Reset Enable bit
 12853                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12854                           ;	Debugger Enable bit
 12855                           ;	DEBUG = OFF, Background debugger disabled
 12856                           ;	Extended Instruction Set Enable bit
 12857                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 12858  300003                     	org	3145731
 12859  300003  FF                 	db	255
 12860                           
 12861                           ;Config register CONFIG3L @ 0x300004
 12862                           ;	WDT Period Select bits
 12863                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12864                           ;	WDT operating mode
 12865                           ;	WDTE = OFF, WDT Disabled
 12866  300004                     	org	3145732
 12867  300004  9F                 	db	159
 12868                           
 12869                           ;Config register CONFIG3H @ 0x300005
 12870                           ;	WDT Window Select bits
 12871                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12872                           ;	WDT input clock selector
 12873                           ;	WDTCCS = SC, Software Control
 12874  300005                     	org	3145733
 12875  300005  FF                 	db	255
 12876                           
 12877                           ;Config register CONFIG4L @ 0x300006
 12878                           ;	Write Protection Block 0
 12879                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12880                           ;	Write Protection Block 1
 12881                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12882                           ;	Write Protection Block 2
 12883                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12884                           ;	Write Protection Block 3
 12885                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12886                           ;	Write Protection Block 3
 12887                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
 12888                           ;	Write Protection Block 3
 12889                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
 12890                           ;	Write Protection Block 3
 12891                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
 12892                           ;	Write Protection Block 3
 12893                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
 12894  300006                     	org	3145734
 12895  300006  FF                 	db	255
 12896                           
 12897                           ;Config register CONFIG4H @ 0x300007
 12898                           ;	Configuration Register Write Protection bit
 12899                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 12900                           ;	Boot Block Write Protection bit
 12901                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12902                           ;	Data EEPROM Write Protection bit
 12903                           ;	WRTD = OFF, Data EEPROM not write-protected
 12904                           ;	Scanner Enable bit
 12905                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 12906                           ;	Low Voltage Programming Enable bit
 12907                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 12908  300007                     	org	3145735
 12909  300007  FF                 	db	255
 12910                           
 12911                           ;Config register CONFIG5L @ 0x300008
 12912                           ;	UserNVM Program Memory Code Protection bit
 12913                           ;	CP = OFF, UserNVM code protection disabled
 12914                           ;	DataNVM Memory Code Protection bit
 12915                           ;	CPD = OFF, DataNVM code protection disabled
 12916  300008                     	org	3145736
 12917  300008  FF                 	db	255
 12918                           
 12919                           ;Config register CONFIG5H @ 0x300009
 12920                           ;	unspecified, using default values
 12921  300009                     	org	3145737
 12922  300009  FF                 	db	255
 12923                           
 12924                           ;Config register CONFIG6L @ 0x30000A
 12925                           ;	Table Read Protection Block 0
 12926                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12927                           ;	Table Read Protection Block 1
 12928                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12929                           ;	Table Read Protection Block 2
 12930                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12931                           ;	Table Read Protection Block 3
 12932                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12933                           ;	Table Read Protection Block 4
 12934                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
 12935                           ;	Table Read Protection Block 5
 12936                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
 12937                           ;	Table Read Protection Block 6
 12938                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
 12939                           ;	Table Read Protection Block 7
 12940                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
 12941  30000A                     	org	3145738
 12942  30000A  FF                 	db	255
 12943                           
 12944                           ;Config register CONFIG6H @ 0x30000B
 12945                           ;	Boot Block Table Read Protection bit
 12946                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12947  30000B                     	org	3145739
 12948  30000B  FF                 	db	255
 12949                           tosu	equ	0xFFF
 12950                           tosh	equ	0xFFE
 12951                           tosl	equ	0xFFD
 12952                           stkptr	equ	0xFFC
 12953                           pclatu	equ	0xFFB
 12954                           pclath	equ	0xFFA
 12955                           pcl	equ	0xFF9
 12956                           tblptru	equ	0xFF8
 12957                           tblptrh	equ	0xFF7
 12958                           tblptrl	equ	0xFF6
 12959                           tablat	equ	0xFF5
 12960                           prodh	equ	0xFF4
 12961                           prodl	equ	0xFF3
 12962                           indf0	equ	0xFEF
 12963                           postinc0	equ	0xFEE
 12964                           postdec0	equ	0xFED
 12965                           preinc0	equ	0xFEC
 12966                           plusw0	equ	0xFEB
 12967                           fsr0h	equ	0xFEA
 12968                           fsr0l	equ	0xFE9
 12969                           wreg	equ	0xFE8
 12970                           indf1	equ	0xFE7
 12971                           postinc1	equ	0xFE6
 12972                           postdec1	equ	0xFE5
 12973                           preinc1	equ	0xFE4
 12974                           plusw1	equ	0xFE3
 12975                           fsr1h	equ	0xFE2
 12976                           fsr1l	equ	0xFE1
 12977                           bsr	equ	0xFE0
 12978                           indf2	equ	0xFDF
 12979                           postinc2	equ	0xFDE
 12980                           postdec2	equ	0xFDD
 12981                           preinc2	equ	0xFDC
 12982                           plusw2	equ	0xFDB
 12983                           fsr2h	equ	0xFDA
 12984                           fsr2l	equ	0xFD9
 12985                           status	equ	0xFD8

Data Sizes:
    Strings     558
    Constant    0
    Data        35
    BSS         121
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     84     160
    BANK1           256      0      90
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_35(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_35(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), msgOK(BANK0[3]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), msgOK(BANK0[3]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_30(CODE[4]), STR_29(CODE[4]), STR_26(CODE[4]), STR_25(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_30(CODE[4]), STR_29(CODE[4]), STR_26(CODE[4]), STR_25(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1869_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[57]), STR_23(CODE[21]), STR_22(CODE[16]), STR_21(CODE[20]), 
		 -> STR_20(CODE[15]), STR_19(CODE[11]), STR_18(CODE[21]), STR_17(CODE[28]), 
		 -> STR_16(CODE[27]), STR_15(CODE[26]), STR_14(CODE[25]), STR_13(CODE[24]), 
		 -> STR_12(CODE[23]), STR_11(CODE[22]), STR_10(CODE[8]), STR_9(CODE[30]), 
		 -> STR_8(CODE[29]), STR_7(CODE[28]), STR_6(CODE[27]), STR_5(CODE[26]), 
		 -> STR_4(CODE[25]), STR_3(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[57]), STR_23(CODE[21]), STR_22(CODE[16]), STR_21(CODE[20]), 
		 -> STR_20(CODE[15]), STR_19(CODE[11]), STR_18(CODE[21]), STR_17(CODE[28]), 
		 -> STR_16(CODE[27]), STR_15(CODE[26]), STR_14(CODE[25]), STR_13(CODE[24]), 
		 -> STR_12(CODE[23]), STR_11(CODE[22]), STR_10(CODE[8]), STR_9(CODE[30]), 
		 -> STR_8(CODE[29]), STR_7(CODE[28]), STR_6(CODE[27]), STR_5(CODE[26]), 
		 -> STR_4(CODE[25]), STR_3(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[57]), STR_23(CODE[21]), STR_22(CODE[16]), STR_21(CODE[20]), 
		 -> STR_20(CODE[15]), STR_19(CODE[11]), STR_18(CODE[21]), STR_17(CODE[28]), 
		 -> STR_16(CODE[27]), STR_15(CODE[26]), STR_14(CODE[25]), STR_13(CODE[24]), 
		 -> STR_12(CODE[23]), STR_11(CODE[22]), STR_10(CODE[8]), STR_9(CODE[30]), 
		 -> STR_8(CODE[29]), STR_7(CODE[28]), STR_6(CODE[27]), STR_5(CODE[26]), 
		 -> STR_4(CODE[25]), STR_3(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[57]), STR_23(CODE[21]), STR_22(CODE[16]), STR_21(CODE[20]), 
		 -> STR_20(CODE[15]), STR_19(CODE[11]), STR_18(CODE[21]), STR_17(CODE[28]), 
		 -> STR_16(CODE[27]), STR_15(CODE[26]), STR_14(CODE[25]), STR_13(CODE[24]), 
		 -> STR_12(CODE[23]), STR_11(CODE[22]), STR_10(CODE[8]), STR_9(CODE[30]), 
		 -> STR_8(CODE[29]), STR_7(CODE[28]), STR_6(CODE[27]), STR_5(CODE[26]), 
		 -> STR_4(CODE[25]), STR_3(CODE[24]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    EUSART5_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART5_DefaultErrorHandler(), 

    EUSART5_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART5_DefaultErrorHandler(), 

    EUSART5_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART5_DefaultOverrunErrorHandler(), 

    EUSART5_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART5_DefaultOverrunErrorHandler(), 

    EUSART5_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART5_DefaultFramingErrorHandler(), 

    EUSART5_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART5_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _fastChargingcaps->_addCapToParallel
    _sampleEHvoc->_getADCValue
    _sampleChargingCapArray->_getADCValue
    _addCapToParallel->_printf
    _delayedBrownOut->_isolateCapsToSeries
    _sampleTaskCapArray->_getADCValue
    _getADCValue->___flmul
    _isolateCapsToSeries->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART5_Write
    _abs->___aomod
    _atoi->_isspace
    _EUSART5_Initialize->_EUSART5_SetErrorHandler
    _EUSART5_Initialize->_EUSART5_SetFramingErrorHandler
    _EUSART5_Initialize->_EUSART5_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_fastChargingcaps
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0  162523
              _Caps8seriesConnection
                  _SYSTEM_Initialize
                    _delayedBrownOut
                   _fastChargingcaps
                 _isolatedOneTaskCap
 ---------------------------------------------------------------------------------
 (1) _isolatedOneTaskCap                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fastChargingcaps                                     8     8      0   84376
                                             76 BANK0      8     8      0
                             ___flge
                            ___flmul
                   _addCapToParallel
                   _decoupleCapArray
                             _printf
             _sampleChargingCapArray
                        _sampleEHvoc
 ---------------------------------------------------------------------------------
 (2) _sampleEHvoc                                          8     4      4    3474
                                             49 COMRAM     8     4      4
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _sampleChargingCapArray                               8     4      4    3474
                                             49 COMRAM     8     4      4
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _decoupleCapArray                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _addCapToParallel                                     2     2      0   36402
                                             91 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _delayedBrownOut                                      4     4      0   77852
                                             76 BANK0      4     4      0
                             ___flge
                _isolateCapsToSeries
                             _printf
                 _sampleTaskCapArray
 ---------------------------------------------------------------------------------
 (2) _sampleTaskCapArray                                   8     4      4    3452
                                             49 COMRAM     8     4      4
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _getADCValue                                         10     6      4    3428
                                             39 COMRAM    10     6      4
           _ADCC_GetSingleConversion
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) _ADCC_GetSingleConversion                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _isolateCapsToSeries                                  2     2      0   36402
                                             91 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   36402
                                             83 COMRAM     8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   34668
                                             75 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   34292
                                             65 COMRAM    10     4      6
                                             56 BANK0     20    20      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   23564
                                             51 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2960
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1550
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5226
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3577
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     394
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1213
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     812
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART5_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART5_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _ADCC_Initialize
                 _EUSART5_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART5_Initialize                                   0     0      0     294
            _EUSART5_SetErrorHandler
     _EUSART5_SetFramingErrorHandler
     _EUSART5_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART5_SetOverrunErrorHandler                       3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART5_SetFramingErrorHandler                       3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART5_SetErrorHandler                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Caps8seriesConnection                                0     0      0       0
                _C_N_SWALLconnectGND
 ---------------------------------------------------------------------------------
 (2) _C_N_SWALLconnectGND                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR6_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Caps8seriesConnection
     _C_N_SWALLconnectGND
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART5_Initialize
       _EUSART5_SetErrorHandler
       _EUSART5_SetFramingErrorHandler
       _EUSART5_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR6_Initialize
   _delayedBrownOut
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
     _isolateCapsToSeries
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART5_Write
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isdigit
             _isupper
             _strncmp
             _tolower
     _printf
     _sampleTaskCapArray
       _getADCValue
         _ADCC_GetSingleConversion
         ___flmul
         ___xxtofl
   _fastChargingcaps
     ___flge
     ___flmul
     _addCapToParallel
       _printf
     _decoupleCapArray
     _printf
     _sampleChargingCapArray
       _getADCValue
     _sampleEHvoc
       _getADCValue
   _isolatedOneTaskCap

 _INTERRUPT_InterruptManager (ROOT)
   _TMR6_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5A       7       35.2%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     158       8        0.0%
DATA                 0      0     158       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 07 12:54:23 2021

                                  ___fldiv@aexp 0019                                    ___fldiv@bexp 0018  
                                  ___fldiv@sign 0011                                              l41 3E88  
                                            l44 3ED4                                              l47 3EA4  
                                  ___awdiv@sign 0006                             ___wmul@multiplicand 0003  
                                           l208 3A88                                             l232 3EA8  
                                           l241 3F26                                             l162 3542  
                                           l235 3EBC                                             l332 3A3A  
                                           l253 3F02                                             l256 3EF4  
                                           l344 3D50                                             l426 3F2A  
                                           l259 3F10                                             l347 3D70  
                                           l703 3D42                                             l640 3E14  
                                           l632 3E0C                                             l800 27D8  
                                           l712 3AD4                                             l721 3B20  
                                           l650 3E1E                                             l642 3E16  
                                           l634 3E0E                                             l466 3E4C  
                                           l562 380E                                             l810 27E2  
                                           l802 27DA                                             l730 3E68  
                                           l660 3E28                                             l652 3E20  
                                           l644 3E18                                             l636 3E10  
                                           l804 27DC                                             l732 3E6A  
                                           l901 2AAE                                             l821 2808  
                                           l813 2800                                             l741 2732  
                                           l725 3E60                                             l662 3E2A  
                                           l654 3E22                                             l646 3E1A  
                                           l638 3E12                                             l910 2AD0  
                                           l806 27DE                                             l671 3D12  
                                           l903 2AB0                                             l831 2812  
                                           l823 280A                                             l815 2802  
                                           l751 2756                                             l583 3826  
                                           l664 3E2C                                             l656 3E24  
                                           l648 3E1C                                             l912 2AD2  
                                           l840 2836                                             l808 27E0  
                                           l760 277A                                             l728 3E66  
                                           l681 3D1C                                             l673 3D14  
                                           l921 2AF4                                             l833 2814  
                                           l825 280C                                             l817 2804  
                                           l753 2758                                             l745 2750  
                                           l737 272E                                             l658 3E26  
                                           l914 2AD4                                             l906 2ACC  
                                           l850 2840                                             l842 2838  
                                           l762 277C                                             l683 3D1E  
                                           l675 3D16                                             l667 3D0E  
                                           l931 2AFE                                             l923 2AF6  
                                           l835 2816                                             l827 280E  
                                           l819 2806                                             l771 27A0  
                                           l747 2752                                             l739 2730  
                                           l940 2B20                                             l916 2AD6  
                                           l908 2ACE                                             l860 284A  
                                           l852 2842                                             l844 283A  
                                           l764 277E                                             l756 2776  
                                           l685 3D20                                             l677 3D18  
                                           l669 3D10                                             l933 2B00  
                                           l925 2AF8                                             l837 2818  
                                           l829 2810                                             l781 27AA  
                                           l773 27A2                                             l749 2754  
                                           l950 2B2A                                             l942 2B22  
                                           l918 2AD8                                             l862 284C  
                                           l854 2844                                             l846 283C  
                                           l790 27CE                                             l766 2780  
                                           l758 2778                                             l687 3D22  
                                           l679 3D1A                                             l935 2B02  
                                           l927 2AFA                                             l783 27AC  
                                           l775 27A4                                             l871 28DA  
                                           l960 2B34                                             l952 2B2C  
                                           l944 2B24                                             l864 284E  
                                           l856 2846                                             l848 283E  
                                           l792 27D0                                             l768 2782  
                                           l937 2B04                                             l929 2AFC  
                                           l881 2A80                                             l785 27AE  
                                           l777 27A6                                             l954 2B2E  
                                           l946 2B26                                             l866 2850  
                                           l858 2848                                             l794 27D2  
                                           l971 2B58                                             l963 2B50  
                                           l891 2A8C                                             l883 2A82  
                                           l787 27B0                                             l779 27A8  
                                           l956 2B30                                             l948 2B28  
                                           l868 2852                                             l796 27D4  
                                           l981 2B62                                             l973 2B5A  
                                           l965 2B52                                             l990 2B84  
                                           l958 2B32                                             l878 3D9A  
                                           l798 27D6                                             l983 2B64  
                                           l975 2B5C                                             l967 2B54  
                                           l895 2AA8                                             l887 2A88  
                                           l992 2B86                                             l985 2B66  
                                           l977 2B5E                                             l969 2B56  
                                           l897 2AAA                                             l889 2A8A  
                                           l994 2B88                                             l987 2B68  
                                           l979 2B60                                             l899 2AAC  
                                           l996 2B8A                                             l998 2B8C  
                                           _PR6 000FB0                                             _abs 3BF0  
                                           _pad 32F8                         __size_of_PMD_Initialize 001C  
                                  ___awmod@sign 0006                                             wreg 000FE8  
                                  ___flmul@aexp 0020                                    ___flmul@bexp 0021  
                       _EUSART5_SetErrorHandler 3F04                                    ___flmul@sign 001B  
                                  ___flmul@temp 0026                                    ___flmul@prod 0022  
        __end_of_EUSART5_SetFramingErrorHandler 3F04         __size_of_EUSART5_SetFramingErrorHandler 000E  
                _EUSART5_SetFramingErrorHandler 3EF6                                    ___fltol@exp1 000A  
                                          l1000 2B8E                                            l1010 2B98  
                                          l1002 2B90                                            l1020 2BA2  
                                          l1012 2B9A                                            l1004 2B92  
                                          l1014 2B9C                                            l1006 2B94  
                                          l1023 2C20                                            l1031 3ED6  
                                          l1016 2B9E                                            l1008 2B96  
                                          l1033 3ED8                                            l1050 3DE6  
                                          l1018 2BA0                                            l1035 3EDA  
                                          ?_abs 0013                                            l2020 3C66  
                                          l1028 37A0                                            l1037 3EE6  
                                          l2006 3CD6                                            l2014 39EA  
                                          l1047 2574                                            l1320 3116  
                                          l2035 3732                                            l2043 3BEE  
                                          l1315 30D0                                            l1164 2DA8  
                                          l1324 3C9E                                            l1309 369C  
                                          l2063 3D0C                                            l1177 2F0C  
                                          l1281 3480                                            l2057 3998  
                                          l2082 393A                                            l1347 3012  
                                          l2067 32F6                                            l1604 1610  
                                          l1620 3B66                                            l1605 15FE  
                                          l2077 3932                                            l1294 35F2  
                                          l1632 1EBA                                            l1712 2664  
                                          l4201 12B6                                            l5001 2318  
                                          l1705 25CC                                            l1634 1D1A  
                                          l1643 1D60                                            l4211 12DE  
                                          l4203 12B8                                            l5003 2354  
                                          l1580 13DA                                            l1740 3DC0  
                                          l1708 2728                                            l5013 3CA0  
                                          l5021 39B2                                            l1645 1DD8  
                                          l1637 1CDE                                            l4301 14AE  
                                          l4221 1318                                            l4213 12EE  
                                          l4205 12BE                                            l5005 2368  
                                          l5101 0054                                            l1814 219E  
                                          l1646 1DC6                                            l5023 39E0  
                                          l4151 3EB8                                            l5031 1EDC  
                                          l1671 19B2                                            l4311 1520  
                                          l4303 14B4                                            l4231 1344  
                                          l4223 132A                                            l4215 12FE  
                                          l4207 12CC                                            l5007 2390  
                                          l5111 0098                                            l5103 005E  
                                          l1719 26C0                                            l1664 17BC  
                                          l1832 0CA4                                            l5025 39E4  
                                          l5017 399A                                            l4401 2C26  
                                          l4153 3F20                                            l4161 36CC  
                                          l5041 1F50                                            l5033 1F04  
                                          l1681 1AE2                                            l1673 1A2A  
                                          l4321 157A                                            l4305 14DA  
                                          l4313 1530                                            l4241 1358  
                                          l4233 1348                                            l4225 1338  
                                          l4217 1300                                            l4209 12CE  
                                          l5009 23A0                                            l5201 049C  
                                          l5113 00A4                                            l5121 00BA  
                                          l5105 0066                                            l1674 1A18  
                                          l1578 1426                                            l1850 041A  
                                          l5019 399E                                            l4411 2C86  
                                          l4403 2C34                                            l4163 36EA  
                                          l4155 369E                                            l4171 3CE4  
                                          l5051 1F9A                                            l5043 1F6C  
                                          l5035 1F24                                            l4331 15AA  
                                          l4323 1584                                            l4315 1556  
                                          l1595 1540                                            l4307 150E  
                                          l1587 16F6                                            l1579 1414  
                                          l4251 136C                                            l4243 135C  
                                          l4235 134C                                            l4227 133C  
                                          l4219 1308                                            l5211 04D4  
                                          l5203 04A4                                            l5131 0144  
                                          l5123 00E0                                            l5115 00AC  
                                          l5107 0078                                            l1668 1B20  
                                          l1940 38D2                                            l4421 2CD0  
                                          l4413 2C8A                                            l4405 2C54  
                                          l4149 3EA8                                            l4165 3720  
                                          l4157 36B0                                            l4173 3CE8  
                                          l5061 2038                                            l5053 1FA4  
                                          l5045 1F7E                                            l5037 1F34  
                                          l5029 1EBC                                            l4501 1B94  
                                          l4341 15D2                                            l4333 15AE  
                                          l4325 1592                                            l4317 1566  
                                          l4309 1510                                            l4261 13A6  
                                          l4253 1370                                            l4245 1360  
                                          l4237 1350                                            l4229 1340  
                                          l4181 1244                                            l5301 097E  
                                          l5221 051E                                            l5213 04E2  
                                          l5205 04A8                                            l5141 01B4  
                                          l5133 015C                                            l5117 00B0  
                                          l5109 0086                                            l1941 38DA  
                                          l1934 1150                                            l1926 1236  
                                          l4431 2D40                                            l4423 2CDE  
                                          l4415 2C96                                            l4407 2C58  
                                          l4159 36C2                                            l4175 3D00  
                                          l1783 333E                                            l5071 2108  
                                          l5055 1FAA                                            l5063 209C  
                                          l5047 1F8C                                            l5039 1F36  
                                          l4511 1BD4                                            l4503 1BA2  
                                          l4351 162C                                            l4343 15E0  
                                          l4335 15BE                                            l4327 1594  
                                          l4271 13F8                                            l4263 13C2  
                                          l4255 1374                                            l4247 1364  
                                          l4239 1354                                            l4191 1284  
                                          l4183 1252                                            l1951 3214  
                                          l5311 09B2                                            l5303 0984  
                                          l5231 0564                                            l5223 0530  
                                          l5215 04E6                                            l5207 04B0  
                                          l5151 0230                                            l5135 0166  
                                          l5127 0116                                            l5119 00B4  
                                          l6031 3818                                            l6023 3810  
                                          l5401 28F0                                            l4433 2D52  
                                          l4425 2CF0                                            l4417 2CB4  
                                          l4409 2C66                                            l4169 3CD8  
                                          l5081 2152                                            l5065 20B6  
                                          l5073 2118                                            l5057 202C  
                                          l5049 1F92                                            l4601 1E96  
                                          l4521 1C14                                            l4513 1BD6  
                                          l4505 1BA4                                            l4361 1696  
                                          l4353 163A                                            l4345 15F6  
                                          l4329 15A2                                            l4337 15C0  
                                          l4281 1444                                            l4273 1406  
                                          l4265 13D2                                            l4249 1368  
                                          l4257 1378                                            l4193 1286  
                                          l4185 1254                                            l5305 098A  
                                          l5313 09B8                                            l5321 0A50  
                                          l5241 0678                                            l5233 05C8  
                                          l5217 04F8                                            l5225 0538  
                                          l5209 04C2                                            l5153 023A  
                                          l5145 01EA                                            l5129 0128  
                                          l6121 2BE2                                            l6041 384C  
                                          l6033 381E                                            l6025 3810  
                                          l1786 3380                                            l1794 1F5C  
                                          l6123 29A4                                            l5411 2956  
                                          l5403 28F4                                            l4427 2D1E  
                                          l4419 2CBC                                            l4435 2D58  
                                          l4451 2DE0                                            l4443 2DAA  
                                          l5083 215E                                            l5075 212A  
                                          l5067 20D4                                            l5059 2032  
                                          l4603 1E9A                                            l4531 1C44  
                                          l4523 1C1C                                            l4507 1BB4  
                                          l4515 1BDE                                            l4371 16D0  
                                          l4363 16B6                                            l4355 1674  
                                          l4291 1484                                            l4339 15CE  
                                          l4275 1408                                            l4267 13E8  
                                          l4259 137C                                            l4187 1264  
                                          l4195 128E                                            l4179 1238  
                                          l5331 0ABA                                            l5323 0A6E  
                                          l5315 0A10                                            l5307 099C  
                                          l5251 0736                                            l5243 06AC  
                                          l5235 0620                                            l5227 0540  
                                          l5219 0506                                            l5171 037A  
                                          l5163 02B2                                            l5147 01FC  
                                          l5139 018E                                            l5091 0000  
                                          l6043 3856                                            l6035 3822  
                                          l6027 3814                                            l1956 3C26  
                                          l1788 33BC                                            l1796 1F64  
                            _sampleTaskCapArray 3D72                                            l5421 2982  
                                          l5405 28F8                                            l4437 2D68  
                                          l4429 2D3E                                            l4461 2E48  
                                          l4453 2DEE                                            l4445 2DAE  
                                          l4381 3BAC                                            l5085 2166  
                                          l5077 213A                                            l5069 20EE  
                                          l4605 1EA8                                            l4541 1C82  
                                          l4533 1C44                                            l4525 1C20  
                                          l4517 1BEE                                            l4509 1BC4  
                                          l4701 19A2                                            l4621 1712  
                                          l4373 16D6                                            l4365 16BA  
                                          l4349 1620                                            l4357 1676  
                                          l4293 1490                                            l4285 1458  
                                          l4277 1412                                            l4269 13F4  
                                          l4197 129E                                            l4189 1274  
                                          l5341 0AF8                                            l5333 0ABE  
                                          l5325 0A8A                                            l5317 0A44  
                                          l5309 09AE                                            l5261 080A  
                                          l5253 0746                                            l5245 06DE  
                                          l5237 0654                                            l5229 0550  
                                          l5181 03DA                                            l5173 0382  
                                          l5165 02E6                                            l5149 0218  
                                          l5157 0262                                            l5093 000A  
                                          l5501 0EF8                                            l6045 3866  
                                          l6037 3838                                            l6029 3816  
                                          l1990 2A7E                                            l1878 085A  
                                          ?_pad 0013                                            l5431 2A36  
                                          l5423 29BA                                            l5415 295C  
                                          l5407 2918                                            l4439 2D88  
                                          l4463 2E56                                            l4471 2EBC  
                                          l4455 2E0E                                            l4447 2DBC  
                                          l1959 3C2E                                            l4383 3BB8  
                                          l5079 2140                                            l5087 2176  
                                          l4607 1EAE                                            l4551 1CCE  
                                          l4543 1C92                                            l4519 1C04  
                                          l4711 19E2                                            l4703 19B0  
                                          l4631 174A                                            l4623 1714  
                                          l4375 16E4                                            l4367 16C8  
                                          l4359 1686                                            l4295 1494  
                                          l4287 1468                                            l4279 1434  
                                          l4199 12A4                                            l5351 0B2A  
                                          l5343 0B00                                            l5335 0ACE  
                                          l5327 0A9C                                            l5319 0A4C  
                                          l5271 0852                                            l5263 081E  
                                          l5255 077A                                            l5247 06F4  
                                          l5239 065A                                            l5183 03EC  
                                          l5167 02EC                                            l5175 03B4  
                                          l5159 027C                                            l5095 001A  
                                          l5511 0FB2                                            l5503 0F20  
                                          l6119 289C                                            l6047 386A  
                                          l6039 3848                                            l4393 3DC2  
                                          l5433 2A48                                            l5417 2972  
                                          l5409 2952                                            l4473 2ECC  
                                          l4465 2E84                                            l4457 2E2C  
                                          l4449 2DDC                                            l4385 3BCA  
                                          l4801 3556                                            l4609 1EB0  
                                          l4561 1D18                                            l4553 1CDC  
                                          l4545 1CA2                                            l4537 1C58  
                                          l4529 1C34                                            l4481 1B2E  
                                          l4721 1A54                                            l4713 1A10  
                                          l4705 19C2                                            l4641 1776  
                                          l4633 175A                                            l4625 1724  
                                          l4617 16F8                                            l4377 16E6  
                                          l4369 16CE                                            l4297 14A2  
                                          l4289 1476                                            l5353 0B30  
                                          l5361 0B80                                            l5345 0B0E  
                                          l5337 0AE0                                            l5329 0AAA  
                                          l5281 090E                                            l5273 0876  
                                          l5257 07D0                                            l5265 0822  
                                          l5249 0726                                            l5185 03F4  
                                          l5177 03C4                                            l5169 0346  
                                          l5097 0028                                            l5441 3216  
                                          l5513 0FCC                                            l5521 1036  
                                          l5505 0F68                                            l5601 26B0  
                                          l4395 3DDE                                            l5435 2A5A  
                                          l1987 2A76                                            l5427 29F4  
                                          l5419 297A                                            l4475 2EEC  
                                          l4467 2EA4                                            l4459 2E34  
                                          l4387 3BCE                                            l4811 358A  
                                          l4803 355E                                            l4571 1D5E  
                                          l4563 1D2A                                            l4555 1CE8  
                                          l4547 1CAA                                            l4539 1C72  
                                          l4491 1B6E                                            l4483 1B3C  
                                          l4731 1ACA                                            l4723 1A7E  
                                          l4707 19D0                                            l4651 17CC  
                                          l4643 1786                                            l4635 1760  
                                          l4627 1734                                            l4619 1704  
                                          l4299 14A4                                            l5371 0BD0  
                                          l5363 0B92                                            l5355 0B56  
                                          l5347 0B16                                            l5339 0AE8  
                                          l5291 0954                                            l5283 091C  
                                          l5275 08DA                                            l5267 0832  
                                          l5259 07D6                                            l5195 0438  
                                          l5187 040E                                            l5179 03C8  
                                          l5099 0030                                            l5451 3272  
                                          l5443 3240                                            l5531 1120  
                                          l5523 1064                                            l5515 0FDA  
                                          l5611 2708                                            l5603 26CE  
                                          l1996 23B0                                            l5701 3A52  
                                          l4469 2EB6                                            l4821 35C6  
                                          l4813 3592                                            l4805 3562  
                                          l4581 1DBE                                            l4565 1D40  
                                          l4573 1D70                                            l4557 1D06  
                                          l4549 1CBA                                            l4493 1B70  
                                          l4485 1B3E                                            l4733 1AE6  
                                          l4741 1B0C                                            l4717 1A3A  
                                          l4725 1A82                                            l4709 19D4  
                                          l4661 1806                                            l4653 17DC  
                                          l4645 1796                                            l4637 1766  
                                          l4629 1744                                            l4901 2F9E  
                                          l4389 3C30                                            l5373 0BD8  
                                          l5365 0BAC                                            l5357 0B72  
                                          l5349 0B1E                                            l5293 0958  
                                          l5277 08EA                                            l5285 0924  
                                          l5269 0846                                            l5197 044A  
                                          l5189 0426                                            l5453 3292  
                                          l5541 11C2                                            l5533 1160  
                                          l5517 100A                                            l5509 0FA0  
                                          l5461 0CA6                                            l5621 387E  
                                          l5613 2716                                            l5605 26D0  
                                          l5631 3F04                                            l5703 3A62  
                                          l4399 2C22                                            l4823 35CC  
                                          l4815 359A                                            l4807 3570  
                                          l4591 1E2C                                            l4575 1D7E  
                                          l4567 1D46                                            l4559 1D08  
                                          l4487 1B4E                                            l4495 1B78  
                                          l4479 1B22                                            l4743 1B10  
                                          l4735 1AF6                                            l4727 1A9C  
                                          l4719 1A46                                            l4671 1858  
                                          l4663 181C                                            l4647 17A6  
                                          l4639 1774                                            l4911 2FC6  
                                          l4903 2FA8                                            l1999 22F4  
                                          l5391 0C5E                                            l5383 0C28  
                                          l5375 0BE8                                            l5367 0BB2  
                                          l5359 0B7A                                            l5295 095E  
                                          l5287 0936                                            l5279 08FC  
                                          l5199 0466                                            l5455 32A4  
                                          l5447 324C                                            l5543 11D6  
                                          l5527 10DA                                            l5471 0D1A  
                                          l5463 0CCE                                            l5623 388C  
                                          l5615 2718                                            l5607 26D4  
                                          l5711 3A8A                                            l5705 3A72  
                                          l4761 33DC                                            l4753 33BE  
                                          l4817 35A8                                            l4825 35D2  
                                          l4809 3578                                            l4585 1DE8  
                                          l4593 1E30                                            l4577 1D82  
                                          l4569 1D50                                            l4497 1B88  
                                          l4489 1B5E                                            l4841 3670  
                                          l4833 35F4                                            l4737 1B04  
                                          l4729 1AB0                                            l4681 189E  
                                          l4673 1866                                            l4665 1828  
                                          l4657 17F0                                            l4649 17AC  
                                          l4913 2FD2                                            l4905 2FB2  
                                          l5393 0C64                                            l5385 0C3A  
                                          l5377 0BEE                                            l5369 0BC4  
                                          l5297 096A                                            l5289 0944  
                                          l5457 32D0                                            l5449 325A  
                                          l5529 10EC                                            l5537 118C  
                                          l5481 0DB2                                            l5473 0D22  
                                          l5465 0CDC                                            l5553 11FC  
                                          l5625 38B2                                            l5561 3D46  
                                          l5609 26F8                                            l5633 37A2  
                                          l5721 3AB4                                            l5713 3A8C  
                                          l5627 3EF6                                            l5707 3A82  
                                          l5651 3E8A                                            l4931 3336  
                                          l4923 32F8                                            l4771 3410  
                                          l4763 33EA                                            l4755 33C2  
                                          l4827 35E2                                            l4819 35BE  
                                          l4595 1E4A                                            l4587 1DF4  
                                          l4579 1D90                                            l4499 1B8E  
                                          l4843 3694                                            l4835 3622  
                                          l4851 3042                                            l4739 1B06  
                                          l4691 190C                                            l4683 18B8  
                                          l4675 1872                                            l4667 1840  
                                          l4659 17FC                                            l4747 3B22  
                                          l4915 2FE2                                            l5387 0C46  
                                          l5379 0BF4                                            l5395 0C80  
                                          l5299 097A                                            l5555 1224  
                                          l5539 11B4                                            l5547 11E2  
                                          l5491 0E44                                            l5483 0DC0  
                                          l5475 0D30                                            l5467 0CEE  
                                          l5619 3876                                            l5643 3D9C  
                                          l5563 3D4A                                            l5635 37AA  
                                          l5811 3D8A                                            l5803 3D72  
                                          l5731 3AD8                                            l5723 3AC4  
                                          l5715 3A8E                                            l5901 3D3C  
                                          l5629 3EE8                                            l5661 351E  
                                          l5653 3482                                            l4941 33A4  
                                          l4933 334A                                            l4925 3308  
                                          l4781 344A                                            l4773 3418  
                                          l4765 33F2                                            l4757 33D0  
                                          l4829 35EA                                            l4597 1E60  
                                          l4589 1E02                                            l4845 369A  
                                          l4837 3632                                            l4861 30B0  
                                          l4853 3052                                            l4693 1936  
                                          l4685 18C8                                            l4677 1882  
                                          l4669 184C                                            l4749 3B32  
                                          l4917 2FF2                                            l5389 0C4E  
                                          l5549 11F0                                            l5493 0E54  
                                          l5477 0D58                                            l5469 0CF2  
                                          l5645 3DA4                                            l5821 2ABC  
                                          l5565 3D4C                                            l5581 25F2  
                                          l5573 2578                                            l5637 37B8  
                                          l5805 3D72                                            l5741 3B10  
                                          l5733 3ADA                                            l5717 3A90  
                                          l5709 3A8A                                            l5671 3528  
                                          l5663 3520                                            l5655 34BA  
                                          l5399 28DC                                            l4935 335E  
                                          l4927 331C                                            l4791 3470  
                                          l4783 3452                                            l4775 3420  
                                          l4767 33F6                                            l4759 33D8  
                                          l4599 1E7A                                            l4839 3660  
                                          l4863 30BE                                            l4855 3080  
                                          l4695 196C                                            l4687 18E4  
                                          l4679 188E                                            l4871 3C68  
                                          l4919 3002                                            l4951 3138  
                                          l5495 0E8A                                            l5487 0E0C  
                                          l5479 0D92                                            l5831 2B36  
                                          l5823 2ADA                                            l5815 2A8E  
                                          l5567 3D4E                                            l5591 264C  
                                          l5575 2588                                            l5639 37FE  
                                          l5807 3D74                                            l5751 2740  
                                          l5735 3ADC                                            l5727 3AD6  
                                          l5719 3AA4                                            l5911 23FA  
                                          l5903 23B2                                            l5649 3F28  
                                          l5681 3532                                            l5673 352A  
                                          l5665 3522                                            l5657 351A  
                                          l4945 3BF0                                            l4937 3362  
                                          l4929 332A                                            l4793 3478  
                                          l4785 3454                                            l4777 342E  
                                          l4769 33FE                                            l4865 310E  
                                          l4857 3090                                            l4849 3014  
                                          l4697 197A                                            l4689 18F0  
                                          l4873 3C7E                                            l4881 2F24  
                                          l4953 3176                                            l4961 31B6  
                                          l5497 0E9A                                            l5489 0E1E  
                                          l5841 2BAE                                            l5833 2B40  
                                          l5825 2AE4                                            l5817 2A98  
                                          l5569 3D5E                                            l5593 264E  
                                          l5585 2606                                            l5577 2596  
                                          l5809 3D76                                            l5761 2784  
                                          l5753 2746                                            l5745 3E50  
                                          l5737 3AF0                                            l5729 3AD6  
                                          l5921 24B8                                            l5913 2416  
                                          l5905 23C4                                            l5691 39EC  
                                          l5683 3534                                            l5675 352C  
                                          l5667 3524                                            l5659 351C  
                                          l4947 3C0A                                            l4939 3390  
                                          l4787 345A                                            l4779 3434  
                                          l4867 3114                                            l4859 309E  
                                          l4699 1998                                            l4875 3C8E  
                                          l4891 2F74                                            l4963 31C8  
                                          l4955 319E                                            l4971 393C  
                                          l5499 0ED0                                            l5843 2BBE  
                                          l5835 2B6A                                            l5827 2B06  
                                          l5819 2AB2                                            l5595 265A  
                                          l5587 260E                                            l5579 25DC  
                                          l5771 27C4                                            l5763 2790  
                                          l5755 275A                                            l5747 272A  
                                          l5739 3B00                                            l5931 255C  
                                          l5923 24C0                                            l5915 242A  
                                          l5907 23CA                                            l5685 3536  
                                          l5677 352E                                            l5669 3526  
                                          l5693 3E2E                                            l5861 3E7C  
                                          l5853 3E6C                                            l4789 3460  
                                          l4797 3544                                            l4893 2F78  
                                          l4885 2F38                                            l4957 31AA  
                                          l4949 3118                                            l4973 394C  
                                          l4981 3924                                            l5837 2B74  
                                          l5829 2B10                                            l5597 2696  
                                          l5589 261A                                            l5941 3734  
                                          l5781 2826                                            l5773 27E4  
                                          l5765 2796                                            l5757 2766  
                                          l5749 2734                                            l5933 2568  
                                          l5925 24F2                                            l5917 2446  
                                          l5909 23DE                                            l5687 3538  
                                          l5679 3530                                            l5695 3E42  
                                          l5863 3E80                                            l5855 3E70  
                                          l4799 3548                                            l4895 2F86  
                                          l4887 2F62                                            l4879 2F0E  
                                          l4967 320C                                            l4991 222A  
                                          l4975 38DC                                            l5839 2BA4  
                                          l5847 2BCE                                            l5599 26A2  
                                          l5943 3748                                            l5791 2870  
                                          l5783 282C                                            l5775 27F0  
                                          l5767 27B2                                            l5759 276C  
                                          l5935 256E                                            l5927 2516  
                                          l5919 2462                                            l5689 3EBE  
                                          l5697 3E46                                            l5865 3E84  
                                          l5857 3E74                                            l4889 2F64  
                                          l4993 2238                                            l4985 21A0  
                                          l5945 377A                                            l5785 2854  
                                          l5777 27F6                                            l5769 27BE  
                                          l5929 252A                                            l5937 3EDC  
                                          l5891 3D2E                                            l5883 3D24  
                                          l5699 3A3C                                            l5859 3E78  
                                          l4987 21C0                                            l4979 3912  
                                          l5947 379A                                            l5939 3734  
                                          l5787 2860                                            l5779 281A  
                                          l5795 2886                                            l5893 3D30  
                                          l5885 3D28                                            l4997 22A8  
                                          l4989 2216                                            l5789 2866  
                                          l5895 3D32                                            l5887 3D2A  
                                          l4999 22E4                                            l5897 3D34  
                                          l5889 3D2C                                            l5899 3D36  
                                          STR_1 FFF9                                            STR_2 FFFC  
                                          STR_3 FF31                                            STR_4 FF00  
                                          STR_5 FECD                                            STR_6 FE98  
                                          STR_7 FE61                                            STR_8 FE28  
                                          STR_9 FE0A                                            u3000 1252  
                                          u3001 124E                                            u3010 1264  
                                          u3011 1260                                            u3100 13BE  
                                          u3020 1274                                            u3101 13B8  
                                          u3021 1270                                            _LATA 000F79  
                                          u3110 13C0                                            u3030 12B6  
                                          _LATB 000F7A                                            u3031 12B2  
                                          _LATC 000F7B                                            u4000 342E  
                                          u3200 14DA                                            u3120 13E8  
                                          u3040 12CC                                            _LATD 000F7C  
                                          u4001 342A                                            u3201 14D6  
                                          u3121 13E4                                            u3041 12C8  
                                          _LATE 000F7D                                            u4010 344A  
                                          u3210 1520                                            u3130 1406  
                                          u3050 12DE                                            _LATF 000F7E  
                                          u4011 3446                                            u3211 151C  
                                          u3131 1402                                            u3051 12DA  
                                          _LATG 000F7F                                            u4020 3470  
                                          u4100 3660                                            u3300 160C  
                                          u3220 1556                                            u3140 1426  
                                          u3060 12EE                                            _LATH 000F80  
                                          u4021 346C                                            u4101 365C  
                                          u3301 1608                                            u3221 1552  
                                          u3141 1422                                            u3061 12EA  
                                          u4030 3556                                            u4110 3694  
                                          u3310 1620                                            u3230 1566  
                                          u3150 1434                                            u3070 132A  
                                          u4031 3552                                            u4111 3690  
                                          u3311 161C                                            u3231 1562  
                                          u3151 1430                                            u3071 1326  
                                          u4040 3570                                            u4120 3042  
                                          u3320 163A                                            u3240 1592  
                                          u3160 1444                                            u3080 1338  
                                          u4200 2F86                                            u3400 3C60  
                                          u5000 06DE                                            u4041 356C  
                                          u4121 303E                                            u3321 1636  
                                          u3241 158E                                            u3161 1440  
                                          u3081 1334                                            u4201 2F82  
                                          u3401 3C5A                                            u5001 06DA  
                                          u4050 358A                                            u4130 3080  
                                          u3330 1674                                            u3250 15A2  
                                          u3170 1476                                            u3090 13A6  
                                          u4210 2F9A                                            u3410 3C62  
                                          u5010 0726                                            u4051 3586  
                                          u4131 307C                                            u3331 1670  
                                          u3251 159E                                            u3171 1472  
                                          u3091 13A2                                            u4211 2F96  
                                          u5011 0722                                            u3420 2C34  
                                          u3500 2DEE                                            u4060 35A8  
                                          u4140 309E                                            u3340 1686  
                                          u3260 15BE                                            u3180 1484  
                                          u4220 2FC2                                            u4300 3158  
                                          u5100 0936                                            u5020 0736  
                                          u3421 2C30                                            u3501 2DEA  
                                          u4061 35A4                                            u4141 309A  
                                          u3341 1682                                            u3261 15BA  
                                          u3181 1480                                            u4221 2FBE  
                                          u5101 0932                                            u5021 0732  
                                          u3430 2C66                                            u3510 2E2C  
                                          u4070 35BE                                            u4150 30BE  
                                          u3350 1696                                            u3270 15CE  
                                          u3190 14A2                                            u4230 2FE2  
                                          u4310 3176                                            u5110 0944  
                                          u5030 07D0                                            u3431 2C62  
                                          u3511 2E28                                            u4071 35BA  
                                          u4151 30BA                                            u3351 1692  
                                          u3271 15CA                                            u3191 149E  
                                          u4231 2FDE                                            u4311 3172  
                                          u5111 0940                                            u5031 07CC  
                                          u3520 2E56                                            u4080 35E2  
                                          u3600 1BC4                                            u4160 310E  
                                          u3360 16B6                                            u3280 15E0  
                                          u4240 2FF2                                            u4320 319E  
                                          u4400 390E                                            u5200 0BAC  
                                          u5120 099C                                            u5040 081E  
                                          u3441 2C90                                            u3521 2E52  
                                          u4081 35DE                                            u3601 1BC0  
                                          u4161 310A                                            u3361 16B2  
                                          u3281 15DC                                            u4241 2FEE  
                                          u4321 319A                                            u4305 314E  
                                          u5201 0BA8                                            u5121 0998  
                                          u5041 081A                                            u3450 2CB4  
                                          u3530 2E84                                            u4250 3308  
                                          u3610 1C04                                            u4090 3622  
                                          u4170 3C7E                                            u3370 16C8  
                                          u3290 15F6                                            u4330 31C8  
                                          u4410 3924                                            u5210 0BC4  
                                          u5130 0A6E                                            u5050 0846  
                                          u3451 2CB0                                            u3531 2E80  
                                          u4251 3304                                            u3611 1C00  
                                          u4091 361E                                            u4171 3C7A  
                                          u3371 16C4                                            u3291 15F2  
                                          u4331 31C4                                            u4411 3920  
                                          u5211 0BC0                                            u5131 0A6A  
                                          u5051 0842                                            u5300 2A48  
                                          u3460 2CDE                                            u3540 2ECC  
                                          u4260 332A                                            u3700 1D90  
                                          u3620 1C44                                            u3380 16E4  
                                          u4180 2F24                                            u4500 2354  
                                          u4420 21E8                                            u5220 0C22  
                                          u5140 0A8A                                            u5060 08EA  
                                          u5301 2A44                                            u3461 2CDA  
                                          u3541 2EC8                                            u4261 3326  
                                          u3701 1D8C                                            u3621 1C40  
                                          u3381 16E0                                            u4181 2F20  
                                          u4501 2350                                            u5221 0C1C  
                                          u5141 0A86                                            u5061 08E6  
                                          u5310 2A5A                                            u3470 2D1E  
                                          u3390 3BEE                                            u4270 3380  
                                          u3710 1DBE                                            u3630 1CBA  
                                          u3550 1B3C                                            u4190 2F58  
                                          u4350 3202                                            u4510 2390  
                                          u4430 2216                                            u5230 0C24  
                                          u5150 0A9C                                            u5070 08FC  
                                          u5311 2A56                                            u3471 2D1A  
                                          u3391 3BEA                                            u4271 337C  
                                          u3711 1DBA                                            u3631 1CB6  
                                          u3551 1B38                                            u4351 31FC  
                                          u4511 238C                                            u4431 2212  
                                          u5151 0A98                                            u5071 08F8  
                                          u4520 3CD0                                            u3480 2D68  
                                          u4280 3390                                            u4600 1F50  
                                          u3720 1DD4                                            u3640 1CDC  
                                          u3560 1B4E                                            u3800 1734  
                                          u4360 3204                                            u4440 2238  
                                          u5240 0C3A                                            u5160 0AAA  
                                          u5080 090E                                            u5320 3240  
                                          u5400 0E04                                            u4521 3CCA  
                                          u3481 2D64                                            u4281 338C  
                                          u4601 1F4C                                            u3721 1DD0  
                                          u3641 1CD8                                            u3561 1B4A  
                                          u3801 1730                                            u4345 31DA  
                                          u4441 2234                                            u4425 21DE  
                                          u5241 0C36                                            u5161 0AA6  
                                          u5081 090A                                            u5321 323C  
                                          u5401 0DFE                                            u4530 3CD2  
                                          u5250 2918                                            u3490 2DBC  
                                          u4290 3C0A                                            u4610 1F7E  
                                          u3730 1DE8                                            u3650 1D06  
                                          u3570 1B5E                                            u3810 1774  
                                          u4370 3986                                            u5170 0AE0  
                                          u5090 091C                                            u5330 3272  
                                          u5410 0E06                                            _T6PR 000FB0  
                                          u5251 2914                                            u3491 2DB8  
                                          u4291 3C06                                            u4611 1F7A  
                                          u3731 1DE4                                            u3651 1D02  
                                          u3571 1B5A                                            u3811 1770  
                                          u4195 2F4E                                            u5171 0ADC  
                                          u5091 0918                                            u5331 326E  
                                          u4540 39B2                                            u5260 2952  
                                          u2940 3EB8                                            u4700 2152  
                                          u4620 1F8C                                            u3740 1E02  
                                          u3660 1D2A                                            u3580 1BA2  
                                          u3900 1A10                                            u3820 1786  
                                          u4460 22A4                                            u4380 3998  
                                          u5180 0B0E                                            u5340 3292  
                                          u5500 10D4                                            u5420 0E1E  
                                          _PMD0 000E4C                                            u4541 39AE  
                                          u5261 294E                                            u2941 3EB4  
                                          u4701 214E                                            u4621 1F88  
                                          u3741 1DFE                                            u3661 1D26  
                                          u3581 1B9E                                            u3901 1A0C  
                                          u3821 1782                                            u4461 22A0  
                                          u4381 3994                                            u5181 0B0A  
                                          u5341 328E                                            u5421 0E1A  
                                          _PMD1 000E4D                                            u4550 39E0  
                                          u5270 296E                                            u2950 36B0  
                                          u4630 20B6                                            u3750 1E4A  
                                          u3670 1D40                                            u3590 1BB4  
                                          u3910 1A26                                            u3830 1796  
                                          u4470 22C8                                            u4390 390C  
                                          u5190 0B92                                            u4710 0028  
                                          u5350 32A4                                            u5510 10EC  
                                          u5430 0E54                                            _PMD2 000E4E  
                                          u4551 39DC                                            u5271 296A  
                                          u2951 36AC                                            u4631 20B2  
                                          u3751 1E46                                            u3671 1D3C  
                                          u3591 1BB0                                            u3911 1A22  
                                          u3831 1792                                            u4455 224C  
                                          u4391 3906                                            u5191 0B8E  
                                          u4711 0024                                            u5351 32A0  
                                          u5511 10E8                                            u5431 0E50  
                                          _PMD3 000E4F                                            u5280 2A30  
                                          u2960 36C2                                            u4640 20D4  
                                          u4560 1EEC                                            u3760 1E7A  
                                          u3680 1D5E                                            u3920 1A3A  
                                          u3840 17CC                                            u4480 22E4  
                                          u4456 2256                                            u4800 01E2  
                                          u4720 0078                                            u5360 32D0  
                                          u5520 11B4                                            u5440 0E9A  
                                          u5600 26C0                                            _PMD4 000E50  
                                          u5281 2A2A                                            u2961 36BE  
                                          u4641 20D0                                            u4561 1EE6  
                                          u3761 1E76                                            u3681 1D5A  
                                          u3921 1A36                                            u3841 17C8  
                                          u4481 22E0                                            u4457 2266  
                                          u4377 397C                                            u4801 01DC  
                                          u4721 0074                                            u5361 32CC  
                                          u5521 11B0                                            u5441 0E96  
                                          u5601 26BC                                            _PMD5 000E51  
                                          u5290 2A32                                            u2970 36EA  
                                          u4650 20EE                                            u4570 1EEE  
                                          u3770 1EA8                                            u3690 1D7E  
                                          u3930 1A54                                            u3850 17DC  
                                          u4490 2338                                            u4810 01E4  
                                          u4730 0086                                            u5450 0EF8  
                                          u5370 0CCE                                            u5530 3D5E  
                                          u5610 26CE                                            u2971 36E6  
                                          u4651 20EA                                            u3771 1EA4  
                                          u3691 1D7A                                            u3931 1A50  
                                          u3851 17D8                                            u4475 22BE  
                                          u4731 0082                                            u5451 0EF4  
                                          u5371 0CCA                                            u5531 3D5A  
                                          u5611 26CA                                            u2980 3720  
                                          u4660 2108                                            u4580 1F04  
                                          u3940 1A9C                                            u3860 1956  
                                          u3780 1712                                            u4900 044A  
                                          u4820 01FC                                            u4740 0098  
                                          u5460 0F20                                            u5380 0D1A  
                                          u5620 2708                                            u5540 2588  
                                          u5700 252A                                            u2981 371C  
                                          u4661 2104                                            u4581 1F00  
                                          u3941 1A98                                            u3781 170E  
                                          u4901 0446                                            u4821 01F8  
                                          u4741 0094                                            u5461 0F1C  
                                          u5381 0D16                                            u5621 2704  
                                          u5541 2584                                            u5701 2526  
                                          u2990 3D00                                            u4670 2118  
                                          u4590 1F34                                            u3950 1ACA  
                                          u3870 19B0                                            u3790 1724  
                                          u4910 0466                                            u4830 02AE  
                                          u4750 00E0                                            u5470 0FB2  
                                          u5390 0D58                                            u5630 2716  
                                          u5550 2596                                            u5710 255C  
                                          u2991 3CFC                                            u4671 2114  
                                          u4591 1F30                                            u3951 1AC6  
                                          u3871 19AC                                            u3791 1720  
                                          u4495 232E                                            u4911 0462  
                                          u4831 02AA                                            u4751 00DC  
                                          u5471 0FAE                                            u5391 0D54  
                                          u5631 2712                                            u5551 2592  
                                          u5711 2558                                            u4680 212A  
                                          u3960 1B04                                            u3880 19D0  
                                          u4920 049C                                            u4840 0342  
                                          u4760 010E                                            u5480 1064  
                                          u5640 38D2                                            u5560 25F2  
                                          u5720 377A                                            u4681 2126  
                                          u3961 1B00                                            u3881 19CC  
                                          u3865 194C                                            u4921 0498  
                                          u4841 033E                                            u4761 0108  
                                          u5481 1060                                            u5641 38CE  
                                          u5561 25EE                                            u5721 3776  
                                          u4690 213A                                            u3970 33D0  
                                          u3890 19E2                                            u4930 04C2  
                                          u4850 03B4                                            u4770 0110  
                                          u5490 10D2                                            u5570 2648  
                                          u5650 3E60                                            u4691 2136  
                                          u3971 33CC                                            u3891 19DE  
                                          u4931 04BE                                            u4851 03B0  
                                          u5491 10CC                                            u5571 2644  
                                          u5651 3E5C                                            u3980 33EA  
                                          u4940 04D4                                            u4860 03DA  
                                          u4780 0128                                            u5580 2692  
                                          u5900 3848                                            u3981 33E6  
                                          u4941 04D0                                            u4861 03D6  
                                          u4781 0124                                            u5581 268E  
                                          u5901 3844                                            u3990 3410  
                                          u4950 04E2                                            u4870 03EC  
                                          u4790 01B4                                            u5590 26B0  
                                          u5910 3866                         ?_sampleChargingCapArray 0032  
                                          u3991 340C                                            u4951 04DE  
                                          u4871 03E8                                            u4791 01B0  
                                          u5591 26AC                                            u5911 3862  
                                          u4960 04F8                                            u4880 040E  
                                          u5680 24B8                                            u4961 04F4  
                                          u4881 040A                                            u5681 24B4  
                                          u4970 0506                                            u4890 0434  
                                          u5690 24F2                                            u4971 0502  
                                          u4891 0430                                            u5691 24EE  
                                          u4980 0530                                            u4981 052C  
                                          u4990 0678                                            u4991 0674  
                                          u5890 3838                                            u5891 3834  
                                          _TMR6 000FAF                                            _WPUA 000E91  
                                          _WPUB 000E99                                            _WPUC 000EA1  
                                          _WPUD 000EA6                                            _WPUE 000EAE  
                                          _WPUF 000EB3                                            _WPUG 000EBB  
                                          _WPUH 000EC0                             EUSART5_Write@txData 0001  
            _EUSART5_DefaultFramingErrorHandler 000000                                            abs@a 0013  
                                          _dbuf 0100                                            _atoi 28DC  
                                          _main 3810                                            _dtoa 1EBC  
                                 _EUSART5_Write 3EA6                                            _prec 00D3  
                                          _nout 00CF                                            pad@i 001A  
                                          pad@p 0017                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 001C                                            fsr2l 000FD9  
                                          btemp 005F                                   ___fpclassifyf 3118  
                                          prodh 000FF4                                            prodl 000FF3  
                           ?_sampleTaskCapArray 0032                                            start 003E  
                               ___fldiv@new_exp 0012                                    _tolower$2154 000D  
                                  ___param_bank 000000                            __size_of_getADCValue 006E  
                                         ??_abs 0015                                           ??_pad 0019  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 3ED6  
                                 ___fltol@sign1 0009                              _eusart5RxLastError 00DA  
                               __end_of___aodiv 2DAA                                           _ADACQ 000F5C  
                                         _ADCAP 000F5D                                           _ADACT 000F56  
                                         ?_atoi 0008                                 __end_of___fladd 16F8  
                                         ?_main 0001                                           ?_dtoa 001E  
                                         _ADCLK 000F57                                 __end_of___aomod 2F0E  
                                         _ADCNT 000F67                                           _ADPCH 000F5F  
                               __end_of___fldiv 1EBC                                           _ADREF 000F58  
                               __end_of___awdiv 3482                                 __end_of___flneg 3CA0  
                                         _ADPRE 000F5E                                           STR_10 FFDE  
                                         STR_11 FF60                                           STR_20 FFC4  
                                         STR_12 FF49                                           STR_21 FFA0  
                                         STR_13 FF19                                           STR_30 FFF2  
                                         STR_22 FFB4                                           STR_14 FEE7  
                                         STR_23 FF8B                                           STR_15 FEB3  
                                         STR_16 FE7D                                           STR_24 FDD1  
                                         STR_33 FFF6                                           STR_25 FFE6  
                                         STR_17 FE45                                           STR_26 FFEE  
                                         STR_18 FF76                                           STR_35 FFF6  
                                         STR_19 FFD3                                 __end_of___awmod 35F4  
                                         STR_29 FFEA                                           _ADRPT 000F66  
                               __end_of___flmul 1B22                                 __end_of___flsub 3B68  
                               __end_of___fltol 3014                                 ___awdiv@divisor 0003  
                                         _T6CON 000FB1                                           _T6HLT 000FB2  
                                         i2l505 3F1C                                           i2l433 003A  
                                         _T6TMR 000FAF                                           _T6RST 000FB4  
                          ??_sampleTaskCapArray 0036                                 ___awdiv@counter 0005  
                                         _OSCEN 000E47                                    vfpfcnvrt@fmt 0044  
                                         _TRISA 000F81                                           _TRISB 000F82  
                                         _TRISC 000F83                                           _TRISD 000F84  
                                         _TRISE 000F85                                           _TRISF 000F86  
                                         _TRISG 000F87                                           _TRISH 000F88  
                        getADCValue@getADCValue 0030                                __end_of_TMR6_ISR 3F1E  
                                         _flags 00D5                  __end_of_sampleChargingCapArray 3B22  
                                         _msgOK 00FC                                           _fputc 369E  
                                         _fputs 3BAC                                 __end_of_isdigit 3CD8  
                                         atoi@n 0015                                           pad@fp 0013  
                                         atoi@s 0008                                           _width 00D1  
                                         _putch 3F1E                                           dtoa@d 0020  
                                         dtoa@i 0040                                           dtoa@n 0038  
                                         dtoa@p 0032                                           dtoa@s 0036  
                                         dtoa@w 0034                                 __end_of_isspace 39EC  
                               __end_of_isupper 3C68                                           tablat 000FF5  
                                ?_EUSART5_Write 0001                         ??_Caps8seriesConnection 0001  
                                         ttemp5 0060                                           ttemp6 0063  
                                         ttemp7 0067                                           status 000FD8  
                                         wtemp8 0060                                  ?___fpclassifyf 0001  
                               __end_of_tolower 393C                                 __end_of_strncmp 32F8  
                      __size_of_delayedBrownOut 006E                                 __initialization 3B68  
                                  __end_of_atoi 2A80                                    __end_of_main 3876  
                                  __end_of_dtoa 21A0                     ?_INTERRUPT_InterruptManager 0001  
                             ?_fastChargingcaps 0001                        __end_of_decoupleCapArray 3E6C  
                                        ??_atoi 000A                                          ??_main 005E  
                                        ??_dtoa 0028                              ??_fastChargingcaps 005E  
                                 __activetblptr 000003                       ??_EUSART5_SetErrorHandler 0004  
                                  ?_sampleEHvoc 0032                     _EUSART5_DefaultErrorHandler 000000  
                               _TMR6_Initialize 3E2E                                          _ADACCH 000F71  
                                        _ADACCL 000F70                                          _ADCON0 000F60  
                                        _ADCON1 000F59                                          _ADCON2 000F5A  
                                        _ADCON3 000F5B                       __size_of_addCapToParallel 01B2  
                                        _ADERRH 000F6F                                          _ADERRL 000F6E  
                                        ?_fputc 0003                            fastChargingcaps@vcap 00B0  
                                        _ADLTHH 000F6B                                          _ADLTHL 000F6A  
                                        ?_fputs 000C                                          _ADRESH 000F64  
                                        _ADRESL 000F63                                          _ADSTAT 000F65  
                                        _ADUTHH 000F6D                                ___awdiv@dividend 0001  
                                        _ADUTHL 000F6C                                          _ANSELA 000E92  
                                        ?_putch 0001                                          _ANSELB 000E9A  
                                        _ANSELD 000EA7                                          _ANSELE 000EAF  
                                        _ANSELF 000EB4                                          _ANSELG 000EBC  
                                        _RC5REG 000EDC                     __size_of_isolatedOneTaskCap 0012  
                                        _RC5STA 000EE0                                          _ODCONA 000E90  
                                        _ODCONB 000E98                                          _ODCONC 000EA0  
                                        _RE2PPS 000E74                                          _ODCOND 000EA5  
                                        _ODCONE 000EAD                                          _ODCONF 000EB2  
                                        _ODCONG 000EBA                                          _ODCONH 000EBF  
                                        _INLVLA 000E8E                                          _INLVLB 000E96  
                                        _INLVLC 000E9E                                          _INLVLD 000EA3  
                                        _INLVLE 000EAB                                          _INLVLF 000EB0  
                                        _INLVLG 000EB8                                          _INLVLH 000EBD  
                                        i2l5881 3F16                                          i2l5953 000A  
                                        i2l5955 0018                                          i2l5957 0028  
                                        i2l5879 3F12                                          i2l5959 0036  
                                        _OSCFRQ 000E49                                          _RX5PPS 000E17  
                                        _TX5REG 000EDD                                          _TX5STA 000EE1  
                              __end_of___xxtofl 272A                     __end_of_C_N_SWALLconnectGND 3E2E  
                                  vfprintf@cfmt 0052                                          ___flge 3014  
                                        ___fleq 35F4                                       ??___aodiv 0011  
                                     ??___fladd 0009                                       ??___aomod 0011  
                                        ___wmul 3DC2                                       ??___fldiv 0009  
                                     ??___awdiv 0005                                       ??___flneg 0005  
                                     ??___awmod 0005                                       ??___flmul 0017  
                                     ??___flsub 0030                                       ??___fltol 0005  
                                        _efgtoa 0000                                          _floorf 21A0  
                                        clear_0 3B8E                                          clear_1 3B9A  
                              ___awdiv@quotient 0007                                 ___awmod@divisor 0003  
                                        isa$std 000001                                 ___awmod@counter 0005  
                                        _printf 3D9C                                          pad@buf 0015  
                   _EUSART5_FramingErrorHandler 0156                                          dtoa@fp 001E  
                                        _strcpy 393C                                          _strlen 3CD8  
                               _ADCC_Initialize 39EC                                          fputc@c 0003  
                                _PMD_Initialize 3E8A                                          fputs@c 0010  
                                        fputs@i 0011                                          fputs@s 000C  
                                     ??_isdigit 0003                                 ___fpclassifyf@e 0009  
                               ___fpclassifyf@u 000B                                 ___fpclassifyf@x 0001  
                                  __mediumconst FDD0                                       ??_isspace 0003  
                                        tblptrh 000FF7                                       ??_isupper 0003  
                                        tblptrl 000FF6                                          tblptru 000FF8  
             __size_of_ADCC_GetSingleConversion 002E                            _EUSART5_ErrorHandler 0150  
                              __end_of_vfprintf 38DC                       ?_ADCC_GetSingleConversion 0001  
                                     ??_tolower 0009                                 ??_EUSART5_Write 0001  
                                     ??_strncmp 0007                   __size_of_INTERRUPT_Initialize 0004  
                                    ___flge@ff1 0028                                      ___flge@ff2 002C  
                               ??___fpclassifyf 0005                                    ___xxtofl@arg 000B  
                                  ___xxtofl@exp 000A                               _SYSTEM_Initialize 3E6C  
                                  ___xxtofl@val 0001                                      ___fleq@ff1 0001  
                                    ___fleq@ff2 0005                                      __accesstop 0060  
                       __end_of__initialization 3BA2                                      ___flneg@f1 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                    ___fltol@f1 0001                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 3DE8                             ??_SYSTEM_Initialize 0004  
                   __end_of_isolateCapsToSeries 2C22                      __end_of_EUSART5_Initialize 3A8A  
                                     ?_TMR6_ISR 0001                                   __end_of_fputc 3734  
                                 __end_of_fputs 3BF0                               ??_delayedBrownOut 005E  
                                 __end_of_putch 3F28                         __end_of_TMR6_Initialize 3E4E  
                        __end_of_PMD_Initialize 3EA6                            _capTaskParalle_count 00D7  
                                       ??_fputc 0007                       __end_of_SYSTEM_Initialize 3E8A  
                                       ??_fputs 0010                                         ??_putch 0002  
                                    __pbssBANK0 00B4                                      __pbssBANK1 0100  
              ??_EUSART5_SetFramingErrorHandler 0004                 ?_EUSART5_SetFramingErrorHandler 0001  
                              _capParalle_count 00FF                                         ?___flge 0028  
                                       ?___fleq 0001                                         ?___wmul 0001  
                       __end_of_ADCC_Initialize 3A3C                                      ??_TMR6_ISR 0001  
                                       ?_efgtoa 0034                                         _ADFLTRH 000F73  
                                       ?_floorf 001A                                         _ADFLTRL 000F72  
                                       _ADPREVH 000F62                                         _ADPREVL 000F61  
                                       _ADSTPTH 000F69                                         _ADSTPTL 000F68  
                                       ?_printf 0054                                 ?_PMD_Initialize 0001  
                                       ?_strcpy 0001                                         ?_strlen 0001  
                                     ?___xxtofl 0001                                 _capSeries_count 0159  
                                       _SP5BRGH 000EDF                                         _SP5BRGL 000EDE  
                                       _OSCCON1 000E43                                         _OSCCON3 000E45  
                            __size_of_vfpfcnvrt 0592                            __size_of_sampleEHvoc 004C  
                                       _OSCTUNE 000E48                                         _SLRCONA 000E8F  
                                       _SLRCONB 000E97                                         _SLRCONC 000E9F  
                                       _SLRCOND 000EA4                                         _SLRCONE 000EAC  
                                       _SLRCONF 000EB1                                         _SLRCONG 000EB9  
                                       _SLRCONH 000EBE                                _addCapToParallel 272A  
                             _Flag5sfastcharing 00DB                  __size_of_Caps8seriesConnection 0036  
                 __end_of_Caps8seriesConnection 3D44                                         __Hparam 0000  
                                 ??_getADCValue 002C                                         __Lparam 0000  
                               __size_of___flge 0104                                 __size_of___fleq 00AA  
                                       ___aodiv 2C22                                         ___fladd 1238  
                                       ___aomod 2DAA                                         ___fldiv 1B22  
                                       ___awdiv 33BE                                         ___flneg 3C68  
                                       ___awmod 3544                                         ___flmul 16F8  
                                       ___flsub 3B22                                         ___fltol 2F0E  
                               __size_of___wmul 0026                                       ?_vfprintf 004C  
                               __size_of_efgtoa 0CA6                                 __size_of_floorf 0212  
                                       __pcinit 3B68                                ?_TMR6_Initialize 0001  
                                       __ramtop 0E00                               ?_decoupleCapArray 0001  
                                       __ptext0 3810                                         __ptext1 3ED6  
                                       __ptext2 23B2                                         __ptext3 3A8A  
                                       __ptext4 3AD6                                         __ptext5 3E4E  
                                       __ptext6 272A                                         __ptext7 3734  
                                       __ptext8 3D72                                         __ptext9 37A2  
                               __size_of_printf 0026                                 __size_of_strcpy 005E  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 3EBE  
                                  __size_of_abs 0040                              ??_decoupleCapArray 0001  
                   __size_of_sampleTaskCapArray 002A                                    __size_of_pad 00C6  
                                       _isdigit 3CA0                                      ??___xxtofl 0005  
                              ___awmod@dividend 0001                        ??_PIN_MANAGER_Initialize 0001  
                                       _isspace 399A                                         _isupper 3C30  
                                       efgtoa@c 003A                                         efgtoa@d 0078  
                                       efgtoa@e 0090                                         efgtoa@f 0036  
                                       efgtoa@g 008C                                         efgtoa@h 0082  
                                       efgtoa@i 008A                                         efgtoa@l 0086  
                                       efgtoa@m 0072                                         efgtoa@n 0092  
                                       efgtoa@p 007C                                         efgtoa@t 006C  
                                       efgtoa@u 0094                                         efgtoa@w 007E  
                                     _T6CONbits 000FB1                                         atoi@neg 000E  
                                     _T6HLTbits 000FB2                      __size_of_SYSTEM_Initialize 001E  
                                       _tolower 38DC                                         _strncmp 3216  
                          end_of_initialization 3BA2                       __size_of_fastChargingcaps 01C4  
                                       floorf@e 0028                                         floorf@m 0024  
                                       floorf@u 002A                                         floorf@x 001A  
                                       fputc@fp 0005                                         fputs@fp 000E  
                                     _T6RSTbits 000FB4                               __end_of_vfpfcnvrt 1238  
                                    efgtoa@mode 0081                                      efgtoa@sign 007A  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                ?_ADCC_Initialize 0001  
                                    ??_vfprintf 0052                __end_of_ADCC_GetSingleConversion 3D72  
                                       strcpy@d 0009                                         strlen@a 0003  
                                       strcpy@s 0007                                         strlen@s 0001  
                           __end_of_getADCValue 3810                                     ___fladd@grs 0010  
                                 ___xxtofl@sign 0009                      __end_of_isolatedOneTaskCap 3EE8  
                                   ___fldiv@grs 0014                                     ___fldiv@rem 000D  
                                   ___flmul@grs 001C                                 _delayedBrownOut 3734  
                  __end_of_INTERRUPT_Initialize 3F2C                                  __end_of___flge 3118  
                                __end_of___fleq 369E                        ?_EUSART5_SetErrorHandler 0001  
                                   vfpfcnvrt@ap 0046                                     vfpfcnvrt@ct 00A8  
                                   vfpfcnvrt@fp 0042                                     vfpfcnvrt@ll 0098  
                                __end_of___wmul 3DE8                                  __end_of_efgtoa 0CA6  
                  __size_of_C_N_SWALLconnectGND 0022                               __size_of_TMR6_ISR 000C  
                                __end_of_floorf 23B2                          ?_OSCILLATOR_Initialize 0001  
                                    floorf@F527 00B4                      sampleChargingCapArray@vcap 0036  
                      ??_sampleChargingCapArray 0036                                  __end_of_printf 3DC2  
                                __end_of_strcpy 399A                                  __end_of_strlen 3D0E  
                           start_initialization 3B68                              _EUSART5_Initialize 3A3C  
               __size_of_PIN_MANAGER_Initialize 00C2                                     __end_of_abs 3C30  
                                   __end_of_pad 33BE                                     putch@txData 0002  
                           ?_EUSART5_Initialize 0001                           __end_of_EUSART5_Write 3EBE  
                         __end_of___fpclassifyf 3216                             fastChargingcaps@voc 00AC  
                                   _getADCValue 37A2                                     vfprintf@fmt 004E  
                                      ??___flge 0030                                        ??___fleq 0009  
                              ??_PMD_Initialize 0001                                        ??___wmul 0005  
                      __end_of_addCapToParallel 28DC          __end_of_EUSART5_SetOverrunErrorHandler 3EF6  
       __size_of_EUSART5_SetOverrunErrorHandler 000E                  _EUSART5_SetOverrunErrorHandler 3EE8  
                                      ??_efgtoa 003B                                     __pdataBANK0 00DC  
                                      ??_floorf 001E                            ??_EUSART5_Initialize 0004  
                                      ??_printf 005A              _EUSART5_DefaultOverrunErrorHandler 000000  
                                      ??_strcpy 0005                                        ??_strlen 0003  
                                     ___fladd@a 0005                                       ___fladd@b 0001  
                  __size_of_isolateCapsToSeries 01A2                        _ADCC_GetSingleConversion 3D44  
                                     ___fldiv@a 0005                                       ___fldiv@b 0001  
                                     ___flmul@a 0013                                       ___flmul@b 000F  
                                   __pbssCOMRAM 005E                                       ___flsub@a 002C  
                                     ___flsub@b 0028                                   __pcstackBANK0 0060  
                         decoupleCapArray@state 0001                                ___aodiv@dividend 0001  
                             __size_of___xxtofl 01B4                         __end_of_delayedBrownOut 37A2  
                              _fastChargingcaps 23B2                                       _cap_count 00D8  
                        sampleTaskCapArray@vcap 0036                                       _atoi$2062 0010  
                                     _atoi$2063 0014                                       _atoi$2064 0012  
                         _TMR6_InterruptHandler 00CC                                       __pnvBANK0 00FF  
                                     __pnvBANK1 0150                                     _efgtoa$2001 0064  
                                   _efgtoa$2005 0066                                     _efgtoa$2006 0068  
                                   _efgtoa$2007 006A                                     _efgtoa$1996 0060  
                                   _efgtoa$1997 0062                          _PIN_MANAGER_Initialize 3482  
               __end_of_EUSART5_SetErrorHandler 3F12                                       _dtoa$1972 0030  
                                     __pintcode 0008                                   __pmediumconst FDD0  
               ADCC_GetSingleConversion@channel 0005                                        ?___aodiv 0001  
                                      ?___fladd 0001                                        ?___aomod 0001  
                                      ?___fldiv 0001                                        ?___awdiv 0001  
                              ___aodiv@quotient 0013                                        ?___flneg 0001  
                                      ?___awmod 0001                                        ?___flmul 000F  
                                      ?___flsub 0028                                        ?___fltol 0001  
                                     _command11 00DC                                       _command12 00EF  
                                     _command20 00E0                                       _command13 00F9  
                                     _command14 00F2                                       _command16 00EC  
                                     _command17 00E9                                       _command18 00E6  
                                     _command19 00E3                    ??_INTERRUPT_InterruptManager 0001  
                             __size_of_vfprintf 0066                                   ??_sampleEHvoc 0036  
                                      _BAUD5CON 000EE2                 __size_of_sampleChargingCapArray 004C  
                                      ?_isdigit 0001                                        ?_isspace 0001  
                                      ?_isupper 0001                                        ?_tolower 0007  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_strncmp 0001                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 3F28                                        _T6CLKCON 000FB3  
                     __size_of_decoupleCapArray 001E                                  ___wmul@product 0005  
                                      _LATAbits 000F79         EUSART5_SetErrorHandler@interruptHandler 0001  
                                      _LATBbits 000F7A                                        _LATDbits 000F7C  
                                      _LATEbits 000F7D                                        _LATFbits 000F7E  
                                      _LATGbits 000F7F                                        _LATHbits 000F80  
                                      _PIE5bits 000E2E                                       _vcap_prev 00C0  
           __size_of_INTERRUPT_InterruptManager 0036                                        _PIR4bits 000E37  
                                      _PIR5bits 000E38                                        i2u573_40 0018  
                                      i2u573_41 0014                                        i2u574_40 0028  
                                      i2u574_41 0024                                        i2u575_40 0036  
                                      i2u575_41 0032                           _Caps8seriesConnection 3D0E  
                                      _TMR6_ISR 3F12                                       _vfpfcnvrt 0CA6  
                    __end_of_sampleTaskCapArray 3D9C                                      _ADCON0bits 000F60  
                                    _ADCON1bits 000F59                                      _ADCON2bits 000F5A  
                                    _ADCON3bits 000F5B                               ___wmul@multiplier 0001  
                                  _isolatedflag 00D9                                    _isspace$2093 0007  
                      __size_of_TMR6_Initialize 0020                                      vfpfcnvrt@c 00AB  
                                    vfpfcnvrt@f 00A4                            getADCValue@ADC_float 002C  
                              ?_delayedBrownOut 0001                             __end_of_sampleEHvoc 3AD6  
                                     copy_data0 3B7C                           ?_INTERRUPT_Initialize 0001  
                           _C_N_SWALLconnectGND 3E0C                     _EUSART5_OverrunErrorHandler 0153  
                        _sampleChargingCapArray 3AD6                                      _ADSTATbits 000F65  
                            _isolatedOneTaskCap 3ED6                                        __Hrparam 0000  
                                    vfprintf@ap 0050                                        __Lrparam 0000  
                                    vfprintf@fp 004C                         ??_OSCILLATOR_Initialize 0001  
                              __size_of___aodiv 0188                                __size_of___fladd 04C0  
                              __size_of___aomod 0164                                __size_of___fldiv 039A  
                              __size_of___awdiv 00C4                                __size_of___flneg 0038  
                           ?_isolatedOneTaskCap 0001                                __size_of___awmod 00B0  
                              __size_of___flmul 042A                                __size_of___flsub 0046  
                              __size_of___fltol 0106                                      ?_vfpfcnvrt 0042  
                                sampleEHvoc@voc 0036                            ?_C_N_SWALLconnectGND 0001  
                               ___aodiv@divisor 0009                                 ___aodiv@counter 0011  
                            ___fpclassifyf@F465 00B8                                    _vcap_current 00BC  
                                      ___xxtofl 2576                        __size_of_ADCC_Initialize 0050  
                              __size_of_isdigit 0038                                __size_of_isspace 0052  
                                      __ptext10 2576                                        __ptext11 3D44  
                                      __ptext20 393C                                        __ptext12 2A80  
                                      __ptext21 21A0                                        __ptext13 3D9C  
                                      __ptext30 1B22                                        __ptext22 3118  
                                      __ptext14 3876                                        __ptext31 3544  
                                      __ptext23 2F0E                                        __ptext15 0CA6  
                                      __ptext40 3BF0                                        __ptext32 33BE  
                                      __ptext24 3B22                                        __ptext16 3216  
                                      __ptext41 2DAA                                        __ptext33 1EBC  
                                      __ptext25 1238                                        __ptext17 0000  
                                      __ptext50 3482                                        __ptext42 2C22  
                                      __ptext34 32F8                                        __ptext26 3C68  
                                      __ptext18 38DC                                        __ptext51 3EBE  
                                      __ptext43 28DC                                        __ptext35 3CD8  
                                      __ptext27 16F8                                        __ptext19 3C30  
                                      __ptext52 3F28                                        __ptext44 399A  
                                      __ptext36 3BAC                                        __ptext28 3014  
                                      __ptext61 3F12                                        __ptext53 3A3C  
                                      __ptext45 3CA0                                        __ptext37 369E  
                                      __ptext29 35F4                                        __ptext54 3EE8  
                                      __ptext46 3DC2                                        __ptext38 3F1E  
                                      __ptext55 3EF6                                        __ptext47 3E6C  
                                      __ptext39 3EA6                                        __ptext56 3F04  
                                      __ptext48 3E2E                                        __ptext57 39EC  
                                      __ptext49 3E8A                                        __ptext58 3D0E  
                                      __ptext59 3E0C                                __size_of_isupper 0038  
              __size_of_EUSART5_SetErrorHandler 000E                             _capTaskSeries_count 005E  
                          ??_isolatedOneTaskCap 0001                                __size_of_tolower 0060  
                                    strcpy@dest 0001                                __size_of_strncmp 00E2  
                                 __size_of_atoi 01A4                                   __size_of_main 0066  
                                 __size_of_dtoa 02E4                             _isolateCapsToSeries 2A80  
                        ?_Caps8seriesConnection 0001                                    ?_getADCValue 0028  
                                      efgtoa@fp 0034                                        efgtoa@ne 0070  
                                      efgtoa@pp 006E                                        efgtoa@ou 0074  
EUSART5_SetOverrunErrorHandler@interruptHandler 0001                                        isa$xinst 000000  
                    ??_ADCC_GetSingleConversion 0003                                        int$flags 005F  
                                    _RC5STAbits 000EE0                                        _voc_prev 00C8  
                             ?_addCapToParallel 0001                                        _vfprintf 3876  
                      __end_of_fastChargingcaps 2576              __end_of_INTERRUPT_InterruptManager 003E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0054  
                         ??_C_N_SWALLconnectGND 0001                              ??_addCapToParallel 005C  
                              ___aomod@dividend 0001                            ?_isolateCapsToSeries 0001  
                                   _sampleEHvoc 3A8A                                  _vfpfcnvrt$2021 00A0  
                                _vfpfcnvrt$2026 00A2                                      _INTCONbits 000FF2  
              ??_EUSART5_SetOverrunErrorHandler 0004                 ?_EUSART5_SetOverrunErrorHandler 0001  
                                      isdigit@c 0001                          ??_INTERRUPT_Initialize 0001  
                                      intlevel2 0000                                _decoupleCapArray 3E4E  
                                      isspace@c 0001                         ?_PIN_MANAGER_Initialize 0001  
                             ??_TMR6_Initialize 0001                                       strcpy@src 0003  
                                      isupper@c 0001                                       strncmp@_l 0001  
                                     strncmp@_r 0003                                     efgtoa@nmode 0080  
                                      printf@ap 005A  EUSART5_SetFramingErrorHandler@interruptHandler 0001  
                               ___aomod@divisor 0009                                     ??_vfpfcnvrt 0048  
                               ___aomod@counter 0011                     __size_of_EUSART5_Initialize 004E  
                        __size_of_EUSART5_Write 0018                           ??_isolateCapsToSeries 005C  
                                      tolower@c 0007                          __size_of___fpclassifyf 00FE  
                                      strncmp@l 0008                                        strncmp@n 0005  
                                      strncmp@r 000A                                   ___fladd@signs 000D  
                                  ___aodiv@sign 0012                  __end_of_PIN_MANAGER_Initialize 3544  
                             ??_ADCC_Initialize 0001                                      _TX5STAbits 000EE1  
                           delayedBrownOut@vcap 00AC                                    ___fladd@aexp 000E  
                                  ___fladd@bexp 000F                                    ___aomod@sign 0012  
                                   _voc_current 00C4  
